spring.shardingsphere.datasource.names=ds0,ds1

# Configure the first data source
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3306/testa?useUnicode=yes&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=1234

# Configure the second data source
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3307/testa?useUnicode=yes&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=1234

spring.shardingsphere.props.sql.show=true

spring.shardingsphere.sharding.tables.person.actual-data-nodes=ds$->{0..1}.person
#spring.shardingsphere.sharding.tables.person.table-strategy.inline.sharding-column=person_seq
#spring.shardingsphere.sharding.tables.person.table-strategy.inline.algorithm-expression=person
spring.shardingsphere.sharding.tables.person.database-strategy.inline.sharding-column=person_seq
spring.shardingsphere.sharding.tables.person.database-strategy.inline.algorithm-expression=ds$->{person_seq % 2}

spring.shardingsphere.sharding.tables.animal.actual-data-nodes=ds$->{0..1}.animal
#spring.shardingsphere.sharding.tables.animal.table-strategy.inline.sharding-column=animal_seq
#spring.shardingsphere.sharding.tables.animal.table-strategy.inline.algorithm-expression=animal
spring.shardingsphere.sharding.tables.animal.database-strategy.inline.sharding-column=animal_seq
spring.shardingsphere.sharding.tables.animal.database-strategy.inline.algorithm-expression=ds$->{(animal_seq % 3) % 2}

spring.shardingsphere.sharding.binding-tables=person,animal