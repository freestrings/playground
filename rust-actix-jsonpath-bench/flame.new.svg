<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1350" onload="init(evt)" viewBox="0 0 1200 1350" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1350.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1333" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1333" > </text>
<g id="frames">
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (72 samples, 0.08%)</title><rect x="130.5" y="645" width="0.9" height="15.0" fill="rgb(219,155,5)" rx="2" ry="2" />
<text  x="133.48" y="655.5" ></text>
</g>
<g >
<title>&lt;actix_service::and_then::AndThenService&lt;A,B&gt; as actix_service::Service&gt;::call (26 samples, 0.03%)</title><rect x="525.5" y="613" width="0.3" height="15.0" fill="rgb(226,73,38)" rx="2" ry="2" />
<text  x="528.52" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_relative (174 samples, 0.19%)</title><rect x="230.0" y="949" width="2.2" height="15.0" fill="rgb(236,55,32)" rx="2" ry="2" />
<text  x="232.99" y="959.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1,071 samples, 1.15%)</title><rect x="472.8" y="1093" width="13.5" height="15.0" fill="rgb(207,37,22)" rx="2" ry="2" />
<text  x="475.77" y="1103.5" ></text>
</g>
<g >
<title>actix_rt::arbiter::Arbiter::spawn::{{closure}} (1,275 samples, 1.37%)</title><rect x="487.6" y="1221" width="16.1" height="15.0" fill="rgb(246,113,5)" rx="2" ry="2" />
<text  x="490.57" y="1231.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u8 (58 samples, 0.06%)</title><rect x="192.7" y="613" width="0.7" height="15.0" fill="rgb(213,30,8)" rx="2" ry="2" />
<text  x="195.67" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk::{{closure}} (348 samples, 0.37%)</title><rect x="174.2" y="661" width="4.4" height="15.0" fill="rgb(231,219,5)" rx="2" ry="2" />
<text  x="177.18" y="671.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (356 samples, 0.38%)</title><rect x="238.9" y="1077" width="4.5" height="15.0" fill="rgb(208,130,5)" rx="2" ry="2" />
<text  x="241.85" y="1087.5" ></text>
</g>
<g >
<title>kmalloc_slab (10 samples, 0.01%)</title><rect x="293.2" y="821" width="0.1" height="15.0" fill="rgb(240,183,50)" rx="2" ry="2" />
<text  x="296.20" y="831.5" ></text>
</g>
<g >
<title>calc_wheel_index (10 samples, 0.01%)</title><rect x="663.8" y="645" width="0.1" height="15.0" fill="rgb(211,105,32)" rx="2" ry="2" />
<text  x="666.77" y="655.5" ></text>
</g>
<g >
<title>netif_rx (113 samples, 0.12%)</title><rect x="649.6" y="517" width="1.4" height="15.0" fill="rgb(242,171,35)" rx="2" ry="2" />
<text  x="652.60" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 0.04%)</title><rect x="117.1" y="869" width="0.4" height="15.0" fill="rgb(239,227,36)" rx="2" ry="2" />
<text  x="120.05" y="879.5" ></text>
</g>
<g >
<title>rw_verify_area (10 samples, 0.01%)</title><rect x="821.3" y="613" width="0.1" height="15.0" fill="rgb(228,57,12)" rx="2" ry="2" />
<text  x="824.28" y="623.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (85 samples, 0.09%)</title><rect x="358.3" y="885" width="1.1" height="15.0" fill="rgb(254,199,47)" rx="2" ry="2" />
<text  x="361.35" y="895.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::tick::{{closure}} (870 samples, 0.93%)</title><rect x="504.4" y="1125" width="11.0" height="15.0" fill="rgb(205,184,10)" rx="2" ry="2" />
<text  x="507.38" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParserNode&gt; (70 samples, 0.08%)</title><rect x="392.9" y="501" width="0.9" height="15.0" fill="rgb(242,170,50)" rx="2" ry="2" />
<text  x="395.89" y="511.5" ></text>
</g>
<g >
<title>tokio::io::driver::Inner::add_source (190 samples, 0.20%)</title><rect x="513.0" y="773" width="2.4" height="15.0" fill="rgb(223,143,41)" rx="2" ry="2" />
<text  x="515.99" y="783.5" ></text>
</g>
<g >
<title>tokio::coop::budget (1,071 samples, 1.15%)</title><rect x="472.8" y="837" width="13.5" height="15.0" fill="rgb(208,107,19)" rx="2" ry="2" />
<text  x="475.77" y="847.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::try_lock (102 samples, 0.11%)</title><rect x="789.4" y="757" width="1.3" height="15.0" fill="rgb(250,133,48)" rx="2" ry="2" />
<text  x="792.38" y="767.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (7,363 samples, 7.90%)</title><rect x="855.5" y="661" width="93.2" height="15.0" fill="rgb(217,88,17)" rx="2" ry="2" />
<text  x="858.47" y="671.5" >schedule_hr..</text>
</g>
<g >
<title>security_d_instantiate (12 samples, 0.01%)</title><rect x="1149.4" y="757" width="0.2" height="15.0" fill="rgb(253,200,13)" rx="2" ry="2" />
<text  x="1152.40" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (21 samples, 0.02%)</title><rect x="45.0" y="1125" width="0.3" height="15.0" fill="rgb(236,147,52)" rx="2" ry="2" />
<text  x="47.99" y="1135.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (19 samples, 0.02%)</title><rect x="1071.0" y="517" width="0.3" height="15.0" fill="rgb(254,114,4)" rx="2" ry="2" />
<text  x="1074.02" y="527.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (19 samples, 0.02%)</title><rect x="1058.9" y="277" width="0.2" height="15.0" fill="rgb(245,102,20)" rx="2" ry="2" />
<text  x="1061.87" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="154.3" y="597" width="0.2" height="15.0" fill="rgb(212,185,42)" rx="2" ry="2" />
<text  x="157.34" y="607.5" ></text>
</g>
<g >
<title>_rdl_alloc (10 samples, 0.01%)</title><rect x="147.2" y="693" width="0.1" height="15.0" fill="rgb(243,100,23)" rx="2" ry="2" />
<text  x="150.22" y="703.5" ></text>
</g>
<g >
<title>std::io::error::Error::kind (20 samples, 0.02%)</title><rect x="1160.5" y="1029" width="0.3" height="15.0" fill="rgb(238,174,17)" rx="2" ry="2" />
<text  x="1163.53" y="1039.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (10 samples, 0.01%)</title><rect x="428.7" y="405" width="0.1" height="15.0" fill="rgb(244,126,34)" rx="2" ry="2" />
<text  x="431.65" y="415.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (14 samples, 0.02%)</title><rect x="1031.8" y="597" width="0.2" height="15.0" fill="rgb(253,150,6)" rx="2" ry="2" />
<text  x="1034.83" y="607.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path_leaves (234 samples, 0.25%)</title><rect x="116.6" y="933" width="3.0" height="15.0" fill="rgb(208,9,54)" rx="2" ry="2" />
<text  x="119.64" y="943.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (372 samples, 0.40%)</title><rect x="968.9" y="661" width="4.7" height="15.0" fill="rgb(238,138,48)" rx="2" ry="2" />
<text  x="971.87" y="671.5" ></text>
</g>
<g >
<title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (16 samples, 0.02%)</title><rect x="37.4" y="1093" width="0.2" height="15.0" fill="rgb(253,124,17)" rx="2" ry="2" />
<text  x="40.36" y="1103.5" ></text>
</g>
<g >
<title>ip_finish_output (2,064 samples, 2.21%)</title><rect x="300.9" y="757" width="26.1" height="15.0" fill="rgb(211,16,52)" rx="2" ry="2" />
<text  x="303.90" y="767.5" >i..</text>
</g>
<g >
<title>tokio::time::wheel::Wheel&lt;T&gt;::insert (157 samples, 0.17%)</title><rect x="1000.2" y="821" width="2.0" height="15.0" fill="rgb(212,164,25)" rx="2" ry="2" />
<text  x="1003.17" y="831.5" ></text>
</g>
<g >
<title>update_curr (13 samples, 0.01%)</title><rect x="1103.6" y="213" width="0.2" height="15.0" fill="rgb(208,173,42)" rx="2" ry="2" />
<text  x="1106.62" y="223.5" ></text>
</g>
<g >
<title>tcp_rack_update_reo_wnd (13 samples, 0.01%)</title><rect x="557.7" y="709" width="0.2" height="15.0" fill="rgb(247,118,32)" rx="2" ry="2" />
<text  x="560.72" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::other (110 samples, 0.12%)</title><rect x="63.3" y="741" width="1.4" height="15.0" fill="rgb(235,214,2)" rx="2" ry="2" />
<text  x="66.29" y="751.5" ></text>
</g>
<g >
<title>fput_many (12 samples, 0.01%)</title><rect x="262.4" y="581" width="0.2" height="15.0" fill="rgb(236,212,34)" rx="2" ry="2" />
<text  x="265.42" y="591.5" ></text>
</g>
<g >
<title>locks_remove_posix (34 samples, 0.04%)</title><rect x="736.5" y="645" width="0.4" height="15.0" fill="rgb(210,22,34)" rx="2" ry="2" />
<text  x="739.51" y="655.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (28 samples, 0.03%)</title><rect x="81.1" y="757" width="0.4" height="15.0" fill="rgb(230,163,31)" rx="2" ry="2" />
<text  x="84.14" y="767.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::codec::Codec as tokio_util::codec::encoder::Encoder&lt;actix_http::h1::Message&lt; (770 samples, 0.83%)</title><rect x="440.6" y="1029" width="9.7" height="15.0" fill="rgb(219,37,31)" rx="2" ry="2" />
<text  x="443.59" y="1039.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (26 samples, 0.03%)</title><rect x="344.9" y="997" width="0.3" height="15.0" fill="rgb(210,49,51)" rx="2" ry="2" />
<text  x="347.86" y="1007.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::drop_waker (34 samples, 0.04%)</title><rect x="236.4" y="965" width="0.4" height="15.0" fill="rgb(224,162,6)" rx="2" ry="2" />
<text  x="239.41" y="975.5" ></text>
</g>
<g >
<title>kfree_skbmem (23 samples, 0.02%)</title><rect x="549.9" y="661" width="0.3" height="15.0" fill="rgb(240,204,17)" rx="2" ry="2" />
<text  x="552.92" y="671.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (16 samples, 0.02%)</title><rect x="1082.8" y="613" width="0.2" height="15.0" fill="rgb(214,143,40)" rx="2" ry="2" />
<text  x="1085.78" y="623.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget (5,494 samples, 5.89%)</title><rect x="1014.3" y="869" width="69.5" height="15.0" fill="rgb(251,203,50)" rx="2" ry="2" />
<text  x="1017.27" y="879.5" >tokio::..</text>
</g>
<g >
<title>obj_cgroup_charge (77 samples, 0.08%)</title><rect x="260.2" y="549" width="0.9" height="15.0" fill="rgb(222,43,24)" rx="2" ry="2" />
<text  x="263.16" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.03%)</title><rect x="426.0" y="613" width="0.3" height="15.0" fill="rgb(227,6,50)" rx="2" ry="2" />
<text  x="429.01" y="623.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (20 samples, 0.02%)</title><rect x="1141.3" y="709" width="0.3" height="15.0" fill="rgb(223,97,53)" rx="2" ry="2" />
<text  x="1144.33" y="719.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (23 samples, 0.02%)</title><rect x="447.0" y="949" width="0.3" height="15.0" fill="rgb(235,62,29)" rx="2" ry="2" />
<text  x="450.05" y="959.5" ></text>
</g>
<g >
<title>&lt;actix_http::service::HttpServiceHandler&lt;T,S,B,X,U&gt; as actix_service::Service&gt;::poll_ready (114 samples, 0.12%)</title><rect x="1065.7" y="293" width="1.5" height="15.0" fill="rgb(233,74,15)" rx="2" ry="2" />
<text  x="1068.73" y="303.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (8 samples, 0.01%)</title><rect x="919.3" y="549" width="0.1" height="15.0" fill="rgb(239,169,36)" rx="2" ry="2" />
<text  x="922.30" y="559.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.10%)</title><rect x="146.0" y="805" width="1.2" height="15.0" fill="rgb(240,226,36)" rx="2" ry="2" />
<text  x="148.95" y="815.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (11 samples, 0.01%)</title><rect x="706.4" y="773" width="0.1" height="15.0" fill="rgb(229,67,38)" rx="2" ry="2" />
<text  x="709.36" y="783.5" ></text>
</g>
<g >
<title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (36 samples, 0.04%)</title><rect x="237.5" y="1029" width="0.4" height="15.0" fill="rgb(206,175,5)" rx="2" ry="2" />
<text  x="240.46" y="1039.5" ></text>
</g>
<g >
<title>_usecs_to_jiffies (15 samples, 0.02%)</title><rect x="593.1" y="501" width="0.2" height="15.0" fill="rgb(244,90,32)" rx="2" ry="2" />
<text  x="596.14" y="511.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,573 samples, 1.69%)</title><rect x="244.1" y="1013" width="19.9" height="15.0" fill="rgb(214,160,39)" rx="2" ry="2" />
<text  x="247.07" y="1023.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path_in_key (20 samples, 0.02%)</title><rect x="91.4" y="789" width="0.3" height="15.0" fill="rgb(244,167,42)" rx="2" ry="2" />
<text  x="94.43" y="799.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (125 samples, 0.13%)</title><rect x="1056.6" y="213" width="1.6" height="15.0" fill="rgb(207,183,7)" rx="2" ry="2" />
<text  x="1059.63" y="223.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::enter::{{closure}} (331 samples, 0.36%)</title><rect x="525.1" y="1205" width="4.2" height="15.0" fill="rgb(225,213,51)" rx="2" ry="2" />
<text  x="528.14" y="1215.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_read_ready (19 samples, 0.02%)</title><rect x="712.9" y="917" width="0.2" height="15.0" fill="rgb(221,62,25)" rx="2" ry="2" />
<text  x="715.85" y="927.5" ></text>
</g>
<g >
<title>_fdget (23 samples, 0.02%)</title><rect x="1119.2" y="821" width="0.2" height="15.0" fill="rgb(246,124,11)" rx="2" ry="2" />
<text  x="1122.15" y="831.5" ></text>
</g>
<g >
<title>_x64_sys_read (9 samples, 0.01%)</title><rect x="818.8" y="661" width="0.1" height="15.0" fill="rgb(222,35,27)" rx="2" ry="2" />
<text  x="821.75" y="671.5" ></text>
</g>
<g >
<title>raw_read_unlock_irqrestore (12 samples, 0.01%)</title><rect x="318.4" y="325" width="0.1" height="15.0" fill="rgb(220,198,21)" rx="2" ry="2" />
<text  x="321.39" y="335.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (55 samples, 0.06%)</title><rect x="154.2" y="645" width="0.7" height="15.0" fill="rgb(230,5,53)" rx="2" ry="2" />
<text  x="157.21" y="655.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (218 samples, 0.23%)</title><rect x="175.8" y="597" width="2.8" height="15.0" fill="rgb(215,28,53)" rx="2" ry="2" />
<text  x="178.83" y="607.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.01%)</title><rect x="676.4" y="917" width="0.1" height="15.0" fill="rgb(247,67,16)" rx="2" ry="2" />
<text  x="679.38" y="927.5" ></text>
</g>
<g >
<title>bictcp_cong_avoid (11 samples, 0.01%)</title><rect x="547.3" y="693" width="0.1" height="15.0" fill="rgb(238,165,37)" rx="2" ry="2" />
<text  x="550.28" y="703.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::other (32 samples, 0.03%)</title><rect x="56.1" y="725" width="0.4" height="15.0" fill="rgb(242,17,46)" rx="2" ry="2" />
<text  x="59.09" y="735.5" ></text>
</g>
<g >
<title>ep_poll (33 samples, 0.04%)</title><rect x="975.6" y="661" width="0.4" height="15.0" fill="rgb(249,210,7)" rx="2" ry="2" />
<text  x="978.57" y="671.5" ></text>
</g>
<g >
<title>tokio::time::wheel::Wheel&lt;T&gt;::level_for (43 samples, 0.05%)</title><rect x="1000.3" y="805" width="0.5" height="15.0" fill="rgb(244,216,11)" rx="2" ry="2" />
<text  x="1003.30" y="815.5" ></text>
</g>
<g >
<title>netif_rx_internal (30 samples, 0.03%)</title><rect x="325.2" y="629" width="0.4" height="15.0" fill="rgb(252,71,14)" rx="2" ry="2" />
<text  x="328.21" y="639.5" ></text>
</g>
<g >
<title>actix_http::extensions::Extensions::drain_from (115 samples, 0.12%)</title><rect x="343.8" y="1061" width="1.5" height="15.0" fill="rgb(245,109,49)" rx="2" ry="2" />
<text  x="346.83" y="1071.5" ></text>
</g>
<g >
<title>_softirqentry_text_start (9 samples, 0.01%)</title><rect x="285.3" y="997" width="0.1" height="15.0" fill="rgb(206,107,26)" rx="2" ry="2" />
<text  x="288.30" y="1007.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (30 samples, 0.03%)</title><rect x="115.4" y="885" width="0.4" height="15.0" fill="rgb(230,115,37)" rx="2" ry="2" />
<text  x="118.43" y="895.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (34 samples, 0.04%)</title><rect x="131.4" y="805" width="0.5" height="15.0" fill="rgb(219,38,37)" rx="2" ry="2" />
<text  x="134.43" y="815.5" ></text>
</g>
<g >
<title>_memset_avx2_unaligned_erms (12 samples, 0.01%)</title><rect x="38.6" y="933" width="0.1" height="15.0" fill="rgb(226,60,52)" rx="2" ry="2" />
<text  x="41.60" y="943.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (810 samples, 0.87%)</title><rect x="212.7" y="613" width="10.3" height="15.0" fill="rgb(236,81,32)" rx="2" ry="2" />
<text  x="215.74" y="623.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (45 samples, 0.05%)</title><rect x="236.3" y="1045" width="0.5" height="15.0" fill="rgb(237,77,30)" rx="2" ry="2" />
<text  x="239.27" y="1055.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_response (84 samples, 0.09%)</title><rect x="232.2" y="1205" width="1.1" height="15.0" fill="rgb(221,173,5)" rx="2" ry="2" />
<text  x="235.19" y="1215.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (43 samples, 0.05%)</title><rect x="124.5" y="821" width="0.5" height="15.0" fill="rgb(224,227,31)" rx="2" ry="2" />
<text  x="127.50" y="831.5" ></text>
</g>
<g >
<title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (22 samples, 0.02%)</title><rect x="340.8" y="933" width="0.3" height="15.0" fill="rgb(238,117,13)" rx="2" ry="2" />
<text  x="343.83" y="943.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (78 samples, 0.08%)</title><rect x="242.4" y="709" width="1.0" height="15.0" fill="rgb(250,22,23)" rx="2" ry="2" />
<text  x="245.37" y="719.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (15 samples, 0.02%)</title><rect x="1101.1" y="245" width="0.2" height="15.0" fill="rgb(254,204,43)" rx="2" ry="2" />
<text  x="1104.07" y="255.5" ></text>
</g>
<g >
<title>raw_write_lock_irq (11 samples, 0.01%)</title><rect x="262.1" y="565" width="0.1" height="15.0" fill="rgb(243,10,35)" rx="2" ry="2" />
<text  x="265.06" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (8 samples, 0.01%)</title><rect x="165.0" y="901" width="0.1" height="15.0" fill="rgb(242,107,14)" rx="2" ry="2" />
<text  x="167.98" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (28 samples, 0.03%)</title><rect x="125.7" y="709" width="0.4" height="15.0" fill="rgb(210,191,43)" rx="2" ry="2" />
<text  x="128.75" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::close_token (77 samples, 0.08%)</title><rect x="71.7" y="901" width="0.9" height="15.0" fill="rgb(245,183,40)" rx="2" ry="2" />
<text  x="74.67" y="911.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (63 samples, 0.07%)</title><rect x="1026.9" y="565" width="0.8" height="15.0" fill="rgb(226,47,39)" rx="2" ry="2" />
<text  x="1029.90" y="575.5" ></text>
</g>
<g >
<title>nf_hook_slow (11 samples, 0.01%)</title><rect x="327.0" y="757" width="0.2" height="15.0" fill="rgb(238,49,40)" rx="2" ry="2" />
<text  x="330.03" y="767.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (30 samples, 0.03%)</title><rect x="1063.4" y="341" width="0.4" height="15.0" fill="rgb(234,135,22)" rx="2" ry="2" />
<text  x="1066.42" y="351.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (159 samples, 0.17%)</title><rect x="117.6" y="917" width="2.0" height="15.0" fill="rgb(230,100,26)" rx="2" ry="2" />
<text  x="120.58" y="927.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (17 samples, 0.02%)</title><rect x="1156.1" y="693" width="0.2" height="15.0" fill="rgb(244,60,47)" rx="2" ry="2" />
<text  x="1159.08" y="703.5" ></text>
</g>
<g >
<title>_fget_light (71 samples, 0.08%)</title><rect x="844.5" y="677" width="0.9" height="15.0" fill="rgb(210,21,25)" rx="2" ry="2" />
<text  x="847.47" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::accept::{{closure}} (3,374 samples, 3.62%)</title><rect x="1117.5" y="917" width="42.7" height="15.0" fill="rgb(207,124,42)" rx="2" ry="2" />
<text  x="1120.49" y="927.5" >std:..</text>
</g>
<g >
<title>atomic_dec_and_lock (17 samples, 0.02%)</title><rect x="747.7" y="565" width="0.2" height="15.0" fill="rgb(215,31,32)" rx="2" ry="2" />
<text  x="750.67" y="575.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (121 samples, 0.13%)</title><rect x="1089.7" y="837" width="1.6" height="15.0" fill="rgb(249,50,48)" rx="2" ry="2" />
<text  x="1092.72" y="847.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::and (23 samples, 0.02%)</title><rect x="96.6" y="805" width="0.3" height="15.0" fill="rgb(217,145,29)" rx="2" ry="2" />
<text  x="99.60" y="815.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (17 samples, 0.02%)</title><rect x="146.9" y="645" width="0.2" height="15.0" fill="rgb(210,130,36)" rx="2" ry="2" />
<text  x="149.91" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;actix_http::message::RequestHead&gt;&gt; (31 samples, 0.03%)</title><rect x="366.3" y="997" width="0.4" height="15.0" fill="rgb(218,9,46)" rx="2" ry="2" />
<text  x="369.29" y="1007.5" ></text>
</g>
<g >
<title>unlink_chunk (12 samples, 0.01%)</title><rect x="54.4" y="773" width="0.1" height="15.0" fill="rgb(251,8,27)" rx="2" ry="2" />
<text  x="57.39" y="783.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (78 samples, 0.08%)</title><rect x="242.4" y="741" width="1.0" height="15.0" fill="rgb(242,212,15)" rx="2" ry="2" />
<text  x="245.37" y="751.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (18 samples, 0.02%)</title><rect x="1066.8" y="245" width="0.2" height="15.0" fill="rgb(237,123,29)" rx="2" ry="2" />
<text  x="1069.76" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="132.2" y="853" width="0.2" height="15.0" fill="rgb(243,219,11)" rx="2" ry="2" />
<text  x="135.19" y="863.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (1,857 samples, 1.99%)</title><rect x="870.3" y="533" width="23.5" height="15.0" fill="rgb(220,1,18)" rx="2" ry="2" />
<text  x="873.30" y="543.5" >a..</text>
</g>
<g >
<title>&lt;actix_http::body::Body as actix_http::body::MessageBody&gt;::size (74 samples, 0.08%)</title><rect x="439.7" y="1013" width="0.9" height="15.0" fill="rgb(230,140,26)" rx="2" ry="2" />
<text  x="442.65" y="1023.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (11 samples, 0.01%)</title><rect x="308.7" y="453" width="0.2" height="15.0" fill="rgb(209,183,42)" rx="2" ry="2" />
<text  x="311.72" y="463.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::run_until::{{closure}} (5,300 samples, 5.69%)</title><rect x="1016.7" y="773" width="67.1" height="15.0" fill="rgb(210,200,33)" rx="2" ry="2" />
<text  x="1019.73" y="783.5" >tokio::..</text>
</g>
<g >
<title>tokio::runtime::task::Notified&lt;S&gt;::run (331 samples, 0.36%)</title><rect x="525.1" y="869" width="4.2" height="15.0" fill="rgb(230,205,17)" rx="2" ry="2" />
<text  x="528.14" y="879.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (9 samples, 0.01%)</title><rect x="676.4" y="869" width="0.1" height="15.0" fill="rgb(235,3,17)" rx="2" ry="2" />
<text  x="679.38" y="879.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (16 samples, 0.02%)</title><rect x="385.7" y="581" width="0.2" height="15.0" fill="rgb(207,113,37)" rx="2" ry="2" />
<text  x="388.67" y="591.5" ></text>
</g>
<g >
<title>_fdget (61 samples, 0.07%)</title><rect x="704.7" y="741" width="0.7" height="15.0" fill="rgb(245,29,19)" rx="2" ry="2" />
<text  x="707.67" y="751.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (34 samples, 0.04%)</title><rect x="424.8" y="709" width="0.4" height="15.0" fill="rgb(247,55,37)" rx="2" ry="2" />
<text  x="427.78" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next_char (8 samples, 0.01%)</title><rect x="115.3" y="885" width="0.1" height="15.0" fill="rgb(206,51,21)" rx="2" ry="2" />
<text  x="118.33" y="895.5" ></text>
</g>
<g >
<title>tokio::coop::budget (1,071 samples, 1.15%)</title><rect x="472.8" y="1045" width="13.5" height="15.0" fill="rgb(227,10,37)" rx="2" ry="2" />
<text  x="475.77" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (106 samples, 0.11%)</title><rect x="130.1" y="741" width="1.3" height="15.0" fill="rgb(249,53,6)" rx="2" ry="2" />
<text  x="133.05" y="751.5" ></text>
</g>
<g >
<title>ipv4_dst_check (30 samples, 0.03%)</title><rect x="621.3" y="197" width="0.3" height="15.0" fill="rgb(247,225,15)" rx="2" ry="2" />
<text  x="624.25" y="207.5" ></text>
</g>
<g >
<title>tcp_established_options (12 samples, 0.01%)</title><rect x="627.7" y="245" width="0.2" height="15.0" fill="rgb(252,66,16)" rx="2" ry="2" />
<text  x="630.71" y="255.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (67 samples, 0.07%)</title><rect x="53.7" y="805" width="0.8" height="15.0" fill="rgb(254,119,54)" rx="2" ry="2" />
<text  x="56.70" y="815.5" ></text>
</g>
<g >
<title>core::mem::swap (13 samples, 0.01%)</title><rect x="214.6" y="581" width="0.2" height="15.0" fill="rgb(227,206,4)" rx="2" ry="2" />
<text  x="217.65" y="591.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (218 samples, 0.23%)</title><rect x="175.8" y="613" width="2.8" height="15.0" fill="rgb(237,193,11)" rx="2" ry="2" />
<text  x="178.83" y="623.5" ></text>
</g>
<g >
<title>_local_bh_enable_ip (1,662 samples, 1.78%)</title><rect x="302.7" y="709" width="21.0" height="15.0" fill="rgb(215,65,29)" rx="2" ry="2" />
<text  x="305.66" y="719.5" ></text>
</g>
<g >
<title>tokio::util::wake::clone_arc_raw (43 samples, 0.05%)</title><rect x="1021.7" y="549" width="0.5" height="15.0" fill="rgb(241,5,44)" rx="2" ry="2" />
<text  x="1024.67" y="559.5" ></text>
</g>
<g >
<title>update_rq_clock (78 samples, 0.08%)</title><rect x="946.5" y="597" width="1.0" height="15.0" fill="rgb(253,43,8)" rx="2" ry="2" />
<text  x="949.51" y="607.5" ></text>
</g>
<g >
<title>core::ptr::read (17 samples, 0.02%)</title><rect x="241.5" y="853" width="0.3" height="15.0" fill="rgb(253,98,54)" rx="2" ry="2" />
<text  x="244.55" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::response::Response&lt; (79 samples, 0.08%)</title><rect x="449.3" y="1013" width="1.0" height="15.0" fill="rgb(229,129,1)" rx="2" ry="2" />
<text  x="452.34" y="1023.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next_char (23 samples, 0.02%)</title><rect x="399.1" y="773" width="0.3" height="15.0" fill="rgb(245,10,11)" rx="2" ry="2" />
<text  x="402.11" y="783.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (1,573 samples, 1.69%)</title><rect x="244.1" y="933" width="19.9" height="15.0" fill="rgb(247,56,0)" rx="2" ry="2" />
<text  x="247.07" y="943.5" ></text>
</g>
<g >
<title>_lock_text_start (8 samples, 0.01%)</title><rect x="288.9" y="853" width="0.1" height="15.0" fill="rgb(233,193,8)" rx="2" ry="2" />
<text  x="291.90" y="863.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (354 samples, 0.38%)</title><rect x="547.9" y="693" width="4.5" height="15.0" fill="rgb(218,11,13)" rx="2" ry="2" />
<text  x="550.90" y="703.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (8 samples, 0.01%)</title><rect x="420.6" y="757" width="0.1" height="15.0" fill="rgb(229,27,13)" rx="2" ry="2" />
<text  x="423.55" y="767.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="395.7" y="837" width="0.2" height="15.0" fill="rgb(238,228,43)" rx="2" ry="2" />
<text  x="398.74" y="847.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (8 samples, 0.01%)</title><rect x="1022.1" y="469" width="0.1" height="15.0" fill="rgb(239,184,0)" rx="2" ry="2" />
<text  x="1025.11" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (125 samples, 0.13%)</title><rect x="168.8" y="693" width="1.6" height="15.0" fill="rgb(249,76,7)" rx="2" ry="2" />
<text  x="171.83" y="703.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::wake_by_ref (16 samples, 0.02%)</title><rect x="484.1" y="597" width="0.2" height="15.0" fill="rgb(248,54,34)" rx="2" ry="2" />
<text  x="487.14" y="607.5" ></text>
</g>
<g >
<title>http::uri::path::PathAndQuery::from_shared (100 samples, 0.11%)</title><rect x="14.9" y="1093" width="1.2" height="15.0" fill="rgb(210,166,42)" rx="2" ry="2" />
<text  x="17.87" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (22 samples, 0.02%)</title><rect x="376.5" y="677" width="0.2" height="15.0" fill="rgb(213,35,14)" rx="2" ry="2" />
<text  x="379.46" y="687.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (19 samples, 0.02%)</title><rect x="413.8" y="725" width="0.3" height="15.0" fill="rgb(232,169,49)" rx="2" ry="2" />
<text  x="416.84" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (42 samples, 0.05%)</title><rect x="1043.7" y="213" width="0.6" height="15.0" fill="rgb(221,11,24)" rx="2" ry="2" />
<text  x="1046.72" y="223.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::slot_for (15 samples, 0.02%)</title><rect x="1002.0" y="789" width="0.2" height="15.0" fill="rgb(223,115,9)" rx="2" ry="2" />
<text  x="1004.97" y="799.5" ></text>
</g>
<g >
<title>native_read_msr (536 samples, 0.57%)</title><rect x="906.2" y="517" width="6.8" height="15.0" fill="rgb(212,115,47)" rx="2" ry="2" />
<text  x="909.23" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="717.0" y="869" width="0.1" height="15.0" fill="rgb(246,213,26)" rx="2" ry="2" />
<text  x="719.99" y="879.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (12 samples, 0.01%)</title><rect x="461.9" y="885" width="0.1" height="15.0" fill="rgb(207,46,0)" rx="2" ry="2" />
<text  x="464.86" y="895.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (9 samples, 0.01%)</title><rect x="331.0" y="773" width="0.1" height="15.0" fill="rgb(236,193,1)" rx="2" ry="2" />
<text  x="333.98" y="783.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (8 samples, 0.01%)</title><rect x="653.6" y="549" width="0.1" height="15.0" fill="rgb(249,161,34)" rx="2" ry="2" />
<text  x="656.57" y="559.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (16,095 samples, 17.27%)</title><rect x="264.0" y="1253" width="203.7" height="15.0" fill="rgb(242,119,54)" rx="2" ry="2" />
<text  x="266.98" y="1263.5" >&lt;std::panic::AssertUnwindS..</text>
</g>
<g >
<title>inode_wait_for_writeback (44 samples, 0.05%)</title><rect x="753.6" y="533" width="0.6" height="15.0" fill="rgb(232,168,43)" rx="2" ry="2" />
<text  x="756.62" y="543.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (66 samples, 0.07%)</title><rect x="161.3" y="661" width="0.8" height="15.0" fill="rgb(234,81,35)" rx="2" ry="2" />
<text  x="164.29" y="671.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (331 samples, 0.36%)</title><rect x="525.1" y="725" width="4.2" height="15.0" fill="rgb(250,72,32)" rx="2" ry="2" />
<text  x="528.14" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (38 samples, 0.04%)</title><rect x="167.2" y="773" width="0.4" height="15.0" fill="rgb(206,140,50)" rx="2" ry="2" />
<text  x="170.17" y="783.5" ></text>
</g>
<g >
<title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (40 samples, 0.04%)</title><rect x="30.4" y="1141" width="0.5" height="15.0" fill="rgb(245,211,49)" rx="2" ry="2" />
<text  x="33.37" y="1151.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (22 samples, 0.02%)</title><rect x="191.5" y="629" width="0.3" height="15.0" fill="rgb(238,28,29)" rx="2" ry="2" />
<text  x="194.54" y="639.5" ></text>
</g>
<g >
<title>actix_rt::arbiter::PENDING::_getit (15 samples, 0.02%)</title><rect x="503.2" y="1173" width="0.2" height="15.0" fill="rgb(213,130,24)" rx="2" ry="2" />
<text  x="506.18" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (42 samples, 0.05%)</title><rect x="1043.7" y="165" width="0.6" height="15.0" fill="rgb(230,70,32)" rx="2" ry="2" />
<text  x="1046.72" y="175.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::whitespace (23 samples, 0.02%)</title><rect x="472.4" y="789" width="0.3" height="15.0" fill="rgb(212,54,52)" rx="2" ry="2" />
<text  x="475.44" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (43 samples, 0.05%)</title><rect x="127.7" y="773" width="0.6" height="15.0" fill="rgb(241,38,6)" rx="2" ry="2" />
<text  x="130.72" y="783.5" ></text>
</g>
<g >
<title>core::ptr::read (8 samples, 0.01%)</title><rect x="345.2" y="1013" width="0.1" height="15.0" fill="rgb(254,122,15)" rx="2" ry="2" />
<text  x="348.18" y="1023.5" ></text>
</g>
<g >
<title>migrate_disable (10 samples, 0.01%)</title><rect x="326.9" y="741" width="0.1" height="15.0" fill="rgb(233,206,47)" rx="2" ry="2" />
<text  x="329.91" y="751.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_request (219 samples, 0.23%)</title><rect x="678.4" y="1013" width="2.7" height="15.0" fill="rgb(239,108,3)" rx="2" ry="2" />
<text  x="681.37" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt; (9 samples, 0.01%)</title><rect x="38.4" y="1045" width="0.1" height="15.0" fill="rgb(218,45,47)" rx="2" ry="2" />
<text  x="41.37" y="1055.5" ></text>
</g>
<g >
<title>_mod_memcg_state (13 samples, 0.01%)</title><rect x="1134.4" y="709" width="0.2" height="15.0" fill="rgb(240,87,14)" rx="2" ry="2" />
<text  x="1137.40" y="719.5" ></text>
</g>
<g >
<title>new_heap (10 samples, 0.01%)</title><rect x="1083.9" y="1077" width="0.1" height="15.0" fill="rgb(241,205,48)" rx="2" ry="2" />
<text  x="1086.91" y="1087.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (34 samples, 0.04%)</title><rect x="108.7" y="757" width="0.4" height="15.0" fill="rgb(253,132,2)" rx="2" ry="2" />
<text  x="111.71" y="767.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (78 samples, 0.08%)</title><rect x="242.4" y="885" width="1.0" height="15.0" fill="rgb(232,55,0)" rx="2" ry="2" />
<text  x="245.37" y="895.5" ></text>
</g>
<g >
<title>newidle_balance (120 samples, 0.13%)</title><rect x="941.2" y="581" width="1.6" height="15.0" fill="rgb(227,23,23)" rx="2" ry="2" />
<text  x="944.24" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::drop_waker (21 samples, 0.02%)</title><rect x="997.5" y="677" width="0.3" height="15.0" fill="rgb(231,64,52)" rx="2" ry="2" />
<text  x="1000.49" y="687.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.01%)</title><rect x="1072.8" y="501" width="0.2" height="15.0" fill="rgb(247,175,34)" rx="2" ry="2" />
<text  x="1075.85" y="511.5" ></text>
</g>
<g >
<title>_sk_dst_check (22 samples, 0.02%)</title><rect x="656.4" y="677" width="0.3" height="15.0" fill="rgb(214,186,10)" rx="2" ry="2" />
<text  x="659.44" y="687.5" ></text>
</g>
<g >
<title>_update_load_avg_se (13 samples, 0.01%)</title><rect x="1104.6" y="197" width="0.2" height="15.0" fill="rgb(229,140,51)" rx="2" ry="2" />
<text  x="1107.61" y="207.5" ></text>
</g>
<g >
<title>_pthread_disable_asynccancel (19 samples, 0.02%)</title><rect x="536.7" y="885" width="0.2" height="15.0" fill="rgb(237,188,3)" rx="2" ry="2" />
<text  x="539.71" y="895.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::as_usize (10 samples, 0.01%)</title><rect x="709.4" y="917" width="0.1" height="15.0" fill="rgb(206,162,18)" rx="2" ry="2" />
<text  x="712.38" y="927.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (10 samples, 0.01%)</title><rect x="949.7" y="645" width="0.1" height="15.0" fill="rgb(227,109,33)" rx="2" ry="2" />
<text  x="952.72" y="655.5" ></text>
</g>
<g >
<title>tokio::io::driver::Inner::register (46 samples, 0.05%)</title><rect x="234.6" y="1077" width="0.5" height="15.0" fill="rgb(220,148,41)" rx="2" ry="2" />
<text  x="237.56" y="1087.5" ></text>
</g>
<g >
<title>_vdso_clock_gettime (265 samples, 0.28%)</title><rect x="988.0" y="773" width="3.3" height="15.0" fill="rgb(251,146,39)" rx="2" ry="2" />
<text  x="990.97" y="783.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20,985 samples, 22.51%)</title><rect x="529.3" y="1093" width="265.7" height="15.0" fill="rgb(243,125,11)" rx="2" ry="2" />
<text  x="532.33" y="1103.5" >&lt;core::future::from_generator::GenF..</text>
</g>
<g >
<title>&lt;actix_http::service::HttpServiceHandler&lt;T,S,B,X,U&gt; as actix_service::Service&gt;::call (135 samples, 0.14%)</title><rect x="529.7" y="1045" width="1.7" height="15.0" fill="rgb(252,155,10)" rx="2" ry="2" />
<text  x="532.68" y="1055.5" ></text>
</g>
<g >
<title>_ioctl (365 samples, 0.39%)</title><rect x="518.4" y="549" width="4.6" height="15.0" fill="rgb(218,100,20)" rx="2" ry="2" />
<text  x="521.39" y="559.5" ></text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (288 samples, 0.31%)</title><rect x="233.3" y="1157" width="3.6" height="15.0" fill="rgb(252,192,25)" rx="2" ry="2" />
<text  x="236.26" y="1167.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (1,648 samples, 1.77%)</title><rect x="1093.3" y="581" width="20.8" height="15.0" fill="rgb(234,1,29)" rx="2" ry="2" />
<text  x="1096.28" y="591.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="361.3" y="933" width="0.4" height="15.0" fill="rgb(249,37,53)" rx="2" ry="2" />
<text  x="364.31" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any&gt;&gt;&gt; (38 samples, 0.04%)</title><rect x="344.4" y="965" width="0.5" height="15.0" fill="rgb(221,188,3)" rx="2" ry="2" />
<text  x="347.37" y="975.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (10 samples, 0.01%)</title><rect x="56.3" y="677" width="0.1" height="15.0" fill="rgb(226,131,47)" rx="2" ry="2" />
<text  x="59.32" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="154.1" y="581" width="0.1" height="15.0" fill="rgb(219,21,3)" rx="2" ry="2" />
<text  x="157.08" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (187 samples, 0.20%)</title><rect x="220.6" y="565" width="2.4" height="15.0" fill="rgb(253,67,27)" rx="2" ry="2" />
<text  x="223.59" y="575.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (74 samples, 0.08%)</title><rect x="98.1" y="885" width="0.9" height="15.0" fill="rgb(231,212,49)" rx="2" ry="2" />
<text  x="101.08" y="895.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (41 samples, 0.04%)</title><rect x="673.2" y="853" width="0.5" height="15.0" fill="rgb(240,177,24)" rx="2" ry="2" />
<text  x="676.20" y="863.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (26 samples, 0.03%)</title><rect x="321.9" y="437" width="0.3" height="15.0" fill="rgb(237,197,39)" rx="2" ry="2" />
<text  x="324.89" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (35 samples, 0.04%)</title><rect x="167.2" y="725" width="0.4" height="15.0" fill="rgb(216,28,52)" rx="2" ry="2" />
<text  x="170.18" y="735.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::push_term (13 samples, 0.01%)</title><rect x="240.3" y="901" width="0.2" height="15.0" fill="rgb(206,71,54)" rx="2" ry="2" />
<text  x="243.30" y="911.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (22 samples, 0.02%)</title><rect x="376.5" y="661" width="0.2" height="15.0" fill="rgb(242,74,27)" rx="2" ry="2" />
<text  x="379.46" y="671.5" ></text>
</g>
<g >
<title>_get_user_4 (27 samples, 0.03%)</title><rect x="1121.7" y="805" width="0.3" height="15.0" fill="rgb(247,92,42)" rx="2" ry="2" />
<text  x="1124.71" y="815.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (58 samples, 0.06%)</title><rect x="976.3" y="789" width="0.7" height="15.0" fill="rgb(206,117,20)" rx="2" ry="2" />
<text  x="979.27" y="799.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::new_with_ready (190 samples, 0.20%)</title><rect x="513.0" y="789" width="2.4" height="15.0" fill="rgb(253,117,51)" rx="2" ry="2" />
<text  x="515.99" y="799.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (34 samples, 0.04%)</title><rect x="424.8" y="725" width="0.4" height="15.0" fill="rgb(208,64,25)" rx="2" ry="2" />
<text  x="427.78" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt (25 samples, 0.03%)</title><rect x="707.5" y="837" width="0.4" height="15.0" fill="rgb(225,226,17)" rx="2" ry="2" />
<text  x="710.55" y="847.5" ></text>
</g>
<g >
<title>tokio::task::local::CURRENT::FOO::_getit (16 samples, 0.02%)</title><rect x="1070.3" y="469" width="0.2" height="15.0" fill="rgb(232,78,24)" rx="2" ry="2" />
<text  x="1073.25" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="162.2" y="629" width="0.3" height="15.0" fill="rgb(210,165,7)" rx="2" ry="2" />
<text  x="165.24" y="639.5" ></text>
</g>
<g >
<title>&lt;mio::sys::unix::eventedfd::EventedFd as mio::event_imp::Evented&gt;::deregister (1,072 samples, 1.15%)</title><rect x="772.4" y="757" width="13.6" height="15.0" fill="rgb(213,207,0)" rx="2" ry="2" />
<text  x="775.43" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (46 samples, 0.05%)</title><rect x="361.7" y="965" width="0.6" height="15.0" fill="rgb(226,67,29)" rx="2" ry="2" />
<text  x="364.69" y="975.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.02%)</title><rect x="226.4" y="597" width="0.1" height="15.0" fill="rgb(241,141,30)" rx="2" ry="2" />
<text  x="229.36" y="607.5" ></text>
</g>
<g >
<title>skb_release_head_state (9 samples, 0.01%)</title><rect x="697.0" y="661" width="0.1" height="15.0" fill="rgb(207,77,27)" rx="2" ry="2" />
<text  x="700.03" y="671.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::read_available (556 samples, 0.60%)</title><rect x="459.6" y="1077" width="7.1" height="15.0" fill="rgb(228,41,51)" rx="2" ry="2" />
<text  x="462.64" y="1087.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (44 samples, 0.05%)</title><rect x="471.5" y="789" width="0.6" height="15.0" fill="rgb(227,86,49)" rx="2" ry="2" />
<text  x="474.52" y="799.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (41 samples, 0.04%)</title><rect x="199.5" y="565" width="0.5" height="15.0" fill="rgb(215,186,37)" rx="2" ry="2" />
<text  x="202.46" y="575.5" ></text>
</g>
<g >
<title>bytes::bytes::Bytes::copy_from_slice (65 samples, 0.07%)</title><rect x="36.5" y="1141" width="0.8" height="15.0" fill="rgb(228,228,20)" rx="2" ry="2" />
<text  x="39.46" y="1151.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (26 samples, 0.03%)</title><rect x="414.8" y="757" width="0.3" height="15.0" fill="rgb(208,189,15)" rx="2" ry="2" />
<text  x="417.78" y="767.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.01%)</title><rect x="420.6" y="709" width="0.1" height="15.0" fill="rgb(253,64,27)" rx="2" ry="2" />
<text  x="423.55" y="719.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::count (8 samples, 0.01%)</title><rect x="680.8" y="981" width="0.2" height="15.0" fill="rgb(250,228,17)" rx="2" ry="2" />
<text  x="683.85" y="991.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek::{{closure}} (8 samples, 0.01%)</title><rect x="92.3" y="645" width="0.1" height="15.0" fill="rgb(246,155,34)" rx="2" ry="2" />
<text  x="95.25" y="655.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (13 samples, 0.01%)</title><rect x="471.9" y="709" width="0.2" height="15.0" fill="rgb(219,191,26)" rx="2" ry="2" />
<text  x="474.90" y="719.5" ></text>
</g>
<g >
<title>dst_release (32 samples, 0.03%)</title><rect x="628.2" y="309" width="0.4" height="15.0" fill="rgb(238,155,48)" rx="2" ry="2" />
<text  x="631.24" y="319.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::select_as_str (356 samples, 0.38%)</title><rect x="238.9" y="997" width="4.5" height="15.0" fill="rgb(254,141,27)" rx="2" ry="2" />
<text  x="241.85" y="1007.5" ></text>
</g>
<g >
<title>_GI___libc_realloc (117 samples, 0.13%)</title><rect x="168.8" y="677" width="1.5" height="15.0" fill="rgb(246,79,11)" rx="2" ry="2" />
<text  x="171.83" y="687.5" ></text>
</g>
<g >
<title>&lt;futures_channel::mpsc::UnboundedReceiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,038 samples, 1.11%)</title><rect x="1050.3" y="341" width="13.1" height="15.0" fill="rgb(241,216,52)" rx="2" ry="2" />
<text  x="1053.28" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.01%)</title><rect x="138.3" y="853" width="0.1" height="15.0" fill="rgb(245,105,20)" rx="2" ry="2" />
<text  x="141.27" y="863.5" ></text>
</g>
<g >
<title>bytes::bytes::Bytes::slice (92 samples, 0.10%)</title><rect x="30.9" y="1157" width="1.1" height="15.0" fill="rgb(231,13,38)" rx="2" ry="2" />
<text  x="33.87" y="1167.5" ></text>
</g>
<g >
<title>_GI___libc_free (11 samples, 0.01%)</title><rect x="457.5" y="1013" width="0.1" height="15.0" fill="rgb(239,177,16)" rx="2" ry="2" />
<text  x="460.47" y="1023.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (16 samples, 0.02%)</title><rect x="356.2" y="917" width="0.2" height="15.0" fill="rgb(211,100,17)" rx="2" ry="2" />
<text  x="359.22" y="927.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::enter (22,824 samples, 24.48%)</title><rect x="795.0" y="949" width="288.9" height="15.0" fill="rgb(243,218,43)" rx="2" ry="2" />
<text  x="797.97" y="959.5" >tokio::runtime::basic_scheduler::enter</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.01%)</title><rect x="377.5" y="773" width="0.1" height="15.0" fill="rgb(244,97,5)" rx="2" ry="2" />
<text  x="380.50" y="783.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (39 samples, 0.04%)</title><rect x="105.8" y="805" width="0.5" height="15.0" fill="rgb(219,110,48)" rx="2" ry="2" />
<text  x="108.77" y="815.5" ></text>
</g>
<g >
<title>&lt;actix_web::handler::HandlerServiceResponse&lt;T,R&gt; as core::future::future::Future&gt;::poll (304 samples, 0.33%)</title><rect x="468.9" y="1125" width="3.8" height="15.0" fill="rgb(217,180,43)" rx="2" ry="2" />
<text  x="471.90" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (53 samples, 0.06%)</title><rect x="126.4" y="805" width="0.6" height="15.0" fill="rgb(234,26,44)" rx="2" ry="2" />
<text  x="129.37" y="815.5" ></text>
</g>
<g >
<title>tcp_try_coalesce (64 samples, 0.07%)</title><rect x="319.5" y="405" width="0.8" height="15.0" fill="rgb(214,52,42)" rx="2" ry="2" />
<text  x="322.50" y="415.5" ></text>
</g>
<g >
<title>_rdl_alloc (14 samples, 0.02%)</title><rect x="222.5" y="469" width="0.2" height="15.0" fill="rgb(235,86,19)" rx="2" ry="2" />
<text  x="225.54" y="479.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (15 samples, 0.02%)</title><rect x="457.0" y="981" width="0.2" height="15.0" fill="rgb(249,46,14)" rx="2" ry="2" />
<text  x="460.02" y="991.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (20 samples, 0.02%)</title><rect x="560.6" y="773" width="0.3" height="15.0" fill="rgb(213,172,36)" rx="2" ry="2" />
<text  x="563.64" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (48 samples, 0.05%)</title><rect x="172.6" y="901" width="0.6" height="15.0" fill="rgb(208,190,8)" rx="2" ry="2" />
<text  x="175.60" y="911.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (80 samples, 0.09%)</title><rect x="703.5" y="741" width="1.1" height="15.0" fill="rgb(254,159,11)" rx="2" ry="2" />
<text  x="706.55" y="751.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (13 samples, 0.01%)</title><rect x="96.7" y="757" width="0.2" height="15.0" fill="rgb(242,40,14)" rx="2" ry="2" />
<text  x="99.72" y="767.5" ></text>
</g>
<g >
<title>_libc_write (33 samples, 0.04%)</title><rect x="1115.9" y="581" width="0.5" height="15.0" fill="rgb(232,25,40)" rx="2" ry="2" />
<text  x="1118.95" y="591.5" ></text>
</g>
<g >
<title>futures_core::task::_internal::atomic_waker::AtomicWaker::register (190 samples, 0.20%)</title><rect x="1061.0" y="325" width="2.4" height="15.0" fill="rgb(214,221,25)" rx="2" ry="2" />
<text  x="1064.01" y="335.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (41 samples, 0.04%)</title><rect x="971.2" y="629" width="0.5" height="15.0" fill="rgb(225,214,34)" rx="2" ry="2" />
<text  x="974.17" y="639.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.03%)</title><rect x="161.7" y="597" width="0.3" height="15.0" fill="rgb(247,168,26)" rx="2" ry="2" />
<text  x="164.74" y="607.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::handle_request (8,592 samples, 9.22%)</title><rect x="345.3" y="1061" width="108.7" height="15.0" fill="rgb(210,99,24)" rx="2" ry="2" />
<text  x="348.29" y="1071.5" >actix_http::h..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (172 samples, 0.18%)</title><rect x="202.6" y="613" width="2.2" height="15.0" fill="rgb(253,126,44)" rx="2" ry="2" />
<text  x="205.62" y="623.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (78 samples, 0.08%)</title><rect x="242.4" y="837" width="1.0" height="15.0" fill="rgb(211,165,50)" rx="2" ry="2" />
<text  x="245.37" y="847.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (110 samples, 0.12%)</title><rect x="177.2" y="565" width="1.4" height="15.0" fill="rgb(222,202,0)" rx="2" ry="2" />
<text  x="180.19" y="575.5" ></text>
</g>
<g >
<title>_update_load_avg_se (9 samples, 0.01%)</title><rect x="1181.7" y="757" width="0.1" height="15.0" fill="rgb(236,93,31)" rx="2" ry="2" />
<text  x="1184.71" y="767.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::transition_to_terminal::{{closure}} (14 samples, 0.02%)</title><rect x="486.1" y="645" width="0.2" height="15.0" fill="rgb(222,153,19)" rx="2" ry="2" />
<text  x="489.15" y="655.5" ></text>
</g>
<g >
<title>skb_clone (30 samples, 0.03%)</title><rect x="327.4" y="821" width="0.4" height="15.0" fill="rgb(248,161,47)" rx="2" ry="2" />
<text  x="330.42" y="831.5" ></text>
</g>
<g >
<title>tokio::time::driver::entry::Entry::cancel (153 samples, 0.16%)</title><rect x="792.9" y="853" width="2.0" height="15.0" fill="rgb(219,91,46)" rx="2" ry="2" />
<text  x="795.92" y="863.5" ></text>
</g>
<g >
<title>tokio::coop::CURRENT::_getit (23 samples, 0.02%)</title><rect x="340.4" y="965" width="0.3" height="15.0" fill="rgb(209,126,14)" rx="2" ry="2" />
<text  x="343.36" y="975.5" ></text>
</g>
<g >
<title>native_sched_clock (16 samples, 0.02%)</title><rect x="1186.5" y="789" width="0.2" height="15.0" fill="rgb(241,122,19)" rx="2" ry="2" />
<text  x="1189.53" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,568 samples, 10.26%)</title><rect x="840.2" y="725" width="121.2" height="15.0" fill="rgb(215,69,48)" rx="2" ry="2" />
<text  x="843.25" y="735.5" >do_syscall_64</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (21 samples, 0.02%)</title><rect x="997.5" y="709" width="0.3" height="15.0" fill="rgb(242,179,49)" rx="2" ry="2" />
<text  x="1000.49" y="719.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (29 samples, 0.03%)</title><rect x="429.0" y="565" width="0.4" height="15.0" fill="rgb(235,113,22)" rx="2" ry="2" />
<text  x="432.00" y="575.5" ></text>
</g>
<g >
<title>tokio::time::driver::Driver&lt;T&gt;::process_queue (964 samples, 1.03%)</title><rect x="995.1" y="853" width="12.2" height="15.0" fill="rgb(241,41,40)" rx="2" ry="2" />
<text  x="998.06" y="863.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (15 samples, 0.02%)</title><rect x="462.6" y="885" width="0.2" height="15.0" fill="rgb(205,35,10)" rx="2" ry="2" />
<text  x="465.57" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (140 samples, 0.15%)</title><rect x="720.9" y="773" width="1.8" height="15.0" fill="rgb(221,2,14)" rx="2" ry="2" />
<text  x="723.91" y="783.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (12 samples, 0.01%)</title><rect x="940.4" y="517" width="0.1" height="15.0" fill="rgb(239,36,34)" rx="2" ry="2" />
<text  x="943.36" y="527.5" ></text>
</g>
<g >
<title>tokio::task::local::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;::release (16 samples, 0.02%)</title><rect x="1071.8" y="469" width="0.2" height="15.0" fill="rgb(236,92,26)" rx="2" ry="2" />
<text  x="1074.76" y="479.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::select (8,754 samples, 9.39%)</title><rect x="121.4" y="1013" width="110.8" height="15.0" fill="rgb(250,80,51)" rx="2" ry="2" />
<text  x="124.38" y="1023.5" >jsonpath_lib:..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (21 samples, 0.02%)</title><rect x="444.4" y="949" width="0.2" height="15.0" fill="rgb(230,9,0)" rx="2" ry="2" />
<text  x="447.35" y="959.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (87 samples, 0.09%)</title><rect x="491.7" y="1077" width="1.1" height="15.0" fill="rgb(216,144,14)" rx="2" ry="2" />
<text  x="494.68" y="1087.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (14 samples, 0.02%)</title><rect x="985.4" y="725" width="0.2" height="15.0" fill="rgb(208,25,41)" rx="2" ry="2" />
<text  x="988.44" y="735.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (33 samples, 0.04%)</title><rect x="1115.9" y="757" width="0.5" height="15.0" fill="rgb(217,213,17)" rx="2" ry="2" />
<text  x="1118.95" y="767.5" ></text>
</g>
<g >
<title>core::mem::take (18 samples, 0.02%)</title><rect x="974.9" y="741" width="0.2" height="15.0" fill="rgb(230,150,30)" rx="2" ry="2" />
<text  x="977.86" y="751.5" ></text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (1,708 samples, 1.83%)</title><rect x="1092.5" y="677" width="21.6" height="15.0" fill="rgb(221,144,6)" rx="2" ry="2" />
<text  x="1095.52" y="687.5" >m..</text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (870 samples, 0.93%)</title><rect x="504.4" y="933" width="11.0" height="15.0" fill="rgb(210,36,10)" rx="2" ry="2" />
<text  x="507.38" y="943.5" ></text>
</g>
<g >
<title>core::ptr::read (9 samples, 0.01%)</title><rect x="137.7" y="853" width="0.1" height="15.0" fill="rgb(217,229,2)" rx="2" ry="2" />
<text  x="140.69" y="863.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (25 samples, 0.03%)</title><rect x="117.1" y="821" width="0.3" height="15.0" fill="rgb(248,181,11)" rx="2" ry="2" />
<text  x="120.05" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::wake_by_val (1,919 samples, 2.06%)</title><rect x="1091.6" y="949" width="24.3" height="15.0" fill="rgb(209,46,34)" rx="2" ry="2" />
<text  x="1094.61" y="959.5" >t..</text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,652 samples, 1.77%)</title><rect x="1093.2" y="597" width="20.9" height="15.0" fill="rgb(251,181,10)" rx="2" ry="2" />
<text  x="1096.23" y="607.5" ></text>
</g>
<g >
<title>_sk_dst_check (32 samples, 0.03%)</title><rect x="621.2" y="213" width="0.4" height="15.0" fill="rgb(242,206,15)" rx="2" ry="2" />
<text  x="624.23" y="223.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (15 samples, 0.02%)</title><rect x="412.6" y="725" width="0.2" height="15.0" fill="rgb(219,97,49)" rx="2" ry="2" />
<text  x="415.58" y="735.5" ></text>
</g>
<g >
<title>_inet_lookup_established (56 samples, 0.06%)</title><rect x="307.3" y="469" width="0.8" height="15.0" fill="rgb(208,136,28)" rx="2" ry="2" />
<text  x="310.35" y="479.5" ></text>
</g>
<g >
<title>tcp_fin (223 samples, 0.24%)</title><rect x="316.5" y="421" width="2.8" height="15.0" fill="rgb(252,82,20)" rx="2" ry="2" />
<text  x="319.49" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt; (923 samples, 0.99%)</title><rect x="383.5" y="709" width="11.7" height="15.0" fill="rgb(245,44,31)" rx="2" ry="2" />
<text  x="386.54" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (14 samples, 0.02%)</title><rect x="1188.3" y="1269" width="0.2" height="15.0" fill="rgb(239,212,28)" rx="2" ry="2" />
<text  x="1191.32" y="1279.5" ></text>
</g>
<g >
<title>_mod_memcg_state (34 samples, 0.04%)</title><rect x="780.8" y="581" width="0.4" height="15.0" fill="rgb(228,135,5)" rx="2" ry="2" />
<text  x="783.75" y="591.5" ></text>
</g>
<g >
<title>fput (73 samples, 0.08%)</title><rect x="735.5" y="645" width="1.0" height="15.0" fill="rgb(254,207,18)" rx="2" ry="2" />
<text  x="738.53" y="655.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (22,824 samples, 24.48%)</title><rect x="795.0" y="965" width="288.9" height="15.0" fill="rgb(217,107,40)" rx="2" ry="2" />
<text  x="797.97" y="975.5" >tokio::runtime::basic_scheduler::Basic..</text>
</g>
<g >
<title>int_free (11 samples, 0.01%)</title><rect x="42.7" y="997" width="0.1" height="15.0" fill="rgb(227,71,1)" rx="2" ry="2" />
<text  x="45.67" y="1007.5" ></text>
</g>
<g >
<title>task_work_add (10 samples, 0.01%)</title><rect x="735.9" y="613" width="0.1" height="15.0" fill="rgb(212,70,41)" rx="2" ry="2" />
<text  x="738.90" y="623.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::fd::FileDesc as core::ops::drop::Drop&gt;::drop (46 samples, 0.05%)</title><rect x="733.1" y="741" width="0.6" height="15.0" fill="rgb(226,10,11)" rx="2" ry="2" />
<text  x="736.14" y="751.5" ></text>
</g>
<g >
<title>_wake_up (1,022 samples, 1.10%)</title><rect x="1098.0" y="357" width="12.9" height="15.0" fill="rgb(232,83,42)" rx="2" ry="2" />
<text  x="1101.01" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (81 samples, 0.09%)</title><rect x="411.7" y="773" width="1.1" height="15.0" fill="rgb(215,215,2)" rx="2" ry="2" />
<text  x="414.74" y="783.5" ></text>
</g>
<g >
<title>put_prev_entity (44 samples, 0.05%)</title><rect x="945.3" y="581" width="0.5" height="15.0" fill="rgb(254,44,38)" rx="2" ry="2" />
<text  x="948.27" y="591.5" ></text>
</g>
<g >
<title>actix_http::service::State&lt;T,S,B,X,U&gt;::poll (33 samples, 0.04%)</title><rect x="466.7" y="1093" width="0.4" height="15.0" fill="rgb(240,14,33)" rx="2" ry="2" />
<text  x="469.73" y="1103.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt; (78 samples, 0.08%)</title><rect x="343.9" y="1045" width="1.0" height="15.0" fill="rgb(235,181,12)" rx="2" ry="2" />
<text  x="346.87" y="1055.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::pow (8 samples, 0.01%)</title><rect x="995.0" y="789" width="0.1" height="15.0" fill="rgb(232,179,6)" rx="2" ry="2" />
<text  x="997.96" y="799.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (10 samples, 0.01%)</title><rect x="1115.0" y="757" width="0.1" height="15.0" fill="rgb(249,138,34)" rx="2" ry="2" />
<text  x="1118.00" y="767.5" ></text>
</g>
<g >
<title>_kfree_skb_flush (10 samples, 0.01%)</title><rect x="304.1" y="613" width="0.1" height="15.0" fill="rgb(210,148,23)" rx="2" ry="2" />
<text  x="307.09" y="623.5" ></text>
</g>
<g >
<title>___fput (9 samples, 0.01%)</title><rect x="739.0" y="661" width="0.1" height="15.0" fill="rgb(251,106,32)" rx="2" ry="2" />
<text  x="742.00" y="671.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (170 samples, 0.18%)</title><rect x="1079.1" y="613" width="2.1" height="15.0" fill="rgb(248,222,45)" rx="2" ry="2" />
<text  x="1082.09" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="139.7" y="757" width="0.2" height="15.0" fill="rgb(253,93,30)" rx="2" ry="2" />
<text  x="142.71" y="767.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="340.8" y="917" width="0.3" height="15.0" fill="rgb(221,108,44)" rx="2" ry="2" />
<text  x="343.83" y="927.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set_epi8 (18 samples, 0.02%)</title><rect x="179.2" y="485" width="0.2" height="15.0" fill="rgb(249,163,26)" rx="2" ry="2" />
<text  x="182.19" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (56 samples, 0.06%)</title><rect x="143.3" y="629" width="0.7" height="15.0" fill="rgb(214,39,32)" rx="2" ry="2" />
<text  x="146.28" y="639.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (17 samples, 0.02%)</title><rect x="377.4" y="805" width="0.2" height="15.0" fill="rgb(253,73,28)" rx="2" ry="2" />
<text  x="380.43" y="815.5" ></text>
</g>
<g >
<title>start_thread (8,015 samples, 8.60%)</title><rect x="1086.8" y="1253" width="101.5" height="15.0" fill="rgb(236,224,28)" rx="2" ry="2" />
<text  x="1089.83" y="1263.5" >start_thread</text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (10 samples, 0.01%)</title><rect x="338.6" y="917" width="0.2" height="15.0" fill="rgb(242,20,53)" rx="2" ry="2" />
<text  x="341.63" y="927.5" ></text>
</g>
<g >
<title>_GI___libc_realloc (275 samples, 0.30%)</title><rect x="155.4" y="645" width="3.5" height="15.0" fill="rgb(221,142,28)" rx="2" ry="2" />
<text  x="158.40" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::decode_error_kind (49 samples, 0.05%)</title><rect x="708.5" y="917" width="0.6" height="15.0" fill="rgb(210,101,43)" rx="2" ry="2" />
<text  x="711.48" y="927.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (33 samples, 0.04%)</title><rect x="1115.9" y="917" width="0.5" height="15.0" fill="rgb(226,204,33)" rx="2" ry="2" />
<text  x="1118.95" y="927.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_ready (150 samples, 0.16%)</title><rect x="523.2" y="597" width="1.9" height="15.0" fill="rgb(238,43,52)" rx="2" ry="2" />
<text  x="526.23" y="607.5" ></text>
</g>
<g >
<title>&lt;actix_service::and_then::AndThenServiceResponse&lt;A,B&gt; as core::future::future::Future&gt;::poll (20,985 samples, 22.51%)</title><rect x="529.3" y="1061" width="265.7" height="15.0" fill="rgb(242,109,42)" rx="2" ry="2" />
<text  x="532.33" y="1071.5" >&lt;actix_service::and_then::AndThenSe..</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (39 samples, 0.04%)</title><rect x="98.5" y="821" width="0.5" height="15.0" fill="rgb(219,218,9)" rx="2" ry="2" />
<text  x="101.51" y="831.5" ></text>
</g>
<g >
<title>tokio::io::driver::platform::sys::error (15 samples, 0.02%)</title><rect x="337.7" y="965" width="0.2" height="15.0" fill="rgb(237,211,50)" rx="2" ry="2" />
<text  x="340.73" y="975.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (99 samples, 0.11%)</title><rect x="118.3" y="853" width="1.2" height="15.0" fill="rgb(215,99,8)" rx="2" ry="2" />
<text  x="121.28" y="863.5" ></text>
</g>
<g >
<title>migrate_disable (8 samples, 0.01%)</title><rect x="762.6" y="549" width="0.1" height="15.0" fill="rgb(238,171,41)" rx="2" ry="2" />
<text  x="765.59" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (10 samples, 0.01%)</title><rect x="574.4" y="741" width="0.1" height="15.0" fill="rgb(238,227,13)" rx="2" ry="2" />
<text  x="577.35" y="751.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::extend_from_slice (46 samples, 0.05%)</title><rect x="442.4" y="949" width="0.6" height="15.0" fill="rgb(246,110,28)" rx="2" ry="2" />
<text  x="445.44" y="959.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (13 samples, 0.01%)</title><rect x="235.0" y="1013" width="0.1" height="15.0" fill="rgb(218,100,31)" rx="2" ry="2" />
<text  x="237.98" y="1023.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (28 samples, 0.03%)</title><rect x="638.4" y="293" width="0.4" height="15.0" fill="rgb(210,229,32)" rx="2" ry="2" />
<text  x="641.41" y="303.5" ></text>
</g>
<g >
<title>tokio::coop::budget (331 samples, 0.36%)</title><rect x="525.1" y="1173" width="4.2" height="15.0" fill="rgb(252,151,17)" rx="2" ry="2" />
<text  x="528.14" y="1183.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::sse2::Group::match_byte (24 samples, 0.03%)</title><rect x="180.6" y="597" width="0.3" height="15.0" fill="rgb(254,18,3)" rx="2" ry="2" />
<text  x="183.62" y="607.5" ></text>
</g>
<g >
<title>rcu_core_si (11 samples, 0.01%)</title><rect x="940.4" y="485" width="0.1" height="15.0" fill="rgb(226,179,28)" rx="2" ry="2" />
<text  x="943.36" y="495.5" ></text>
</g>
<g >
<title>raw_spin_lock_irqsave (14 samples, 0.02%)</title><rect x="316.3" y="357" width="0.2" height="15.0" fill="rgb(238,195,37)" rx="2" ry="2" />
<text  x="319.31" y="367.5" ></text>
</g>
<g >
<title>httparse::simd::sse42::match_header_value_batch_16 (27 samples, 0.03%)</title><rect x="50.2" y="1125" width="0.3" height="15.0" fill="rgb(239,182,16)" rx="2" ry="2" />
<text  x="53.18" y="1135.5" ></text>
</g>
<g >
<title>_rdl_alloc (9 samples, 0.01%)</title><rect x="502.7" y="981" width="0.1" height="15.0" fill="rgb(214,15,49)" rx="2" ry="2" />
<text  x="505.68" y="991.5" ></text>
</g>
<g >
<title>_pthread_disable_asynccancel (17 samples, 0.02%)</title><rect x="685.6" y="821" width="0.2" height="15.0" fill="rgb(240,144,47)" rx="2" ry="2" />
<text  x="688.63" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="139.7" y="741" width="0.2" height="15.0" fill="rgb(211,187,3)" rx="2" ry="2" />
<text  x="142.71" y="751.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (24 samples, 0.03%)</title><rect x="361.0" y="837" width="0.3" height="15.0" fill="rgb(245,208,39)" rx="2" ry="2" />
<text  x="363.98" y="847.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (21 samples, 0.02%)</title><rect x="176.9" y="549" width="0.3" height="15.0" fill="rgb(231,181,54)" rx="2" ry="2" />
<text  x="179.90" y="559.5" ></text>
</g>
<g >
<title>clear_inode (12 samples, 0.01%)</title><rect x="1154.5" y="693" width="0.2" height="15.0" fill="rgb(225,178,53)" rx="2" ry="2" />
<text  x="1157.52" y="703.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (47 samples, 0.05%)</title><rect x="1029.9" y="677" width="0.6" height="15.0" fill="rgb(247,123,36)" rx="2" ry="2" />
<text  x="1032.87" y="687.5" ></text>
</g>
<g >
<title>[libc-..o] (10 samples, 0.01%)</title><rect x="157.1" y="613" width="0.2" height="15.0" fill="rgb(245,43,7)" rx="2" ry="2" />
<text  x="160.13" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt; (780 samples, 0.84%)</title><rect x="385.2" y="661" width="9.8" height="15.0" fill="rgb(249,45,2)" rx="2" ry="2" />
<text  x="388.16" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (103 samples, 0.11%)</title><rect x="383.5" y="677" width="1.3" height="15.0" fill="rgb(241,152,17)" rx="2" ry="2" />
<text  x="386.54" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (48 samples, 0.05%)</title><rect x="109.7" y="757" width="0.6" height="15.0" fill="rgb(246,48,30)" rx="2" ry="2" />
<text  x="112.71" y="767.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (8 samples, 0.01%)</title><rect x="798.3" y="757" width="0.1" height="15.0" fill="rgb(220,32,2)" rx="2" ry="2" />
<text  x="801.28" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::op (600 samples, 0.64%)</title><rect x="82.8" y="853" width="7.6" height="15.0" fill="rgb(244,58,14)" rx="2" ry="2" />
<text  x="85.84" y="863.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="132.2" y="885" width="0.3" height="15.0" fill="rgb(230,211,18)" rx="2" ry="2" />
<text  x="135.19" y="895.5" ></text>
</g>
<g >
<title>netif_skb_features (12 samples, 0.01%)</title><rect x="626.6" y="85" width="0.2" height="15.0" fill="rgb(246,52,45)" rx="2" ry="2" />
<text  x="629.65" y="95.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.01%)</title><rect x="421.7" y="613" width="0.1" height="15.0" fill="rgb(222,173,23)" rx="2" ry="2" />
<text  x="424.72" y="623.5" ></text>
</g>
<g >
<title>internal_add_timer (27 samples, 0.03%)</title><rect x="664.3" y="645" width="0.3" height="15.0" fill="rgb(224,45,16)" rx="2" ry="2" />
<text  x="667.31" y="655.5" ></text>
</g>
<g >
<title>actix_http::extensions::Extensions::get (118 samples, 0.13%)</title><rect x="350.0" y="853" width="1.5" height="15.0" fill="rgb(249,158,9)" rx="2" ry="2" />
<text  x="353.01" y="863.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (8 samples, 0.01%)</title><rect x="717.7" y="821" width="0.1" height="15.0" fill="rgb(254,198,10)" rx="2" ry="2" />
<text  x="720.69" y="831.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_bytes (13 samples, 0.01%)</title><rect x="214.6" y="533" width="0.2" height="15.0" fill="rgb(222,218,21)" rx="2" ry="2" />
<text  x="217.65" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_web::handler::HandlerServiceResponse&lt;core::future::from_generator::GenFuture&lt;&lt;rust_actix_jsonpath_bench::new as actix_web::service::HttpServiceFactory&gt;::register::new::{{closure}}&gt;,actix_http::response::Response&gt;&gt; (10 samples, 0.01%)</title><rect x="438.4" y="901" width="0.1" height="15.0" fill="rgb(228,110,29)" rx="2" ry="2" />
<text  x="441.39" y="911.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (9 samples, 0.01%)</title><rect x="226.7" y="645" width="0.1" height="15.0" fill="rgb(249,207,23)" rx="2" ry="2" />
<text  x="229.70" y="655.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (44 samples, 0.05%)</title><rect x="120.8" y="917" width="0.6" height="15.0" fill="rgb(228,51,0)" rx="2" ry="2" />
<text  x="123.83" y="927.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,562 samples, 3.82%)</title><rect x="1031.2" y="629" width="45.1" height="15.0" fill="rgb(246,1,36)" rx="2" ry="2" />
<text  x="1034.22" y="639.5" >std:..</text>
</g>
<g >
<title>int_free (49 samples, 0.05%)</title><rect x="269.1" y="821" width="0.7" height="15.0" fill="rgb(250,207,37)" rx="2" ry="2" />
<text  x="272.14" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (18 samples, 0.02%)</title><rect x="1037.6" y="309" width="0.3" height="15.0" fill="rgb(217,48,18)" rx="2" ry="2" />
<text  x="1040.64" y="319.5" ></text>
</g>
<g >
<title>_slab_free (42 samples, 0.05%)</title><rect x="760.1" y="581" width="0.6" height="15.0" fill="rgb(211,215,18)" rx="2" ry="2" />
<text  x="763.13" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (125 samples, 0.13%)</title><rect x="1056.6" y="229" width="1.6" height="15.0" fill="rgb(223,91,37)" rx="2" ry="2" />
<text  x="1059.63" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (13 samples, 0.01%)</title><rect x="239.8" y="901" width="0.2" height="15.0" fill="rgb(248,115,51)" rx="2" ry="2" />
<text  x="242.83" y="911.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::occupied_bit (35 samples, 0.04%)</title><rect x="1004.8" y="789" width="0.5" height="15.0" fill="rgb(233,219,51)" rx="2" ry="2" />
<text  x="1007.84" y="799.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.02%)</title><rect x="343.0" y="1045" width="0.2" height="15.0" fill="rgb(212,37,20)" rx="2" ry="2" />
<text  x="345.98" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::h1::dispatcher::InnerDispatcher&lt;tokio::net::tcp::stream::TcpStream,actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::Body&gt;,actix_http::body::Body,actix_http::h1::expect::ExpectHandler,actix_http::h1::upgrade::UpgradeHandler&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt; (6,161 samples, 6.61%)</title><rect x="717.0" y="917" width="78.0" height="15.0" fill="rgb(211,63,14)" rx="2" ry="2" />
<text  x="719.98" y="927.5" >core::ptr..</text>
</g>
<g >
<title>&lt;pin_project_lite::_private::UnsafeDropInPlaceGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (104 samples, 0.11%)</title><rect x="436.7" y="917" width="1.3" height="15.0" fill="rgb(229,30,48)" rx="2" ry="2" />
<text  x="439.65" y="927.5" ></text>
</g>
<g >
<title>raw_read_unlock_irqrestore (10 samples, 0.01%)</title><rect x="636.6" y="197" width="0.1" height="15.0" fill="rgb(221,18,47)" rx="2" ry="2" />
<text  x="639.62" y="207.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (14 samples, 0.02%)</title><rect x="1044.0" y="133" width="0.2" height="15.0" fill="rgb(219,22,45)" rx="2" ry="2" />
<text  x="1046.98" y="143.5" ></text>
</g>
<g >
<title>_slab_alloc (9 samples, 0.01%)</title><rect x="570.5" y="693" width="0.1" height="15.0" fill="rgb(243,4,10)" rx="2" ry="2" />
<text  x="573.49" y="703.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::{{closure}} (1,071 samples, 1.15%)</title><rect x="472.8" y="1061" width="13.5" height="15.0" fill="rgb(209,56,16)" rx="2" ry="2" />
<text  x="475.77" y="1071.5" ></text>
</g>
<g >
<title>integrity_inode_free (12 samples, 0.01%)</title><rect x="751.8" y="501" width="0.2" height="15.0" fill="rgb(239,210,40)" rx="2" ry="2" />
<text  x="754.81" y="511.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path_in_key (229 samples, 0.25%)</title><rect x="59.7" y="821" width="2.9" height="15.0" fill="rgb(221,5,47)" rx="2" ry="2" />
<text  x="62.70" y="831.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.01%)</title><rect x="217.8" y="469" width="0.1" height="15.0" fill="rgb(205,116,7)" rx="2" ry="2" />
<text  x="220.78" y="479.5" ></text>
</g>
<g >
<title>ip_finish_output (379 samples, 0.41%)</title><rect x="622.5" y="181" width="4.8" height="15.0" fill="rgb(211,90,3)" rx="2" ry="2" />
<text  x="625.54" y="191.5" ></text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (11 samples, 0.01%)</title><rect x="147.0" y="629" width="0.1" height="15.0" fill="rgb(220,86,22)" rx="2" ry="2" />
<text  x="149.99" y="639.5" ></text>
</g>
<g >
<title>delay_halt (23 samples, 0.02%)</title><rect x="888.3" y="517" width="0.3" height="15.0" fill="rgb(217,218,33)" rx="2" ry="2" />
<text  x="891.30" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (78 samples, 0.08%)</title><rect x="242.4" y="597" width="1.0" height="15.0" fill="rgb(234,60,0)" rx="2" ry="2" />
<text  x="245.37" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="429.4" y="709" width="0.1" height="15.0" fill="rgb(249,179,50)" rx="2" ry="2" />
<text  x="432.36" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::new (18 samples, 0.02%)</title><rect x="401.9" y="885" width="0.2" height="15.0" fill="rgb(223,199,16)" rx="2" ry="2" />
<text  x="404.92" y="895.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (46 samples, 0.05%)</title><rect x="953.5" y="677" width="0.6" height="15.0" fill="rgb(251,225,23)" rx="2" ry="2" />
<text  x="956.50" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (18 samples, 0.02%)</title><rect x="182.0" y="725" width="0.3" height="15.0" fill="rgb(205,186,12)" rx="2" ry="2" />
<text  x="185.04" y="735.5" ></text>
</g>
<g >
<title>skb_release_data (12 samples, 0.01%)</title><rect x="314.3" y="389" width="0.2" height="15.0" fill="rgb(239,26,46)" rx="2" ry="2" />
<text  x="317.35" y="399.5" ></text>
</g>
<g >
<title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="1078.9" y="565" width="0.2" height="15.0" fill="rgb(244,9,23)" rx="2" ry="2" />
<text  x="1081.90" y="575.5" ></text>
</g>
<g >
<title>release_sock (31 samples, 0.03%)</title><rect x="508.9" y="597" width="0.4" height="15.0" fill="rgb(212,125,41)" rx="2" ry="2" />
<text  x="511.92" y="607.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node (11 samples, 0.01%)</title><rect x="970.0" y="485" width="0.2" height="15.0" fill="rgb(217,193,23)" rx="2" ry="2" />
<text  x="973.05" y="495.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessState::effective_readiness (10 samples, 0.01%)</title><rect x="967.4" y="789" width="0.2" height="15.0" fill="rgb(219,37,2)" rx="2" ry="2" />
<text  x="970.44" y="799.5" ></text>
</g>
<g >
<title>core::task::poll::Poll&lt;T&gt;::map (44 samples, 0.05%)</title><rect x="467.2" y="1109" width="0.5" height="15.0" fill="rgb(207,20,40)" rx="2" ry="2" />
<text  x="470.16" y="1119.5" ></text>
</g>
<g >
<title>tokio::time::driver::entry::Entry::poll_elapsed (53 samples, 0.06%)</title><rect x="237.3" y="1109" width="0.6" height="15.0" fill="rgb(252,148,13)" rx="2" ry="2" />
<text  x="240.26" y="1119.5" ></text>
</g>
<g >
<title>autoremove_wake_function (975 samples, 1.05%)</title><rect x="1098.4" y="309" width="12.4" height="15.0" fill="rgb(213,88,26)" rx="2" ry="2" />
<text  x="1101.44" y="319.5" ></text>
</g>
<g >
<title>dev_queue_xmit (230 samples, 0.25%)</title><rect x="624.1" y="133" width="2.9" height="15.0" fill="rgb(225,216,17)" rx="2" ry="2" />
<text  x="627.09" y="143.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::selector::terms::ExprTerm&gt; (85 samples, 0.09%)</title><rect x="136.0" y="933" width="1.1" height="15.0" fill="rgb(209,77,24)" rx="2" ry="2" />
<text  x="138.99" y="943.5" ></text>
</g>
<g >
<title>tcp_write_xmit (2,858 samples, 3.07%)</title><rect x="295.8" y="853" width="36.2" height="15.0" fill="rgb(221,46,16)" rx="2" ry="2" />
<text  x="298.84" y="863.5" >tcp..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (24 samples, 0.03%)</title><rect x="282.8" y="1077" width="0.3" height="15.0" fill="rgb(209,170,32)" rx="2" ry="2" />
<text  x="285.78" y="1087.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (207 samples, 0.22%)</title><rect x="59.9" y="741" width="2.6" height="15.0" fill="rgb(216,73,16)" rx="2" ry="2" />
<text  x="62.91" y="751.5" ></text>
</g>
<g >
<title>_fdget (23 samples, 0.02%)</title><rect x="511.6" y="597" width="0.3" height="15.0" fill="rgb(222,136,1)" rx="2" ry="2" />
<text  x="514.61" y="607.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (39 samples, 0.04%)</title><rect x="128.7" y="741" width="0.5" height="15.0" fill="rgb(207,149,37)" rx="2" ry="2" />
<text  x="131.71" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (49 samples, 0.05%)</title><rect x="1084.1" y="1269" width="0.6" height="15.0" fill="rgb(248,31,31)" rx="2" ry="2" />
<text  x="1087.09" y="1279.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1,648 samples, 1.77%)</title><rect x="1093.3" y="565" width="20.8" height="15.0" fill="rgb(242,39,25)" rx="2" ry="2" />
<text  x="1096.28" y="575.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::wake (17 samples, 0.02%)</title><rect x="1115.4" y="789" width="0.2" height="15.0" fill="rgb(245,74,12)" rx="2" ry="2" />
<text  x="1118.42" y="799.5" ></text>
</g>
<g >
<title>nf_hook_slow (28 samples, 0.03%)</title><rect x="655.0" y="629" width="0.4" height="15.0" fill="rgb(242,50,35)" rx="2" ry="2" />
<text  x="658.00" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (49 samples, 0.05%)</title><rect x="126.4" y="757" width="0.6" height="15.0" fill="rgb(225,40,48)" rx="2" ry="2" />
<text  x="129.42" y="767.5" ></text>
</g>
<g >
<title>__slab_alloc (36 samples, 0.04%)</title><rect x="1140.8" y="693" width="0.5" height="15.0" fill="rgb(226,104,21)" rx="2" ry="2" />
<text  x="1143.85" y="703.5" ></text>
</g>
<g >
<title>tokio::coop::CURRENT::_getit (25 samples, 0.03%)</title><rect x="1014.3" y="821" width="0.4" height="15.0" fill="rgb(227,220,48)" rx="2" ry="2" />
<text  x="1017.34" y="831.5" ></text>
</g>
<g >
<title>alloc::rc::RcInnerPtr::inc_strong (9 samples, 0.01%)</title><rect x="357.4" y="997" width="0.1" height="15.0" fill="rgb(234,195,15)" rx="2" ry="2" />
<text  x="360.39" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_utils::counter::CounterGuard&gt; (63 samples, 0.07%)</title><rect x="475.8" y="485" width="0.8" height="15.0" fill="rgb(205,63,6)" rx="2" ry="2" />
<text  x="478.78" y="495.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (20 samples, 0.02%)</title><rect x="755.5" y="549" width="0.3" height="15.0" fill="rgb(205,51,6)" rx="2" ry="2" />
<text  x="758.50" y="559.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (1,253 samples, 1.34%)</title><rect x="419.4" y="853" width="15.8" height="15.0" fill="rgb(218,85,21)" rx="2" ry="2" />
<text  x="422.38" y="863.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp (393 samples, 0.42%)</title><rect x="165.6" y="917" width="5.0" height="15.0" fill="rgb(250,215,47)" rx="2" ry="2" />
<text  x="168.59" y="927.5" ></text>
</g>
<g >
<title>core::mem::replace (19 samples, 0.02%)</title><rect x="116.8" y="853" width="0.3" height="15.0" fill="rgb(246,14,34)" rx="2" ry="2" />
<text  x="119.81" y="863.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::is_empty (15 samples, 0.02%)</title><rect x="162.7" y="677" width="0.2" height="15.0" fill="rgb(214,106,42)" rx="2" ry="2" />
<text  x="165.72" y="687.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (22 samples, 0.02%)</title><rect x="376.5" y="693" width="0.2" height="15.0" fill="rgb(227,22,15)" rx="2" ry="2" />
<text  x="379.46" y="703.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (131 samples, 0.14%)</title><rect x="144.2" y="693" width="1.6" height="15.0" fill="rgb(215,40,54)" rx="2" ry="2" />
<text  x="147.18" y="703.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (19 samples, 0.02%)</title><rect x="192.4" y="565" width="0.3" height="15.0" fill="rgb(248,174,35)" rx="2" ry="2" />
<text  x="195.43" y="575.5" ></text>
</g>
<g >
<title>&lt;actix_service::boxed::ServiceWrapper&lt;T&gt; as actix_service::Service&gt;::call (504 samples, 0.54%)</title><rect x="346.9" y="997" width="6.4" height="15.0" fill="rgb(227,76,54)" rx="2" ry="2" />
<text  x="349.94" y="1007.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (11 samples, 0.01%)</title><rect x="137.7" y="901" width="0.1" height="15.0" fill="rgb(250,74,19)" rx="2" ry="2" />
<text  x="140.66" y="911.5" ></text>
</g>
<g >
<title>int_free (29 samples, 0.03%)</title><rect x="393.8" y="517" width="0.4" height="15.0" fill="rgb(253,221,28)" rx="2" ry="2" />
<text  x="396.82" y="527.5" ></text>
</g>
<g >
<title>&lt;actix_web::extract::m::TupleFromRequest2::TupleFromRequest2&lt;A,B&gt; as core::future::future::Future&gt;::poll (49 samples, 0.05%)</title><rect x="373.3" y="949" width="0.6" height="15.0" fill="rgb(239,18,27)" rx="2" ry="2" />
<text  x="376.30" y="959.5" ></text>
</g>
<g >
<title>tokio::runtime::task::joinable_local (11 samples, 0.01%)</title><rect x="503.6" y="1157" width="0.1" height="15.0" fill="rgb(230,112,23)" rx="2" ry="2" />
<text  x="506.57" y="1167.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (47 samples, 0.05%)</title><rect x="308.3" y="469" width="0.6" height="15.0" fill="rgb(246,89,23)" rx="2" ry="2" />
<text  x="311.26" y="479.5" ></text>
</g>
<g >
<title>int_malloc (71 samples, 0.08%)</title><rect x="158.0" y="613" width="0.9" height="15.0" fill="rgb(243,117,37)" rx="2" ry="2" />
<text  x="160.97" y="623.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (45 samples, 0.05%)</title><rect x="754.3" y="533" width="0.6" height="15.0" fill="rgb(237,55,46)" rx="2" ry="2" />
<text  x="757.32" y="543.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (25 samples, 0.03%)</title><rect x="90.1" y="821" width="0.3" height="15.0" fill="rgb(206,28,45)" rx="2" ry="2" />
<text  x="93.05" y="831.5" ></text>
</g>
<g >
<title>httparse::simd::avx2::match_url_char_32_avx (29 samples, 0.03%)</title><rect x="51.1" y="1109" width="0.4" height="15.0" fill="rgb(215,204,12)" rx="2" ry="2" />
<text  x="54.09" y="1119.5" ></text>
</g>
<g >
<title>_skb_datagram_iter (286 samples, 0.31%)</title><rect x="697.8" y="677" width="3.6" height="15.0" fill="rgb(241,141,27)" rx="2" ry="2" />
<text  x="700.82" y="687.5" ></text>
</g>
<g >
<title>call_rcu (9 samples, 0.01%)</title><rect x="775.7" y="645" width="0.1" height="15.0" fill="rgb(247,118,29)" rx="2" ry="2" />
<text  x="778.73" y="655.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (10 samples, 0.01%)</title><rect x="1045.8" y="325" width="0.1" height="15.0" fill="rgb(243,113,35)" rx="2" ry="2" />
<text  x="1048.79" y="335.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (17 samples, 0.02%)</title><rect x="129.7" y="661" width="0.3" height="15.0" fill="rgb(205,28,0)" rx="2" ry="2" />
<text  x="132.75" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::vec_deque::VecDeque&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="1115.0" y="789" width="0.1" height="15.0" fill="rgb(240,225,49)" rx="2" ry="2" />
<text  x="1117.97" y="799.5" ></text>
</g>
<g >
<title>tokio::coop::budget (1,573 samples, 1.69%)</title><rect x="244.1" y="1141" width="19.9" height="15.0" fill="rgb(253,209,45)" rx="2" ry="2" />
<text  x="247.07" y="1151.5" ></text>
</g>
<g >
<title>check_preempt_curr (73 samples, 0.08%)</title><rect x="1108.6" y="229" width="1.0" height="15.0" fill="rgb(216,170,1)" rx="2" ry="2" />
<text  x="1111.63" y="239.5" ></text>
</g>
<g >
<title>&lt;tokio::time::driver::stack::Stack as tokio::time::wheel::stack::Stack&gt;::remove (59 samples, 0.06%)</title><rect x="1004.1" y="789" width="0.7" height="15.0" fill="rgb(250,49,49)" rx="2" ry="2" />
<text  x="1007.10" y="799.5" ></text>
</g>
<g >
<title>&lt;actix_http::response::Response&lt; (281 samples, 0.30%)</title><rect x="441.2" y="997" width="3.6" height="15.0" fill="rgb(251,15,44)" rx="2" ry="2" />
<text  x="444.25" y="1007.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::get_ref (16 samples, 0.02%)</title><rect x="336.5" y="1045" width="0.2" height="15.0" fill="rgb(237,132,36)" rx="2" ry="2" />
<text  x="339.54" y="1055.5" ></text>
</g>
<g >
<title>enqueue_task_fair (283 samples, 0.30%)</title><rect x="1101.5" y="245" width="3.5" height="15.0" fill="rgb(223,13,11)" rx="2" ry="2" />
<text  x="1104.47" y="255.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (8 samples, 0.01%)</title><rect x="670.4" y="773" width="0.1" height="15.0" fill="rgb(219,67,6)" rx="2" ry="2" />
<text  x="673.39" y="783.5" ></text>
</g>
<g >
<title>actix_router::router::Router&lt;T,U&gt;::recognize_mut_checked (320 samples, 0.34%)</title><rect x="353.3" y="997" width="4.1" height="15.0" fill="rgb(217,154,38)" rx="2" ry="2" />
<text  x="356.34" y="1007.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (164 samples, 0.18%)</title><rect x="1079.2" y="597" width="2.0" height="15.0" fill="rgb(240,23,39)" rx="2" ry="2" />
<text  x="1082.16" y="607.5" ></text>
</g>
<g >
<title>_netif_receive_skb_one_core (1,458 samples, 1.56%)</title><rect x="304.6" y="581" width="18.5" height="15.0" fill="rgb(219,90,19)" rx="2" ry="2" />
<text  x="307.64" y="591.5" ></text>
</g>
<g >
<title>delay_halt (1,239 samples, 1.33%)</title><rect x="871.8" y="501" width="15.6" height="15.0" fill="rgb(234,197,3)" rx="2" ry="2" />
<text  x="874.77" y="511.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::schedule::{{closure}} (1,875 samples, 2.01%)</title><rect x="1091.9" y="869" width="23.8" height="15.0" fill="rgb(218,29,38)" rx="2" ry="2" />
<text  x="1094.93" y="879.5" >t..</text>
</g>
<g >
<title>std::net::tcp::TcpStream::peer_addr (680 samples, 0.73%)</title><rect x="504.4" y="757" width="8.6" height="15.0" fill="rgb(238,4,20)" rx="2" ry="2" />
<text  x="507.38" y="767.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (246 samples, 0.26%)</title><rect x="1139.2" y="725" width="3.1" height="15.0" fill="rgb(214,5,28)" rx="2" ry="2" />
<text  x="1142.15" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;jsonpath_lib::selector::terms::ExprTerm&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="395.7" y="869" width="0.2" height="15.0" fill="rgb(233,187,7)" rx="2" ry="2" />
<text  x="398.74" y="879.5" ></text>
</g>
<g >
<title>core::mem::replace (125 samples, 0.13%)</title><rect x="1039.6" y="245" width="1.5" height="15.0" fill="rgb(240,179,8)" rx="2" ry="2" />
<text  x="1042.57" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParserNode&gt; (928 samples, 1.00%)</title><rect x="383.5" y="741" width="11.7" height="15.0" fill="rgb(239,97,27)" rx="2" ry="2" />
<text  x="386.48" y="751.5" ></text>
</g>
<g >
<title>memset_erms (50 samples, 0.05%)</title><rect x="571.2" y="709" width="0.7" height="15.0" fill="rgb(251,171,7)" rx="2" ry="2" />
<text  x="574.23" y="719.5" ></text>
</g>
<g >
<title>_GI___libc_realloc (78 samples, 0.08%)</title><rect x="242.4" y="533" width="1.0" height="15.0" fill="rgb(222,18,22)" rx="2" ry="2" />
<text  x="245.37" y="543.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::read (9 samples, 0.01%)</title><rect x="106.3" y="805" width="0.1" height="15.0" fill="rgb(211,61,47)" rx="2" ry="2" />
<text  x="109.27" y="815.5" ></text>
</g>
<g >
<title>bytes::bytes::static_drop (16 samples, 0.02%)</title><rect x="44.8" y="1093" width="0.2" height="15.0" fill="rgb(218,42,13)" rx="2" ry="2" />
<text  x="47.79" y="1103.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_add (25 samples, 0.03%)</title><rect x="983.1" y="821" width="0.3" height="15.0" fill="rgb(241,143,2)" rx="2" ry="2" />
<text  x="986.08" y="831.5" ></text>
</g>
<g >
<title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (52 samples, 0.06%)</title><rect x="793.3" y="805" width="0.7" height="15.0" fill="rgb(248,180,30)" rx="2" ry="2" />
<text  x="796.30" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (107 samples, 0.11%)</title><rect x="427.6" y="533" width="1.4" height="15.0" fill="rgb(236,51,52)" rx="2" ry="2" />
<text  x="430.64" y="543.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_read_ready (288 samples, 0.31%)</title><rect x="233.3" y="1109" width="3.6" height="15.0" fill="rgb(234,108,21)" rx="2" ry="2" />
<text  x="236.26" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.01%)</title><rect x="205.8" y="549" width="0.1" height="15.0" fill="rgb(235,136,31)" rx="2" ry="2" />
<text  x="208.79" y="559.5" ></text>
</g>
<g >
<title>malloc_consolidate (82 samples, 0.09%)</title><rect x="276.5" y="901" width="1.1" height="15.0" fill="rgb(243,60,10)" rx="2" ry="2" />
<text  x="279.51" y="911.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (51 samples, 0.05%)</title><rect x="125.7" y="789" width="0.7" height="15.0" fill="rgb(233,7,36)" rx="2" ry="2" />
<text  x="128.72" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_web::data::Data&lt;&amp;str&gt;&gt; (12 samples, 0.01%)</title><rect x="380.8" y="901" width="0.1" height="15.0" fill="rgb(237,156,46)" rx="2" ry="2" />
<text  x="383.77" y="911.5" ></text>
</g>
<g >
<title>core::mem::replace (15 samples, 0.02%)</title><rect x="365.1" y="917" width="0.2" height="15.0" fill="rgb(252,198,37)" rx="2" ry="2" />
<text  x="368.07" y="927.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="400.3" y="789" width="0.3" height="15.0" fill="rgb(228,168,6)" rx="2" ry="2" />
<text  x="403.31" y="799.5" ></text>
</g>
<g >
<title>tcp_release_cb (8 samples, 0.01%)</title><rect x="1126.4" y="757" width="0.1" height="15.0" fill="rgb(217,180,22)" rx="2" ry="2" />
<text  x="1129.38" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::stack_overflow::imp::make_handler (10 samples, 0.01%)</title><rect x="1189.8" y="1205" width="0.2" height="15.0" fill="rgb(233,227,20)" rx="2" ry="2" />
<text  x="1192.84" y="1215.5" ></text>
</g>
<g >
<title>native_write_msr (221 samples, 0.24%)</title><rect x="1173.2" y="757" width="2.8" height="15.0" fill="rgb(205,119,45)" rx="2" ry="2" />
<text  x="1176.18" y="767.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="181.7" y="725" width="0.3" height="15.0" fill="rgb(233,83,42)" rx="2" ry="2" />
<text  x="184.71" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (32 samples, 0.03%)</title><rect x="171.2" y="917" width="0.4" height="15.0" fill="rgb(251,223,3)" rx="2" ry="2" />
<text  x="174.21" y="927.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::utils::to_path_str (21 samples, 0.02%)</title><rect x="173.4" y="901" width="0.2" height="15.0" fill="rgb(212,74,13)" rx="2" ry="2" />
<text  x="176.37" y="911.5" ></text>
</g>
<g >
<title>_memcmp_avx2_movbe (8 samples, 0.01%)</title><rect x="154.8" y="501" width="0.1" height="15.0" fill="rgb(215,135,48)" rx="2" ry="2" />
<text  x="157.80" y="511.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::Level&lt;T&gt;::next_occupied_slot (43 samples, 0.05%)</title><rect x="994.2" y="789" width="0.5" height="15.0" fill="rgb(250,228,17)" rx="2" ry="2" />
<text  x="997.20" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek (18 samples, 0.02%)</title><rect x="119.2" y="805" width="0.2" height="15.0" fill="rgb(249,27,31)" rx="2" ry="2" />
<text  x="122.17" y="815.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::shared_v_drop (12 samples, 0.01%)</title><rect x="44.3" y="1141" width="0.2" height="15.0" fill="rgb(216,159,21)" rx="2" ry="2" />
<text  x="47.30" y="1151.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (19 samples, 0.02%)</title><rect x="767.3" y="581" width="0.2" height="15.0" fill="rgb(246,181,25)" rx="2" ry="2" />
<text  x="770.28" y="591.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (99 samples, 0.11%)</title><rect x="330.1" y="821" width="1.2" height="15.0" fill="rgb(225,107,19)" rx="2" ry="2" />
<text  x="333.07" y="831.5" ></text>
</g>
<g >
<title>netif_rx_internal (32 samples, 0.03%)</title><rect x="625.8" y="53" width="0.4" height="15.0" fill="rgb(235,184,38)" rx="2" ry="2" />
<text  x="628.82" y="63.5" ></text>
</g>
<g >
<title>inet_recvmsg (1,184 samples, 1.27%)</title><rect x="688.6" y="741" width="14.9" height="15.0" fill="rgb(242,169,2)" rx="2" ry="2" />
<text  x="691.56" y="751.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.01%)</title><rect x="675.5" y="933" width="0.2" height="15.0" fill="rgb(208,117,50)" rx="2" ry="2" />
<text  x="678.55" y="943.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (12 samples, 0.01%)</title><rect x="599.0" y="421" width="0.2" height="15.0" fill="rgb(243,229,44)" rx="2" ry="2" />
<text  x="602.03" y="431.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (25 samples, 0.03%)</title><rect x="164.3" y="693" width="0.4" height="15.0" fill="rgb(230,50,20)" rx="2" ry="2" />
<text  x="167.35" y="703.5" ></text>
</g>
<g >
<title>actix_http::extensions::Extensions::clear (14 samples, 0.02%)</title><rect x="449.7" y="901" width="0.1" height="15.0" fill="rgb(248,138,52)" rx="2" ry="2" />
<text  x="452.67" y="911.5" ></text>
</g>
<g >
<title>ep_poll (8,208 samples, 8.81%)</title><rect x="847.7" y="677" width="103.9" height="15.0" fill="rgb(222,194,39)" rx="2" ry="2" />
<text  x="850.65" y="687.5" >ep_poll</text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="1039.1" y="261" width="0.2" height="15.0" fill="rgb(250,59,38)" rx="2" ry="2" />
<text  x="1042.07" y="271.5" ></text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (25 samples, 0.03%)</title><rect x="154.6" y="597" width="0.3" height="15.0" fill="rgb(222,188,16)" rx="2" ry="2" />
<text  x="157.59" y="607.5" ></text>
</g>
<g >
<title>kmem_cache_free (25 samples, 0.03%)</title><rect x="1158.2" y="757" width="0.3" height="15.0" fill="rgb(219,124,23)" rx="2" ry="2" />
<text  x="1161.15" y="767.5" ></text>
</g>
<g >
<title>actix_http::httpcodes::&lt;impl actix_http::response::Response&gt;::Ok (165 samples, 0.18%)</title><rect x="375.6" y="901" width="2.0" height="15.0" fill="rgb(209,193,8)" rx="2" ry="2" />
<text  x="378.55" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;serde_json::value::Value&gt;&gt; (45 samples, 0.05%)</title><rect x="380.9" y="885" width="0.6" height="15.0" fill="rgb(215,188,20)" rx="2" ry="2" />
<text  x="383.92" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,640 samples, 1.76%)</title><rect x="686.5" y="821" width="20.8" height="15.0" fill="rgb(238,67,24)" rx="2" ry="2" />
<text  x="689.50" y="831.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (707 samples, 0.76%)</title><rect x="747.3" y="581" width="8.9" height="15.0" fill="rgb(215,12,18)" rx="2" ry="2" />
<text  x="750.27" y="591.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (8 samples, 0.01%)</title><rect x="582.7" y="693" width="0.1" height="15.0" fill="rgb(218,209,4)" rx="2" ry="2" />
<text  x="585.73" y="703.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="1092.2" y="661" width="0.3" height="15.0" fill="rgb(212,174,48)" rx="2" ry="2" />
<text  x="1095.23" y="671.5" ></text>
</g>
<g >
<title>&lt;mio::event_imp::Ready as core::cmp::PartialEq&gt;::eq (18 samples, 0.02%)</title><rect x="710.4" y="885" width="0.3" height="15.0" fill="rgb(210,63,21)" rx="2" ry="2" />
<text  x="713.45" y="895.5" ></text>
</g>
<g >
<title>_mod_memcg_lruvec_state (8 samples, 0.01%)</title><rect x="1140.7" y="709" width="0.1" height="15.0" fill="rgb(217,158,21)" rx="2" ry="2" />
<text  x="1143.73" y="719.5" ></text>
</g>
<g >
<title>&lt;actix_service::and_then::AndThenServiceResponse&lt;A,B&gt; as core::future::future::Future&gt;::poll (16,095 samples, 17.27%)</title><rect x="264.0" y="1125" width="203.7" height="15.0" fill="rgb(249,144,39)" rx="2" ry="2" />
<text  x="266.98" y="1135.5" >&lt;actix_service::and_then::..</text>
</g>
<g >
<title>std::sys::unix::cvt (20 samples, 0.02%)</title><rect x="336.3" y="1013" width="0.2" height="15.0" fill="rgb(254,136,28)" rx="2" ry="2" />
<text  x="339.29" y="1023.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::dolla (92 samples, 0.10%)</title><rect x="400.6" y="805" width="1.2" height="15.0" fill="rgb(210,121,40)" rx="2" ry="2" />
<text  x="403.63" y="815.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (8 samples, 0.01%)</title><rect x="558.1" y="709" width="0.1" height="15.0" fill="rgb(224,45,16)" rx="2" ry="2" />
<text  x="561.09" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (25 samples, 0.03%)</title><rect x="42.5" y="1109" width="0.3" height="15.0" fill="rgb(235,9,37)" rx="2" ry="2" />
<text  x="45.49" y="1119.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::to_task (23 samples, 0.02%)</title><rect x="1072.2" y="533" width="0.3" height="15.0" fill="rgb(215,173,39)" rx="2" ry="2" />
<text  x="1075.19" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="523.5" y="549" width="0.3" height="15.0" fill="rgb(249,213,18)" rx="2" ry="2" />
<text  x="526.54" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (25 samples, 0.03%)</title><rect x="361.0" y="885" width="0.3" height="15.0" fill="rgb(209,228,17)" rx="2" ry="2" />
<text  x="363.97" y="895.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (12 samples, 0.01%)</title><rect x="703.4" y="725" width="0.1" height="15.0" fill="rgb(216,19,14)" rx="2" ry="2" />
<text  x="706.39" y="735.5" ></text>
</g>
<g >
<title>_GI___libc_free (11 samples, 0.01%)</title><rect x="131.4" y="789" width="0.2" height="15.0" fill="rgb(247,66,22)" rx="2" ry="2" />
<text  x="134.43" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tinyvec::tinyvec::TinyVec&lt;[alloc::rc::Rc&lt;actix_http::extensions::Extensions&gt;: 4]&gt;&gt; (108 samples, 0.12%)</title><rect x="367.1" y="1013" width="1.3" height="15.0" fill="rgb(245,173,43)" rx="2" ry="2" />
<text  x="370.07" y="1023.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_array (12 samples, 0.01%)</title><rect x="419.5" y="789" width="0.1" height="15.0" fill="rgb(209,212,6)" rx="2" ry="2" />
<text  x="422.49" y="799.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.02%)</title><rect x="67.3" y="965" width="0.2" height="15.0" fill="rgb(207,182,18)" rx="2" ry="2" />
<text  x="70.32" y="975.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (13 samples, 0.01%)</title><rect x="553.6" y="693" width="0.2" height="15.0" fill="rgb(216,108,20)" rx="2" ry="2" />
<text  x="556.59" y="703.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (13 samples, 0.01%)</title><rect x="210.0" y="597" width="0.2" height="15.0" fill="rgb(228,199,6)" rx="2" ry="2" />
<text  x="212.99" y="607.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (118 samples, 0.13%)</title><rect x="128.5" y="757" width="1.5" height="15.0" fill="rgb(213,114,24)" rx="2" ry="2" />
<text  x="131.47" y="767.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (17 samples, 0.02%)</title><rect x="37.1" y="1029" width="0.2" height="15.0" fill="rgb(228,38,39)" rx="2" ry="2" />
<text  x="40.06" y="1039.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (33 samples, 0.04%)</title><rect x="1115.9" y="693" width="0.5" height="15.0" fill="rgb(237,1,50)" rx="2" ry="2" />
<text  x="1118.95" y="703.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="44.7" y="1109" width="0.3" height="15.0" fill="rgb(233,166,22)" rx="2" ry="2" />
<text  x="47.73" y="1119.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (125 samples, 0.13%)</title><rect x="1039.6" y="213" width="1.5" height="15.0" fill="rgb(234,184,52)" rx="2" ry="2" />
<text  x="1042.57" y="223.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,489 samples, 5.89%)</title><rect x="1014.3" y="837" width="69.5" height="15.0" fill="rgb(241,46,38)" rx="2" ry="2" />
<text  x="1017.34" y="847.5" >std::th..</text>
</g>
<g >
<title>tokio::io::driver::Driver::turn (54 samples, 0.06%)</title><rect x="975.3" y="821" width="0.7" height="15.0" fill="rgb(225,108,19)" rx="2" ry="2" />
<text  x="978.30" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::transition_to_complete (57 samples, 0.06%)</title><rect x="484.7" y="661" width="0.7" height="15.0" fill="rgb(227,102,10)" rx="2" ry="2" />
<text  x="487.68" y="671.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (77 samples, 0.08%)</title><rect x="210.2" y="613" width="0.9" height="15.0" fill="rgb(225,159,35)" rx="2" ry="2" />
<text  x="213.17" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (363 samples, 0.39%)</title><rect x="73.5" y="853" width="4.6" height="15.0" fill="rgb(222,162,7)" rx="2" ry="2" />
<text  x="76.48" y="863.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (29 samples, 0.03%)</title><rect x="441.5" y="949" width="0.3" height="15.0" fill="rgb(230,91,5)" rx="2" ry="2" />
<text  x="444.46" y="959.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (11 samples, 0.01%)</title><rect x="603.2" y="357" width="0.1" height="15.0" fill="rgb(246,96,7)" rx="2" ry="2" />
<text  x="606.18" y="367.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term_num (334 samples, 0.36%)</title><rect x="102.2" y="853" width="4.2" height="15.0" fill="rgb(228,173,21)" rx="2" ry="2" />
<text  x="105.15" y="863.5" ></text>
</g>
<g >
<title>resched_curr (44 samples, 0.05%)</title><rect x="1109.0" y="213" width="0.6" height="15.0" fill="rgb(239,57,51)" rx="2" ry="2" />
<text  x="1112.00" y="223.5" ></text>
</g>
<g >
<title>pipe_read (379 samples, 0.41%)</title><rect x="824.3" y="581" width="4.8" height="15.0" fill="rgb(236,76,38)" rx="2" ry="2" />
<text  x="827.31" y="591.5" ></text>
</g>
<g >
<title>actix_rt::arbiter::RUNNING::_getit (53 samples, 0.06%)</title><rect x="503.7" y="1221" width="0.7" height="15.0" fill="rgb(217,38,31)" rx="2" ry="2" />
<text  x="506.71" y="1231.5" ></text>
</g>
<g >
<title>tokio::time::driver::entry::is_elapsed (11 samples, 0.01%)</title><rect x="678.2" y="933" width="0.1" height="15.0" fill="rgb(234,33,25)" rx="2" ry="2" />
<text  x="681.18" y="943.5" ></text>
</g>
<g >
<title>ryu::d2s_intrinsics::div100 (10 samples, 0.01%)</title><rect x="433.1" y="597" width="0.1" height="15.0" fill="rgb(230,225,33)" rx="2" ry="2" />
<text  x="436.09" y="607.5" ></text>
</g>
<g >
<title>ktime_get (10 samples, 0.01%)</title><rect x="629.3" y="309" width="0.1" height="15.0" fill="rgb(227,180,49)" rx="2" ry="2" />
<text  x="632.30" y="319.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path (13 samples, 0.01%)</title><rect x="398.3" y="821" width="0.2" height="15.0" fill="rgb(245,167,24)" rx="2" ry="2" />
<text  x="401.29" y="831.5" ></text>
</g>
<g >
<title>&lt;tokio::io::driver::scheduled_io::ScheduledIo as tokio::util::slab::entry::Entry&gt;::reset (108 samples, 0.12%)</title><rect x="791.2" y="693" width="1.4" height="15.0" fill="rgb(221,146,48)" rx="2" ry="2" />
<text  x="794.22" y="703.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_and_swap (8 samples, 0.01%)</title><rect x="815.2" y="757" width="0.1" height="15.0" fill="rgb(211,57,54)" rx="2" ry="2" />
<text  x="818.22" y="767.5" ></text>
</g>
<g >
<title>fd_install (15 samples, 0.02%)</title><rect x="1122.7" y="805" width="0.2" height="15.0" fill="rgb(253,123,42)" rx="2" ry="2" />
<text  x="1125.68" y="815.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.01%)</title><rect x="1022.1" y="485" width="0.1" height="15.0" fill="rgb(229,59,33)" rx="2" ry="2" />
<text  x="1025.11" y="495.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (10 samples, 0.01%)</title><rect x="56.3" y="629" width="0.1" height="15.0" fill="rgb(246,106,53)" rx="2" ry="2" />
<text  x="59.32" y="639.5" ></text>
</g>
<g >
<title>_GI___clock_gettime (56 samples, 0.06%)</title><rect x="1187.6" y="949" width="0.7" height="15.0" fill="rgb(242,51,45)" rx="2" ry="2" />
<text  x="1190.58" y="959.5" ></text>
</g>
<g >
<title>core::pin::Pin&lt;P&gt;::set (9 samples, 0.01%)</title><rect x="435.4" y="933" width="0.1" height="15.0" fill="rgb(247,123,21)" rx="2" ry="2" />
<text  x="438.36" y="943.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek_char (13 samples, 0.01%)</title><rect x="96.7" y="789" width="0.2" height="15.0" fill="rgb(216,162,30)" rx="2" ry="2" />
<text  x="99.72" y="799.5" ></text>
</g>
<g >
<title>&lt;actix_http::body::ResponseBody&lt;B&gt; as actix_http::body::MessageBody&gt;::size (86 samples, 0.09%)</title><rect x="439.5" y="1029" width="1.1" height="15.0" fill="rgb(241,10,2)" rx="2" ry="2" />
<text  x="442.50" y="1039.5" ></text>
</g>
<g >
<title>sock_alloc_inode (13 samples, 0.01%)</title><rect x="1137.6" y="773" width="0.2" height="15.0" fill="rgb(212,171,5)" rx="2" ry="2" />
<text  x="1140.63" y="783.5" ></text>
</g>
<g >
<title>fsnotify (38 samples, 0.04%)</title><rect x="831.8" y="565" width="0.5" height="15.0" fill="rgb(246,5,15)" rx="2" ry="2" />
<text  x="834.78" y="575.5" ></text>
</g>
<g >
<title>copy_from_iter_full (120 samples, 0.13%)</title><rect x="565.4" y="757" width="1.5" height="15.0" fill="rgb(231,3,52)" rx="2" ry="2" />
<text  x="568.39" y="767.5" ></text>
</g>
<g >
<title>ryu::d2s::decimal_length17 (14 samples, 0.02%)</title><rect x="433.8" y="613" width="0.2" height="15.0" fill="rgb(244,216,52)" rx="2" ry="2" />
<text  x="436.78" y="623.5" ></text>
</g>
<g >
<title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (16,978 samples, 18.21%)</title><rect x="795.1" y="885" width="214.9" height="15.0" fill="rgb(223,33,35)" rx="2" ry="2" />
<text  x="798.08" y="895.5" >&lt;tokio::park::either::Either..</text>
</g>
<g >
<title>_put_user_nocheck_4 (101 samples, 0.11%)</title><rect x="845.4" y="677" width="1.3" height="15.0" fill="rgb(238,151,40)" rx="2" ry="2" />
<text  x="848.37" y="687.5" ></text>
</g>
<g >
<title>_mod_memcg_lruvec_state (20 samples, 0.02%)</title><rect x="745.6" y="549" width="0.2" height="15.0" fill="rgb(243,172,8)" rx="2" ry="2" />
<text  x="748.57" y="559.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (205 samples, 0.22%)</title><rect x="59.9" y="725" width="2.6" height="15.0" fill="rgb(250,13,49)" rx="2" ry="2" />
<text  x="62.91" y="735.5" ></text>
</g>
<g >
<title>allocate_slab (38 samples, 0.04%)</title><rect x="1134.7" y="693" width="0.5" height="15.0" fill="rgb(238,100,15)" rx="2" ry="2" />
<text  x="1137.73" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;actix_http::h1::dispatcher::DispatcherMessage&gt;&gt; (136 samples, 0.15%)</title><rect x="718.3" y="901" width="1.7" height="15.0" fill="rgb(234,28,5)" rx="2" ry="2" />
<text  x="721.32" y="911.5" ></text>
</g>
<g >
<title>_alloc_skb (245 samples, 0.26%)</title><rect x="292.2" y="869" width="3.1" height="15.0" fill="rgb(224,215,19)" rx="2" ry="2" />
<text  x="295.22" y="879.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (142 samples, 0.15%)</title><rect x="196.2" y="549" width="1.8" height="15.0" fill="rgb(250,128,6)" rx="2" ry="2" />
<text  x="199.22" y="559.5" ></text>
</g>
<g >
<title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="1021.8" y="517" width="0.4" height="15.0" fill="rgb(216,118,0)" rx="2" ry="2" />
<text  x="1024.81" y="527.5" ></text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::upgrade (21 samples, 0.02%)</title><rect x="273.2" y="917" width="0.3" height="15.0" fill="rgb(239,198,25)" rx="2" ry="2" />
<text  x="276.20" y="927.5" ></text>
</g>
<g >
<title>tcache_get (31 samples, 0.03%)</title><rect x="99.8" y="773" width="0.4" height="15.0" fill="rgb(230,5,33)" rx="2" ry="2" />
<text  x="102.77" y="783.5" ></text>
</g>
<g >
<title>_kfree_skb_flush (14 samples, 0.02%)</title><rect x="593.0" y="501" width="0.1" height="15.0" fill="rgb(207,165,20)" rx="2" ry="2" />
<text  x="595.96" y="511.5" ></text>
</g>
<g >
<title>ipv4_mtu (24 samples, 0.03%)</title><rect x="332.3" y="853" width="0.3" height="15.0" fill="rgb(241,115,48)" rx="2" ry="2" />
<text  x="335.32" y="863.5" ></text>
</g>
<g >
<title>_GI___libc_free (12 samples, 0.01%)</title><rect x="367.7" y="901" width="0.2" height="15.0" fill="rgb(229,29,5)" rx="2" ry="2" />
<text  x="370.70" y="911.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::slot_range (11 samples, 0.01%)</title><rect x="994.6" y="773" width="0.1" height="15.0" fill="rgb(250,46,10)" rx="2" ry="2" />
<text  x="997.60" y="783.5" ></text>
</g>
<g >
<title>native_sched_clock (61 samples, 0.07%)</title><rect x="1184.2" y="741" width="0.7" height="15.0" fill="rgb(230,80,24)" rx="2" ry="2" />
<text  x="1187.18" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::coop::with_budget::ResetGuard&gt; (90 samples, 0.10%)</title><rect x="1015.3" y="805" width="1.1" height="15.0" fill="rgb(229,65,49)" rx="2" ry="2" />
<text  x="1018.26" y="815.5" ></text>
</g>
<g >
<title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (1,573 samples, 1.69%)</title><rect x="244.1" y="1221" width="19.9" height="15.0" fill="rgb(219,81,9)" rx="2" ry="2" />
<text  x="247.07" y="1231.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::wakeup (33 samples, 0.04%)</title><rect x="1115.9" y="661" width="0.5" height="15.0" fill="rgb(225,217,40)" rx="2" ry="2" />
<text  x="1118.95" y="671.5" ></text>
</g>
<g >
<title>unlink_chunk (36 samples, 0.04%)</title><rect x="86.5" y="725" width="0.5" height="15.0" fill="rgb(208,66,41)" rx="2" ry="2" />
<text  x="89.50" y="735.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (19 samples, 0.02%)</title><rect x="414.8" y="741" width="0.2" height="15.0" fill="rgb(217,70,54)" rx="2" ry="2" />
<text  x="417.79" y="751.5" ></text>
</g>
<g >
<title>mod_timer (101 samples, 0.11%)</title><rect x="310.3" y="389" width="1.3" height="15.0" fill="rgb(213,89,16)" rx="2" ry="2" />
<text  x="313.35" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::selector::terms::FilterTerms&gt; (9 samples, 0.01%)</title><rect x="395.7" y="885" width="0.2" height="15.0" fill="rgb(228,73,53)" rx="2" ry="2" />
<text  x="398.74" y="895.5" ></text>
</g>
<g >
<title>_slab_free (37 samples, 0.04%)</title><rect x="696.5" y="613" width="0.5" height="15.0" fill="rgb(232,98,25)" rx="2" ry="2" />
<text  x="699.53" y="623.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (28 samples, 0.03%)</title><rect x="1116.4" y="1013" width="0.3" height="15.0" fill="rgb(223,95,38)" rx="2" ry="2" />
<text  x="1119.37" y="1023.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3,425 samples, 3.67%)</title><rect x="600.5" y="421" width="43.3" height="15.0" fill="rgb(240,66,44)" rx="2" ry="2" />
<text  x="603.46" y="431.5" >ip_r..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="792.3" y="677" width="0.2" height="15.0" fill="rgb(244,116,21)" rx="2" ry="2" />
<text  x="795.33" y="687.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (74 samples, 0.08%)</title><rect x="206.1" y="549" width="1.0" height="15.0" fill="rgb(237,122,17)" rx="2" ry="2" />
<text  x="209.13" y="559.5" ></text>
</g>
<g >
<title>&lt;actix_server::service::StreamService&lt;T&gt; as actix_service::Service&gt;::poll_ready (247 samples, 0.26%)</title><rect x="1064.6" y="325" width="3.1" height="15.0" fill="rgb(246,17,9)" rx="2" ry="2" />
<text  x="1067.58" y="335.5" ></text>
</g>
<g >
<title>sched_clock_cpu (63 samples, 0.07%)</title><rect x="1184.2" y="757" width="0.7" height="15.0" fill="rgb(228,194,20)" rx="2" ry="2" />
<text  x="1187.15" y="767.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (40 samples, 0.04%)</title><rect x="126.4" y="725" width="0.5" height="15.0" fill="rgb(207,69,22)" rx="2" ry="2" />
<text  x="129.43" y="735.5" ></text>
</g>
<g >
<title>ep_item_pol.sr. (25 samples, 0.03%)</title><rect x="1162.8" y="885" width="0.4" height="15.0" fill="rgb(218,67,27)" rx="2" ry="2" />
<text  x="1165.85" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (257 samples, 0.28%)</title><rect x="519.6" y="517" width="3.3" height="15.0" fill="rgb(228,134,27)" rx="2" ry="2" />
<text  x="522.61" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt; (167 samples, 0.18%)</title><rect x="39.0" y="997" width="2.1" height="15.0" fill="rgb(233,44,2)" rx="2" ry="2" />
<text  x="42.01" y="1007.5" ></text>
</g>
<g >
<title>&lt;mio::poll::RegistrationInner as core::ops::deref::Deref&gt;::deref (9 samples, 0.01%)</title><rect x="273.1" y="901" width="0.1" height="15.0" fill="rgb(220,223,4)" rx="2" ry="2" />
<text  x="276.07" y="911.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (52 samples, 0.06%)</title><rect x="177.8" y="517" width="0.6" height="15.0" fill="rgb(232,54,49)" rx="2" ry="2" />
<text  x="180.75" y="527.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,128 samples, 2.28%)</title><rect x="237.0" y="1253" width="27.0" height="15.0" fill="rgb(251,58,28)" rx="2" ry="2" />
<text  x="240.04" y="1263.5" >&lt;..</text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_ready (1,573 samples, 1.69%)</title><rect x="244.1" y="741" width="19.9" height="15.0" fill="rgb(214,214,13)" rx="2" ry="2" />
<text  x="247.07" y="751.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (19 samples, 0.02%)</title><rect x="116.8" y="885" width="0.3" height="15.0" fill="rgb(208,69,42)" rx="2" ry="2" />
<text  x="119.81" y="895.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (78 samples, 0.08%)</title><rect x="242.4" y="789" width="1.0" height="15.0" fill="rgb(249,25,29)" rx="2" ry="2" />
<text  x="245.37" y="799.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_write_ready (165 samples, 0.18%)</title><rect x="336.9" y="1013" width="2.1" height="15.0" fill="rgb(249,90,42)" rx="2" ry="2" />
<text  x="339.88" y="1023.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (10 samples, 0.01%)</title><rect x="263.2" y="597" width="0.1" height="15.0" fill="rgb(236,202,33)" rx="2" ry="2" />
<text  x="266.22" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="814.7" y="741" width="0.1" height="15.0" fill="rgb(208,179,39)" rx="2" ry="2" />
<text  x="817.68" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::selector::terms::ExprTerm&gt; (26 samples, 0.03%)</title><rect x="137.1" y="917" width="0.4" height="15.0" fill="rgb(234,104,39)" rx="2" ry="2" />
<text  x="140.14" y="927.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (395 samples, 0.42%)</title><rect x="1056.0" y="293" width="5.0" height="15.0" fill="rgb(226,182,37)" rx="2" ry="2" />
<text  x="1059.00" y="303.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (74 samples, 0.08%)</title><rect x="567.2" y="757" width="1.0" height="15.0" fill="rgb(212,58,47)" rx="2" ry="2" />
<text  x="570.23" y="767.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (15 samples, 0.02%)</title><rect x="457.0" y="997" width="0.2" height="15.0" fill="rgb(209,87,14)" rx="2" ry="2" />
<text  x="460.02" y="1007.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::{{closure}} (331 samples, 0.36%)</title><rect x="525.1" y="1109" width="4.2" height="15.0" fill="rgb(227,27,26)" rx="2" ry="2" />
<text  x="528.14" y="1119.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (103 samples, 0.11%)</title><rect x="227.9" y="853" width="1.3" height="15.0" fill="rgb(227,90,37)" rx="2" ry="2" />
<text  x="230.94" y="863.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (63 samples, 0.07%)</title><rect x="382.7" y="709" width="0.8" height="15.0" fill="rgb(223,23,49)" rx="2" ry="2" />
<text  x="385.68" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,781 samples, 2.98%)</title><rect x="735.1" y="709" width="35.2" height="15.0" fill="rgb(218,34,39)" rx="2" ry="2" />
<text  x="738.07" y="719.5" >do..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (316 samples, 0.34%)</title><rect x="155.2" y="677" width="4.0" height="15.0" fill="rgb(248,213,33)" rx="2" ry="2" />
<text  x="158.22" y="687.5" ></text>
</g>
<g >
<title>tokio::task::local::Shared::schedule::{{closure}} (132 samples, 0.14%)</title><rect x="971.7" y="645" width="1.7" height="15.0" fill="rgb(237,46,29)" rx="2" ry="2" />
<text  x="974.69" y="655.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::exprs (1,199 samples, 1.29%)</title><rect x="78.1" y="885" width="15.2" height="15.0" fill="rgb(245,7,20)" rx="2" ry="2" />
<text  x="81.08" y="895.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (52 samples, 0.06%)</title><rect x="177.8" y="421" width="0.6" height="15.0" fill="rgb(230,161,44)" rx="2" ry="2" />
<text  x="180.75" y="431.5" ></text>
</g>
<g >
<title>update_load_avg (94 samples, 0.10%)</title><rect x="1103.8" y="213" width="1.2" height="15.0" fill="rgb(243,31,15)" rx="2" ry="2" />
<text  x="1106.78" y="223.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::cmp::CmpAnd as jsonpath_lib::selector::cmp::Cmp&gt;::cmp_json (118 samples, 0.13%)</title><rect x="138.4" y="869" width="1.5" height="15.0" fill="rgb(242,77,3)" rx="2" ry="2" />
<text  x="141.43" y="879.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,045 samples, 13.99%)</title><rect x="67.1" y="1061" width="165.1" height="15.0" fill="rgb(249,202,20)" rx="2" ry="2" />
<text  x="70.06" y="1071.5" >&lt;core::future::from_g..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;actix_web::service::ServiceResponse,actix_http::error::Error&gt;&gt;&gt; (249 samples, 0.27%)</title><rect x="450.8" y="997" width="3.1" height="15.0" fill="rgb(231,136,15)" rx="2" ry="2" />
<text  x="453.79" y="1007.5" ></text>
</g>
<g >
<title>inode_has_buffers (22 samples, 0.02%)</title><rect x="752.9" y="517" width="0.3" height="15.0" fill="rgb(238,24,36)" rx="2" ry="2" />
<text  x="755.94" y="527.5" ></text>
</g>
<g >
<title>x86_pmu_disable (12 samples, 0.01%)</title><rect x="1178.8" y="805" width="0.1" height="15.0" fill="rgb(241,130,38)" rx="2" ry="2" />
<text  x="1181.78" y="815.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::Level&lt;T&gt;::remove_entry (152 samples, 0.16%)</title><rect x="1003.6" y="805" width="1.9" height="15.0" fill="rgb(248,216,46)" rx="2" ry="2" />
<text  x="1006.60" y="815.5" ></text>
</g>
<g >
<title>core::time::Duration::new (20 samples, 0.02%)</title><rect x="798.4" y="789" width="0.2" height="15.0" fill="rgb(251,127,8)" rx="2" ry="2" />
<text  x="801.38" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (119 samples, 0.13%)</title><rect x="427.5" y="549" width="1.5" height="15.0" fill="rgb(210,163,31)" rx="2" ry="2" />
<text  x="430.49" y="559.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::PathParser::parse::{{closure}} (19 samples, 0.02%)</title><rect x="239.2" y="917" width="0.2" height="15.0" fill="rgb(233,115,28)" rx="2" ry="2" />
<text  x="242.18" y="927.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::utils::to_path_str (18 samples, 0.02%)</title><rect x="185.6" y="869" width="0.3" height="15.0" fill="rgb(227,159,24)" rx="2" ry="2" />
<text  x="188.65" y="879.5" ></text>
</g>
<g >
<title>tokio::util::slab::slot::Slot&lt;T&gt;::set_next (16 samples, 0.02%)</title><rect x="792.6" y="709" width="0.2" height="15.0" fill="rgb(207,79,4)" rx="2" ry="2" />
<text  x="795.59" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (83 samples, 0.09%)</title><rect x="187.9" y="645" width="1.1" height="15.0" fill="rgb(240,82,6)" rx="2" ry="2" />
<text  x="190.94" y="655.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (126 samples, 0.14%)</title><rect x="526.7" y="581" width="1.6" height="15.0" fill="rgb(212,1,9)" rx="2" ry="2" />
<text  x="529.75" y="591.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (22,826 samples, 24.49%)</title><rect x="795.0" y="1173" width="288.9" height="15.0" fill="rgb(235,62,54)" rx="2" ry="2" />
<text  x="797.97" y="1183.5" >std::panic::catch_unwind</text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (52 samples, 0.06%)</title><rect x="1060.3" y="277" width="0.7" height="15.0" fill="rgb(216,67,47)" rx="2" ry="2" />
<text  x="1063.34" y="287.5" ></text>
</g>
<g >
<title>_skb_clone (16 samples, 0.02%)</title><rect x="327.6" y="805" width="0.2" height="15.0" fill="rgb(252,10,54)" rx="2" ry="2" />
<text  x="330.60" y="815.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (8 samples, 0.01%)</title><rect x="240.0" y="901" width="0.1" height="15.0" fill="rgb(237,158,50)" rx="2" ry="2" />
<text  x="242.99" y="911.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (22 samples, 0.02%)</title><rect x="1076.6" y="661" width="0.3" height="15.0" fill="rgb(237,144,34)" rx="2" ry="2" />
<text  x="1079.62" y="671.5" ></text>
</g>
<g >
<title>_slab_free (8 samples, 0.01%)</title><rect x="781.2" y="597" width="0.1" height="15.0" fill="rgb(238,116,15)" rx="2" ry="2" />
<text  x="784.23" y="607.5" ></text>
</g>
<g >
<title>_const_udelay (484 samples, 0.52%)</title><rect x="1165.2" y="741" width="6.2" height="15.0" fill="rgb(250,169,24)" rx="2" ry="2" />
<text  x="1168.24" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (10 samples, 0.01%)</title><rect x="106.1" y="741" width="0.2" height="15.0" fill="rgb(222,212,6)" rx="2" ry="2" />
<text  x="109.13" y="751.5" ></text>
</g>
<g >
<title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (123 samples, 0.13%)</title><rect x="28.7" y="1125" width="1.6" height="15.0" fill="rgb(249,64,43)" rx="2" ry="2" />
<text  x="31.72" y="1135.5" ></text>
</g>
<g >
<title>_sysvec_call_function (8 samples, 0.01%)</title><rect x="975.9" y="581" width="0.1" height="15.0" fill="rgb(254,140,14)" rx="2" ry="2" />
<text  x="978.88" y="591.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (16 samples, 0.02%)</title><rect x="1153.6" y="709" width="0.2" height="15.0" fill="rgb(222,110,6)" rx="2" ry="2" />
<text  x="1156.63" y="719.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="503.6" y="1045" width="0.1" height="15.0" fill="rgb(246,124,21)" rx="2" ry="2" />
<text  x="506.59" y="1055.5" ></text>
</g>
<g >
<title>newidle_balance (10 samples, 0.01%)</title><rect x="1185.1" y="821" width="0.1" height="15.0" fill="rgb(216,110,48)" rx="2" ry="2" />
<text  x="1188.09" y="831.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="44.2" y="1157" width="0.3" height="15.0" fill="rgb(227,192,28)" rx="2" ry="2" />
<text  x="47.19" y="1167.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::message::BoxedResponseHead&gt; (57 samples, 0.06%)</title><rect x="449.5" y="997" width="0.7" height="15.0" fill="rgb(213,170,38)" rx="2" ry="2" />
<text  x="452.53" y="1007.5" ></text>
</g>
<g >
<title>inet_shutdown (3,616 samples, 3.88%)</title><rect x="287.3" y="917" width="45.8" height="15.0" fill="rgb(230,147,3)" rx="2" ry="2" />
<text  x="290.28" y="927.5" >inet..</text>
</g>
<g >
<title>&lt;actix_http::h1::codec::Codec as tokio_util::codec::decoder::Decoder&gt;::decode (25 samples, 0.03%)</title><rect x="238.5" y="1157" width="0.3" height="15.0" fill="rgb(226,72,12)" rx="2" ry="2" />
<text  x="241.50" y="1167.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::header::name::Repr&lt;http::header::name::Custom&gt;&gt; (45 samples, 0.05%)</title><rect x="40.6" y="965" width="0.5" height="15.0" fill="rgb(212,95,17)" rx="2" ry="2" />
<text  x="43.56" y="975.5" ></text>
</g>
<g >
<title>_x64_sys_read (1,047 samples, 1.12%)</title><rect x="819.2" y="645" width="13.2" height="15.0" fill="rgb(215,187,30)" rx="2" ry="2" />
<text  x="822.18" y="655.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (86 samples, 0.09%)</title><rect x="146.0" y="757" width="1.1" height="15.0" fill="rgb(242,111,40)" rx="2" ry="2" />
<text  x="149.04" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term (304 samples, 0.33%)</title><rect x="468.9" y="901" width="3.8" height="15.0" fill="rgb(228,19,51)" rx="2" ry="2" />
<text  x="471.90" y="911.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (9 samples, 0.01%)</title><rect x="373.8" y="933" width="0.1" height="15.0" fill="rgb(250,11,46)" rx="2" ry="2" />
<text  x="376.81" y="943.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (8 samples, 0.01%)</title><rect x="678.1" y="805" width="0.1" height="15.0" fill="rgb(206,79,15)" rx="2" ry="2" />
<text  x="681.08" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::time::driver::atomic_stack::AtomicStackEntries&gt; (71 samples, 0.08%)</title><rect x="998.9" y="837" width="0.9" height="15.0" fill="rgb(209,78,7)" rx="2" ry="2" />
<text  x="1001.92" y="847.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (19 samples, 0.02%)</title><rect x="126.5" y="693" width="0.2" height="15.0" fill="rgb(228,173,42)" rx="2" ry="2" />
<text  x="129.46" y="703.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (43 samples, 0.05%)</title><rect x="185.0" y="757" width="0.6" height="15.0" fill="rgb(214,44,49)" rx="2" ry="2" />
<text  x="188.04" y="767.5" ></text>
</g>
<g >
<title>call_rcu (37 samples, 0.04%)</title><rect x="752.5" y="517" width="0.4" height="15.0" fill="rgb(234,39,28)" rx="2" ry="2" />
<text  x="755.47" y="527.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (8 samples, 0.01%)</title><rect x="1083.9" y="1061" width="0.1" height="15.0" fill="rgb(223,17,40)" rx="2" ry="2" />
<text  x="1086.93" y="1071.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::poll (3,458 samples, 3.71%)</title><rect x="1032.5" y="565" width="43.8" height="15.0" fill="rgb(211,94,30)" rx="2" ry="2" />
<text  x="1035.54" y="575.5" >toki..</text>
</g>
<g >
<title>http::uri::Uri::path (15 samples, 0.02%)</title><rect x="356.0" y="917" width="0.2" height="15.0" fill="rgb(223,160,46)" rx="2" ry="2" />
<text  x="359.03" y="927.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::write (33 samples, 0.04%)</title><rect x="1115.9" y="613" width="0.5" height="15.0" fill="rgb(221,106,50)" rx="2" ry="2" />
<text  x="1118.95" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::other (17 samples, 0.02%)</title><rect x="101.7" y="773" width="0.2" height="15.0" fill="rgb(225,63,25)" rx="2" ry="2" />
<text  x="104.67" y="783.5" ></text>
</g>
<g >
<title>_wake_up_common (155 samples, 0.17%)</title><rect x="634.9" y="229" width="1.9" height="15.0" fill="rgb(249,210,10)" rx="2" ry="2" />
<text  x="637.89" y="239.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (205 samples, 0.22%)</title><rect x="421.8" y="661" width="2.6" height="15.0" fill="rgb(208,150,8)" rx="2" ry="2" />
<text  x="424.82" y="671.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (309 samples, 0.33%)</title><rect x="73.6" y="805" width="3.9" height="15.0" fill="rgb(247,195,51)" rx="2" ry="2" />
<text  x="76.57" y="815.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (75 samples, 0.08%)</title><rect x="68.5" y="917" width="0.9" height="15.0" fill="rgb(229,4,43)" rx="2" ry="2" />
<text  x="71.47" y="927.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (59 samples, 0.06%)</title><rect x="214.8" y="581" width="0.8" height="15.0" fill="rgb(249,179,30)" rx="2" ry="2" />
<text  x="217.81" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (24 samples, 0.03%)</title><rect x="31.7" y="1109" width="0.3" height="15.0" fill="rgb(206,10,23)" rx="2" ry="2" />
<text  x="34.73" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (200 samples, 0.21%)</title><rect x="225.4" y="725" width="2.5" height="15.0" fill="rgb(237,196,18)" rx="2" ry="2" />
<text  x="228.37" y="735.5" ></text>
</g>
<g >
<title>unlink_chunk (9 samples, 0.01%)</title><rect x="502.1" y="933" width="0.1" height="15.0" fill="rgb(206,46,42)" rx="2" ry="2" />
<text  x="505.12" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (30 samples, 0.03%)</title><rect x="361.3" y="965" width="0.4" height="15.0" fill="rgb(231,222,22)" rx="2" ry="2" />
<text  x="364.31" y="975.5" ></text>
</g>
<g >
<title>int_memalign (218 samples, 0.23%)</title><rect x="269.0" y="837" width="2.7" height="15.0" fill="rgb(234,64,40)" rx="2" ry="2" />
<text  x="271.95" y="847.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (21 samples, 0.02%)</title><rect x="167.6" y="789" width="0.3" height="15.0" fill="rgb(231,159,45)" rx="2" ry="2" />
<text  x="170.65" y="799.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::none (20 samples, 0.02%)</title><rect x="675.0" y="933" width="0.3" height="15.0" fill="rgb(211,78,29)" rx="2" ry="2" />
<text  x="678.04" y="943.5" ></text>
</g>
<g >
<title>skb_free_head (172 samples, 0.18%)</title><rect x="694.9" y="645" width="2.1" height="15.0" fill="rgb(221,54,16)" rx="2" ry="2" />
<text  x="697.85" y="655.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (190 samples, 0.20%)</title><rect x="377.7" y="885" width="2.4" height="15.0" fill="rgb(224,119,2)" rx="2" ry="2" />
<text  x="380.68" y="895.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (327 samples, 0.35%)</title><rect x="193.9" y="613" width="4.1" height="15.0" fill="rgb(230,64,39)" rx="2" ry="2" />
<text  x="196.88" y="623.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::codec::Codec as tokio_util::codec::decoder::Decoder&gt;::decode (79 samples, 0.08%)</title><rect x="342.2" y="1061" width="1.0" height="15.0" fill="rgb(219,167,50)" rx="2" ry="2" />
<text  x="345.20" y="1071.5" ></text>
</g>
<g >
<title>raw_write_lock_irq (32 samples, 0.03%)</title><rect x="855.1" y="661" width="0.4" height="15.0" fill="rgb(245,105,42)" rx="2" ry="2" />
<text  x="858.07" y="671.5" ></text>
</g>
<g >
<title>core::ptr::write (10 samples, 0.01%)</title><rect x="30.5" y="1061" width="0.1" height="15.0" fill="rgb(243,138,49)" rx="2" ry="2" />
<text  x="33.48" y="1071.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::drop_waker (50 samples, 0.05%)</title><rect x="1062.8" y="261" width="0.6" height="15.0" fill="rgb(211,69,41)" rx="2" ry="2" />
<text  x="1065.78" y="271.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_read_ready (55 samples, 0.06%)</title><rect x="243.4" y="1077" width="0.7" height="15.0" fill="rgb(246,39,11)" rx="2" ry="2" />
<text  x="246.37" y="1087.5" ></text>
</g>
<g >
<title>&lt;tokio::time::driver::stack::Stack as tokio::time::wheel::stack::Stack&gt;::is_empty (14 samples, 0.02%)</title><rect x="1003.9" y="789" width="0.2" height="15.0" fill="rgb(252,70,39)" rx="2" ry="2" />
<text  x="1006.92" y="799.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (11 samples, 0.01%)</title><rect x="377.5" y="789" width="0.1" height="15.0" fill="rgb(236,225,42)" rx="2" ry="2" />
<text  x="380.50" y="799.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (382 samples, 0.41%)</title><rect x="159.5" y="773" width="4.8" height="15.0" fill="rgb(225,115,21)" rx="2" ry="2" />
<text  x="162.50" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (71 samples, 0.08%)</title><rect x="122.3" y="917" width="0.9" height="15.0" fill="rgb(227,214,54)" rx="2" ry="2" />
<text  x="125.31" y="927.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll (2,172 samples, 2.33%)</title><rect x="1160.8" y="1045" width="27.5" height="15.0" fill="rgb(226,83,47)" rx="2" ry="2" />
<text  x="1163.80" y="1055.5" >m..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (14 samples, 0.02%)</title><rect x="30.7" y="1093" width="0.2" height="15.0" fill="rgb(205,211,41)" rx="2" ry="2" />
<text  x="33.70" y="1103.5" ></text>
</g>
<g >
<title>tokio::util::slab::page::Shared&lt;T&gt;::get (11 samples, 0.01%)</title><rect x="338.6" y="933" width="0.2" height="15.0" fill="rgb(219,109,53)" rx="2" ry="2" />
<text  x="341.61" y="943.5" ></text>
</g>
<g >
<title>_GI___pthread_mutex_unlock (35 samples, 0.04%)</title><rect x="788.8" y="757" width="0.4" height="15.0" fill="rgb(224,166,39)" rx="2" ry="2" />
<text  x="791.80" y="767.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="1115.1" y="789" width="0.3" height="15.0" fill="rgb(217,120,31)" rx="2" ry="2" />
<text  x="1118.12" y="799.5" ></text>
</g>
<g >
<title>fput_many (10 samples, 0.01%)</title><rect x="1150.6" y="821" width="0.1" height="15.0" fill="rgb(209,104,41)" rx="2" ry="2" />
<text  x="1153.58" y="831.5" ></text>
</g>
<g >
<title>mutex_lock (27 samples, 0.03%)</title><rect x="854.6" y="661" width="0.4" height="15.0" fill="rgb(231,111,45)" rx="2" ry="2" />
<text  x="857.63" y="671.5" ></text>
</g>
<g >
<title>std::panicking::try (22,826 samples, 24.49%)</title><rect x="795.0" y="1157" width="288.9" height="15.0" fill="rgb(239,4,6)" rx="2" ry="2" />
<text  x="797.97" y="1167.5" >std::panicking::try</text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (92 samples, 0.10%)</title><rect x="118.4" y="821" width="1.1" height="15.0" fill="rgb(209,140,11)" rx="2" ry="2" />
<text  x="121.37" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::load (64 samples, 0.07%)</title><rect x="1074.0" y="501" width="0.8" height="15.0" fill="rgb(250,148,23)" rx="2" ry="2" />
<text  x="1077.01" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (48 samples, 0.05%)</title><rect x="176.1" y="533" width="0.7" height="15.0" fill="rgb(240,202,15)" rx="2" ry="2" />
<text  x="179.14" y="543.5" ></text>
</g>
<g >
<title>mio::sys::unix::cvt (8 samples, 0.01%)</title><rect x="263.6" y="661" width="0.1" height="15.0" fill="rgb(211,141,11)" rx="2" ry="2" />
<text  x="266.58" y="671.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1,873 samples, 2.01%)</title><rect x="1092.0" y="821" width="23.7" height="15.0" fill="rgb(219,181,3)" rx="2" ry="2" />
<text  x="1094.96" y="831.5" >t..</text>
</g>
<g >
<title>raw_spin_lock (13 samples, 0.01%)</title><rect x="1156.7" y="709" width="0.2" height="15.0" fill="rgb(228,137,7)" rx="2" ry="2" />
<text  x="1159.75" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;actix_web::service::ServiceResponse,actix_http::error::Error&gt;&gt;&gt;&gt; (249 samples, 0.27%)</title><rect x="450.8" y="1013" width="3.1" height="15.0" fill="rgb(246,188,16)" rx="2" ry="2" />
<text  x="453.79" y="1023.5" ></text>
</g>
<g >
<title>httparse::iter::Bytes::slice_skip (26 samples, 0.03%)</title><rect x="49.2" y="1141" width="0.3" height="15.0" fill="rgb(207,42,50)" rx="2" ry="2" />
<text  x="52.20" y="1151.5" ></text>
</g>
<g >
<title>psi_flags_change (19 samples, 0.02%)</title><rect x="929.3" y="581" width="0.2" height="15.0" fill="rgb(235,173,4)" rx="2" ry="2" />
<text  x="932.29" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::{{closure}} (22,824 samples, 24.48%)</title><rect x="795.0" y="901" width="288.9" height="15.0" fill="rgb(219,107,12)" rx="2" ry="2" />
<text  x="797.97" y="911.5" >tokio::runtime::basic_scheduler::Basic..</text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp_json_number::{{closure}} (162 samples, 0.17%)</title><rect x="152.9" y="709" width="2.0" height="15.0" fill="rgb(251,13,24)" rx="2" ry="2" />
<text  x="155.85" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (12 samples, 0.01%)</title><rect x="425.0" y="597" width="0.1" height="15.0" fill="rgb(243,86,16)" rx="2" ry="2" />
<text  x="427.98" y="607.5" ></text>
</g>
<g >
<title>skb_network_protocol (10 samples, 0.01%)</title><rect x="326.3" y="645" width="0.2" height="15.0" fill="rgb(244,39,8)" rx="2" ry="2" />
<text  x="329.34" y="655.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::UnixReady::hup (20 samples, 0.02%)</title><rect x="465.5" y="933" width="0.3" height="15.0" fill="rgb(217,228,30)" rx="2" ry="2" />
<text  x="468.52" y="943.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (26 samples, 0.03%)</title><rect x="414.8" y="805" width="0.3" height="15.0" fill="rgb(220,32,32)" rx="2" ry="2" />
<text  x="417.78" y="815.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::Spawner::pop (191 samples, 0.20%)</title><rect x="1010.5" y="853" width="2.4" height="15.0" fill="rgb(232,211,54)" rx="2" ry="2" />
<text  x="1013.49" y="863.5" ></text>
</g>
<g >
<title>raw_spin_lock (21 samples, 0.02%)</title><rect x="665.7" y="661" width="0.3" height="15.0" fill="rgb(213,199,10)" rx="2" ry="2" />
<text  x="668.68" y="671.5" ></text>
</g>
<g >
<title>memset_erms (29 samples, 0.03%)</title><rect x="294.9" y="853" width="0.4" height="15.0" fill="rgb(209,58,4)" rx="2" ry="2" />
<text  x="297.90" y="863.5" ></text>
</g>
<g >
<title>epoll_wait (10,138 samples, 10.88%)</title><rect x="834.2" y="757" width="128.3" height="15.0" fill="rgb(212,96,35)" rx="2" ry="2" />
<text  x="837.19" y="767.5" >epoll_wait</text>
</g>
<g >
<title>tcp_data_ready (93 samples, 0.10%)</title><rect x="315.3" y="421" width="1.2" height="15.0" fill="rgb(251,115,35)" rx="2" ry="2" />
<text  x="318.31" y="431.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (16,095 samples, 17.27%)</title><rect x="264.0" y="1189" width="203.7" height="15.0" fill="rgb(221,192,49)" rx="2" ry="2" />
<text  x="266.98" y="1199.5" >tokio::loom::std::unsafe_c..</text>
</g>
<g >
<title>alloc::rc::RcInnerPtr::inc_strong (32 samples, 0.03%)</title><rect x="530.2" y="997" width="0.4" height="15.0" fill="rgb(221,32,8)" rx="2" ry="2" />
<text  x="533.18" y="1007.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (134 samples, 0.14%)</title><rect x="168.7" y="741" width="1.7" height="15.0" fill="rgb(250,210,3)" rx="2" ry="2" />
<text  x="171.72" y="751.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (67 samples, 0.07%)</title><rect x="350.7" y="837" width="0.8" height="15.0" fill="rgb(224,16,42)" rx="2" ry="2" />
<text  x="353.65" y="847.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (18 samples, 0.02%)</title><rect x="866.8" y="565" width="0.2" height="15.0" fill="rgb(251,29,22)" rx="2" ry="2" />
<text  x="869.80" y="575.5" ></text>
</g>
<g >
<title>ksys_write (1,556 samples, 1.67%)</title><rect x="1094.0" y="485" width="19.7" height="15.0" fill="rgb(223,182,44)" rx="2" ry="2" />
<text  x="1097.02" y="495.5" ></text>
</g>
<g >
<title>refill_obj_stock (12 samples, 0.01%)</title><rect x="261.0" y="533" width="0.1" height="15.0" fill="rgb(246,187,31)" rx="2" ry="2" />
<text  x="263.98" y="543.5" ></text>
</g>
<g >
<title>_tcp_transmit_skb (728 samples, 0.78%)</title><rect x="618.8" y="261" width="9.2" height="15.0" fill="rgb(222,136,2)" rx="2" ry="2" />
<text  x="621.80" y="271.5" ></text>
</g>
<g >
<title>_fget_light (42 samples, 0.05%)</title><rect x="1094.1" y="453" width="0.5" height="15.0" fill="rgb(226,192,51)" rx="2" ry="2" />
<text  x="1097.11" y="463.5" ></text>
</g>
<g >
<title>&lt;actix_http::request::Request as actix_http::h1::decoder::MessageType&gt;::decode (66 samples, 0.07%)</title><rect x="66.1" y="1157" width="0.9" height="15.0" fill="rgb(235,196,9)" rx="2" ry="2" />
<text  x="69.12" y="1167.5" ></text>
</g>
<g >
<title>&lt;actix_service::and_then::AndThenService&lt;A,B&gt; as actix_service::Service&gt;::poll_ready (182 samples, 0.20%)</title><rect x="1065.4" y="309" width="2.3" height="15.0" fill="rgb(230,141,26)" rx="2" ry="2" />
<text  x="1068.38" y="319.5" ></text>
</g>
<g >
<title>std::time::Instant::now (409 samples, 0.44%)</title><rect x="977.0" y="853" width="5.2" height="15.0" fill="rgb(222,169,16)" rx="2" ry="2" />
<text  x="980.01" y="863.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33 samples, 0.04%)</title><rect x="129.5" y="677" width="0.5" height="15.0" fill="rgb(205,12,24)" rx="2" ry="2" />
<text  x="132.55" y="687.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (736 samples, 0.79%)</title><rect x="1051.7" y="325" width="9.3" height="15.0" fill="rgb(240,74,10)" rx="2" ry="2" />
<text  x="1054.69" y="335.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (55 samples, 0.06%)</title><rect x="217.3" y="533" width="0.7" height="15.0" fill="rgb(211,200,26)" rx="2" ry="2" />
<text  x="220.28" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::tokens::ParseToken&gt; (38 samples, 0.04%)</title><rect x="394.5" y="581" width="0.4" height="15.0" fill="rgb(248,69,42)" rx="2" ry="2" />
<text  x="397.45" y="591.5" ></text>
</g>
<g >
<title>std::io::error::Error::last_os_error (40 samples, 0.04%)</title><rect x="833.4" y="677" width="0.5" height="15.0" fill="rgb(241,228,19)" rx="2" ry="2" />
<text  x="836.41" y="687.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (1,139 samples, 1.22%)</title><rect x="1164.3" y="773" width="14.5" height="15.0" fill="rgb(244,216,10)" rx="2" ry="2" />
<text  x="1167.34" y="783.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::ref_dec (9 samples, 0.01%)</title><rect x="997.6" y="645" width="0.2" height="15.0" fill="rgb(247,205,3)" rx="2" ry="2" />
<text  x="1000.64" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="1115.2" y="757" width="0.2" height="15.0" fill="rgb(214,196,12)" rx="2" ry="2" />
<text  x="1118.16" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::tokens::ParseToken&gt; (8 samples, 0.01%)</title><rect x="394.9" y="629" width="0.1" height="15.0" fill="rgb(234,105,10)" rx="2" ry="2" />
<text  x="397.93" y="639.5" ></text>
</g>
<g >
<title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (78 samples, 0.08%)</title><rect x="242.4" y="869" width="1.0" height="15.0" fill="rgb(207,53,30)" rx="2" ry="2" />
<text  x="245.37" y="879.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (15 samples, 0.02%)</title><rect x="88.1" y="725" width="0.1" height="15.0" fill="rgb(211,29,42)" rx="2" ry="2" />
<text  x="91.05" y="735.5" ></text>
</g>
<g >
<title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,406 samples, 5.80%)</title><rect x="370.5" y="1013" width="68.4" height="15.0" fill="rgb(223,204,50)" rx="2" ry="2" />
<text  x="373.48" y="1023.5" >&lt;core::..</text>
</g>
<g >
<title>tokio::runtime::task::joinable_local (910 samples, 0.98%)</title><rect x="491.7" y="1109" width="11.5" height="15.0" fill="rgb(207,141,16)" rx="2" ry="2" />
<text  x="494.66" y="1119.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::set_join_waker::{{closure}} (28 samples, 0.03%)</title><rect x="1041.3" y="261" width="0.4" height="15.0" fill="rgb(232,217,50)" rx="2" ry="2" />
<text  x="1044.30" y="271.5" ></text>
</g>
<g >
<title>core::mem::take (19 samples, 0.02%)</title><rect x="140.7" y="885" width="0.3" height="15.0" fill="rgb(246,213,35)" rx="2" ry="2" />
<text  x="143.74" y="895.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level_for (47 samples, 0.05%)</title><rect x="1003.0" y="789" width="0.6" height="15.0" fill="rgb(215,177,47)" rx="2" ry="2" />
<text  x="1006.01" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="147.2" y="789" width="0.2" height="15.0" fill="rgb(211,23,42)" rx="2" ry="2" />
<text  x="150.15" y="799.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,573 samples, 1.69%)</title><rect x="244.1" y="901" width="19.9" height="15.0" fill="rgb(220,95,18)" rx="2" ry="2" />
<text  x="247.07" y="911.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::new (379 samples, 0.41%)</title><rect x="267.0" y="997" width="4.8" height="15.0" fill="rgb(239,115,43)" rx="2" ry="2" />
<text  x="270.01" y="1007.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="1089.0" y="981" width="0.1" height="15.0" fill="rgb(243,192,26)" rx="2" ry="2" />
<text  x="1092.00" y="991.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::Snapshot::is_cancelled (12 samples, 0.01%)</title><rect x="1069.3" y="437" width="0.1" height="15.0" fill="rgb(210,151,18)" rx="2" ry="2" />
<text  x="1072.26" y="447.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::inner (9 samples, 0.01%)</title><rect x="234.4" y="1077" width="0.2" height="15.0" fill="rgb(205,43,11)" rx="2" ry="2" />
<text  x="237.45" y="1087.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (133 samples, 0.14%)</title><rect x="203.1" y="565" width="1.7" height="15.0" fill="rgb(205,137,51)" rx="2" ry="2" />
<text  x="206.12" y="575.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (809 samples, 0.87%)</title><rect x="492.8" y="1061" width="10.2" height="15.0" fill="rgb(224,137,19)" rx="2" ry="2" />
<text  x="495.78" y="1071.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (50 samples, 0.05%)</title><rect x="65.1" y="821" width="0.6" height="15.0" fill="rgb(214,78,54)" rx="2" ry="2" />
<text  x="68.12" y="831.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (119 samples, 0.13%)</title><rect x="457.3" y="1029" width="1.5" height="15.0" fill="rgb(214,39,37)" rx="2" ry="2" />
<text  x="460.34" y="1039.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::extend_from_slice (40 samples, 0.04%)</title><rect x="448.0" y="949" width="0.5" height="15.0" fill="rgb(218,95,37)" rx="2" ry="2" />
<text  x="451.03" y="959.5" ></text>
</g>
<g >
<title>_rust_probestack (8 samples, 0.01%)</title><rect x="342.9" y="1013" width="0.1" height="15.0" fill="rgb(231,191,26)" rx="2" ry="2" />
<text  x="345.88" y="1023.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (11 samples, 0.01%)</title><rect x="90.2" y="773" width="0.1" height="15.0" fill="rgb(217,200,4)" rx="2" ry="2" />
<text  x="93.20" y="783.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8 samples, 0.01%)</title><rect x="522.7" y="485" width="0.1" height="15.0" fill="rgb(221,68,17)" rx="2" ry="2" />
<text  x="525.73" y="495.5" ></text>
</g>
<g >
<title>std::os::imp::unix::net::stream::UnixStream::shutdown (4,156 samples, 4.46%)</title><rect x="283.9" y="1045" width="52.6" height="15.0" fill="rgb(231,171,24)" rx="2" ry="2" />
<text  x="286.93" y="1055.5" >std::..</text>
</g>
<g >
<title>core::ptr::write (73 samples, 0.08%)</title><rect x="412.8" y="805" width="0.9" height="15.0" fill="rgb(232,35,44)" rx="2" ry="2" />
<text  x="415.77" y="815.5" ></text>
</g>
<g >
<title>netif_rx (34 samples, 0.04%)</title><rect x="625.8" y="69" width="0.4" height="15.0" fill="rgb(224,155,52)" rx="2" ry="2" />
<text  x="628.80" y="79.5" ></text>
</g>
<g >
<title>_rdl_realloc (13 samples, 0.01%)</title><rect x="379.9" y="709" width="0.2" height="15.0" fill="rgb(231,12,37)" rx="2" ry="2" />
<text  x="382.89" y="719.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (24 samples, 0.03%)</title><rect x="202.3" y="565" width="0.3" height="15.0" fill="rgb(249,93,38)" rx="2" ry="2" />
<text  x="205.32" y="575.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (24 samples, 0.03%)</title><rect x="530.6" y="1029" width="0.3" height="15.0" fill="rgb(243,181,32)" rx="2" ry="2" />
<text  x="533.59" y="1039.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (1,919 samples, 2.06%)</title><rect x="1091.6" y="933" width="24.3" height="15.0" fill="rgb(240,226,4)" rx="2" ry="2" />
<text  x="1094.61" y="943.5" >t..</text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next_char (8 samples, 0.01%)</title><rect x="114.1" y="869" width="0.1" height="15.0" fill="rgb(230,35,26)" rx="2" ry="2" />
<text  x="117.07" y="879.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (24 samples, 0.03%)</title><rect x="434.4" y="581" width="0.3" height="15.0" fill="rgb(226,20,7)" rx="2" ry="2" />
<text  x="437.38" y="591.5" ></text>
</g>
<g >
<title>tokio::time::wheel::Poll::new (23 samples, 0.02%)</title><rect x="991.9" y="837" width="0.3" height="15.0" fill="rgb(253,153,32)" rx="2" ry="2" />
<text  x="994.95" y="847.5" ></text>
</g>
<g >
<title>actix_http::h1::encoder::TransferEncoding::encode (44 samples, 0.05%)</title><rect x="456.7" y="1029" width="0.5" height="15.0" fill="rgb(241,175,37)" rx="2" ry="2" />
<text  x="459.66" y="1039.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path (374 samples, 0.40%)</title><rect x="115.9" y="949" width="4.7" height="15.0" fill="rgb(241,136,17)" rx="2" ry="2" />
<text  x="118.88" y="959.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.02%)</title><rect x="421.5" y="597" width="0.2" height="15.0" fill="rgb(245,161,39)" rx="2" ry="2" />
<text  x="424.46" y="607.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (20 samples, 0.02%)</title><rect x="969.9" y="533" width="0.3" height="15.0" fill="rgb(239,18,14)" rx="2" ry="2" />
<text  x="972.93" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="395.6" y="885" width="0.1" height="15.0" fill="rgb(205,14,36)" rx="2" ry="2" />
<text  x="398.55" y="895.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="162.2" y="613" width="0.3" height="15.0" fill="rgb(228,85,35)" rx="2" ry="2" />
<text  x="165.24" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="1072.8" y="485" width="0.2" height="15.0" fill="rgb(205,227,34)" rx="2" ry="2" />
<text  x="1075.85" y="495.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::{{closure}}::{{closure}} (193 samples, 0.21%)</title><rect x="1010.5" y="869" width="2.4" height="15.0" fill="rgb(239,225,50)" rx="2" ry="2" />
<text  x="1013.46" y="879.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (140 samples, 0.15%)</title><rect x="329.6" y="837" width="1.7" height="15.0" fill="rgb(215,94,29)" rx="2" ry="2" />
<text  x="332.55" y="847.5" ></text>
</g>
<g >
<title>ktime_get (17 samples, 0.02%)</title><rect x="660.0" y="709" width="0.2" height="15.0" fill="rgb(254,89,14)" rx="2" ry="2" />
<text  x="663.00" y="719.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1,212 samples, 1.30%)</title><rect x="419.6" y="789" width="15.4" height="15.0" fill="rgb(237,155,1)" rx="2" ry="2" />
<text  x="422.64" y="799.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_read_ready (141 samples, 0.15%)</title><rect x="461.0" y="965" width="1.8" height="15.0" fill="rgb(225,44,0)" rx="2" ry="2" />
<text  x="464.01" y="975.5" ></text>
</g>
<g >
<title>_lock_text_start (9 samples, 0.01%)</title><rect x="1098.2" y="325" width="0.1" height="15.0" fill="rgb(232,64,42)" rx="2" ry="2" />
<text  x="1101.18" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::h1::dispatcher::DispatcherState&lt;tokio::net::tcp::stream::TcpStream,actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::Body&gt;,actix_http::body::Body,actix_http::h1::expect::ExpectHandler,actix_http::h1::upgrade::UpgradeHandler&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt; (6,166 samples, 6.61%)</title><rect x="716.9" y="933" width="78.1" height="15.0" fill="rgb(230,43,43)" rx="2" ry="2" />
<text  x="719.91" y="943.5" >core::ptr..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (71 samples, 0.08%)</title><rect x="136.0" y="869" width="0.9" height="15.0" fill="rgb(217,106,54)" rx="2" ry="2" />
<text  x="139.02" y="879.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="154.1" y="597" width="0.1" height="15.0" fill="rgb(240,16,5)" rx="2" ry="2" />
<text  x="157.07" y="607.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (13 samples, 0.01%)</title><rect x="272.8" y="869" width="0.1" height="15.0" fill="rgb(244,82,17)" rx="2" ry="2" />
<text  x="275.77" y="879.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (31 samples, 0.03%)</title><rect x="133.8" y="837" width="0.4" height="15.0" fill="rgb(253,6,12)" rx="2" ry="2" />
<text  x="136.83" y="847.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (15 samples, 0.02%)</title><rect x="287.0" y="917" width="0.2" height="15.0" fill="rgb(226,181,31)" rx="2" ry="2" />
<text  x="290.02" y="927.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (25 samples, 0.03%)</title><rect x="42.5" y="1013" width="0.3" height="15.0" fill="rgb(239,58,37)" rx="2" ry="2" />
<text  x="45.49" y="1023.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (50 samples, 0.05%)</title><rect x="178.8" y="629" width="0.6" height="15.0" fill="rgb(229,212,22)" rx="2" ry="2" />
<text  x="181.79" y="639.5" ></text>
</g>
<g >
<title>tokio::time::driver::Inner::normalize_deadline (75 samples, 0.08%)</title><rect x="272.0" y="997" width="1.0" height="15.0" fill="rgb(222,49,31)" rx="2" ry="2" />
<text  x="275.04" y="1007.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (11 samples, 0.01%)</title><rect x="652.3" y="549" width="0.1" height="15.0" fill="rgb(230,86,42)" rx="2" ry="2" />
<text  x="655.27" y="559.5" ></text>
</g>
<g >
<title>dequeue_entity (886 samples, 0.95%)</title><rect x="917.1" y="565" width="11.2" height="15.0" fill="rgb(231,226,9)" rx="2" ry="2" />
<text  x="920.11" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (24 samples, 0.03%)</title><rect x="10.6" y="1205" width="0.3" height="15.0" fill="rgb(231,196,32)" rx="2" ry="2" />
<text  x="13.63" y="1215.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (16 samples, 0.02%)</title><rect x="38.4" y="1061" width="0.2" height="15.0" fill="rgb(246,188,8)" rx="2" ry="2" />
<text  x="41.37" y="1071.5" ></text>
</g>
<g >
<title>_fget_files (35 samples, 0.04%)</title><rect x="334.1" y="885" width="0.5" height="15.0" fill="rgb(231,193,6)" rx="2" ry="2" />
<text  x="337.13" y="895.5" ></text>
</g>
<g >
<title>_wake_up_common (36 samples, 0.04%)</title><rect x="315.7" y="357" width="0.4" height="15.0" fill="rgb(249,141,35)" rx="2" ry="2" />
<text  x="318.68" y="367.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::borrow_mut (11 samples, 0.01%)</title><rect x="377.0" y="789" width="0.1" height="15.0" fill="rgb(210,187,15)" rx="2" ry="2" />
<text  x="380.00" y="799.5" ></text>
</g>
<g >
<title>_GI___libc_free (38 samples, 0.04%)</title><rect x="718.9" y="821" width="0.5" height="15.0" fill="rgb(208,56,40)" rx="2" ry="2" />
<text  x="721.90" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (23 samples, 0.02%)</title><rect x="92.9" y="837" width="0.3" height="15.0" fill="rgb(251,229,50)" rx="2" ry="2" />
<text  x="95.91" y="847.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (331 samples, 0.36%)</title><rect x="525.1" y="677" width="4.2" height="15.0" fill="rgb(233,13,36)" rx="2" ry="2" />
<text  x="528.14" y="687.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (78 samples, 0.08%)</title><rect x="242.4" y="917" width="1.0" height="15.0" fill="rgb(239,200,35)" rx="2" ry="2" />
<text  x="245.37" y="927.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (1,236 samples, 1.33%)</title><rect x="487.7" y="1205" width="15.7" height="15.0" fill="rgb(237,135,40)" rx="2" ry="2" />
<text  x="490.72" y="1215.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (204 samples, 0.22%)</title><rect x="38.8" y="1045" width="2.6" height="15.0" fill="rgb(209,34,44)" rx="2" ry="2" />
<text  x="41.79" y="1055.5" ></text>
</g>
<g >
<title>update_cfs_group (16 samples, 0.02%)</title><rect x="1103.4" y="213" width="0.2" height="15.0" fill="rgb(240,111,49)" rx="2" ry="2" />
<text  x="1106.42" y="223.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59 samples, 0.06%)</title><rect x="167.2" y="837" width="0.7" height="15.0" fill="rgb(207,108,2)" rx="2" ry="2" />
<text  x="170.17" y="847.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::whitespace (40 samples, 0.04%)</title><rect x="81.0" y="773" width="0.5" height="15.0" fill="rgb(224,66,31)" rx="2" ry="2" />
<text  x="83.99" y="783.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (16 samples, 0.02%)</title><rect x="128.0" y="709" width="0.2" height="15.0" fill="rgb(233,95,5)" rx="2" ry="2" />
<text  x="131.00" y="719.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (20 samples, 0.02%)</title><rect x="225.0" y="629" width="0.2" height="15.0" fill="rgb(229,43,11)" rx="2" ry="2" />
<text  x="227.98" y="639.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (16 samples, 0.02%)</title><rect x="472.5" y="773" width="0.2" height="15.0" fill="rgb(208,98,24)" rx="2" ry="2" />
<text  x="475.53" y="783.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (66 samples, 0.07%)</title><rect x="1083.0" y="709" width="0.8" height="15.0" fill="rgb(228,112,42)" rx="2" ry="2" />
<text  x="1085.99" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (105 samples, 0.11%)</title><rect x="87.0" y="837" width="1.4" height="15.0" fill="rgb(248,76,29)" rx="2" ry="2" />
<text  x="90.04" y="847.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (8 samples, 0.01%)</title><rect x="106.3" y="773" width="0.1" height="15.0" fill="rgb(218,35,28)" rx="2" ry="2" />
<text  x="109.28" y="783.5" ></text>
</g>
<g >
<title>_usecs_to_jiffies (9 samples, 0.01%)</title><rect x="659.1" y="709" width="0.1" height="15.0" fill="rgb(244,38,5)" rx="2" ry="2" />
<text  x="662.06" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (16 samples, 0.02%)</title><rect x="38.4" y="1077" width="0.2" height="15.0" fill="rgb(235,177,20)" rx="2" ry="2" />
<text  x="41.37" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (173 samples, 0.19%)</title><rect x="278.2" y="1045" width="2.2" height="15.0" fill="rgb(211,154,10)" rx="2" ry="2" />
<text  x="281.18" y="1055.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (100 samples, 0.11%)</title><rect x="1108.5" y="245" width="1.3" height="15.0" fill="rgb(223,112,42)" rx="2" ry="2" />
<text  x="1111.53" y="255.5" ></text>
</g>
<g >
<title>actix_server::accept::Accept::start::{{closure}} (8,015 samples, 8.60%)</title><rect x="1086.8" y="1077" width="101.5" height="15.0" fill="rgb(245,168,46)" rx="2" ry="2" />
<text  x="1089.83" y="1087.5" >actix_server..</text>
</g>
<g >
<title>mio::sys::unix::ready::UnixReady::hup (11 samples, 0.01%)</title><rect x="235.5" y="1061" width="0.2" height="15.0" fill="rgb(253,40,5)" rx="2" ry="2" />
<text  x="238.55" y="1071.5" ></text>
</g>
<g >
<title>tcp_push (7,303 samples, 7.83%)</title><rect x="575.8" y="757" width="92.4" height="15.0" fill="rgb(253,10,25)" rx="2" ry="2" />
<text  x="578.77" y="767.5" >tcp_push</text>
</g>
<g >
<title>core::num::&lt;impl u8&gt;::wrapping_add (17 samples, 0.02%)</title><rect x="1010.1" y="885" width="0.3" height="15.0" fill="rgb(250,192,35)" rx="2" ry="2" />
<text  x="1013.14" y="895.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::poll_read_priv (288 samples, 0.31%)</title><rect x="233.3" y="1141" width="3.6" height="15.0" fill="rgb(249,117,28)" rx="2" ry="2" />
<text  x="236.26" y="1151.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[jsonpath_lib::paths::tokens::ParseToken]&gt; (11 samples, 0.01%)</title><rect x="132.1" y="885" width="0.1" height="15.0" fill="rgb(212,4,15)" rx="2" ry="2" />
<text  x="135.05" y="895.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_whitespace (8 samples, 0.01%)</title><rect x="110.2" y="693" width="0.1" height="15.0" fill="rgb(230,134,36)" rx="2" ry="2" />
<text  x="113.22" y="703.5" ></text>
</g>
<g >
<title>_kfree_skb (8 samples, 0.01%)</title><rect x="547.0" y="693" width="0.1" height="15.0" fill="rgb(250,42,0)" rx="2" ry="2" />
<text  x="550.00" y="703.5" ></text>
</g>
<g >
<title>ryu::pretty::mantissa::write_mantissa_long (58 samples, 0.06%)</title><rect x="434.0" y="613" width="0.7" height="15.0" fill="rgb(212,215,13)" rx="2" ry="2" />
<text  x="436.96" y="623.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (14 samples, 0.02%)</title><rect x="613.3" y="325" width="0.1" height="15.0" fill="rgb(244,164,45)" rx="2" ry="2" />
<text  x="616.25" y="335.5" ></text>
</g>
<g >
<title>_kmalloc_reserv.sr. (201 samples, 0.22%)</title><rect x="569.3" y="725" width="2.6" height="15.0" fill="rgb(229,45,11)" rx="2" ry="2" />
<text  x="572.34" y="735.5" ></text>
</g>
<g >
<title>actix_rt::runtime::Runtime::block_on (22,824 samples, 24.48%)</title><rect x="795.0" y="1061" width="288.9" height="15.0" fill="rgb(237,81,25)" rx="2" ry="2" />
<text  x="797.97" y="1071.5" >actix_rt::runtime::Runtime::block_on</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.01%)</title><rect x="129.0" y="677" width="0.2" height="15.0" fill="rgb(231,109,12)" rx="2" ry="2" />
<text  x="132.02" y="687.5" ></text>
</g>
<g >
<title>actix_router::url::Url::path (29 samples, 0.03%)</title><rect x="355.9" y="933" width="0.3" height="15.0" fill="rgb(211,50,24)" rx="2" ry="2" />
<text  x="358.86" y="943.5" ></text>
</g>
<g >
<title>_skb_clone (16 samples, 0.02%)</title><rect x="582.3" y="693" width="0.2" height="15.0" fill="rgb(237,128,10)" rx="2" ry="2" />
<text  x="585.29" y="703.5" ></text>
</g>
<g >
<title>raw_spin_lock_bh (10 samples, 0.01%)</title><rect x="766.1" y="549" width="0.1" height="15.0" fill="rgb(205,186,41)" rx="2" ry="2" />
<text  x="769.12" y="559.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (52 samples, 0.06%)</title><rect x="471.5" y="805" width="0.6" height="15.0" fill="rgb(254,221,23)" rx="2" ry="2" />
<text  x="474.47" y="815.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (12 samples, 0.01%)</title><rect x="818.9" y="661" width="0.1" height="15.0" fill="rgb(233,227,49)" rx="2" ry="2" />
<text  x="821.87" y="671.5" ></text>
</g>
<g >
<title>tokio::task::local::spawn_local (1,041 samples, 1.12%)</title><rect x="490.0" y="1157" width="13.2" height="15.0" fill="rgb(211,139,17)" rx="2" ry="2" />
<text  x="493.00" y="1167.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (411 samples, 0.44%)</title><rect x="857.0" y="629" width="5.2" height="15.0" fill="rgb(240,220,22)" rx="2" ry="2" />
<text  x="859.98" y="639.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (84 samples, 0.09%)</title><rect x="181.6" y="773" width="1.0" height="15.0" fill="rgb(237,177,8)" rx="2" ry="2" />
<text  x="184.59" y="783.5" ></text>
</g>
<g >
<title>tokio::runtime::context::time_handle (47 samples, 0.05%)</title><rect x="274.1" y="997" width="0.6" height="15.0" fill="rgb(214,71,26)" rx="2" ry="2" />
<text  x="277.12" y="1007.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (20 samples, 0.02%)</title><rect x="146.9" y="677" width="0.2" height="15.0" fill="rgb(205,187,40)" rx="2" ry="2" />
<text  x="149.88" y="687.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.01%)</title><rect x="142.5" y="565" width="0.2" height="15.0" fill="rgb(247,20,17)" rx="2" ry="2" />
<text  x="145.55" y="575.5" ></text>
</g>
<g >
<title>&lt;actix_server::service::StreamService&lt;T&gt; as actix_service::Service&gt;::call (870 samples, 0.93%)</title><rect x="504.4" y="869" width="11.0" height="15.0" fill="rgb(220,104,7)" rx="2" ry="2" />
<text  x="507.38" y="879.5" ></text>
</g>
<g >
<title>_x64_sys_epoll_ctl (951 samples, 1.02%)</title><rect x="773.3" y="677" width="12.0" height="15.0" fill="rgb(209,166,35)" rx="2" ry="2" />
<text  x="776.26" y="687.5" ></text>
</g>
<g >
<title>actix_web::service::ServiceRequest::new (31 samples, 0.03%)</title><rect x="365.3" y="1013" width="0.4" height="15.0" fill="rgb(245,63,6)" rx="2" ry="2" />
<text  x="368.26" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (88 samples, 0.09%)</title><rect x="427.8" y="501" width="1.2" height="15.0" fill="rgb(227,168,19)" rx="2" ry="2" />
<text  x="430.84" y="511.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (51 samples, 0.05%)</title><rect x="125.7" y="757" width="0.7" height="15.0" fill="rgb(220,41,9)" rx="2" ry="2" />
<text  x="128.72" y="767.5" ></text>
</g>
<g >
<title>sk_free (11 samples, 0.01%)</title><rect x="651.1" y="517" width="0.1" height="15.0" fill="rgb(216,114,42)" rx="2" ry="2" />
<text  x="654.10" y="527.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::transition_to_idle (70 samples, 0.08%)</title><rect x="1072.5" y="533" width="0.9" height="15.0" fill="rgb(238,152,17)" rx="2" ry="2" />
<text  x="1075.48" y="543.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::UnboundedSender&lt;T&gt;::unbounded_send (33 samples, 0.04%)</title><rect x="1115.9" y="981" width="0.5" height="15.0" fill="rgb(213,165,5)" rx="2" ry="2" />
<text  x="1118.95" y="991.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (9 samples, 0.01%)</title><rect x="812.2" y="725" width="0.1" height="15.0" fill="rgb(212,188,40)" rx="2" ry="2" />
<text  x="815.19" y="735.5" ></text>
</g>
<g >
<title>&lt;actix_http::cloneable::CloneableService&lt;T&gt; as actix_service::Service&gt;::call (1,823 samples, 1.96%)</title><rect x="345.9" y="1045" width="23.0" height="15.0" fill="rgb(208,195,33)" rx="2" ry="2" />
<text  x="348.87" y="1055.5" >&lt;..</text>
</g>
<g >
<title>core::hash::sip::u8to64_le (18 samples, 0.02%)</title><rect x="193.2" y="549" width="0.2" height="15.0" fill="rgb(233,182,8)" rx="2" ry="2" />
<text  x="196.18" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (65 samples, 0.07%)</title><rect x="791.5" y="661" width="0.8" height="15.0" fill="rgb(254,131,43)" rx="2" ry="2" />
<text  x="794.51" y="671.5" ></text>
</g>
<g >
<title>tokio::time::clock::Clock::is_paused (41 samples, 0.04%)</title><rect x="982.2" y="853" width="0.5" height="15.0" fill="rgb(220,176,18)" rx="2" ry="2" />
<text  x="985.19" y="863.5" ></text>
</g>
<g >
<title>_memset_avx2_erms (305 samples, 0.33%)</title><rect x="22.0" y="1173" width="3.9" height="15.0" fill="rgb(245,148,4)" rx="2" ry="2" />
<text  x="25.00" y="1183.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::exprs (304 samples, 0.33%)</title><rect x="468.9" y="965" width="3.8" height="15.0" fill="rgb(252,107,40)" rx="2" ry="2" />
<text  x="471.90" y="975.5" ></text>
</g>
<g >
<title>raw_spin_lock_irqsave (10 samples, 0.01%)</title><rect x="290.3" y="853" width="0.1" height="15.0" fill="rgb(251,60,16)" rx="2" ry="2" />
<text  x="293.26" y="863.5" ></text>
</g>
<g >
<title>_put_user_nocheck_4 (8 samples, 0.01%)</title><rect x="975.4" y="661" width="0.1" height="15.0" fill="rgb(243,148,48)" rx="2" ry="2" />
<text  x="978.36" y="671.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (79 samples, 0.08%)</title><rect x="119.6" y="933" width="1.0" height="15.0" fill="rgb(225,62,51)" rx="2" ry="2" />
<text  x="122.60" y="943.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (238 samples, 0.26%)</title><rect x="857.5" y="613" width="3.0" height="15.0" fill="rgb(215,115,4)" rx="2" ry="2" />
<text  x="860.49" y="623.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (19 samples, 0.02%)</title><rect x="640.0" y="309" width="0.2" height="15.0" fill="rgb(221,120,33)" rx="2" ry="2" />
<text  x="642.96" y="319.5" ></text>
</g>
<g >
<title>_memcmp_avx2_movbe (59 samples, 0.06%)</title><rect x="356.6" y="869" width="0.8" height="15.0" fill="rgb(239,44,34)" rx="2" ry="2" />
<text  x="359.64" y="879.5" ></text>
</g>
<g >
<title>_libc_disable_asynccancel (39 samples, 0.04%)</title><rect x="836.4" y="741" width="0.5" height="15.0" fill="rgb(253,27,25)" rx="2" ry="2" />
<text  x="839.40" y="751.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1,573 samples, 1.69%)</title><rect x="244.1" y="1189" width="19.9" height="15.0" fill="rgb(227,43,40)" rx="2" ry="2" />
<text  x="247.07" y="1199.5" ></text>
</g>
<g >
<title>read_tsc (83 samples, 0.09%)</title><rect x="950.0" y="645" width="1.1" height="15.0" fill="rgb(230,198,8)" rx="2" ry="2" />
<text  x="953.02" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (169 samples, 0.18%)</title><rect x="411.6" y="821" width="2.1" height="15.0" fill="rgb(213,197,28)" rx="2" ry="2" />
<text  x="414.55" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;jsonpath_lib::paths::path_parser::PathParser&gt;&gt; (1,054 samples, 1.13%)</title><rect x="382.2" y="869" width="13.4" height="15.0" fill="rgb(246,29,0)" rx="2" ry="2" />
<text  x="385.21" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (156 samples, 0.17%)</title><rect x="278.4" y="1013" width="2.0" height="15.0" fill="rgb(240,108,29)" rx="2" ry="2" />
<text  x="281.40" y="1023.5" ></text>
</g>
<g >
<title>&lt;mio::sys::unix::tcp::TcpStream as mio::event_imp::Evented&gt;::register (91 samples, 0.10%)</title><rect x="513.0" y="725" width="1.2" height="15.0" fill="rgb(228,175,20)" rx="2" ry="2" />
<text  x="516.04" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (1,865 samples, 2.00%)</title><rect x="684.3" y="853" width="23.6" height="15.0" fill="rgb(246,3,21)" rx="2" ry="2" />
<text  x="687.25" y="863.5" >s..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.02%)</title><rect x="434.7" y="613" width="0.3" height="15.0" fill="rgb(239,112,10)" rx="2" ry="2" />
<text  x="437.69" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (10 samples, 0.01%)</title><rect x="271.8" y="965" width="0.1" height="15.0" fill="rgb(242,81,2)" rx="2" ry="2" />
<text  x="274.82" y="975.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (10 samples, 0.01%)</title><rect x="227.8" y="645" width="0.1" height="15.0" fill="rgb(239,73,42)" rx="2" ry="2" />
<text  x="230.78" y="655.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp (1,294 samples, 1.39%)</title><rect x="148.6" y="917" width="16.4" height="15.0" fill="rgb(206,193,14)" rx="2" ry="2" />
<text  x="151.60" y="927.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.05%)</title><rect x="205.3" y="565" width="0.5" height="15.0" fill="rgb(253,13,3)" rx="2" ry="2" />
<text  x="208.26" y="575.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::new (54 samples, 0.06%)</title><rect x="402.1" y="901" width="0.7" height="15.0" fill="rgb(250,33,43)" rx="2" ry="2" />
<text  x="405.15" y="911.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::clone_waker (10 samples, 0.01%)</title><rect x="464.7" y="933" width="0.1" height="15.0" fill="rgb(235,166,34)" rx="2" ry="2" />
<text  x="467.66" y="943.5" ></text>
</g>
<g >
<title>skb_release_all (9 samples, 0.01%)</title><rect x="314.9" y="421" width="0.1" height="15.0" fill="rgb(215,130,32)" rx="2" ry="2" />
<text  x="317.88" y="431.5" ></text>
</g>
<g >
<title>tokio::io::driver::platform::sys::error (11 samples, 0.01%)</title><rect x="235.1" y="1077" width="0.2" height="15.0" fill="rgb(211,209,19)" rx="2" ry="2" />
<text  x="238.14" y="1087.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::little (19 samples, 0.02%)</title><rect x="82.6" y="757" width="0.2" height="15.0" fill="rgb(207,68,38)" rx="2" ry="2" />
<text  x="85.60" y="767.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (137 samples, 0.15%)</title><rect x="125.3" y="837" width="1.7" height="15.0" fill="rgb(239,14,53)" rx="2" ry="2" />
<text  x="128.31" y="847.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (31 samples, 0.03%)</title><rect x="1006.7" y="805" width="0.4" height="15.0" fill="rgb(239,88,12)" rx="2" ry="2" />
<text  x="1009.67" y="815.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="351.2" y="725" width="0.2" height="15.0" fill="rgb(246,34,21)" rx="2" ry="2" />
<text  x="354.21" y="735.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (318 samples, 0.34%)</title><rect x="648.1" y="549" width="4.0" height="15.0" fill="rgb(239,24,22)" rx="2" ry="2" />
<text  x="651.08" y="559.5" ></text>
</g>
<g >
<title>&lt;rust_actix_jsonpath_bench::new as actix_web::service::HttpServiceFactory&gt;::register::new::{{closure}} (4,790 samples, 5.14%)</title><rect x="374.6" y="917" width="60.7" height="15.0" fill="rgb(249,30,29)" rx="2" ry="2" />
<text  x="377.64" y="927.5" >&lt;rust_..</text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (8 samples, 0.01%)</title><rect x="815.2" y="741" width="0.1" height="15.0" fill="rgb(229,57,36)" rx="2" ry="2" />
<text  x="818.22" y="751.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (16 samples, 0.02%)</title><rect x="1082.8" y="597" width="0.2" height="15.0" fill="rgb(214,23,33)" rx="2" ry="2" />
<text  x="1085.78" y="607.5" ></text>
</g>
<g >
<title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (356 samples, 0.38%)</title><rect x="238.9" y="1109" width="4.5" height="15.0" fill="rgb(245,148,29)" rx="2" ry="2" />
<text  x="241.85" y="1119.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (14 samples, 0.02%)</title><rect x="435.1" y="773" width="0.1" height="15.0" fill="rgb(234,27,47)" rx="2" ry="2" />
<text  x="438.06" y="783.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (126 samples, 0.14%)</title><rect x="191.8" y="629" width="1.6" height="15.0" fill="rgb(231,85,18)" rx="2" ry="2" />
<text  x="194.81" y="639.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::whitespace (21 samples, 0.02%)</title><rect x="110.9" y="773" width="0.2" height="15.0" fill="rgb(238,225,32)" rx="2" ry="2" />
<text  x="113.85" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (75 samples, 0.08%)</title><rect x="1077.9" y="581" width="1.0" height="15.0" fill="rgb(240,19,5)" rx="2" ry="2" />
<text  x="1080.91" y="591.5" ></text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::inner (16 samples, 0.02%)</title><rect x="771.0" y="789" width="0.2" height="15.0" fill="rgb(243,167,18)" rx="2" ry="2" />
<text  x="774.04" y="799.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (13 samples, 0.01%)</title><rect x="129.3" y="677" width="0.2" height="15.0" fill="rgb(231,6,26)" rx="2" ry="2" />
<text  x="132.31" y="687.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (24 samples, 0.03%)</title><rect x="973.1" y="613" width="0.3" height="15.0" fill="rgb(210,107,29)" rx="2" ry="2" />
<text  x="976.06" y="623.5" ></text>
</g>
<g >
<title>_netif_receive_skb (3,884 samples, 4.17%)</title><rect x="595.5" y="469" width="49.1" height="15.0" fill="rgb(230,193,19)" rx="2" ry="2" />
<text  x="598.48" y="479.5" >_net..</text>
</g>
<g >
<title>std::panicking::try::do_call (331 samples, 0.36%)</title><rect x="525.1" y="789" width="4.2" height="15.0" fill="rgb(233,4,51)" rx="2" ry="2" />
<text  x="528.14" y="799.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (141 samples, 0.15%)</title><rect x="720.9" y="789" width="1.8" height="15.0" fill="rgb(240,96,8)" rx="2" ry="2" />
<text  x="723.91" y="799.5" ></text>
</g>
<g >
<title>_GI___libc_free (16 samples, 0.02%)</title><rect x="136.0" y="837" width="0.2" height="15.0" fill="rgb(247,90,21)" rx="2" ry="2" />
<text  x="139.02" y="847.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (38 samples, 0.04%)</title><rect x="1082.5" y="661" width="0.5" height="15.0" fill="rgb(208,166,47)" rx="2" ry="2" />
<text  x="1085.50" y="671.5" ></text>
</g>
<g >
<title>task_work_add (34 samples, 0.04%)</title><rect x="736.0" y="629" width="0.5" height="15.0" fill="rgb(211,56,23)" rx="2" ry="2" />
<text  x="739.03" y="639.5" ></text>
</g>
<g >
<title>&lt;http::method::Inner as core::cmp::PartialEq&gt;::eq (41 samples, 0.04%)</title><rect x="355.2" y="917" width="0.5" height="15.0" fill="rgb(209,164,27)" rx="2" ry="2" />
<text  x="358.21" y="927.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (9 samples, 0.01%)</title><rect x="226.7" y="613" width="0.1" height="15.0" fill="rgb(251,1,37)" rx="2" ry="2" />
<text  x="229.70" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (37 samples, 0.04%)</title><rect x="148.1" y="885" width="0.4" height="15.0" fill="rgb(215,129,46)" rx="2" ry="2" />
<text  x="151.07" y="895.5" ></text>
</g>
<g >
<title>tokio::util::slab::shard::Shard&lt;T&gt;::get (19 samples, 0.02%)</title><rect x="234.9" y="1045" width="0.2" height="15.0" fill="rgb(231,143,37)" rx="2" ry="2" />
<text  x="237.90" y="1055.5" ></text>
</g>
<g >
<title>ep_unregister_pollwai.sr. (11 samples, 0.01%)</title><rect x="784.4" y="645" width="0.1" height="15.0" fill="rgb(247,9,29)" rx="2" ry="2" />
<text  x="787.40" y="655.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (708 samples, 0.76%)</title><rect x="494.1" y="1045" width="8.9" height="15.0" fill="rgb(228,144,29)" rx="2" ry="2" />
<text  x="497.06" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_web::request::HttpRequest&gt; (80 samples, 0.09%)</title><rect x="369.0" y="1029" width="1.0" height="15.0" fill="rgb(222,108,37)" rx="2" ry="2" />
<text  x="372.02" y="1039.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (22 samples, 0.02%)</title><rect x="133.4" y="885" width="0.3" height="15.0" fill="rgb(251,228,47)" rx="2" ry="2" />
<text  x="136.42" y="895.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (36 samples, 0.04%)</title><rect x="237.5" y="1013" width="0.4" height="15.0" fill="rgb(243,10,6)" rx="2" ry="2" />
<text  x="240.46" y="1023.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::inner (18 samples, 0.02%)</title><rect x="338.0" y="981" width="0.2" height="15.0" fill="rgb(250,178,54)" rx="2" ry="2" />
<text  x="341.01" y="991.5" ></text>
</g>
<g >
<title>_fget_files (21 samples, 0.02%)</title><rect x="1161.8" y="869" width="0.3" height="15.0" fill="rgb(210,153,53)" rx="2" ry="2" />
<text  x="1164.81" y="879.5" ></text>
</g>
<g >
<title>actix_http::response::ResponseBuilder::message_body (20 samples, 0.02%)</title><rect x="380.1" y="885" width="0.2" height="15.0" fill="rgb(239,105,28)" rx="2" ry="2" />
<text  x="383.08" y="895.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (49 samples, 0.05%)</title><rect x="423.8" y="549" width="0.6" height="15.0" fill="rgb(238,155,33)" rx="2" ry="2" />
<text  x="426.79" y="559.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (17 samples, 0.02%)</title><rect x="328.0" y="821" width="0.2" height="15.0" fill="rgb(232,210,19)" rx="2" ry="2" />
<text  x="330.97" y="831.5" ></text>
</g>
<g >
<title>int_free (21 samples, 0.02%)</title><rect x="124.8" y="789" width="0.2" height="15.0" fill="rgb(228,28,50)" rx="2" ry="2" />
<text  x="127.77" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="139.7" y="725" width="0.2" height="15.0" fill="rgb(234,219,45)" rx="2" ry="2" />
<text  x="142.71" y="735.5" ></text>
</g>
<g >
<title>clear_inode (17 samples, 0.02%)</title><rect x="749.8" y="533" width="0.2" height="15.0" fill="rgb(207,159,42)" rx="2" ry="2" />
<text  x="752.81" y="543.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (140 samples, 0.15%)</title><rect x="720.9" y="757" width="1.8" height="15.0" fill="rgb(234,151,50)" rx="2" ry="2" />
<text  x="723.91" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (10 samples, 0.01%)</title><rect x="723.0" y="869" width="0.1" height="15.0" fill="rgb(219,64,25)" rx="2" ry="2" />
<text  x="725.99" y="879.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (60 samples, 0.06%)</title><rect x="226.8" y="661" width="0.8" height="15.0" fill="rgb(239,214,46)" rx="2" ry="2" />
<text  x="229.81" y="671.5" ></text>
</g>
<g >
<title>call_rcu (21 samples, 0.02%)</title><rect x="742.1" y="613" width="0.3" height="15.0" fill="rgb(214,177,1)" rx="2" ry="2" />
<text  x="745.09" y="623.5" ></text>
</g>
<g >
<title>_errno_location (8 samples, 0.01%)</title><rect x="1117.4" y="869" width="0.1" height="15.0" fill="rgb(228,137,36)" rx="2" ry="2" />
<text  x="1120.39" y="879.5" ></text>
</g>
<g >
<title>native_read_msr (19 samples, 0.02%)</title><rect x="893.8" y="533" width="0.2" height="15.0" fill="rgb(218,76,7)" rx="2" ry="2" />
<text  x="896.80" y="543.5" ></text>
</g>
<g >
<title>actix_rt::arbiter::Arbiter::spawn::{{closure}}::{{closure}} (1,062 samples, 1.14%)</title><rect x="489.7" y="1173" width="13.5" height="15.0" fill="rgb(252,123,9)" rx="2" ry="2" />
<text  x="492.73" y="1183.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (8,015 samples, 8.60%)</title><rect x="1086.8" y="1109" width="101.5" height="15.0" fill="rgb(213,59,15)" rx="2" ry="2" />
<text  x="1089.83" y="1119.5" >std::thread:..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.02%)</title><rect x="68.0" y="949" width="0.2" height="15.0" fill="rgb(244,153,36)" rx="2" ry="2" />
<text  x="70.99" y="959.5" ></text>
</g>
<g >
<title>actix_http::message::RESPONSE_POOL::_getit (40 samples, 0.04%)</title><rect x="377.1" y="821" width="0.5" height="15.0" fill="rgb(216,97,54)" rx="2" ry="2" />
<text  x="380.13" y="831.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (157 samples, 0.17%)</title><rect x="223.0" y="629" width="2.0" height="15.0" fill="rgb(245,17,14)" rx="2" ry="2" />
<text  x="225.99" y="639.5" ></text>
</g>
<g >
<title>tokio::util::wake::drop_arc_raw (42 samples, 0.05%)</title><rect x="1022.2" y="517" width="0.6" height="15.0" fill="rgb(246,44,41)" rx="2" ry="2" />
<text  x="1025.25" y="527.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths_dot (374 samples, 0.40%)</title><rect x="115.9" y="965" width="4.7" height="15.0" fill="rgb(251,178,13)" rx="2" ry="2" />
<text  x="118.88" y="975.5" ></text>
</g>
<g >
<title>ep_poll (9 samples, 0.01%)</title><rect x="953.0" y="693" width="0.1" height="15.0" fill="rgb(241,141,51)" rx="2" ry="2" />
<text  x="955.97" y="703.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (13 samples, 0.01%)</title><rect x="1152.4" y="757" width="0.2" height="15.0" fill="rgb(231,139,54)" rx="2" ry="2" />
<text  x="1155.42" y="767.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::is_empty (8 samples, 0.01%)</title><rect x="234.3" y="1077" width="0.1" height="15.0" fill="rgb(224,200,15)" rx="2" ry="2" />
<text  x="237.28" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (46 samples, 0.05%)</title><rect x="164.3" y="805" width="0.6" height="15.0" fill="rgb(231,39,31)" rx="2" ry="2" />
<text  x="167.35" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (66 samples, 0.07%)</title><rect x="55.7" y="805" width="0.8" height="15.0" fill="rgb(209,97,14)" rx="2" ry="2" />
<text  x="58.67" y="815.5" ></text>
</g>
<g >
<title>mio::event_imp::Event::kind (11 samples, 0.01%)</title><rect x="803.5" y="821" width="0.1" height="15.0" fill="rgb(251,188,38)" rx="2" ry="2" />
<text  x="806.47" y="831.5" ></text>
</g>
<g >
<title>&lt;mio::poll::RegistrationInner as core::ops::deref::Deref&gt;::deref (29 samples, 0.03%)</title><rect x="966.6" y="789" width="0.4" height="15.0" fill="rgb(244,159,9)" rx="2" ry="2" />
<text  x="969.63" y="799.5" ></text>
</g>
<g >
<title>_dev_queue_xmit (232 samples, 0.25%)</title><rect x="323.7" y="693" width="2.9" height="15.0" fill="rgb(223,111,40)" rx="2" ry="2" />
<text  x="326.70" y="703.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll::{{closure}} (20,985 samples, 22.51%)</title><rect x="529.3" y="1157" width="265.7" height="15.0" fill="rgb(221,229,18)" rx="2" ry="2" />
<text  x="532.33" y="1167.5" >tokio::runtime::task::harness::Harn..</text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (46 samples, 0.05%)</title><rect x="36.7" y="1109" width="0.6" height="15.0" fill="rgb(244,66,10)" rx="2" ry="2" />
<text  x="39.70" y="1119.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::occupied_bit (17 samples, 0.02%)</title><rect x="1001.8" y="789" width="0.2" height="15.0" fill="rgb(205,90,5)" rx="2" ry="2" />
<text  x="1004.76" y="799.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (16 samples, 0.02%)</title><rect x="1045.3" y="261" width="0.2" height="15.0" fill="rgb(224,5,26)" rx="2" ry="2" />
<text  x="1048.26" y="271.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (5,168 samples, 5.54%)</title><rect x="1018.4" y="725" width="65.4" height="15.0" fill="rgb(250,5,41)" rx="2" ry="2" />
<text  x="1021.40" y="735.5" >tokio::..</text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as actix_server::socket::FromStream&gt;::from_stdstream (190 samples, 0.20%)</title><rect x="513.0" y="853" width="2.4" height="15.0" fill="rgb(206,208,39)" rx="2" ry="2" />
<text  x="515.99" y="863.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk::{{closure}} (420 samples, 0.45%)</title><rect x="174.1" y="709" width="5.3" height="15.0" fill="rgb(246,122,34)" rx="2" ry="2" />
<text  x="177.10" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (71 samples, 0.08%)</title><rect x="113.4" y="933" width="0.9" height="15.0" fill="rgb(223,93,24)" rx="2" ry="2" />
<text  x="116.38" y="943.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.04%)</title><rect x="424.8" y="645" width="0.4" height="15.0" fill="rgb(215,150,10)" rx="2" ry="2" />
<text  x="427.78" y="655.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (332 samples, 0.36%)</title><rect x="1038.3" y="309" width="4.2" height="15.0" fill="rgb(205,21,52)" rx="2" ry="2" />
<text  x="1041.26" y="319.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::as_usize (15 samples, 0.02%)</title><rect x="464.8" y="949" width="0.2" height="15.0" fill="rgb(211,38,10)" rx="2" ry="2" />
<text  x="467.81" y="959.5" ></text>
</g>
<g >
<title>tokio::io::driver::platform::sys::hup (32 samples, 0.03%)</title><rect x="235.3" y="1077" width="0.4" height="15.0" fill="rgb(218,7,3)" rx="2" ry="2" />
<text  x="238.28" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="139.7" y="709" width="0.2" height="15.0" fill="rgb(237,17,3)" rx="2" ry="2" />
<text  x="142.71" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;mio::sys::unix::tcp::TcpStream&gt; (2,989 samples, 3.21%)</title><rect x="733.0" y="821" width="37.8" height="15.0" fill="rgb(207,131,20)" rx="2" ry="2" />
<text  x="735.99" y="831.5" >cor..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::runtime::enter::DisallowBlockingGuard&gt; (53 samples, 0.06%)</title><rect x="1019.9" y="693" width="0.7" height="15.0" fill="rgb(244,67,32)" rx="2" ry="2" />
<text  x="1022.91" y="703.5" ></text>
</g>
<g >
<title>ktime_get (14 samples, 0.02%)</title><rect x="702.7" y="661" width="0.2" height="15.0" fill="rgb(230,156,24)" rx="2" ry="2" />
<text  x="705.70" y="671.5" ></text>
</g>
<g >
<title>dst_release (36 samples, 0.04%)</title><rect x="313.6" y="421" width="0.4" height="15.0" fill="rgb(223,94,24)" rx="2" ry="2" />
<text  x="316.56" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="380.8" y="869" width="0.1" height="15.0" fill="rgb(212,124,34)" rx="2" ry="2" />
<text  x="383.77" y="879.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll::{{closure}} (2,600 samples, 2.79%)</title><rect x="1036.5" y="453" width="32.9" height="15.0" fill="rgb(239,17,53)" rx="2" ry="2" />
<text  x="1039.50" y="463.5" >to..</text>
</g>
<g >
<title>ip_finish_output2 (305 samples, 0.33%)</title><rect x="623.1" y="149" width="3.9" height="15.0" fill="rgb(243,200,19)" rx="2" ry="2" />
<text  x="626.14" y="159.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="180.3" y="613" width="0.1" height="15.0" fill="rgb(221,30,14)" rx="2" ry="2" />
<text  x="183.26" y="623.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (31 samples, 0.03%)</title><rect x="180.9" y="597" width="0.4" height="15.0" fill="rgb(239,193,5)" rx="2" ry="2" />
<text  x="183.93" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (40 samples, 0.04%)</title><rect x="185.1" y="741" width="0.5" height="15.0" fill="rgb(249,186,43)" rx="2" ry="2" />
<text  x="188.08" y="751.5" ></text>
</g>
<g >
<title>httparse::simd::runtime::match_uri_vectored (104 samples, 0.11%)</title><rect x="50.8" y="1141" width="1.3" height="15.0" fill="rgb(215,33,15)" rx="2" ry="2" />
<text  x="53.80" y="1151.5" ></text>
</g>
<g >
<title>eth_type_trans (16 samples, 0.02%)</title><rect x="625.6" y="69" width="0.2" height="15.0" fill="rgb(231,35,33)" rx="2" ry="2" />
<text  x="628.60" y="79.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (140 samples, 0.15%)</title><rect x="358.3" y="917" width="1.8" height="15.0" fill="rgb(206,67,4)" rx="2" ry="2" />
<text  x="361.31" y="927.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (20 samples, 0.02%)</title><rect x="376.7" y="725" width="0.3" height="15.0" fill="rgb(225,34,5)" rx="2" ry="2" />
<text  x="379.74" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;actix_http::h1::dispatcher::DispatcherMessage&gt;&gt; (91 samples, 0.10%)</title><rect x="718.9" y="885" width="1.1" height="15.0" fill="rgb(252,52,47)" rx="2" ry="2" />
<text  x="721.89" y="895.5" ></text>
</g>
<g >
<title>core::mem::replace (11 samples, 0.01%)</title><rect x="137.7" y="869" width="0.1" height="15.0" fill="rgb(233,46,24)" rx="2" ry="2" />
<text  x="140.66" y="879.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term (162 samples, 0.17%)</title><rect x="88.4" y="837" width="2.0" height="15.0" fill="rgb(243,7,19)" rx="2" ry="2" />
<text  x="91.37" y="847.5" ></text>
</g>
<g >
<title>tokio::io::driver::platform::sys::hup (13 samples, 0.01%)</title><rect x="712.7" y="917" width="0.2" height="15.0" fill="rgb(234,89,14)" rx="2" ry="2" />
<text  x="715.69" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (78 samples, 0.08%)</title><rect x="242.4" y="661" width="1.0" height="15.0" fill="rgb(234,72,42)" rx="2" ry="2" />
<text  x="245.37" y="671.5" ></text>
</g>
<g >
<title>tcp_data_queue (239 samples, 0.26%)</title><rect x="554.0" y="709" width="3.0" height="15.0" fill="rgb(243,154,8)" rx="2" ry="2" />
<text  x="557.01" y="719.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (23 samples, 0.02%)</title><rect x="183.1" y="725" width="0.3" height="15.0" fill="rgb(232,226,30)" rx="2" ry="2" />
<text  x="186.09" y="735.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (67 samples, 0.07%)</title><rect x="670.8" y="805" width="0.8" height="15.0" fill="rgb(220,23,16)" rx="2" ry="2" />
<text  x="673.76" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,704 samples, 11.48%)</title><rect x="538.4" y="885" width="135.5" height="15.0" fill="rgb(215,200,42)" rx="2" ry="2" />
<text  x="541.37" y="895.5" >entry_SYSCALL_64_..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (36 samples, 0.04%)</title><rect x="179.6" y="725" width="0.4" height="15.0" fill="rgb(248,88,32)" rx="2" ry="2" />
<text  x="182.56" y="735.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (715 samples, 0.77%)</title><rect x="198.0" y="661" width="9.1" height="15.0" fill="rgb(217,112,47)" rx="2" ry="2" />
<text  x="201.02" y="671.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (9 samples, 0.01%)</title><rect x="701.9" y="693" width="0.1" height="15.0" fill="rgb(251,209,13)" rx="2" ry="2" />
<text  x="704.91" y="703.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_request (304 samples, 0.33%)</title><rect x="468.9" y="1253" width="3.8" height="15.0" fill="rgb(224,104,41)" rx="2" ry="2" />
<text  x="471.90" y="1263.5" ></text>
</g>
<g >
<title>_sock_release (548 samples, 0.59%)</title><rect x="760.7" y="597" width="6.9" height="15.0" fill="rgb(251,99,44)" rx="2" ry="2" />
<text  x="763.66" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="1021.8" y="501" width="0.4" height="15.0" fill="rgb(225,106,18)" rx="2" ry="2" />
<text  x="1024.81" y="511.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (503 samples, 0.54%)</title><rect x="568.2" y="757" width="6.3" height="15.0" fill="rgb(225,37,30)" rx="2" ry="2" />
<text  x="571.16" y="767.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (20 samples, 0.02%)</title><rect x="167.7" y="757" width="0.2" height="15.0" fill="rgb(235,44,28)" rx="2" ry="2" />
<text  x="170.66" y="767.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::and_then (30 samples, 0.03%)</title><rect x="343.3" y="981" width="0.4" height="15.0" fill="rgb(233,195,40)" rx="2" ry="2" />
<text  x="346.30" y="991.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (139 samples, 0.15%)</title><rect x="153.1" y="693" width="1.8" height="15.0" fill="rgb(215,7,7)" rx="2" ry="2" />
<text  x="156.14" y="703.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.01%)</title><rect x="226.5" y="597" width="0.1" height="15.0" fill="rgb(231,5,5)" rx="2" ry="2" />
<text  x="229.54" y="607.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.01%)</title><rect x="142.4" y="581" width="0.1" height="15.0" fill="rgb(211,211,27)" rx="2" ry="2" />
<text  x="145.40" y="591.5" ></text>
</g>
<g >
<title>&lt;actix_web::handler::HandlerServiceResponse&lt;T,R&gt; as core::future::future::Future&gt;::poll (4,863 samples, 5.22%)</title><rect x="373.9" y="949" width="61.6" height="15.0" fill="rgb(245,96,0)" rx="2" ry="2" />
<text  x="376.92" y="959.5" >&lt;actix..</text>
</g>
<g >
<title>bictcp_cwnd_event (10 samples, 0.01%)</title><rect x="659.3" y="709" width="0.2" height="15.0" fill="rgb(237,39,36)" rx="2" ry="2" />
<text  x="662.33" y="719.5" ></text>
</g>
<g >
<title>apparmor_ip_postrout.sr. (14 samples, 0.02%)</title><rect x="655.1" y="613" width="0.2" height="15.0" fill="rgb(247,20,15)" rx="2" ry="2" />
<text  x="658.13" y="623.5" ></text>
</g>
<g >
<title>_lock_text_start (20 samples, 0.02%)</title><rect x="1097.0" y="389" width="0.3" height="15.0" fill="rgb(209,170,42)" rx="2" ry="2" />
<text  x="1100.00" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::os::errno (17 samples, 0.02%)</title><rect x="707.6" y="805" width="0.3" height="15.0" fill="rgb(211,41,0)" rx="2" ry="2" />
<text  x="710.65" y="815.5" ></text>
</g>
<g >
<title>actix_server::socket::SocketListener::accept (3,501 samples, 3.76%)</title><rect x="1115.9" y="1029" width="44.3" height="15.0" fill="rgb(254,133,22)" rx="2" ry="2" />
<text  x="1118.90" y="1039.5" >acti..</text>
</g>
<g >
<title>tokio::runtime::task::state::State::transition_to_terminal (13 samples, 0.01%)</title><rect x="1072.0" y="517" width="0.2" height="15.0" fill="rgb(242,136,43)" rx="2" ry="2" />
<text  x="1075.02" y="527.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (10 samples, 0.01%)</title><rect x="322.3" y="469" width="0.1" height="15.0" fill="rgb(209,126,8)" rx="2" ry="2" />
<text  x="325.29" y="479.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::PathParser::compile (1,006 samples, 1.08%)</title><rect x="53.0" y="1061" width="12.7" height="15.0" fill="rgb(239,218,51)" rx="2" ry="2" />
<text  x="56.01" y="1071.5" ></text>
</g>
<g >
<title>alloc::rc::Rc&lt;T&gt;::get_mut (22 samples, 0.02%)</title><rect x="41.4" y="1125" width="0.3" height="15.0" fill="rgb(251,104,54)" rx="2" ry="2" />
<text  x="44.44" y="1135.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::whitespace (12 samples, 0.01%)</title><rect x="92.7" y="741" width="0.2" height="15.0" fill="rgb(254,174,12)" rx="2" ry="2" />
<text  x="95.72" y="751.5" ></text>
</g>
<g >
<title>update_cfs_group (10 samples, 0.01%)</title><rect x="1180.2" y="773" width="0.1" height="15.0" fill="rgb(241,113,44)" rx="2" ry="2" />
<text  x="1183.15" y="783.5" ></text>
</g>
<g >
<title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (331 samples, 0.36%)</title><rect x="525.1" y="997" width="4.2" height="15.0" fill="rgb(238,138,46)" rx="2" ry="2" />
<text  x="528.14" y="1007.5" ></text>
</g>
<g >
<title>tokio::coop::budget (870 samples, 0.93%)</title><rect x="504.4" y="1205" width="11.0" height="15.0" fill="rgb(206,166,45)" rx="2" ry="2" />
<text  x="507.38" y="1215.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="1092.2" y="677" width="0.3" height="15.0" fill="rgb(249,121,14)" rx="2" ry="2" />
<text  x="1095.23" y="687.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (13 samples, 0.01%)</title><rect x="1112.0" y="405" width="0.2" height="15.0" fill="rgb(241,166,26)" rx="2" ry="2" />
<text  x="1114.99" y="415.5" ></text>
</g>
<g >
<title>_rdl_alloc (9 samples, 0.01%)</title><rect x="133.5" y="869" width="0.1" height="15.0" fill="rgb(239,197,25)" rx="2" ry="2" />
<text  x="136.51" y="879.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (17 samples, 0.02%)</title><rect x="358.0" y="949" width="0.2" height="15.0" fill="rgb(250,71,22)" rx="2" ry="2" />
<text  x="360.97" y="959.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="119.2" y="757" width="0.2" height="15.0" fill="rgb(214,137,52)" rx="2" ry="2" />
<text  x="122.18" y="767.5" ></text>
</g>
<g >
<title>tokio::runtime::task::Notified&lt;S&gt;::run (3,458 samples, 3.71%)</title><rect x="1032.5" y="581" width="43.8" height="15.0" fill="rgb(206,149,29)" rx="2" ry="2" />
<text  x="1035.54" y="591.5" >toki..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (17 samples, 0.02%)</title><rect x="510.1" y="597" width="0.3" height="15.0" fill="rgb(221,58,26)" rx="2" ry="2" />
<text  x="513.14" y="607.5" ></text>
</g>
<g >
<title>&lt;dyn core::any::Any&gt;::downcast_ref (51 samples, 0.05%)</title><rect x="350.0" y="805" width="0.7" height="15.0" fill="rgb(241,137,31)" rx="2" ry="2" />
<text  x="353.01" y="815.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (65 samples, 0.07%)</title><rect x="55.7" y="789" width="0.8" height="15.0" fill="rgb(249,107,4)" rx="2" ry="2" />
<text  x="58.67" y="799.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (78 samples, 0.08%)</title><rect x="242.4" y="933" width="1.0" height="15.0" fill="rgb(247,89,15)" rx="2" ry="2" />
<text  x="245.37" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;*const serde_json::value::Value&gt;&gt; (47 samples, 0.05%)</title><rect x="185.0" y="869" width="0.6" height="15.0" fill="rgb(240,95,40)" rx="2" ry="2" />
<text  x="188.03" y="879.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (27 samples, 0.03%)</title><rect x="64.2" y="645" width="0.3" height="15.0" fill="rgb(245,216,35)" rx="2" ry="2" />
<text  x="67.19" y="655.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::cmp::CmpEq as jsonpath_lib::selector::cmp::Cmp&gt;::cmp_json (118 samples, 0.13%)</title><rect x="138.4" y="853" width="1.5" height="15.0" fill="rgb(235,26,43)" rx="2" ry="2" />
<text  x="141.43" y="863.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (770 samples, 0.83%)</title><rect x="515.4" y="1045" width="9.7" height="15.0" fill="rgb(213,45,44)" rx="2" ry="2" />
<text  x="518.39" y="1055.5" ></text>
</g>
<g >
<title>rust-actix-json (106 samples, 0.11%)</title><rect x="1188.7" y="1285" width="1.3" height="15.0" fill="rgb(228,20,41)" rx="2" ry="2" />
<text  x="1191.66" y="1295.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.04%)</title><rect x="344.4" y="933" width="0.5" height="15.0" fill="rgb(238,98,13)" rx="2" ry="2" />
<text  x="347.40" y="943.5" ></text>
</g>
<g >
<title>_ip_local_out (26 samples, 0.03%)</title><rect x="584.9" y="645" width="0.3" height="15.0" fill="rgb(209,94,28)" rx="2" ry="2" />
<text  x="587.86" y="655.5" ></text>
</g>
<g >
<title>bytes::buf::buf_mut::BufMut::put_u8 (45 samples, 0.05%)</title><rect x="443.0" y="965" width="0.6" height="15.0" fill="rgb(207,152,2)" rx="2" ry="2" />
<text  x="446.02" y="975.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.03%)</title><rect x="148.1" y="853" width="0.3" height="15.0" fill="rgb(219,124,31)" rx="2" ry="2" />
<text  x="151.07" y="863.5" ></text>
</g>
<g >
<title>_hrtimer_init (63 samples, 0.07%)</title><rect x="856.2" y="613" width="0.8" height="15.0" fill="rgb(216,171,35)" rx="2" ry="2" />
<text  x="859.18" y="623.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (52 samples, 0.06%)</title><rect x="759.2" y="597" width="0.7" height="15.0" fill="rgb(225,25,39)" rx="2" ry="2" />
<text  x="762.19" y="607.5" ></text>
</g>
<g >
<title>_GI___libc_free (18 samples, 0.02%)</title><rect x="375.1" y="901" width="0.2" height="15.0" fill="rgb(208,157,35)" rx="2" ry="2" />
<text  x="378.08" y="911.5" ></text>
</g>
<g >
<title>int_free (757 samples, 0.81%)</title><rect x="723.1" y="885" width="9.6" height="15.0" fill="rgb(254,93,24)" rx="2" ry="2" />
<text  x="726.12" y="895.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (161 samples, 0.17%)</title><rect x="225.9" y="693" width="2.0" height="15.0" fill="rgb(215,85,41)" rx="2" ry="2" />
<text  x="228.87" y="703.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::UnboundedSender&lt;T&gt;::do_send_nb (2,114 samples, 2.27%)</title><rect x="1089.1" y="981" width="26.8" height="15.0" fill="rgb(241,214,35)" rx="2" ry="2" />
<text  x="1092.14" y="991.5" >f..</text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="211.4" y="581" width="0.2" height="15.0" fill="rgb(245,56,29)" rx="2" ry="2" />
<text  x="214.37" y="591.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (13 samples, 0.01%)</title><rect x="368.8" y="1013" width="0.1" height="15.0" fill="rgb(209,195,3)" rx="2" ry="2" />
<text  x="371.78" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;&amp;str&gt;&gt; (12 samples, 0.01%)</title><rect x="380.8" y="885" width="0.1" height="15.0" fill="rgb(217,3,41)" rx="2" ry="2" />
<text  x="383.77" y="895.5" ></text>
</g>
<g >
<title>raw_spin_trylock (11 samples, 0.01%)</title><rect x="758.7" y="613" width="0.2" height="15.0" fill="rgb(245,111,21)" rx="2" ry="2" />
<text  x="761.74" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (156 samples, 0.17%)</title><rect x="278.4" y="981" width="2.0" height="15.0" fill="rgb(242,67,5)" rx="2" ry="2" />
<text  x="281.40" y="991.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (80 samples, 0.09%)</title><rect x="470.3" y="805" width="1.1" height="15.0" fill="rgb(229,139,14)" rx="2" ry="2" />
<text  x="473.34" y="815.5" ></text>
</g>
<g >
<title>ksize (47 samples, 0.05%)</title><rect x="573.3" y="725" width="0.6" height="15.0" fill="rgb(229,3,37)" rx="2" ry="2" />
<text  x="576.29" y="735.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_write_ready (52 samples, 0.06%)</title><rect x="675.9" y="949" width="0.7" height="15.0" fill="rgb(245,176,30)" rx="2" ry="2" />
<text  x="678.94" y="959.5" ></text>
</g>
<g >
<title>ep_poll_callback (31 samples, 0.03%)</title><rect x="315.7" y="341" width="0.4" height="15.0" fill="rgb(209,100,53)" rx="2" ry="2" />
<text  x="318.74" y="351.5" ></text>
</g>
<g >
<title>actix_server::worker::Worker::start::{{closure}}::{{closure}} (870 samples, 0.93%)</title><rect x="504.4" y="901" width="11.0" height="15.0" fill="rgb(241,59,22)" rx="2" ry="2" />
<text  x="507.38" y="911.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (28 samples, 0.03%)</title><rect x="125.7" y="725" width="0.4" height="15.0" fill="rgb(225,131,28)" rx="2" ry="2" />
<text  x="128.75" y="735.5" ></text>
</g>
<g >
<title>_x64_sys_epoll_wait (16 samples, 0.02%)</title><rect x="839.7" y="725" width="0.2" height="15.0" fill="rgb(209,111,15)" rx="2" ry="2" />
<text  x="842.74" y="735.5" ></text>
</g>
<g >
<title>lock_timer_base (78 samples, 0.08%)</title><rect x="664.6" y="645" width="1.0" height="15.0" fill="rgb(243,184,37)" rx="2" ry="2" />
<text  x="667.65" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::vec_deque::VecDeque&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="1081.3" y="661" width="0.1" height="15.0" fill="rgb(235,3,48)" rx="2" ry="2" />
<text  x="1084.25" y="671.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (17 samples, 0.02%)</title><rect x="639.1" y="309" width="0.2" height="15.0" fill="rgb(214,180,38)" rx="2" ry="2" />
<text  x="642.06" y="319.5" ></text>
</g>
<g >
<title>move_addr_to_user (8 samples, 0.01%)</title><rect x="512.3" y="629" width="0.1" height="15.0" fill="rgb(219,138,6)" rx="2" ry="2" />
<text  x="515.30" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::time::delay::Delay&gt;&gt; (160 samples, 0.17%)</title><rect x="792.8" y="901" width="2.1" height="15.0" fill="rgb(218,99,8)" rx="2" ry="2" />
<text  x="795.83" y="911.5" ></text>
</g>
<g >
<title>release_sock (1,309 samples, 1.40%)</title><rect x="542.8" y="773" width="16.6" height="15.0" fill="rgb(253,156,49)" rx="2" ry="2" />
<text  x="545.85" y="783.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (23 samples, 0.02%)</title><rect x="49.2" y="1125" width="0.3" height="15.0" fill="rgb(249,179,48)" rx="2" ry="2" />
<text  x="52.24" y="1135.5" ></text>
</g>
<g >
<title>x86_pmu_disable_all (220 samples, 0.24%)</title><rect x="1176.0" y="757" width="2.8" height="15.0" fill="rgb(225,196,16)" rx="2" ry="2" />
<text  x="1178.97" y="767.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="677.6" y="853" width="0.1" height="15.0" fill="rgb(212,144,43)" rx="2" ry="2" />
<text  x="680.60" y="863.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 0.06%)</title><rect x="528.5" y="565" width="0.7" height="15.0" fill="rgb(231,8,44)" rx="2" ry="2" />
<text  x="531.48" y="575.5" ></text>
</g>
<g >
<title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (54 samples, 0.06%)</title><rect x="975.3" y="853" width="0.7" height="15.0" fill="rgb(228,0,1)" rx="2" ry="2" />
<text  x="978.30" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParserNode&gt; (445 samples, 0.48%)</title><rect x="389.3" y="597" width="5.6" height="15.0" fill="rgb(220,81,35)" rx="2" ry="2" />
<text  x="392.30" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (347 samples, 0.37%)</title><rect x="267.4" y="965" width="4.4" height="15.0" fill="rgb(254,58,37)" rx="2" ry="2" />
<text  x="270.41" y="975.5" ></text>
</g>
<g >
<title>unlink_chunk (17 samples, 0.02%)</title><rect x="62.3" y="693" width="0.2" height="15.0" fill="rgb(252,138,7)" rx="2" ry="2" />
<text  x="65.28" y="703.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (131 samples, 0.14%)</title><rect x="144.2" y="677" width="1.6" height="15.0" fill="rgb(209,44,39)" rx="2" ry="2" />
<text  x="147.18" y="687.5" ></text>
</g>
<g >
<title>_GI___libc_free (10 samples, 0.01%)</title><rect x="392.7" y="517" width="0.2" height="15.0" fill="rgb(233,172,48)" rx="2" ry="2" />
<text  x="395.73" y="527.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (55 samples, 0.06%)</title><rect x="677.5" y="933" width="0.7" height="15.0" fill="rgb(214,3,5)" rx="2" ry="2" />
<text  x="680.48" y="943.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (31 samples, 0.03%)</title><rect x="442.6" y="917" width="0.4" height="15.0" fill="rgb(254,68,10)" rx="2" ry="2" />
<text  x="445.63" y="927.5" ></text>
</g>
<g >
<title>actix_router::resource::ResourceDef::match_path_checked (256 samples, 0.27%)</title><rect x="354.1" y="981" width="3.3" height="15.0" fill="rgb(238,197,24)" rx="2" ry="2" />
<text  x="357.15" y="991.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (870 samples, 0.93%)</title><rect x="504.4" y="1061" width="11.0" height="15.0" fill="rgb(226,196,0)" rx="2" ry="2" />
<text  x="507.38" y="1071.5" ></text>
</g>
<g >
<title>int_malloc (574 samples, 0.62%)</title><rect x="495.4" y="965" width="7.3" height="15.0" fill="rgb(223,177,14)" rx="2" ry="2" />
<text  x="498.42" y="975.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="194.2" y="565" width="0.5" height="15.0" fill="rgb(229,224,5)" rx="2" ry="2" />
<text  x="197.23" y="575.5" ></text>
</g>
<g >
<title>tokio::task::local::CURRENT::FOO::_getit (23 samples, 0.02%)</title><rect x="491.2" y="1093" width="0.3" height="15.0" fill="rgb(209,196,34)" rx="2" ry="2" />
<text  x="494.16" y="1103.5" ></text>
</g>
<g >
<title>_release_sock (10 samples, 0.01%)</title><rect x="763.1" y="549" width="0.1" height="15.0" fill="rgb(215,94,49)" rx="2" ry="2" />
<text  x="766.08" y="559.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hasher::{{closure}} (191 samples, 0.20%)</title><rect x="215.6" y="581" width="2.4" height="15.0" fill="rgb(227,55,18)" rx="2" ry="2" />
<text  x="218.56" y="591.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (46 samples, 0.05%)</title><rect x="217.4" y="485" width="0.6" height="15.0" fill="rgb(243,157,12)" rx="2" ry="2" />
<text  x="220.40" y="495.5" ></text>
</g>
<g >
<title>_rust_alloc (8 samples, 0.01%)</title><rect x="1091.3" y="837" width="0.1" height="15.0" fill="rgb(250,177,27)" rx="2" ry="2" />
<text  x="1094.28" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.05%)</title><rect x="124.5" y="837" width="0.5" height="15.0" fill="rgb(225,140,18)" rx="2" ry="2" />
<text  x="127.50" y="847.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (870 samples, 0.93%)</title><rect x="504.4" y="1077" width="11.0" height="15.0" fill="rgb(231,20,10)" rx="2" ry="2" />
<text  x="507.38" y="1087.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (27 samples, 0.03%)</title><rect x="438.5" y="901" width="0.4" height="15.0" fill="rgb(233,10,42)" rx="2" ry="2" />
<text  x="441.52" y="911.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek::{{closure}} (27 samples, 0.03%)</title><rect x="64.2" y="677" width="0.3" height="15.0" fill="rgb(238,185,9)" rx="2" ry="2" />
<text  x="67.19" y="687.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="381.9" y="853" width="0.3" height="15.0" fill="rgb(219,83,52)" rx="2" ry="2" />
<text  x="384.94" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,014 samples, 1.09%)</title><rect x="773.0" y="709" width="12.8" height="15.0" fill="rgb(228,136,8)" rx="2" ry="2" />
<text  x="775.97" y="719.5" ></text>
</g>
<g >
<title>_pthread_disable_asynccancel (13 samples, 0.01%)</title><rect x="734.6" y="725" width="0.2" height="15.0" fill="rgb(216,98,15)" rx="2" ry="2" />
<text  x="737.61" y="735.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_ready (61 samples, 0.07%)</title><rect x="465.9" y="965" width="0.8" height="15.0" fill="rgb(215,186,40)" rx="2" ry="2" />
<text  x="468.91" y="975.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (42 samples, 0.05%)</title><rect x="237.4" y="1077" width="0.5" height="15.0" fill="rgb(235,105,5)" rx="2" ry="2" />
<text  x="240.38" y="1087.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="214.4" y="565" width="0.2" height="15.0" fill="rgb(244,212,34)" rx="2" ry="2" />
<text  x="217.43" y="575.5" ></text>
</g>
<g >
<title>mutex_lock (19 samples, 0.02%)</title><rect x="1112.6" y="421" width="0.3" height="15.0" fill="rgb(222,92,51)" rx="2" ry="2" />
<text  x="1115.64" y="431.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (30 samples, 0.03%)</title><rect x="504.0" y="1189" width="0.4" height="15.0" fill="rgb(249,205,45)" rx="2" ry="2" />
<text  x="507.00" y="1199.5" ></text>
</g>
<g >
<title>skb_release_head_state (9 samples, 0.01%)</title><rect x="550.5" y="645" width="0.1" height="15.0" fill="rgb(248,104,23)" rx="2" ry="2" />
<text  x="553.53" y="655.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set_epi8 (74 samples, 0.08%)</title><rect x="206.1" y="517" width="1.0" height="15.0" fill="rgb(253,12,17)" rx="2" ry="2" />
<text  x="209.13" y="527.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (8 samples, 0.01%)</title><rect x="975.9" y="501" width="0.1" height="15.0" fill="rgb(238,181,38)" rx="2" ry="2" />
<text  x="978.88" y="511.5" ></text>
</g>
<g >
<title>_init_rwsem (12 samples, 0.01%)</title><rect x="1130.3" y="757" width="0.1" height="15.0" fill="rgb(217,159,52)" rx="2" ry="2" />
<text  x="1133.25" y="767.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (8 samples, 0.01%)</title><rect x="1045.6" y="309" width="0.1" height="15.0" fill="rgb(226,35,7)" rx="2" ry="2" />
<text  x="1048.62" y="319.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::new_with_ready (1,573 samples, 1.69%)</title><rect x="244.1" y="725" width="19.9" height="15.0" fill="rgb(212,135,43)" rx="2" ry="2" />
<text  x="247.07" y="735.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt; (68 samples, 0.07%)</title><rect x="344.0" y="1029" width="0.9" height="15.0" fill="rgb(219,147,1)" rx="2" ry="2" />
<text  x="346.99" y="1039.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (131 samples, 0.14%)</title><rect x="1089.7" y="853" width="1.7" height="15.0" fill="rgb(232,13,45)" rx="2" ry="2" />
<text  x="1092.72" y="863.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.01%)</title><rect x="65.4" y="789" width="0.2" height="15.0" fill="rgb(253,74,37)" rx="2" ry="2" />
<text  x="68.43" y="799.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::promote_to_shared (47 samples, 0.05%)</title><rect x="43.5" y="1141" width="0.6" height="15.0" fill="rgb(218,134,26)" rx="2" ry="2" />
<text  x="46.51" y="1151.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::wake (26 samples, 0.03%)</title><rect x="973.0" y="629" width="0.4" height="15.0" fill="rgb(235,206,49)" rx="2" ry="2" />
<text  x="976.03" y="639.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (17 samples, 0.02%)</title><rect x="358.0" y="917" width="0.2" height="15.0" fill="rgb(226,213,2)" rx="2" ry="2" />
<text  x="360.97" y="927.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::payload::Payload&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,actix_http::error::PayloadError&gt;&gt;&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="366.7" y="1013" width="0.4" height="15.0" fill="rgb(219,92,4)" rx="2" ry="2" />
<text  x="369.68" y="1023.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (770 samples, 0.83%)</title><rect x="515.4" y="965" width="9.7" height="15.0" fill="rgb(239,161,3)" rx="2" ry="2" />
<text  x="518.39" y="975.5" ></text>
</g>
<g >
<title>core::cell::BorrowRefMut::new (31 samples, 0.03%)</title><rect x="1067.3" y="261" width="0.4" height="15.0" fill="rgb(213,118,47)" rx="2" ry="2" />
<text  x="1070.29" y="271.5" ></text>
</g>
<g >
<title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (15 samples, 0.02%)</title><rect x="1114.4" y="757" width="0.2" height="15.0" fill="rgb(232,127,23)" rx="2" ry="2" />
<text  x="1117.39" y="767.5" ></text>
</g>
<g >
<title>read_tsc (39 samples, 0.04%)</title><rect x="329.0" y="837" width="0.5" height="15.0" fill="rgb(219,189,47)" rx="2" ry="2" />
<text  x="331.98" y="847.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::inner (21 samples, 0.02%)</title><rect x="273.2" y="933" width="0.3" height="15.0" fill="rgb(250,67,30)" rx="2" ry="2" />
<text  x="276.20" y="943.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (84 samples, 0.09%)</title><rect x="334.1" y="933" width="1.1" height="15.0" fill="rgb(215,156,22)" rx="2" ry="2" />
<text  x="337.11" y="943.5" ></text>
</g>
<g >
<title>actix_http::header::map::HeaderMap::clear (221 samples, 0.24%)</title><rect x="38.6" y="1109" width="2.8" height="15.0" fill="rgb(207,229,15)" rx="2" ry="2" />
<text  x="41.57" y="1119.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (43 samples, 0.05%)</title><rect x="514.4" y="725" width="0.6" height="15.0" fill="rgb(234,140,8)" rx="2" ry="2" />
<text  x="517.43" y="735.5" ></text>
</g>
<g >
<title>futures_channel::oneshot::Inner&lt;T&gt;::recv (173 samples, 0.19%)</title><rect x="1021.4" y="581" width="2.2" height="15.0" fill="rgb(246,219,54)" rx="2" ry="2" />
<text  x="1024.36" y="591.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (31 samples, 0.03%)</title><rect x="448.1" y="917" width="0.4" height="15.0" fill="rgb(231,155,30)" rx="2" ry="2" />
<text  x="451.15" y="927.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (78 samples, 0.08%)</title><rect x="242.4" y="853" width="1.0" height="15.0" fill="rgb(233,102,26)" rx="2" ry="2" />
<text  x="245.37" y="863.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_none (29 samples, 0.03%)</title><rect x="373.4" y="933" width="0.4" height="15.0" fill="rgb(250,160,14)" rx="2" ry="2" />
<text  x="376.44" y="943.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::ref_inc (26 samples, 0.03%)</title><rect x="1062.4" y="277" width="0.3" height="15.0" fill="rgb(219,228,35)" rx="2" ry="2" />
<text  x="1065.41" y="287.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (24 samples, 0.03%)</title><rect x="272.6" y="917" width="0.3" height="15.0" fill="rgb(251,189,8)" rx="2" ry="2" />
<text  x="275.63" y="927.5" ></text>
</g>
<g >
<title>dequeue_task (473 samples, 0.51%)</title><rect x="1179.0" y="821" width="6.0" height="15.0" fill="rgb(242,70,6)" rx="2" ry="2" />
<text  x="1181.97" y="831.5" ></text>
</g>
<g >
<title>tcache_get (13 samples, 0.01%)</title><rect x="134.1" y="821" width="0.1" height="15.0" fill="rgb(243,110,6)" rx="2" ry="2" />
<text  x="137.05" y="831.5" ></text>
</g>
<g >
<title>tokio::util::slab::shard::Shard&lt;T&gt;::get (17 samples, 0.02%)</title><rect x="975.1" y="789" width="0.2" height="15.0" fill="rgb(221,214,14)" rx="2" ry="2" />
<text  x="978.08" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (31 samples, 0.03%)</title><rect x="92.0" y="693" width="0.4" height="15.0" fill="rgb(251,92,10)" rx="2" ry="2" />
<text  x="94.99" y="703.5" ></text>
</g>
<g >
<title>actix_http::config::ServiceConfig::keep_alive_enabled (19 samples, 0.02%)</title><rect x="264.5" y="1061" width="0.3" height="15.0" fill="rgb(212,110,16)" rx="2" ry="2" />
<text  x="267.55" y="1071.5" ></text>
</g>
<g >
<title>release_sock (17 samples, 0.02%)</title><rect x="541.5" y="789" width="0.2" height="15.0" fill="rgb(220,12,52)" rx="2" ry="2" />
<text  x="544.52" y="799.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (71 samples, 0.08%)</title><rect x="567.3" y="741" width="0.9" height="15.0" fill="rgb(213,21,27)" rx="2" ry="2" />
<text  x="570.27" y="751.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="352.4" y="869" width="0.1" height="15.0" fill="rgb(205,215,34)" rx="2" ry="2" />
<text  x="355.37" y="879.5" ></text>
</g>
<g >
<title>_x64_sys_epoll_wait (49 samples, 0.05%)</title><rect x="975.4" y="693" width="0.6" height="15.0" fill="rgb(241,162,35)" rx="2" ry="2" />
<text  x="978.36" y="703.5" ></text>
</g>
<g >
<title>std::os::imp::unix::net::stream::UnixStream::set_nonblocking (432 samples, 0.46%)</title><rect x="517.8" y="581" width="5.4" height="15.0" fill="rgb(225,187,11)" rx="2" ry="2" />
<text  x="520.76" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (15 samples, 0.02%)</title><rect x="1008.0" y="821" width="0.2" height="15.0" fill="rgb(241,98,48)" rx="2" ry="2" />
<text  x="1011.02" y="831.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.03%)</title><rect x="1073.7" y="485" width="0.3" height="15.0" fill="rgb(221,200,35)" rx="2" ry="2" />
<text  x="1076.66" y="495.5" ></text>
</g>
<g >
<title>_dentry_kill (338 samples, 0.36%)</title><rect x="1152.8" y="757" width="4.3" height="15.0" fill="rgb(224,38,11)" rx="2" ry="2" />
<text  x="1155.81" y="767.5" ></text>
</g>
<g >
<title>lock_hrtimer_base (78 samples, 0.08%)</title><rect x="860.9" y="613" width="1.0" height="15.0" fill="rgb(243,124,36)" rx="2" ry="2" />
<text  x="863.93" y="623.5" ></text>
</g>
<g >
<title>std::collections::hash::map::RandomState::new (55 samples, 0.06%)</title><rect x="228.0" y="789" width="0.7" height="15.0" fill="rgb(238,69,38)" rx="2" ry="2" />
<text  x="230.95" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (48 samples, 0.05%)</title><rect x="472.1" y="869" width="0.6" height="15.0" fill="rgb(250,20,42)" rx="2" ry="2" />
<text  x="475.14" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (138 samples, 0.15%)</title><rect x="125.3" y="853" width="1.7" height="15.0" fill="rgb(215,181,24)" rx="2" ry="2" />
<text  x="128.29" y="863.5" ></text>
</g>
<g >
<title>_x64_sys_sendto (10,585 samples, 11.36%)</title><rect x="539.0" y="853" width="134.0" height="15.0" fill="rgb(254,40,23)" rx="2" ry="2" />
<text  x="542.05" y="863.5" >_x64_sys_sendto</text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (26 samples, 0.03%)</title><rect x="179.1" y="597" width="0.3" height="15.0" fill="rgb(212,118,9)" rx="2" ry="2" />
<text  x="182.09" y="607.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::pin (17 samples, 0.02%)</title><rect x="450.6" y="1045" width="0.2" height="15.0" fill="rgb(216,206,35)" rx="2" ry="2" />
<text  x="453.57" y="1055.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (50 samples, 0.05%)</title><rect x="449.5" y="965" width="0.7" height="15.0" fill="rgb(254,63,36)" rx="2" ry="2" />
<text  x="452.53" y="975.5" ></text>
</g>
<g >
<title>tcp_small_queue_chec.sr. (17 samples, 0.02%)</title><rect x="576.6" y="725" width="0.2" height="15.0" fill="rgb(212,176,14)" rx="2" ry="2" />
<text  x="579.63" y="735.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::UnboundedSenderInner&lt;T&gt;::queue_push_and_signal (2,088 samples, 2.24%)</title><rect x="1089.5" y="965" width="26.4" height="15.0" fill="rgb(211,39,15)" rx="2" ry="2" />
<text  x="1092.47" y="975.5" >f..</text>
</g>
<g >
<title>tokio::task::local::LocalSet::tick::{{closure}} (1,573 samples, 1.69%)</title><rect x="244.1" y="1061" width="19.9" height="15.0" fill="rgb(209,6,12)" rx="2" ry="2" />
<text  x="247.07" y="1071.5" ></text>
</g>
<g >
<title>core::mem::take (28 samples, 0.03%)</title><rect x="150.2" y="885" width="0.4" height="15.0" fill="rgb(220,227,31)" rx="2" ry="2" />
<text  x="153.22" y="895.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_absolute (75 samples, 0.08%)</title><rect x="414.2" y="821" width="0.9" height="15.0" fill="rgb(248,152,2)" rx="2" ry="2" />
<text  x="417.17" y="831.5" ></text>
</g>
<g >
<title>&lt;f64 as core::num::dec2flt::float::RawFloat&gt;::pow10_fast_path (37 samples, 0.04%)</title><rect x="103.8" y="757" width="0.4" height="15.0" fill="rgb(247,50,50)" rx="2" ry="2" />
<text  x="106.76" y="767.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::poll (1,071 samples, 1.15%)</title><rect x="472.8" y="725" width="13.5" height="15.0" fill="rgb(244,218,12)" rx="2" ry="2" />
<text  x="475.77" y="735.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (43 samples, 0.05%)</title><rect x="376.5" y="757" width="0.5" height="15.0" fill="rgb(218,100,13)" rx="2" ry="2" />
<text  x="379.45" y="767.5" ></text>
</g>
<g >
<title>rw_verify_area (57 samples, 0.06%)</title><rect x="1113.0" y="453" width="0.7" height="15.0" fill="rgb(247,46,9)" rx="2" ry="2" />
<text  x="1115.97" y="463.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (23 samples, 0.02%)</title><rect x="418.9" y="741" width="0.3" height="15.0" fill="rgb(207,62,33)" rx="2" ry="2" />
<text  x="421.91" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (108 samples, 0.12%)</title><rect x="100.7" y="853" width="1.4" height="15.0" fill="rgb(245,92,29)" rx="2" ry="2" />
<text  x="103.69" y="863.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::peer_addr (78 samples, 0.08%)</title><rect x="515.7" y="597" width="1.0" height="15.0" fill="rgb(243,151,7)" rx="2" ry="2" />
<text  x="518.68" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (33 samples, 0.04%)</title><rect x="1115.9" y="597" width="0.5" height="15.0" fill="rgb(225,205,0)" rx="2" ry="2" />
<text  x="1118.95" y="607.5" ></text>
</g>
<g >
<title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13,045 samples, 13.99%)</title><rect x="67.1" y="1173" width="165.1" height="15.0" fill="rgb(205,173,5)" rx="2" ry="2" />
<text  x="70.06" y="1183.5" >&lt;core::pin::Pin&lt;P&gt; as..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.01%)</title><rect x="421.7" y="629" width="0.1" height="15.0" fill="rgb(243,180,42)" rx="2" ry="2" />
<text  x="424.72" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_web::handler::ExtractResponse&lt; (101 samples, 0.11%)</title><rect x="436.7" y="901" width="1.3" height="15.0" fill="rgb(223,116,0)" rx="2" ry="2" />
<text  x="439.69" y="911.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (870 samples, 0.93%)</title><rect x="504.4" y="1029" width="11.0" height="15.0" fill="rgb(233,10,49)" rx="2" ry="2" />
<text  x="507.38" y="1039.5" ></text>
</g>
<g >
<title>atime_needs_update (14 samples, 0.02%)</title><rect x="826.0" y="565" width="0.2" height="15.0" fill="rgb(225,122,19)" rx="2" ry="2" />
<text  x="829.02" y="575.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.01%)</title><rect x="235.0" y="981" width="0.1" height="15.0" fill="rgb(235,47,38)" rx="2" ry="2" />
<text  x="238.00" y="991.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::now (403 samples, 0.43%)</title><rect x="977.1" y="837" width="5.1" height="15.0" fill="rgb(240,151,54)" rx="2" ry="2" />
<text  x="980.08" y="847.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_and_swap (18 samples, 0.02%)</title><rect x="338.3" y="933" width="0.3" height="15.0" fill="rgb(205,53,23)" rx="2" ry="2" />
<text  x="341.32" y="943.5" ></text>
</g>
<g >
<title>_inode_wait_for_writeback (14 samples, 0.02%)</title><rect x="749.5" y="533" width="0.2" height="15.0" fill="rgb(218,227,50)" rx="2" ry="2" />
<text  x="752.55" y="543.5" ></text>
</g>
<g >
<title>touch_atime (64 samples, 0.07%)</title><rect x="828.2" y="565" width="0.8" height="15.0" fill="rgb(206,156,31)" rx="2" ry="2" />
<text  x="831.23" y="575.5" ></text>
</g>
<g >
<title>_GI_getpeername (43 samples, 0.05%)</title><rect x="468.1" y="1253" width="0.6" height="15.0" fill="rgb(235,132,16)" rx="2" ry="2" />
<text  x="471.12" y="1263.5" ></text>
</g>
<g >
<title>int_malloc (184 samples, 0.20%)</title><rect x="60.2" y="709" width="2.3" height="15.0" fill="rgb(220,117,10)" rx="2" ry="2" />
<text  x="63.17" y="719.5" ></text>
</g>
<g >
<title>_tcp_send_ac.ar. (1,008 samples, 1.08%)</title><rect x="615.5" y="277" width="12.7" height="15.0" fill="rgb(232,35,48)" rx="2" ry="2" />
<text  x="618.47" y="287.5" ></text>
</g>
<g >
<title>int_free (16 samples, 0.02%)</title><rect x="157.8" y="613" width="0.2" height="15.0" fill="rgb(226,187,41)" rx="2" ry="2" />
<text  x="160.76" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (76 samples, 0.08%)</title><rect x="99.6" y="821" width="0.9" height="15.0" fill="rgb(244,221,13)" rx="2" ry="2" />
<text  x="102.57" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::and (230 samples, 0.25%)</title><rect x="137.1" y="933" width="2.9" height="15.0" fill="rgb(226,150,14)" rx="2" ry="2" />
<text  x="140.07" y="943.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (347 samples, 0.37%)</title><rect x="267.4" y="949" width="4.4" height="15.0" fill="rgb(216,21,38)" rx="2" ry="2" />
<text  x="270.41" y="959.5" ></text>
</g>
<g >
<title>core::task::poll::Poll&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="237.0" y="1109" width="0.2" height="15.0" fill="rgb(231,179,48)" rx="2" ry="2" />
<text  x="240.04" y="1119.5" ></text>
</g>
<g >
<title>_fget_light (44 samples, 0.05%)</title><rect x="819.9" y="597" width="0.5" height="15.0" fill="rgb(206,50,43)" rx="2" ry="2" />
<text  x="822.87" y="607.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (42 samples, 0.05%)</title><rect x="1043.7" y="149" width="0.6" height="15.0" fill="rgb(227,181,0)" rx="2" ry="2" />
<text  x="1046.72" y="159.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (59 samples, 0.06%)</title><rect x="167.2" y="821" width="0.7" height="15.0" fill="rgb(205,128,25)" rx="2" ry="2" />
<text  x="170.17" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::PathParser::compile (448 samples, 0.48%)</title><rect x="396.5" y="901" width="5.6" height="15.0" fill="rgb(240,167,28)" rx="2" ry="2" />
<text  x="399.48" y="911.5" ></text>
</g>
<g >
<title>slab::Slab&lt;T&gt;::get_mut (25 samples, 0.03%)</title><rect x="1160.2" y="1029" width="0.3" height="15.0" fill="rgb(210,185,39)" rx="2" ry="2" />
<text  x="1163.21" y="1039.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (8 samples, 0.01%)</title><rect x="1039.3" y="261" width="0.1" height="15.0" fill="rgb(230,214,21)" rx="2" ry="2" />
<text  x="1042.29" y="271.5" ></text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (2,433 samples, 2.61%)</title><rect x="682.5" y="965" width="30.8" height="15.0" fill="rgb(213,56,37)" rx="2" ry="2" />
<text  x="685.51" y="975.5" >&lt;t..</text>
</g>
<g >
<title>_close (50 samples, 0.05%)</title><rect x="10.0" y="1253" width="0.6" height="15.0" fill="rgb(207,170,7)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,079 samples, 1.16%)</title><rect x="151.3" y="837" width="13.6" height="15.0" fill="rgb(210,76,36)" rx="2" ry="2" />
<text  x="154.27" y="847.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (174 samples, 0.19%)</title><rect x="95.1" y="837" width="2.2" height="15.0" fill="rgb(211,77,52)" rx="2" ry="2" />
<text  x="98.14" y="847.5" ></text>
</g>
<g >
<title>alloc_inode (595 samples, 0.64%)</title><rect x="1130.1" y="773" width="7.5" height="15.0" fill="rgb(248,178,11)" rx="2" ry="2" />
<text  x="1133.07" y="783.5" ></text>
</g>
<g >
<title>_update_load_avg_se (40 samples, 0.04%)</title><rect x="927.0" y="533" width="0.5" height="15.0" fill="rgb(206,43,1)" rx="2" ry="2" />
<text  x="929.97" y="543.5" ></text>
</g>
<g >
<title>ksys_read (1,022 samples, 1.10%)</title><rect x="819.4" y="629" width="12.9" height="15.0" fill="rgb(254,110,29)" rx="2" ry="2" />
<text  x="822.41" y="639.5" ></text>
</g>
<g >
<title>tcp_options_write (9 samples, 0.01%)</title><rect x="627.9" y="245" width="0.1" height="15.0" fill="rgb(226,163,49)" rx="2" ry="2" />
<text  x="630.86" y="255.5" ></text>
</g>
<g >
<title>lock_sock_nested (11 samples, 0.01%)</title><rect x="508.3" y="597" width="0.1" height="15.0" fill="rgb(222,183,50)" rx="2" ry="2" />
<text  x="511.25" y="607.5" ></text>
</g>
<g >
<title>native_read_msr (412 samples, 0.44%)</title><rect x="888.6" y="517" width="5.2" height="15.0" fill="rgb(241,38,52)" rx="2" ry="2" />
<text  x="891.59" y="527.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (77 samples, 0.08%)</title><rect x="64.8" y="837" width="0.9" height="15.0" fill="rgb(236,118,5)" rx="2" ry="2" />
<text  x="67.77" y="847.5" ></text>
</g>
<g >
<title>tcp_sendmsg (10,185 samples, 10.93%)</title><rect x="541.7" y="789" width="129.0" height="15.0" fill="rgb(245,59,20)" rx="2" ry="2" />
<text  x="544.73" y="799.5" >tcp_sendmsg</text>
</g>
<g >
<title>sock_alloc_file (979 samples, 1.05%)</title><rect x="1137.8" y="805" width="12.4" height="15.0" fill="rgb(250,228,3)" rx="2" ry="2" />
<text  x="1140.83" y="815.5" ></text>
</g>
<g >
<title>tcp_ack (178 samples, 0.19%)</title><rect x="629.7" y="309" width="2.2" height="15.0" fill="rgb(227,140,1)" rx="2" ry="2" />
<text  x="632.68" y="319.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::codec::Codec as tokio_util::codec::decoder::Decoder&gt;::decode (94 samples, 0.10%)</title><rect x="65.9" y="1189" width="1.2" height="15.0" fill="rgb(224,162,13)" rx="2" ry="2" />
<text  x="68.87" y="1199.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (67 samples, 0.07%)</title><rect x="1044.4" y="261" width="0.9" height="15.0" fill="rgb(252,169,54)" rx="2" ry="2" />
<text  x="1047.41" y="271.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.01%)</title><rect x="503.6" y="1109" width="0.1" height="15.0" fill="rgb(252,59,34)" rx="2" ry="2" />
<text  x="506.59" y="1119.5" ></text>
</g>
<g >
<title>tcp_rack_update_reo_wnd (13 samples, 0.01%)</title><rect x="552.7" y="693" width="0.2" height="15.0" fill="rgb(243,229,29)" rx="2" ry="2" />
<text  x="555.71" y="703.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (9 samples, 0.01%)</title><rect x="1070.3" y="437" width="0.2" height="15.0" fill="rgb(214,48,22)" rx="2" ry="2" />
<text  x="1073.34" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (21 samples, 0.02%)</title><rect x="234.6" y="1013" width="0.3" height="15.0" fill="rgb(246,123,0)" rx="2" ry="2" />
<text  x="237.64" y="1023.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (1,893 samples, 2.03%)</title><rect x="1091.9" y="917" width="24.0" height="15.0" fill="rgb(220,27,25)" rx="2" ry="2" />
<text  x="1094.93" y="927.5" >t..</text>
</g>
<g >
<title>core::mem::take (13 samples, 0.01%)</title><rect x="72.5" y="853" width="0.1" height="15.0" fill="rgb(243,150,30)" rx="2" ry="2" />
<text  x="75.47" y="863.5" ></text>
</g>
<g >
<title>psi_group_change (607 samples, 0.65%)</title><rect x="932.3" y="565" width="7.7" height="15.0" fill="rgb(236,158,45)" rx="2" ry="2" />
<text  x="935.30" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (68 samples, 0.07%)</title><rect x="180.5" y="677" width="0.8" height="15.0" fill="rgb(244,175,35)" rx="2" ry="2" />
<text  x="183.46" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (26 samples, 0.03%)</title><rect x="139.6" y="773" width="0.3" height="15.0" fill="rgb(241,75,50)" rx="2" ry="2" />
<text  x="142.60" y="783.5" ></text>
</g>
<g >
<title>actix_http::h1::codec::Codec::new (46 samples, 0.05%)</title><rect x="264.2" y="1077" width="0.6" height="15.0" fill="rgb(216,87,40)" rx="2" ry="2" />
<text  x="267.21" y="1087.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (358 samples, 0.38%)</title><rect x="73.5" y="821" width="4.6" height="15.0" fill="rgb(243,39,5)" rx="2" ry="2" />
<text  x="76.55" y="831.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="182.4" y="725" width="0.2" height="15.0" fill="rgb(205,87,41)" rx="2" ry="2" />
<text  x="185.38" y="735.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (16 samples, 0.02%)</title><rect x="1078.9" y="597" width="0.2" height="15.0" fill="rgb(234,143,53)" rx="2" ry="2" />
<text  x="1081.86" y="607.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1,134 samples, 1.22%)</title><rect x="689.0" y="725" width="14.4" height="15.0" fill="rgb(210,126,25)" rx="2" ry="2" />
<text  x="692.04" y="735.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_span (25 samples, 0.03%)</title><rect x="413.8" y="789" width="0.3" height="15.0" fill="rgb(245,113,30)" rx="2" ry="2" />
<text  x="416.77" y="799.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.04%)</title><rect x="108.7" y="773" width="0.4" height="15.0" fill="rgb(233,203,5)" rx="2" ry="2" />
<text  x="111.71" y="783.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::as_usize (10 samples, 0.01%)</title><rect x="462.3" y="917" width="0.1" height="15.0" fill="rgb(239,76,16)" rx="2" ry="2" />
<text  x="465.29" y="927.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new (150 samples, 0.16%)</title><rect x="523.2" y="613" width="1.9" height="15.0" fill="rgb(245,223,19)" rx="2" ry="2" />
<text  x="526.23" y="623.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::ref_dec (17 samples, 0.02%)</title><rect x="1041.4" y="165" width="0.3" height="15.0" fill="rgb(226,197,41)" rx="2" ry="2" />
<text  x="1044.44" y="175.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::now (419 samples, 0.45%)</title><rect x="986.0" y="805" width="5.3" height="15.0" fill="rgb(252,65,51)" rx="2" ry="2" />
<text  x="989.03" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (3,394 samples, 3.64%)</title><rect x="1117.2" y="933" width="43.0" height="15.0" fill="rgb(228,85,34)" rx="2" ry="2" />
<text  x="1120.24" y="943.5" >std:..</text>
</g>
<g >
<title>tokio::util::slab::Slab&lt;T&gt;::alloc (91 samples, 0.10%)</title><rect x="514.2" y="757" width="1.2" height="15.0" fill="rgb(251,29,24)" rx="2" ry="2" />
<text  x="517.24" y="767.5" ></text>
</g>
<g >
<title>tokio::runtime::context::CONTEXT::_getit (42 samples, 0.05%)</title><rect x="523.9" y="501" width="0.5" height="15.0" fill="rgb(230,71,49)" rx="2" ry="2" />
<text  x="526.86" y="511.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::wake_by_val (524 samples, 0.56%)</title><rect x="967.7" y="789" width="6.7" height="15.0" fill="rgb(221,164,25)" rx="2" ry="2" />
<text  x="970.74" y="799.5" ></text>
</g>
<g >
<title>touch_atime (17 samples, 0.02%)</title><rect x="829.1" y="581" width="0.2" height="15.0" fill="rgb(244,71,25)" rx="2" ry="2" />
<text  x="832.11" y="591.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (347 samples, 0.37%)</title><rect x="267.4" y="933" width="4.4" height="15.0" fill="rgb(253,222,34)" rx="2" ry="2" />
<text  x="270.41" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="997.5" y="757" width="0.3" height="15.0" fill="rgb(223,71,9)" rx="2" ry="2" />
<text  x="1000.49" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt; (213 samples, 0.23%)</title><rect x="1042.9" y="325" width="2.7" height="15.0" fill="rgb(245,112,35)" rx="2" ry="2" />
<text  x="1045.91" y="335.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::run_until::{{closure}} (770 samples, 0.83%)</title><rect x="515.4" y="1093" width="9.7" height="15.0" fill="rgb(241,160,26)" rx="2" ry="2" />
<text  x="518.39" y="1103.5" ></text>
</g>
<g >
<title>security_socket_getpeername (72 samples, 0.08%)</title><rect x="510.6" y="613" width="0.9" height="15.0" fill="rgb(243,148,45)" rx="2" ry="2" />
<text  x="513.63" y="623.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.02%)</title><rect x="142.5" y="581" width="0.3" height="15.0" fill="rgb(214,62,21)" rx="2" ry="2" />
<text  x="145.52" y="591.5" ></text>
</g>
<g >
<title>psi_task_change (271 samples, 0.29%)</title><rect x="1105.1" y="245" width="3.4" height="15.0" fill="rgb(240,109,13)" rx="2" ry="2" />
<text  x="1108.10" y="255.5" ></text>
</g>
<g >
<title>_GI___libc_realloc (69 samples, 0.07%)</title><rect x="428.0" y="437" width="0.9" height="15.0" fill="rgb(239,131,30)" rx="2" ry="2" />
<text  x="431.01" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.01%)</title><rect x="131.9" y="821" width="0.1" height="15.0" fill="rgb(224,161,32)" rx="2" ry="2" />
<text  x="134.86" y="831.5" ></text>
</g>
<g >
<title>hrtimer_init_sleeper (74 samples, 0.08%)</title><rect x="856.0" y="629" width="1.0" height="15.0" fill="rgb(205,164,30)" rx="2" ry="2" />
<text  x="859.04" y="639.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (9 samples, 0.01%)</title><rect x="676.4" y="853" width="0.1" height="15.0" fill="rgb(250,50,23)" rx="2" ry="2" />
<text  x="679.38" y="863.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (51 samples, 0.05%)</title><rect x="764.4" y="533" width="0.7" height="15.0" fill="rgb(207,126,26)" rx="2" ry="2" />
<text  x="767.45" y="543.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (13 samples, 0.01%)</title><rect x="446.6" y="949" width="0.2" height="15.0" fill="rgb(248,72,15)" rx="2" ry="2" />
<text  x="449.62" y="959.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::Snapshot::has_join_waker (11 samples, 0.01%)</title><rect x="1041.9" y="293" width="0.2" height="15.0" fill="rgb(250,53,27)" rx="2" ry="2" />
<text  x="1044.93" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (9 samples, 0.01%)</title><rect x="38.4" y="981" width="0.1" height="15.0" fill="rgb(253,33,15)" rx="2" ry="2" />
<text  x="41.37" y="991.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.02%)</title><rect x="435.1" y="741" width="0.1" height="15.0" fill="rgb(251,94,9)" rx="2" ry="2" />
<text  x="438.06" y="751.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9 samples, 0.01%)</title><rect x="642.3" y="373" width="0.1" height="15.0" fill="rgb(250,144,35)" rx="2" ry="2" />
<text  x="645.29" y="383.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (1,573 samples, 1.69%)</title><rect x="244.1" y="1109" width="19.9" height="15.0" fill="rgb(246,154,39)" rx="2" ry="2" />
<text  x="247.07" y="1119.5" ></text>
</g>
<g >
<title>_virt_addr_valid (63 samples, 0.07%)</title><rect x="564.4" y="741" width="0.8" height="15.0" fill="rgb(242,126,42)" rx="2" ry="2" />
<text  x="567.38" y="751.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (8 samples, 0.01%)</title><rect x="1010.0" y="885" width="0.1" height="15.0" fill="rgb(253,87,8)" rx="2" ry="2" />
<text  x="1013.00" y="895.5" ></text>
</g>
<g >
<title>read_tsc (35 samples, 0.04%)</title><rect x="639.5" y="293" width="0.5" height="15.0" fill="rgb(237,18,21)" rx="2" ry="2" />
<text  x="642.52" y="303.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::read_available (288 samples, 0.31%)</title><rect x="233.3" y="1205" width="3.6" height="15.0" fill="rgb(235,143,18)" rx="2" ry="2" />
<text  x="236.26" y="1215.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::other (29 samples, 0.03%)</title><rect x="471.7" y="757" width="0.4" height="15.0" fill="rgb(224,214,37)" rx="2" ry="2" />
<text  x="474.71" y="767.5" ></text>
</g>
<g >
<title>_dev_queue_xmit (584 samples, 0.63%)</title><rect x="646.3" y="565" width="7.4" height="15.0" fill="rgb(230,110,48)" rx="2" ry="2" />
<text  x="649.28" y="575.5" ></text>
</g>
<g >
<title>_ip_queue_xmit (2,244 samples, 2.41%)</title><rect x="298.9" y="805" width="28.4" height="15.0" fill="rgb(248,55,33)" rx="2" ry="2" />
<text  x="301.90" y="815.5" >_i..</text>
</g>
<g >
<title>timerqueue_add (205 samples, 0.22%)</title><rect x="857.9" y="597" width="2.6" height="15.0" fill="rgb(217,105,41)" rx="2" ry="2" />
<text  x="860.90" y="607.5" ></text>
</g>
<g >
<title>_GI___pthread_mutex_lock (66 samples, 0.07%)</title><rect x="1012.1" y="789" width="0.8" height="15.0" fill="rgb(209,8,35)" rx="2" ry="2" />
<text  x="1015.07" y="799.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (221 samples, 0.24%)</title><rect x="38.6" y="1077" width="2.8" height="15.0" fill="rgb(230,33,7)" rx="2" ry="2" />
<text  x="41.57" y="1087.5" ></text>
</g>
<g >
<title>raw_read_lock_irqsave (11 samples, 0.01%)</title><rect x="315.9" y="325" width="0.1" height="15.0" fill="rgb(232,195,35)" rx="2" ry="2" />
<text  x="318.88" y="335.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::decoder::MessageDecoder&lt;T&gt; as tokio_util::codec::decoder::Decoder&gt;::decode (26 samples, 0.03%)</title><rect x="342.7" y="1045" width="0.3" height="15.0" fill="rgb(246,212,37)" rx="2" ry="2" />
<text  x="345.65" y="1055.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (91 samples, 0.10%)</title><rect x="340.7" y="981" width="1.2" height="15.0" fill="rgb(243,213,30)" rx="2" ry="2" />
<text  x="343.70" y="991.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::or_else (296 samples, 0.32%)</title><rect x="1077.5" y="661" width="3.7" height="15.0" fill="rgb(253,123,48)" rx="2" ry="2" />
<text  x="1080.49" y="671.5" ></text>
</g>
<g >
<title>raw_local_deliver (33 samples, 0.04%)</title><rect x="602.2" y="357" width="0.4" height="15.0" fill="rgb(221,72,4)" rx="2" ry="2" />
<text  x="605.18" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="787.7" y="789" width="0.1" height="15.0" fill="rgb(241,220,13)" rx="2" ry="2" />
<text  x="790.67" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sys::unix::net::Socket&gt; (2,989 samples, 3.21%)</title><rect x="733.0" y="773" width="37.8" height="15.0" fill="rgb(231,10,16)" rx="2" ry="2" />
<text  x="735.99" y="783.5" >cor..</text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_empty (42 samples, 0.05%)</title><rect x="364.2" y="917" width="0.6" height="15.0" fill="rgb(243,179,27)" rx="2" ry="2" />
<text  x="367.25" y="927.5" ></text>
</g>
<g >
<title>sched_clock_cpu (103 samples, 0.11%)</title><rect x="938.6" y="533" width="1.3" height="15.0" fill="rgb(241,226,20)" rx="2" ry="2" />
<text  x="941.64" y="543.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (14 samples, 0.02%)</title><rect x="90.2" y="789" width="0.2" height="15.0" fill="rgb(209,172,21)" rx="2" ry="2" />
<text  x="93.19" y="799.5" ></text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::upgrade (20 samples, 0.02%)</title><rect x="1114.1" y="709" width="0.3" height="15.0" fill="rgb(230,46,40)" rx="2" ry="2" />
<text  x="1117.14" y="719.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (22 samples, 0.02%)</title><rect x="340.4" y="933" width="0.3" height="15.0" fill="rgb(220,222,13)" rx="2" ry="2" />
<text  x="343.37" y="943.5" ></text>
</g>
<g >
<title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (9 samples, 0.01%)</title><rect x="462.6" y="869" width="0.1" height="15.0" fill="rgb(210,97,11)" rx="2" ry="2" />
<text  x="465.57" y="879.5" ></text>
</g>
<g >
<title>tcache_get (12 samples, 0.01%)</title><rect x="450.6" y="949" width="0.2" height="15.0" fill="rgb(249,11,14)" rx="2" ry="2" />
<text  x="453.62" y="959.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (18 samples, 0.02%)</title><rect x="951.3" y="661" width="0.2" height="15.0" fill="rgb(242,82,46)" rx="2" ry="2" />
<text  x="954.29" y="671.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::original_capacity_to_repr (35 samples, 0.04%)</title><rect x="280.4" y="1045" width="0.5" height="15.0" fill="rgb(213,113,27)" rx="2" ry="2" />
<text  x="283.42" y="1055.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (53 samples, 0.06%)</title><rect x="31.4" y="1141" width="0.6" height="15.0" fill="rgb(250,115,4)" rx="2" ry="2" />
<text  x="34.37" y="1151.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="177.0" y="517" width="0.2" height="15.0" fill="rgb(244,140,34)" rx="2" ry="2" />
<text  x="180.03" y="527.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (85 samples, 0.09%)</title><rect x="1136.4" y="725" width="1.1" height="15.0" fill="rgb(217,160,6)" rx="2" ry="2" />
<text  x="1139.44" y="735.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (113 samples, 0.12%)</title><rect x="481.1" y="613" width="1.5" height="15.0" fill="rgb(220,39,42)" rx="2" ry="2" />
<text  x="484.14" y="623.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (9 samples, 0.01%)</title><rect x="226.7" y="629" width="0.1" height="15.0" fill="rgb(224,147,48)" rx="2" ry="2" />
<text  x="229.70" y="639.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (39 samples, 0.04%)</title><rect x="741.6" y="613" width="0.5" height="15.0" fill="rgb(231,61,15)" rx="2" ry="2" />
<text  x="744.60" y="623.5" ></text>
</g>
<g >
<title>&lt;std::process::ChildStdin as std::sys_common::AsInner&lt;std::sys::unix::pipe::AnonPipe&gt;&gt;::as_inner (57 samples, 0.06%)</title><rect x="786.7" y="725" width="0.7" height="15.0" fill="rgb(244,26,37)" rx="2" ry="2" />
<text  x="789.67" y="735.5" ></text>
</g>
<g >
<title>ipv4_dst_check (42 samples, 0.05%)</title><rect x="584.1" y="645" width="0.5" height="15.0" fill="rgb(229,78,38)" rx="2" ry="2" />
<text  x="587.08" y="655.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (12 samples, 0.01%)</title><rect x="92.7" y="757" width="0.2" height="15.0" fill="rgb(242,222,1)" rx="2" ry="2" />
<text  x="95.72" y="767.5" ></text>
</g>
<g >
<title>rb_erase (16 samples, 0.02%)</title><rect x="547.4" y="693" width="0.2" height="15.0" fill="rgb(246,135,8)" rx="2" ry="2" />
<text  x="550.42" y="703.5" ></text>
</g>
<g >
<title>vfs_read (864 samples, 0.93%)</title><rect x="821.4" y="613" width="10.9" height="15.0" fill="rgb(250,45,38)" rx="2" ry="2" />
<text  x="824.41" y="623.5" ></text>
</g>
<g >
<title>call_rcu (51 samples, 0.05%)</title><rect x="1155.3" y="677" width="0.7" height="15.0" fill="rgb(246,158,10)" rx="2" ry="2" />
<text  x="1158.34" y="687.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.01%)</title><rect x="420.6" y="725" width="0.1" height="15.0" fill="rgb(235,166,48)" rx="2" ry="2" />
<text  x="423.55" y="735.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (41 samples, 0.04%)</title><rect x="971.2" y="645" width="0.5" height="15.0" fill="rgb(243,69,48)" rx="2" ry="2" />
<text  x="974.17" y="655.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read_ready (307 samples, 0.33%)</title><rect x="462.8" y="997" width="3.9" height="15.0" fill="rgb(218,3,7)" rx="2" ry="2" />
<text  x="465.79" y="1007.5" ></text>
</g>
<g >
<title>&lt;rust_actix_jsonpath_bench::new as actix_web::service::HttpServiceFactory&gt;::register::new::{{closure}} (1,006 samples, 1.08%)</title><rect x="53.0" y="1077" width="12.7" height="15.0" fill="rgb(231,163,36)" rx="2" ry="2" />
<text  x="56.01" y="1087.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (171 samples, 0.18%)</title><rect x="141.8" y="725" width="2.2" height="15.0" fill="rgb(234,123,17)" rx="2" ry="2" />
<text  x="144.83" y="735.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (213 samples, 0.23%)</title><rect x="1042.9" y="309" width="2.7" height="15.0" fill="rgb(231,192,51)" rx="2" ry="2" />
<text  x="1045.91" y="319.5" ></text>
</g>
<g >
<title>_get_unused_fd_flags (113 samples, 0.12%)</title><rect x="1120.3" y="805" width="1.4" height="15.0" fill="rgb(206,16,13)" rx="2" ry="2" />
<text  x="1123.28" y="815.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (189 samples, 0.20%)</title><rect x="275.3" y="965" width="2.4" height="15.0" fill="rgb(219,163,2)" rx="2" ry="2" />
<text  x="278.33" y="975.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (14 samples, 0.02%)</title><rect x="226.6" y="661" width="0.2" height="15.0" fill="rgb(232,225,46)" rx="2" ry="2" />
<text  x="229.64" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.03%)</title><rect x="361.0" y="869" width="0.3" height="15.0" fill="rgb(207,153,0)" rx="2" ry="2" />
<text  x="363.97" y="879.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::as_usize (8 samples, 0.01%)</title><rect x="461.6" y="933" width="0.1" height="15.0" fill="rgb(223,143,39)" rx="2" ry="2" />
<text  x="464.57" y="943.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.01%)</title><rect x="235.8" y="1045" width="0.1" height="15.0" fill="rgb(230,151,27)" rx="2" ry="2" />
<text  x="238.81" y="1055.5" ></text>
</g>
<g >
<title>tcache_get (17 samples, 0.02%)</title><rect x="419.0" y="725" width="0.2" height="15.0" fill="rgb(217,47,52)" rx="2" ry="2" />
<text  x="421.98" y="735.5" ></text>
</g>
<g >
<title>do_epoll_ctl (910 samples, 0.98%)</title><rect x="773.6" y="661" width="11.5" height="15.0" fill="rgb(215,178,35)" rx="2" ry="2" />
<text  x="776.59" y="671.5" ></text>
</g>
<g >
<title>http::uri::Uri::path (44 samples, 0.05%)</title><rect x="364.2" y="949" width="0.6" height="15.0" fill="rgb(251,202,18)" rx="2" ry="2" />
<text  x="367.24" y="959.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::tokens::ParseToken&gt; (21 samples, 0.02%)</title><rect x="394.2" y="549" width="0.3" height="15.0" fill="rgb(231,174,11)" rx="2" ry="2" />
<text  x="397.19" y="559.5" ></text>
</g>
<g >
<title>tokio::runtime::context::time_handle::{{closure}} (17 samples, 0.02%)</title><rect x="274.5" y="949" width="0.2" height="15.0" fill="rgb(205,77,35)" rx="2" ry="2" />
<text  x="277.50" y="959.5" ></text>
</g>
<g >
<title>_tcp_transmit_skb (2,481 samples, 2.66%)</title><rect x="297.0" y="837" width="31.4" height="15.0" fill="rgb(247,72,24)" rx="2" ry="2" />
<text  x="300.03" y="847.5" >_t..</text>
</g>
<g >
<title>&lt;actix_web::resource::ResourceService as actix_service::Service&gt;::call (428 samples, 0.46%)</title><rect x="347.6" y="981" width="5.4" height="15.0" fill="rgb(215,34,12)" rx="2" ry="2" />
<text  x="350.56" y="991.5" ></text>
</g>
<g >
<title>&lt;tinyvec::tinyvec::TinyVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.01%)</title><rect x="349.9" y="853" width="0.1" height="15.0" fill="rgb(210,101,31)" rx="2" ry="2" />
<text  x="352.89" y="863.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (707 samples, 0.76%)</title><rect x="494.1" y="997" width="8.9" height="15.0" fill="rgb(252,163,10)" rx="2" ry="2" />
<text  x="497.07" y="1007.5" ></text>
</g>
<g >
<title>unlink_chunk (30 samples, 0.03%)</title><rect x="998.5" y="789" width="0.4" height="15.0" fill="rgb(254,50,37)" rx="2" ry="2" />
<text  x="1001.54" y="799.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (47 samples, 0.05%)</title><rect x="1069.4" y="485" width="0.6" height="15.0" fill="rgb(214,192,30)" rx="2" ry="2" />
<text  x="1072.42" y="495.5" ></text>
</g>
<g >
<title>update_min_vruntime (42 samples, 0.05%)</title><rect x="927.8" y="549" width="0.5" height="15.0" fill="rgb(224,31,26)" rx="2" ry="2" />
<text  x="930.79" y="559.5" ></text>
</g>
<g >
<title>actix_rt::arbiter::Arbiter::new::{{closure}} (1,071 samples, 1.15%)</title><rect x="472.8" y="1237" width="13.5" height="15.0" fill="rgb(206,14,50)" rx="2" ry="2" />
<text  x="475.77" y="1247.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (42 samples, 0.05%)</title><rect x="523.9" y="485" width="0.5" height="15.0" fill="rgb(254,81,44)" rx="2" ry="2" />
<text  x="526.86" y="495.5" ></text>
</g>
<g >
<title>raw_spin_lock (12 samples, 0.01%)</title><rect x="311.6" y="389" width="0.2" height="15.0" fill="rgb(244,33,5)" rx="2" ry="2" />
<text  x="314.63" y="399.5" ></text>
</g>
<g >
<title>tcache_get (13 samples, 0.01%)</title><rect x="108.5" y="805" width="0.2" height="15.0" fill="rgb(235,227,35)" rx="2" ry="2" />
<text  x="111.50" y="815.5" ></text>
</g>
<g >
<title>ip_output (5,535 samples, 5.94%)</title><rect x="585.3" y="645" width="70.1" height="15.0" fill="rgb(237,225,34)" rx="2" ry="2" />
<text  x="588.29" y="655.5" >ip_output</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::array (304 samples, 0.33%)</title><rect x="468.9" y="1013" width="3.8" height="15.0" fill="rgb(212,46,22)" rx="2" ry="2" />
<text  x="471.90" y="1023.5" ></text>
</g>
<g >
<title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (78 samples, 0.08%)</title><rect x="242.4" y="821" width="1.0" height="15.0" fill="rgb(227,203,54)" rx="2" ry="2" />
<text  x="245.37" y="831.5" ></text>
</g>
<g >
<title>int_free (9 samples, 0.01%)</title><rect x="382.0" y="805" width="0.2" height="15.0" fill="rgb(211,49,38)" rx="2" ry="2" />
<text  x="385.05" y="815.5" ></text>
</g>
<g >
<title>common_file_perm (35 samples, 0.04%)</title><rect x="1113.1" y="405" width="0.5" height="15.0" fill="rgb(232,169,49)" rx="2" ry="2" />
<text  x="1116.12" y="415.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (22 samples, 0.02%)</title><rect x="272.7" y="901" width="0.2" height="15.0" fill="rgb(249,60,19)" rx="2" ry="2" />
<text  x="275.65" y="911.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (60 samples, 0.06%)</title><rect x="471.4" y="821" width="0.7" height="15.0" fill="rgb(235,161,37)" rx="2" ry="2" />
<text  x="474.36" y="831.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (74 samples, 0.08%)</title><rect x="356.5" y="885" width="0.9" height="15.0" fill="rgb(205,178,10)" rx="2" ry="2" />
<text  x="359.45" y="895.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="16.0" y="1045" width="0.1" height="15.0" fill="rgb(246,108,45)" rx="2" ry="2" />
<text  x="18.97" y="1055.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (2,673 samples, 2.87%)</title><rect x="1036.2" y="501" width="33.8" height="15.0" fill="rgb(226,102,48)" rx="2" ry="2" />
<text  x="1039.17" y="511.5" >st..</text>
</g>
<g >
<title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push (150 samples, 0.16%)</title><rect x="1089.5" y="949" width="1.9" height="15.0" fill="rgb(231,119,27)" rx="2" ry="2" />
<text  x="1092.48" y="959.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::deregister (1,072 samples, 1.15%)</title><rect x="772.4" y="741" width="13.6" height="15.0" fill="rgb(219,104,2)" rx="2" ry="2" />
<text  x="775.43" y="751.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (33 samples, 0.04%)</title><rect x="369.3" y="949" width="0.4" height="15.0" fill="rgb(229,219,44)" rx="2" ry="2" />
<text  x="372.30" y="959.5" ></text>
</g>
<g >
<title>tokio::coop::poll_proceed (27 samples, 0.03%)</title><rect x="1037.9" y="309" width="0.4" height="15.0" fill="rgb(244,228,4)" rx="2" ry="2" />
<text  x="1040.92" y="319.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (12 samples, 0.01%)</title><rect x="785.6" y="677" width="0.1" height="15.0" fill="rgb(238,44,26)" rx="2" ry="2" />
<text  x="788.57" y="687.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (209 samples, 0.22%)</title><rect x="78.9" y="837" width="2.7" height="15.0" fill="rgb(222,1,36)" rx="2" ry="2" />
<text  x="81.94" y="847.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek (10 samples, 0.01%)</title><rect x="56.3" y="693" width="0.1" height="15.0" fill="rgb(221,9,21)" rx="2" ry="2" />
<text  x="59.32" y="703.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="38.9" y="1013" width="0.1" height="15.0" fill="rgb(210,124,23)" rx="2" ry="2" />
<text  x="41.86" y="1023.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::increment_shared (9 samples, 0.01%)</title><rect x="31.6" y="1109" width="0.1" height="15.0" fill="rgb(233,162,54)" rx="2" ry="2" />
<text  x="34.62" y="1119.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (201 samples, 0.22%)</title><rect x="1145.7" y="741" width="2.6" height="15.0" fill="rgb(247,201,48)" rx="2" ry="2" />
<text  x="1148.72" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths (1,006 samples, 1.08%)</title><rect x="53.0" y="1013" width="12.7" height="15.0" fill="rgb(228,93,6)" rx="2" ry="2" />
<text  x="56.01" y="1023.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (11 samples, 0.01%)</title><rect x="871.6" y="501" width="0.2" height="15.0" fill="rgb(216,61,7)" rx="2" ry="2" />
<text  x="874.63" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::TableLayout::calculate_layout_for (33 samples, 0.04%)</title><rect x="221.4" y="533" width="0.5" height="15.0" fill="rgb(250,43,29)" rx="2" ry="2" />
<text  x="224.43" y="543.5" ></text>
</g>
<g >
<title>core::ptr::write (24 samples, 0.03%)</title><rect x="231.9" y="901" width="0.3" height="15.0" fill="rgb(205,8,45)" rx="2" ry="2" />
<text  x="234.88" y="911.5" ></text>
</g>
<g >
<title>cond_resched (15 samples, 0.02%)</title><rect x="249.3" y="565" width="0.2" height="15.0" fill="rgb(211,85,3)" rx="2" ry="2" />
<text  x="252.35" y="575.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (34 samples, 0.04%)</title><rect x="43.7" y="1125" width="0.4" height="15.0" fill="rgb(243,202,9)" rx="2" ry="2" />
<text  x="46.67" y="1135.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::fetch_update (8 samples, 0.01%)</title><rect x="1072.1" y="501" width="0.1" height="15.0" fill="rgb(249,2,31)" rx="2" ry="2" />
<text  x="1075.09" y="511.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (9 samples, 0.01%)</title><rect x="706.9" y="757" width="0.1" height="15.0" fill="rgb(254,146,6)" rx="2" ry="2" />
<text  x="709.93" y="767.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (8 samples, 0.01%)</title><rect x="670.7" y="789" width="0.1" height="15.0" fill="rgb(243,161,46)" rx="2" ry="2" />
<text  x="673.66" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths (171 samples, 0.18%)</title><rect x="90.7" y="837" width="2.2" height="15.0" fill="rgb(221,32,5)" rx="2" ry="2" />
<text  x="93.75" y="847.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::ok (11 samples, 0.01%)</title><rect x="797.7" y="805" width="0.1" height="15.0" fill="rgb(223,18,5)" rx="2" ry="2" />
<text  x="800.69" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="240.5" y="901" width="0.1" height="15.0" fill="rgb(254,135,43)" rx="2" ry="2" />
<text  x="243.46" y="911.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::new_in (36 samples, 0.04%)</title><rect x="274.7" y="1045" width="0.5" height="15.0" fill="rgb(216,71,20)" rx="2" ry="2" />
<text  x="277.71" y="1055.5" ></text>
</g>
<g >
<title>ip_local_out (2,164 samples, 2.32%)</title><rect x="299.8" y="789" width="27.4" height="15.0" fill="rgb(219,17,54)" rx="2" ry="2" />
<text  x="302.82" y="799.5" >i..</text>
</g>
<g >
<title>smallvec::SmallVec&lt;A&gt;::remove (10 samples, 0.01%)</title><rect x="1045.6" y="325" width="0.1" height="15.0" fill="rgb(217,176,19)" rx="2" ry="2" />
<text  x="1048.62" y="335.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (36 samples, 0.04%)</title><rect x="274.7" y="1029" width="0.5" height="15.0" fill="rgb(230,82,29)" rx="2" ry="2" />
<text  x="277.71" y="1039.5" ></text>
</g>
<g >
<title>lock_sock_nested (9 samples, 0.01%)</title><rect x="765.9" y="549" width="0.1" height="15.0" fill="rgb(231,114,23)" rx="2" ry="2" />
<text  x="768.86" y="559.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (8 samples, 0.01%)</title><rect x="1117.0" y="965" width="0.1" height="15.0" fill="rgb(223,92,39)" rx="2" ry="2" />
<text  x="1120.04" y="975.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (26 samples, 0.03%)</title><rect x="1154.8" y="645" width="0.3" height="15.0" fill="rgb(215,204,37)" rx="2" ry="2" />
<text  x="1157.76" y="655.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (33 samples, 0.04%)</title><rect x="117.1" y="837" width="0.4" height="15.0" fill="rgb(254,83,21)" rx="2" ry="2" />
<text  x="120.05" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;mio::net::tcp::TcpStream&gt;&gt; (9 samples, 0.01%)</title><rect x="787.5" y="853" width="0.1" height="15.0" fill="rgb(246,163,50)" rx="2" ry="2" />
<text  x="790.52" y="863.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::block_on (22,824 samples, 24.48%)</title><rect x="795.0" y="1045" width="288.9" height="15.0" fill="rgb(227,75,48)" rx="2" ry="2" />
<text  x="797.97" y="1055.5" >tokio::task::local::LocalSet::block_on</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path_in_key (88 samples, 0.09%)</title><rect x="54.6" y="805" width="1.1" height="15.0" fill="rgb(220,53,11)" rx="2" ry="2" />
<text  x="57.56" y="815.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.01%)</title><rect x="426.3" y="645" width="0.2" height="15.0" fill="rgb(219,10,33)" rx="2" ry="2" />
<text  x="429.34" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (20 samples, 0.02%)</title><rect x="44.7" y="1125" width="0.3" height="15.0" fill="rgb(254,13,27)" rx="2" ry="2" />
<text  x="47.73" y="1135.5" ></text>
</g>
<g >
<title>dequeue_task_fair (21 samples, 0.02%)</title><rect x="940.0" y="597" width="0.2" height="15.0" fill="rgb(231,207,32)" rx="2" ry="2" />
<text  x="942.98" y="607.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (44 samples, 0.05%)</title><rect x="228.0" y="725" width="0.6" height="15.0" fill="rgb(249,58,9)" rx="2" ry="2" />
<text  x="231.00" y="735.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::array_start (304 samples, 0.33%)</title><rect x="468.9" y="997" width="3.8" height="15.0" fill="rgb(251,168,22)" rx="2" ry="2" />
<text  x="471.90" y="1007.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (13 samples, 0.01%)</title><rect x="471.9" y="661" width="0.2" height="15.0" fill="rgb(227,144,48)" rx="2" ry="2" />
<text  x="474.90" y="671.5" ></text>
</g>
<g >
<title>schedule (1,870 samples, 2.01%)</title><rect x="1163.3" y="853" width="23.7" height="15.0" fill="rgb(215,138,32)" rx="2" ry="2" />
<text  x="1166.29" y="863.5" >s..</text>
</g>
<g >
<title>tcp_wfree (16 samples, 0.02%)</title><rect x="325.6" y="645" width="0.2" height="15.0" fill="rgb(232,215,33)" rx="2" ry="2" />
<text  x="328.61" y="655.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_ready (126 samples, 0.14%)</title><rect x="461.2" y="949" width="1.6" height="15.0" fill="rgb(224,109,24)" rx="2" ry="2" />
<text  x="464.20" y="959.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.03%)</title><rect x="1037.9" y="277" width="0.4" height="15.0" fill="rgb(208,130,19)" rx="2" ry="2" />
<text  x="1040.92" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (86 samples, 0.09%)</title><rect x="718.9" y="837" width="1.1" height="15.0" fill="rgb(224,20,27)" rx="2" ry="2" />
<text  x="721.90" y="847.5" ></text>
</g>
<g >
<title>actix_rt::arbiter::PENDING::_getit (14 samples, 0.02%)</title><rect x="1045.7" y="341" width="0.2" height="15.0" fill="rgb(249,180,14)" rx="2" ry="2" />
<text  x="1048.74" y="351.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (24 samples, 0.03%)</title><rect x="1014.4" y="789" width="0.3" height="15.0" fill="rgb(242,48,17)" rx="2" ry="2" />
<text  x="1017.35" y="799.5" ></text>
</g>
<g >
<title>unlink_chunk (15 samples, 0.02%)</title><rect x="471.1" y="709" width="0.2" height="15.0" fill="rgb(246,216,0)" rx="2" ry="2" />
<text  x="474.15" y="719.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (9 samples, 0.01%)</title><rect x="512.6" y="629" width="0.1" height="15.0" fill="rgb(214,181,38)" rx="2" ry="2" />
<text  x="515.61" y="639.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (102 samples, 0.11%)</title><rect x="114.6" y="933" width="1.3" height="15.0" fill="rgb(227,214,17)" rx="2" ry="2" />
<text  x="117.58" y="943.5" ></text>
</g>
<g >
<title>core::ptr::write (27 samples, 0.03%)</title><rect x="438.5" y="917" width="0.4" height="15.0" fill="rgb(235,134,29)" rx="2" ry="2" />
<text  x="441.52" y="927.5" ></text>
</g>
<g >
<title>tcache_get (9 samples, 0.01%)</title><rect x="188.5" y="565" width="0.1" height="15.0" fill="rgb(240,6,35)" rx="2" ry="2" />
<text  x="191.50" y="575.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (13 samples, 0.01%)</title><rect x="642.4" y="389" width="0.2" height="15.0" fill="rgb(241,41,22)" rx="2" ry="2" />
<text  x="645.41" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (43 samples, 0.05%)</title><rect x="1033.2" y="357" width="0.6" height="15.0" fill="rgb(254,7,44)" rx="2" ry="2" />
<text  x="1036.21" y="367.5" ></text>
</g>
<g >
<title>&lt;actix_http::extensions::Extensions as core::default::Default&gt;::default (17 samples, 0.02%)</title><rect x="358.0" y="965" width="0.2" height="15.0" fill="rgb(222,178,8)" rx="2" ry="2" />
<text  x="360.97" y="975.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::basic_scheduler::Shared as tokio::util::wake::Wake&gt;::wake (1,810 samples, 1.94%)</title><rect x="1092.0" y="805" width="22.9" height="15.0" fill="rgb(246,156,42)" rx="2" ry="2" />
<text  x="1094.96" y="815.5" >&lt;..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (9 samples, 0.01%)</title><rect x="205.9" y="549" width="0.1" height="15.0" fill="rgb(233,66,23)" rx="2" ry="2" />
<text  x="208.92" y="559.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::peer_addr (680 samples, 0.73%)</title><rect x="504.4" y="741" width="8.6" height="15.0" fill="rgb(234,65,47)" rx="2" ry="2" />
<text  x="507.38" y="751.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (15 samples, 0.02%)</title><rect x="1099.4" y="245" width="0.2" height="15.0" fill="rgb(212,60,50)" rx="2" ry="2" />
<text  x="1102.40" y="255.5" ></text>
</g>
<g >
<title>_cgroup_bpf_run_filter_skb (19 samples, 0.02%)</title><rect x="308.3" y="453" width="0.3" height="15.0" fill="rgb(217,151,20)" rx="2" ry="2" />
<text  x="311.35" y="463.5" ></text>
</g>
<g >
<title>tokio::runtime::task::Notified&lt;S&gt;::run (770 samples, 0.83%)</title><rect x="515.4" y="901" width="9.7" height="15.0" fill="rgb(217,84,21)" rx="2" ry="2" />
<text  x="518.39" y="911.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (149 samples, 0.16%)</title><rect x="168.7" y="757" width="1.8" height="15.0" fill="rgb(243,214,54)" rx="2" ry="2" />
<text  x="171.66" y="767.5" ></text>
</g>
<g >
<title>alloc::alloc::box_free (63 samples, 0.07%)</title><rect x="382.7" y="741" width="0.8" height="15.0" fill="rgb(249,57,17)" rx="2" ry="2" />
<text  x="385.68" y="751.5" ></text>
</g>
<g >
<title>tokio::sync::oneshot::State::is_complete (11 samples, 0.01%)</title><rect x="1042.3" y="293" width="0.2" height="15.0" fill="rgb(219,93,37)" rx="2" ry="2" />
<text  x="1045.33" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="240.5" y="821" width="0.1" height="15.0" fill="rgb(244,56,31)" rx="2" ry="2" />
<text  x="243.46" y="831.5" ></text>
</g>
<g >
<title>actix_router::url::Url::update (369 samples, 0.40%)</title><rect x="360.1" y="1013" width="4.7" height="15.0" fill="rgb(237,40,36)" rx="2" ry="2" />
<text  x="363.12" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (48 samples, 0.05%)</title><rect x="172.6" y="885" width="0.6" height="15.0" fill="rgb(243,11,43)" rx="2" ry="2" />
<text  x="175.60" y="895.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::now (278 samples, 0.30%)</title><rect x="962.9" y="741" width="3.6" height="15.0" fill="rgb(246,40,32)" rx="2" ry="2" />
<text  x="965.93" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Trailer&gt; (42 samples, 0.05%)</title><rect x="1043.7" y="229" width="0.6" height="15.0" fill="rgb(224,40,34)" rx="2" ry="2" />
<text  x="1046.72" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (27 samples, 0.03%)</title><rect x="1041.3" y="229" width="0.4" height="15.0" fill="rgb(205,9,6)" rx="2" ry="2" />
<text  x="1044.31" y="239.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (24 samples, 0.03%)</title><rect x="122.5" y="821" width="0.3" height="15.0" fill="rgb(246,136,38)" rx="2" ry="2" />
<text  x="125.46" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path (576 samples, 0.62%)</title><rect x="57.5" y="837" width="7.3" height="15.0" fill="rgb(233,66,14)" rx="2" ry="2" />
<text  x="60.47" y="847.5" ></text>
</g>
<g >
<title>_local_bh_enable_ip (9 samples, 0.01%)</title><rect x="653.7" y="565" width="0.1" height="15.0" fill="rgb(254,175,4)" rx="2" ry="2" />
<text  x="656.67" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (8 samples, 0.01%)</title><rect x="69.3" y="837" width="0.1" height="15.0" fill="rgb(205,29,24)" rx="2" ry="2" />
<text  x="72.31" y="847.5" ></text>
</g>
<g >
<title>tokio::util::slab::Slab&lt;T&gt;::get (19 samples, 0.02%)</title><rect x="234.9" y="1061" width="0.2" height="15.0" fill="rgb(235,68,39)" rx="2" ry="2" />
<text  x="237.90" y="1071.5" ></text>
</g>
<g >
<title>_rdl_alloc (15 samples, 0.02%)</title><rect x="13.2" y="933" width="0.2" height="15.0" fill="rgb(233,93,46)" rx="2" ry="2" />
<text  x="16.24" y="943.5" ></text>
</g>
<g >
<title>int_free (9 samples, 0.01%)</title><rect x="240.5" y="805" width="0.1" height="15.0" fill="rgb(253,195,32)" rx="2" ry="2" />
<text  x="243.46" y="815.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (80 samples, 0.09%)</title><rect x="470.3" y="757" width="1.1" height="15.0" fill="rgb(219,11,4)" rx="2" ry="2" />
<text  x="473.34" y="767.5" ></text>
</g>
<g >
<title>actix_http::helpers::write_status_line (139 samples, 0.15%)</title><rect x="441.8" y="981" width="1.8" height="15.0" fill="rgb(247,61,10)" rx="2" ry="2" />
<text  x="444.83" y="991.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;actix_web::service::ServiceResponse,actix_http::error::Error&gt;&gt;&gt;&gt;&gt; (250 samples, 0.27%)</title><rect x="450.8" y="1029" width="3.1" height="15.0" fill="rgb(254,78,44)" rx="2" ry="2" />
<text  x="453.78" y="1039.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (16 samples, 0.02%)</title><rect x="522.7" y="501" width="0.2" height="15.0" fill="rgb(233,202,43)" rx="2" ry="2" />
<text  x="525.66" y="511.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (331 samples, 0.36%)</title><rect x="525.1" y="1221" width="4.2" height="15.0" fill="rgb(237,15,39)" rx="2" ry="2" />
<text  x="528.14" y="1231.5" ></text>
</g>
<g >
<title>raw_write_unlock_bh (9 samples, 0.01%)</title><rect x="765.1" y="533" width="0.1" height="15.0" fill="rgb(218,89,42)" rx="2" ry="2" />
<text  x="768.09" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (14 samples, 0.02%)</title><rect x="449.7" y="869" width="0.1" height="15.0" fill="rgb(222,223,28)" rx="2" ry="2" />
<text  x="452.67" y="879.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (56 samples, 0.06%)</title><rect x="532.4" y="1013" width="0.7" height="15.0" fill="rgb(235,4,33)" rx="2" ry="2" />
<text  x="535.42" y="1023.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (48 samples, 0.05%)</title><rect x="472.1" y="853" width="0.6" height="15.0" fill="rgb(241,179,36)" rx="2" ry="2" />
<text  x="475.14" y="863.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::len (8 samples, 0.01%)</title><rect x="680.8" y="997" width="0.2" height="15.0" fill="rgb(232,113,48)" rx="2" ry="2" />
<text  x="683.85" y="1007.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (16,095 samples, 17.27%)</title><rect x="264.0" y="1237" width="203.7" height="15.0" fill="rgb(217,152,22)" rx="2" ry="2" />
<text  x="266.98" y="1247.5" >core::ops::function::FnOnc..</text>
</g>
<g >
<title>_rdl_alloc (8 samples, 0.01%)</title><rect x="280.3" y="949" width="0.1" height="15.0" fill="rgb(210,189,33)" rx="2" ry="2" />
<text  x="283.27" y="959.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (126 samples, 0.14%)</title><rect x="114.3" y="965" width="1.6" height="15.0" fill="rgb(240,172,46)" rx="2" ry="2" />
<text  x="117.28" y="975.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_filter (2,935 samples, 3.15%)</title><rect x="134.5" y="949" width="37.1" height="15.0" fill="rgb(247,42,23)" rx="2" ry="2" />
<text  x="137.46" y="959.5" >jso..</text>
</g>
<g >
<title>httparse::skip_empty_lines (32 samples, 0.03%)</title><rect x="52.4" y="1157" width="0.4" height="15.0" fill="rgb(231,218,35)" rx="2" ry="2" />
<text  x="55.44" y="1167.5" ></text>
</g>
<g >
<title>record_times (137 samples, 0.15%)</title><rect x="938.2" y="549" width="1.7" height="15.0" fill="rgb(236,71,29)" rx="2" ry="2" />
<text  x="941.21" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (64 samples, 0.07%)</title><rect x="1074.0" y="469" width="0.8" height="15.0" fill="rgb(220,129,15)" rx="2" ry="2" />
<text  x="1077.01" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (91 samples, 0.10%)</title><rect x="205.9" y="597" width="1.2" height="15.0" fill="rgb(243,12,16)" rx="2" ry="2" />
<text  x="208.92" y="607.5" ></text>
</g>
<g >
<title>sk_reset_timer (9 samples, 0.01%)</title><rect x="331.7" y="821" width="0.1" height="15.0" fill="rgb(237,64,10)" rx="2" ry="2" />
<text  x="334.68" y="831.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (24 samples, 0.03%)</title><rect x="429.1" y="549" width="0.3" height="15.0" fill="rgb(209,53,9)" rx="2" ry="2" />
<text  x="432.06" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="352.2" y="837" width="0.2" height="15.0" fill="rgb(234,172,35)" rx="2" ry="2" />
<text  x="355.16" y="847.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (1,739 samples, 1.87%)</title><rect x="1092.1" y="709" width="22.0" height="15.0" fill="rgb(211,202,20)" rx="2" ry="2" />
<text  x="1095.12" y="719.5" >m..</text>
</g>
<g >
<title>tokio::util::slab::page::Local::set_head::{{closure}} (9 samples, 0.01%)</title><rect x="515.3" y="645" width="0.1" height="15.0" fill="rgb(221,121,28)" rx="2" ry="2" />
<text  x="518.26" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (327 samples, 0.35%)</title><rect x="193.9" y="629" width="4.1" height="15.0" fill="rgb(226,153,9)" rx="2" ry="2" />
<text  x="196.88" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (11 samples, 0.01%)</title><rect x="426.3" y="677" width="0.2" height="15.0" fill="rgb(232,35,29)" rx="2" ry="2" />
<text  x="429.34" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::guard::current (11 samples, 0.01%)</title><rect x="1083.9" y="1173" width="0.1" height="15.0" fill="rgb(219,192,25)" rx="2" ry="2" />
<text  x="1086.91" y="1183.5" ></text>
</g>
<g >
<title>should_failslab (9 samples, 0.01%)</title><rect x="262.2" y="565" width="0.1" height="15.0" fill="rgb(207,77,27)" rx="2" ry="2" />
<text  x="265.23" y="575.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::filter_next_with_str::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="225.2" y="741" width="0.2" height="15.0" fill="rgb(219,111,46)" rx="2" ry="2" />
<text  x="228.23" y="751.5" ></text>
</g>
<g >
<title>raw_spin_lock_bh (22 samples, 0.02%)</title><rect x="1126.6" y="789" width="0.3" height="15.0" fill="rgb(219,47,40)" rx="2" ry="2" />
<text  x="1129.64" y="799.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8 samples, 0.01%)</title><rect x="176.8" y="517" width="0.1" height="15.0" fill="rgb(253,55,41)" rx="2" ry="2" />
<text  x="179.80" y="527.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_object (8 samples, 0.01%)</title><rect x="420.6" y="741" width="0.1" height="15.0" fill="rgb(219,170,28)" rx="2" ry="2" />
<text  x="423.55" y="751.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3,319 samples, 3.56%)</title><rect x="185.9" y="789" width="42.0" height="15.0" fill="rgb(249,53,20)" rx="2" ry="2" />
<text  x="188.89" y="799.5" >cor..</text>
</g>
<g >
<title>tokio::runtime::task::state::State::ref_dec (39 samples, 0.04%)</title><rect x="341.4" y="853" width="0.5" height="15.0" fill="rgb(241,72,15)" rx="2" ry="2" />
<text  x="344.36" y="863.5" ></text>
</g>
<g >
<title>cpufreq_this_cpu_can_update (8 samples, 0.01%)</title><rect x="1104.9" y="181" width="0.1" height="15.0" fill="rgb(230,90,17)" rx="2" ry="2" />
<text  x="1107.87" y="191.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (39 samples, 0.04%)</title><rect x="126.4" y="709" width="0.5" height="15.0" fill="rgb(243,70,48)" rx="2" ry="2" />
<text  x="129.45" y="719.5" ></text>
</g>
<g >
<title>core::pin::Pin&lt;P&gt;::set (23 samples, 0.02%)</title><rect x="435.6" y="949" width="0.3" height="15.0" fill="rgb(231,25,47)" rx="2" ry="2" />
<text  x="438.63" y="959.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_empty_or_deleted (21 samples, 0.02%)</title><rect x="219.4" y="549" width="0.3" height="15.0" fill="rgb(210,193,27)" rx="2" ry="2" />
<text  x="222.42" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (54 samples, 0.06%)</title><rect x="214.8" y="501" width="0.7" height="15.0" fill="rgb(228,106,46)" rx="2" ry="2" />
<text  x="217.81" y="511.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (770 samples, 0.83%)</title><rect x="515.4" y="869" width="9.7" height="15.0" fill="rgb(224,133,54)" rx="2" ry="2" />
<text  x="518.39" y="879.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::expr (304 samples, 0.33%)</title><rect x="468.9" y="917" width="3.8" height="15.0" fill="rgb(243,103,38)" rx="2" ry="2" />
<text  x="471.90" y="927.5" ></text>
</g>
<g >
<title>tokio::time::driver::entry::Entry::set_when_internal (20 samples, 0.02%)</title><rect x="999.9" y="821" width="0.3" height="15.0" fill="rgb(230,204,40)" rx="2" ry="2" />
<text  x="1002.92" y="831.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_movemask_epi8 (21 samples, 0.02%)</title><rect x="219.4" y="533" width="0.3" height="15.0" fill="rgb(219,171,5)" rx="2" ry="2" />
<text  x="222.42" y="543.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (50 samples, 0.05%)</title><rect x="362.6" y="949" width="0.6" height="15.0" fill="rgb(235,192,27)" rx="2" ry="2" />
<text  x="365.55" y="959.5" ></text>
</g>
<g >
<title>tokio::time::wheel::Wheel&lt;T&gt;::remove (250 samples, 0.27%)</title><rect x="1002.4" y="821" width="3.1" height="15.0" fill="rgb(240,74,41)" rx="2" ry="2" />
<text  x="1005.36" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (2,556 samples, 2.74%)</title><rect x="1036.8" y="405" width="32.4" height="15.0" fill="rgb(208,45,21)" rx="2" ry="2" />
<text  x="1039.83" y="415.5" >to..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="129.3" y="725" width="0.2" height="15.0" fill="rgb(250,186,42)" rx="2" ry="2" />
<text  x="132.28" y="735.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::static_empty (15 samples, 0.02%)</title><rect x="358.0" y="869" width="0.2" height="15.0" fill="rgb(237,143,53)" rx="2" ry="2" />
<text  x="360.99" y="879.5" ></text>
</g>
<g >
<title>hashbrown::map::make_insert_hash (294 samples, 0.32%)</title><rect x="207.4" y="645" width="3.7" height="15.0" fill="rgb(248,178,3)" rx="2" ry="2" />
<text  x="210.42" y="655.5" ></text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as actix_server::socket::FromStream&gt;::from_stdstream (668 samples, 0.72%)</title><rect x="516.7" y="645" width="8.4" height="15.0" fill="rgb(253,175,3)" rx="2" ry="2" />
<text  x="519.67" y="655.5" ></text>
</g>
<g >
<title>actix_rt::system::CURRENT::_getit (53 samples, 0.06%)</title><rect x="528.5" y="549" width="0.7" height="15.0" fill="rgb(246,133,44)" rx="2" ry="2" />
<text  x="531.48" y="559.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (48 samples, 0.05%)</title><rect x="176.1" y="549" width="0.7" height="15.0" fill="rgb(214,166,24)" rx="2" ry="2" />
<text  x="179.14" y="559.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp_json (1,138 samples, 1.22%)</title><rect x="150.6" y="901" width="14.4" height="15.0" fill="rgb(234,95,3)" rx="2" ry="2" />
<text  x="153.57" y="911.5" ></text>
</g>
<g >
<title>stream_open (8 samples, 0.01%)</title><rect x="1150.2" y="805" width="0.1" height="15.0" fill="rgb(233,155,45)" rx="2" ry="2" />
<text  x="1153.23" y="815.5" ></text>
</g>
<g >
<title>ep_done_scan (65 samples, 0.07%)</title><rect x="850.2" y="661" width="0.9" height="15.0" fill="rgb(214,153,38)" rx="2" ry="2" />
<text  x="853.23" y="671.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek (13 samples, 0.01%)</title><rect x="471.9" y="725" width="0.2" height="15.0" fill="rgb(206,128,22)" rx="2" ry="2" />
<text  x="474.90" y="735.5" ></text>
</g>
<g >
<title>core::mem::take (16 samples, 0.02%)</title><rect x="973.2" y="549" width="0.2" height="15.0" fill="rgb(241,210,49)" rx="2" ry="2" />
<text  x="976.16" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (14 samples, 0.02%)</title><rect x="402.5" y="869" width="0.2" height="15.0" fill="rgb(206,25,29)" rx="2" ry="2" />
<text  x="405.53" y="879.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (42 samples, 0.05%)</title><rect x="109.8" y="725" width="0.5" height="15.0" fill="rgb(230,89,45)" rx="2" ry="2" />
<text  x="112.79" y="735.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_span (12 samples, 0.01%)</title><rect x="123.3" y="885" width="0.2" height="15.0" fill="rgb(218,91,47)" rx="2" ry="2" />
<text  x="126.33" y="895.5" ></text>
</g>
<g >
<title>ip_send_check (19 samples, 0.02%)</title><rect x="584.9" y="629" width="0.3" height="15.0" fill="rgb(226,73,25)" rx="2" ry="2" />
<text  x="587.95" y="639.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::borrow_mut (12 samples, 0.01%)</title><rect x="369.9" y="997" width="0.1" height="15.0" fill="rgb(215,211,39)" rx="2" ry="2" />
<text  x="372.88" y="1007.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="130.1" y="709" width="0.2" height="15.0" fill="rgb(228,173,35)" rx="2" ry="2" />
<text  x="133.12" y="719.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (85 samples, 0.09%)</title><rect x="12.5" y="965" width="1.0" height="15.0" fill="rgb(229,166,10)" rx="2" ry="2" />
<text  x="15.46" y="975.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (27 samples, 0.03%)</title><rect x="441.5" y="933" width="0.3" height="15.0" fill="rgb(252,217,30)" rx="2" ry="2" />
<text  x="444.49" y="943.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::clone_waker (9 samples, 0.01%)</title><rect x="233.7" y="1061" width="0.1" height="15.0" fill="rgb(240,75,32)" rx="2" ry="2" />
<text  x="236.69" y="1071.5" ></text>
</g>
<g >
<title>&lt;f64 as core::num::dec2flt::float::RawFloat&gt;::from_u64 (56 samples, 0.06%)</title><rect x="103.1" y="757" width="0.7" height="15.0" fill="rgb(248,35,12)" rx="2" ry="2" />
<text  x="106.05" y="767.5" ></text>
</g>
<g >
<title>_GI_epoll_ctl (30 samples, 0.03%)</title><rect x="770.4" y="629" width="0.4" height="15.0" fill="rgb(216,34,17)" rx="2" ry="2" />
<text  x="773.45" y="639.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::PathParser::parse (8,754 samples, 9.39%)</title><rect x="121.4" y="997" width="110.8" height="15.0" fill="rgb(253,26,52)" rx="2" ry="2" />
<text  x="124.38" y="1007.5" >jsonpath_lib:..</text>
</g>
<g >
<title>_tcp_push_pending_frames (7,287 samples, 7.82%)</title><rect x="575.8" y="741" width="92.3" height="15.0" fill="rgb(227,28,13)" rx="2" ry="2" />
<text  x="578.82" y="751.5" >_tcp_push_p..</text>
</g>
<g >
<title>_fget_files (42 samples, 0.05%)</title><rect x="1094.1" y="437" width="0.5" height="15.0" fill="rgb(235,205,18)" rx="2" ry="2" />
<text  x="1097.11" y="447.5" ></text>
</g>
<g >
<title>unlink_chunk (35 samples, 0.04%)</title><rect x="502.2" y="949" width="0.5" height="15.0" fill="rgb(214,2,10)" rx="2" ry="2" />
<text  x="505.24" y="959.5" ></text>
</g>
<g >
<title>_lock_text_start (18 samples, 0.02%)</title><rect x="857.3" y="613" width="0.2" height="15.0" fill="rgb(233,192,40)" rx="2" ry="2" />
<text  x="860.26" y="623.5" ></text>
</g>
<g >
<title>int_malloc (47 samples, 0.05%)</title><rect x="54.0" y="789" width="0.5" height="15.0" fill="rgb(226,131,50)" rx="2" ry="2" />
<text  x="56.95" y="799.5" ></text>
</g>
<g >
<title>add_wait_queue (25 samples, 0.03%)</title><rect x="251.9" y="501" width="0.3" height="15.0" fill="rgb(214,146,23)" rx="2" ry="2" />
<text  x="254.92" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::x86::avx2::mm256_shuffle_epi8 (26 samples, 0.03%)</title><rect x="51.1" y="1093" width="0.3" height="15.0" fill="rgb(226,37,52)" rx="2" ry="2" />
<text  x="54.11" y="1103.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::transition_to_notified (15 samples, 0.02%)</title><rect x="1115.7" y="901" width="0.2" height="15.0" fill="rgb(221,137,38)" rx="2" ry="2" />
<text  x="1118.71" y="911.5" ></text>
</g>
<g >
<title>_GI___libc_free (11 samples, 0.01%)</title><rect x="395.2" y="853" width="0.2" height="15.0" fill="rgb(235,68,26)" rx="2" ry="2" />
<text  x="398.24" y="863.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (59 samples, 0.06%)</title><rect x="214.8" y="549" width="0.8" height="15.0" fill="rgb(205,7,28)" rx="2" ry="2" />
<text  x="217.81" y="559.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Read&gt;::read (1,420 samples, 1.52%)</title><rect x="815.9" y="757" width="18.0" height="15.0" fill="rgb(240,11,20)" rx="2" ry="2" />
<text  x="818.94" y="767.5" ></text>
</g>
<g >
<title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (103 samples, 0.11%)</title><rect x="227.9" y="837" width="1.3" height="15.0" fill="rgb(217,3,8)" rx="2" ry="2" />
<text  x="230.94" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22,837 samples, 24.50%)</title><rect x="795.0" y="1221" width="289.0" height="15.0" fill="rgb(248,42,28)" rx="2" ry="2" />
<text  x="797.97" y="1231.5" >&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::..</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1,132 samples, 1.21%)</title><rect x="420.7" y="757" width="14.3" height="15.0" fill="rgb(225,178,34)" rx="2" ry="2" />
<text  x="423.65" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (102 samples, 0.11%)</title><rect x="114.6" y="917" width="1.3" height="15.0" fill="rgb(228,17,6)" rx="2" ry="2" />
<text  x="117.58" y="927.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::from_vec (54 samples, 0.06%)</title><rect x="280.4" y="1061" width="0.7" height="15.0" fill="rgb(229,221,27)" rx="2" ry="2" />
<text  x="283.37" y="1071.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (331 samples, 0.36%)</title><rect x="525.1" y="933" width="4.2" height="15.0" fill="rgb(251,203,42)" rx="2" ry="2" />
<text  x="528.14" y="943.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (13 samples, 0.01%)</title><rect x="106.1" y="773" width="0.2" height="15.0" fill="rgb(249,12,12)" rx="2" ry="2" />
<text  x="109.09" y="783.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::transition_to_idle::{{closure}} (8 samples, 0.01%)</title><rect x="1073.3" y="501" width="0.1" height="15.0" fill="rgb(205,205,1)" rx="2" ry="2" />
<text  x="1076.26" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="133.0" y="869" width="0.2" height="15.0" fill="rgb(220,130,17)" rx="2" ry="2" />
<text  x="136.04" y="879.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (21 samples, 0.02%)</title><rect x="234.6" y="997" width="0.3" height="15.0" fill="rgb(245,71,34)" rx="2" ry="2" />
<text  x="237.64" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (37 samples, 0.04%)</title><rect x="148.1" y="901" width="0.4" height="15.0" fill="rgb(237,38,29)" rx="2" ry="2" />
<text  x="151.07" y="911.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20 samples, 0.02%)</title><rect x="940.3" y="565" width="0.2" height="15.0" fill="rgb(214,172,7)" rx="2" ry="2" />
<text  x="943.26" y="575.5" ></text>
</g>
<g >
<title>core::task::wake::Waker::wake_by_ref (16 samples, 0.02%)</title><rect x="484.1" y="613" width="0.2" height="15.0" fill="rgb(219,201,13)" rx="2" ry="2" />
<text  x="487.14" y="623.5" ></text>
</g>
<g >
<title>_GI___pthread_mutex_lock (137 samples, 0.15%)</title><rect x="1079.5" y="581" width="1.7" height="15.0" fill="rgb(211,30,52)" rx="2" ry="2" />
<text  x="1082.50" y="591.5" ></text>
</g>
<g >
<title>actix_http::service::HttpService&lt;tokio::net::tcp::stream::TcpStream,S,B,X,U&gt;::tcp::{{closure}} (680 samples, 0.73%)</title><rect x="504.4" y="821" width="8.6" height="15.0" fill="rgb(210,97,47)" rx="2" ry="2" />
<text  x="507.38" y="831.5" ></text>
</g>
<g >
<title>_rdl_alloc (9 samples, 0.01%)</title><rect x="361.1" y="821" width="0.2" height="15.0" fill="rgb(219,193,19)" rx="2" ry="2" />
<text  x="364.15" y="831.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::end (12 samples, 0.01%)</title><rect x="419.5" y="805" width="0.1" height="15.0" fill="rgb(249,84,34)" rx="2" ry="2" />
<text  x="422.49" y="815.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::{{closure}} (49 samples, 0.05%)</title><rect x="125.7" y="741" width="0.7" height="15.0" fill="rgb(232,175,37)" rx="2" ry="2" />
<text  x="128.75" y="751.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (34 samples, 0.04%)</title><rect x="43.7" y="1077" width="0.4" height="15.0" fill="rgb(218,82,18)" rx="2" ry="2" />
<text  x="46.67" y="1087.5" ></text>
</g>
<g >
<title>ip_output (2,111 samples, 2.26%)</title><rect x="300.4" y="773" width="26.8" height="15.0" fill="rgb(215,91,32)" rx="2" ry="2" />
<text  x="303.45" y="783.5" >i..</text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (22,826 samples, 24.49%)</title><rect x="795.0" y="1109" width="288.9" height="15.0" fill="rgb(246,190,35)" rx="2" ry="2" />
<text  x="797.97" y="1119.5" >std::thread::Builder::spawn_unchecked:..</text>
</g>
<g >
<title>entry_SYSCALL_64 (35 samples, 0.04%)</title><rect x="536.3" y="869" width="0.4" height="15.0" fill="rgb(248,92,46)" rx="2" ry="2" />
<text  x="539.26" y="879.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::compile (304 samples, 0.33%)</title><rect x="468.9" y="1061" width="3.8" height="15.0" fill="rgb(229,165,43)" rx="2" ry="2" />
<text  x="471.90" y="1071.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (20 samples, 0.02%)</title><rect x="353.0" y="901" width="0.2" height="15.0" fill="rgb(243,73,43)" rx="2" ry="2" />
<text  x="355.98" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_service::and_then::State&lt;actix_service::fn_service::FnService&lt;actix_http::service::HttpService&lt;tokio::net::tcp::stream::TcpStream,actix_service::map_config::MapConfig&lt;actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::server::HttpServer&lt;rust_actix_jsonpath_bench::main::{{closure}}::{{closure}},actix_web::app::App&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_http::body::Body&gt;::listen::{{closure}}::{{closure}}, (17 samples, 0.02%)</title><rect x="715.5" y="1029" width="0.2" height="15.0" fill="rgb(207,13,6)" rx="2" ry="2" />
<text  x="718.53" y="1039.5" ></text>
</g>
<g >
<title>futures_core::task::_internal::atomic_waker::AtomicWaker::wake (18 samples, 0.02%)</title><rect x="1091.4" y="949" width="0.2" height="15.0" fill="rgb(222,153,1)" rx="2" ry="2" />
<text  x="1094.38" y="959.5" ></text>
</g>
<g >
<title>int_free (8 samples, 0.01%)</title><rect x="453.9" y="1045" width="0.1" height="15.0" fill="rgb(227,61,11)" rx="2" ry="2" />
<text  x="456.95" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (31 samples, 0.03%)</title><rect x="211.7" y="565" width="0.4" height="15.0" fill="rgb(238,31,10)" rx="2" ry="2" />
<text  x="214.73" y="575.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (120 samples, 0.13%)</title><rect x="100.5" y="869" width="1.6" height="15.0" fill="rgb(229,97,27)" rx="2" ry="2" />
<text  x="103.53" y="879.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (25 samples, 0.03%)</title><rect x="361.0" y="853" width="0.3" height="15.0" fill="rgb(219,213,38)" rx="2" ry="2" />
<text  x="363.97" y="863.5" ></text>
</g>
<g >
<title>&lt;http::uri::Uri as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (320 samples, 0.34%)</title><rect x="12.1" y="1173" width="4.0" height="15.0" fill="rgb(225,177,1)" rx="2" ry="2" />
<text  x="15.09" y="1183.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read_ready (50 samples, 0.05%)</title><rect x="710.2" y="917" width="0.6" height="15.0" fill="rgb(252,6,33)" rx="2" ry="2" />
<text  x="713.15" y="927.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (148 samples, 0.16%)</title><rect x="142.1" y="693" width="1.9" height="15.0" fill="rgb(245,80,42)" rx="2" ry="2" />
<text  x="145.12" y="703.5" ></text>
</g>
<g >
<title>_wake_up_sync_key (1,169 samples, 1.25%)</title><rect x="1096.9" y="421" width="14.8" height="15.0" fill="rgb(214,141,4)" rx="2" ry="2" />
<text  x="1099.93" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParserImpl&gt; (997 samples, 1.07%)</title><rect x="382.6" y="821" width="12.6" height="15.0" fill="rgb(212,219,52)" rx="2" ry="2" />
<text  x="385.62" y="831.5" ></text>
</g>
<g >
<title>_pthread_mutex_unlock_usercnt (10 samples, 0.01%)</title><rect x="514.3" y="661" width="0.1" height="15.0" fill="rgb(225,115,24)" rx="2" ry="2" />
<text  x="517.29" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (201 samples, 0.22%)</title><rect x="275.2" y="1029" width="2.5" height="15.0" fill="rgb(218,154,30)" rx="2" ry="2" />
<text  x="278.18" y="1039.5" ></text>
</g>
<g >
<title>_fget_light (57 samples, 0.06%)</title><rect x="704.7" y="725" width="0.7" height="15.0" fill="rgb(238,209,18)" rx="2" ry="2" />
<text  x="707.72" y="735.5" ></text>
</g>
<g >
<title>update_rq_clock (51 samples, 0.05%)</title><rect x="1110.0" y="261" width="0.7" height="15.0" fill="rgb(205,85,20)" rx="2" ry="2" />
<text  x="1113.02" y="271.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (54 samples, 0.06%)</title><rect x="119.9" y="901" width="0.7" height="15.0" fill="rgb(222,201,7)" rx="2" ry="2" />
<text  x="122.91" y="911.5" ></text>
</g>
<g >
<title>raw_local_deliver (16 samples, 0.02%)</title><rect x="642.1" y="373" width="0.2" height="15.0" fill="rgb(232,50,44)" rx="2" ry="2" />
<text  x="645.09" y="383.5" ></text>
</g>
<g >
<title>_GI___libc_free (21 samples, 0.02%)</title><rect x="385.4" y="597" width="0.3" height="15.0" fill="rgb(227,221,2)" rx="2" ry="2" />
<text  x="388.40" y="607.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (142 samples, 0.15%)</title><rect x="196.2" y="517" width="1.8" height="15.0" fill="rgb(238,210,12)" rx="2" ry="2" />
<text  x="199.22" y="527.5" ></text>
</g>
<g >
<title>actix_web::request::HttpRequest::app_data (133 samples, 0.14%)</title><rect x="349.8" y="869" width="1.7" height="15.0" fill="rgb(231,41,26)" rx="2" ry="2" />
<text  x="352.82" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt;&gt; (805 samples, 0.86%)</title><rect x="384.8" y="677" width="10.2" height="15.0" fill="rgb(224,196,5)" rx="2" ry="2" />
<text  x="387.84" y="687.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (13 samples, 0.01%)</title><rect x="72.5" y="869" width="0.1" height="15.0" fill="rgb(205,121,9)" rx="2" ry="2" />
<text  x="75.47" y="879.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::shared_v_drop::{{closure}} (11 samples, 0.01%)</title><rect x="44.3" y="1109" width="0.2" height="15.0" fill="rgb(219,83,54)" rx="2" ry="2" />
<text  x="47.32" y="1119.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (307 samples, 0.33%)</title><rect x="1145.1" y="773" width="3.8" height="15.0" fill="rgb(230,92,40)" rx="2" ry="2" />
<text  x="1148.06" y="783.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (152 samples, 0.16%)</title><rect x="181.5" y="805" width="1.9" height="15.0" fill="rgb(224,209,38)" rx="2" ry="2" />
<text  x="184.46" y="815.5" ></text>
</g>
<g >
<title>_fget_light (62 samples, 0.07%)</title><rect x="774.7" y="629" width="0.8" height="15.0" fill="rgb(231,121,0)" rx="2" ry="2" />
<text  x="777.67" y="639.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::all_with_str::{{closure}} (163 samples, 0.17%)</title><rect x="181.3" y="837" width="2.1" height="15.0" fill="rgb(232,219,44)" rx="2" ry="2" />
<text  x="184.32" y="847.5" ></text>
</g>
<g >
<title>memset_erms (45 samples, 0.05%)</title><rect x="616.6" y="229" width="0.5" height="15.0" fill="rgb(231,188,10)" rx="2" ry="2" />
<text  x="619.56" y="239.5" ></text>
</g>
<g >
<title>tokio::task::local::spawn_local::{{closure}} (12 samples, 0.01%)</title><rect x="503.6" y="1173" width="0.1" height="15.0" fill="rgb(239,109,34)" rx="2" ry="2" />
<text  x="506.55" y="1183.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (60 samples, 0.06%)</title><rect x="471.4" y="837" width="0.7" height="15.0" fill="rgb(254,51,1)" rx="2" ry="2" />
<text  x="474.36" y="847.5" ></text>
</g>
<g >
<title>_fget_light (21 samples, 0.02%)</title><rect x="1119.2" y="805" width="0.2" height="15.0" fill="rgb(222,81,52)" rx="2" ry="2" />
<text  x="1122.18" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::read (12 samples, 0.01%)</title><rect x="123.3" y="869" width="0.2" height="15.0" fill="rgb(236,140,8)" rx="2" ry="2" />
<text  x="126.33" y="879.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="682.4" y="965" width="0.1" height="15.0" fill="rgb(212,124,18)" rx="2" ry="2" />
<text  x="685.37" y="975.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (49 samples, 0.05%)</title><rect x="192.8" y="565" width="0.6" height="15.0" fill="rgb(230,75,43)" rx="2" ry="2" />
<text  x="195.79" y="575.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,006 samples, 1.08%)</title><rect x="53.0" y="1157" width="12.7" height="15.0" fill="rgb(246,208,29)" rx="2" ry="2" />
<text  x="56.01" y="1167.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (16 samples, 0.02%)</title><rect x="670.1" y="757" width="0.2" height="15.0" fill="rgb(248,57,20)" rx="2" ry="2" />
<text  x="673.10" y="767.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (199 samples, 0.21%)</title><rect x="362.3" y="997" width="2.5" height="15.0" fill="rgb(209,31,28)" rx="2" ry="2" />
<text  x="365.27" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_web::extract::m::TupleFromRequest2::TupleFromRequest2&lt;actix_web::data::Data&lt;&amp;str&gt;,actix_web::data::Data&lt;serde_json::value::Value&gt;&gt;&gt; (54 samples, 0.06%)</title><rect x="436.8" y="885" width="0.7" height="15.0" fill="rgb(239,189,32)" rx="2" ry="2" />
<text  x="439.78" y="895.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (22 samples, 0.02%)</title><rect x="803.2" y="789" width="0.2" height="15.0" fill="rgb(208,62,35)" rx="2" ry="2" />
<text  x="806.17" y="799.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1,435 samples, 1.54%)</title><rect x="207.1" y="693" width="18.1" height="15.0" fill="rgb(254,71,14)" rx="2" ry="2" />
<text  x="210.07" y="703.5" ></text>
</g>
<g >
<title>raw_spin_lock (11 samples, 0.01%)</title><rect x="758.6" y="613" width="0.1" height="15.0" fill="rgb(241,214,38)" rx="2" ry="2" />
<text  x="761.60" y="623.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (77 samples, 0.08%)</title><rect x="797.7" y="837" width="0.9" height="15.0" fill="rgb(205,228,53)" rx="2" ry="2" />
<text  x="800.66" y="847.5" ></text>
</g>
<g >
<title>&lt;actix_service::and_then::AndThenServiceResponse&lt;A,B&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="474.7" y="517" width="0.4" height="15.0" fill="rgb(240,151,39)" rx="2" ry="2" />
<text  x="477.74" y="527.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::{{closure}} (1,071 samples, 1.15%)</title><rect x="472.8" y="773" width="13.5" height="15.0" fill="rgb(231,10,52)" rx="2" ry="2" />
<text  x="475.77" y="783.5" ></text>
</g>
<g >
<title>_fget_files (43 samples, 0.05%)</title><rect x="819.9" y="581" width="0.5" height="15.0" fill="rgb(209,175,19)" rx="2" ry="2" />
<text  x="822.87" y="591.5" ></text>
</g>
<g >
<title>psi_group_change (221 samples, 0.24%)</title><rect x="1105.7" y="229" width="2.8" height="15.0" fill="rgb(205,55,29)" rx="2" ry="2" />
<text  x="1108.71" y="239.5" ></text>
</g>
<g >
<title>sysvec_call_function (8 samples, 0.01%)</title><rect x="975.9" y="613" width="0.1" height="15.0" fill="rgb(248,151,14)" rx="2" ry="2" />
<text  x="978.88" y="623.5" ></text>
</g>
<g >
<title>raw_spin_lock (16 samples, 0.02%)</title><rect x="755.8" y="549" width="0.2" height="15.0" fill="rgb(208,45,44)" rx="2" ry="2" />
<text  x="758.75" y="559.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,321 samples, 3.56%)</title><rect x="185.9" y="837" width="42.0" height="15.0" fill="rgb(239,5,9)" rx="2" ry="2" />
<text  x="188.89" y="847.5" >&lt;co..</text>
</g>
<g >
<title>std::sys_common::backtrace::_rust_begin_short_backtrace (8,015 samples, 8.60%)</title><rect x="1086.8" y="1093" width="101.5" height="15.0" fill="rgb(233,91,32)" rx="2" ry="2" />
<text  x="1089.83" y="1103.5" >std::sys_com..</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::exprs (3,327 samples, 3.57%)</title><rect x="70.0" y="917" width="42.1" height="15.0" fill="rgb(244,23,39)" rx="2" ry="2" />
<text  x="73.03" y="927.5" >jso..</text>
</g>
<g >
<title>core::num::dec2flt::parse::parse_number (19 samples, 0.02%)</title><rect x="89.3" y="741" width="0.2" height="15.0" fill="rgb(254,197,24)" rx="2" ry="2" />
<text  x="92.28" y="751.5" ></text>
</g>
<g >
<title>ip_local_out (25 samples, 0.03%)</title><rect x="656.8" y="677" width="0.3" height="15.0" fill="rgb(250,128,39)" rx="2" ry="2" />
<text  x="659.80" y="687.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (575 samples, 0.62%)</title><rect x="174.0" y="805" width="7.3" height="15.0" fill="rgb(214,25,7)" rx="2" ry="2" />
<text  x="177.04" y="815.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (356 samples, 0.38%)</title><rect x="238.9" y="1093" width="4.5" height="15.0" fill="rgb(206,186,53)" rx="2" ry="2" />
<text  x="241.85" y="1103.5" ></text>
</g>
<g >
<title>tcp_rate_gen (21 samples, 0.02%)</title><rect x="552.9" y="693" width="0.2" height="15.0" fill="rgb(207,227,12)" rx="2" ry="2" />
<text  x="555.87" y="703.5" ></text>
</g>
<g >
<title>&lt;actix_server::worker::Worker as core::future::future::Future&gt;::poll (1,726 samples, 1.85%)</title><rect x="1047.3" y="357" width="21.9" height="15.0" fill="rgb(224,148,36)" rx="2" ry="2" />
<text  x="1050.31" y="367.5" >&lt;..</text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (165 samples, 0.18%)</title><rect x="336.9" y="1061" width="2.1" height="15.0" fill="rgb(228,88,22)" rx="2" ry="2" />
<text  x="339.88" y="1071.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1,285 samples, 1.38%)</title><rect x="306.3" y="517" width="16.3" height="15.0" fill="rgb(237,60,19)" rx="2" ry="2" />
<text  x="309.28" y="527.5" ></text>
</g>
<g >
<title>&lt;&amp;std::os::imp::unix::net::listener::UnixListener as core::iter::traits::collect::IntoIterator&gt;::into_iter (23 samples, 0.02%)</title><rect x="513.2" y="677" width="0.3" height="15.0" fill="rgb(210,82,39)" rx="2" ry="2" />
<text  x="516.18" y="687.5" ></text>
</g>
<g >
<title>int_free (17 samples, 0.02%)</title><rect x="172.9" y="821" width="0.2" height="15.0" fill="rgb(210,110,32)" rx="2" ry="2" />
<text  x="175.93" y="831.5" ></text>
</g>
<g >
<title>schedule (6,811 samples, 7.31%)</title><rect x="862.5" y="629" width="86.2" height="15.0" fill="rgb(253,84,12)" rx="2" ry="2" />
<text  x="865.46" y="639.5" >schedule</text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::with_capacity (211 samples, 0.23%)</title><rect x="275.2" y="1061" width="2.7" height="15.0" fill="rgb(250,142,43)" rx="2" ry="2" />
<text  x="278.18" y="1071.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (331 samples, 0.36%)</title><rect x="525.1" y="1013" width="4.2" height="15.0" fill="rgb(245,6,8)" rx="2" ry="2" />
<text  x="528.14" y="1023.5" ></text>
</g>
<g >
<title>ipv4_dst_check (25 samples, 0.03%)</title><rect x="544.1" y="725" width="0.3" height="15.0" fill="rgb(240,206,0)" rx="2" ry="2" />
<text  x="547.06" y="735.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (13,045 samples, 13.99%)</title><rect x="67.1" y="1157" width="165.1" height="15.0" fill="rgb(241,204,43)" rx="2" ry="2" />
<text  x="70.06" y="1167.5" >&lt;futures_util::future..</text>
</g>
<g >
<title>tokio::runtime::task::waker::drop_waker (27 samples, 0.03%)</title><rect x="1041.3" y="197" width="0.4" height="15.0" fill="rgb(221,5,54)" rx="2" ry="2" />
<text  x="1044.31" y="207.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::take_read_ready (61 samples, 0.07%)</title><rect x="465.9" y="981" width="0.8" height="15.0" fill="rgb(217,36,34)" rx="2" ry="2" />
<text  x="468.91" y="991.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1,640 samples, 1.76%)</title><rect x="504.4" y="1253" width="20.7" height="15.0" fill="rgb(216,121,31)" rx="2" ry="2" />
<text  x="507.38" y="1263.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (78 samples, 0.08%)</title><rect x="242.4" y="773" width="1.0" height="15.0" fill="rgb(246,200,28)" rx="2" ry="2" />
<text  x="245.37" y="783.5" ></text>
</g>
<g >
<title>atomic_dec_and_lock (8 samples, 0.01%)</title><rect x="748.6" y="549" width="0.1" height="15.0" fill="rgb(215,94,2)" rx="2" ry="2" />
<text  x="751.64" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;dyn tokio::park::Unpark&gt; as tokio::park::Unpark&gt;::unpark (91 samples, 0.10%)</title><rect x="793.3" y="821" width="1.1" height="15.0" fill="rgb(218,195,48)" rx="2" ry="2" />
<text  x="796.27" y="831.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::wakeup (1,669 samples, 1.79%)</title><rect x="1093.0" y="629" width="21.1" height="15.0" fill="rgb(207,122,31)" rx="2" ry="2" />
<text  x="1096.01" y="639.5" ></text>
</g>
<g >
<title>inet_shutdown (8 samples, 0.01%)</title><rect x="334.0" y="933" width="0.1" height="15.0" fill="rgb(236,114,12)" rx="2" ry="2" />
<text  x="336.98" y="943.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (33 samples, 0.04%)</title><rect x="1083.4" y="661" width="0.4" height="15.0" fill="rgb(237,169,50)" rx="2" ry="2" />
<text  x="1086.40" y="671.5" ></text>
</g>
<g >
<title>tokio::io::driver::scheduled_io::ScheduledIo::set_readiness (39 samples, 0.04%)</title><rect x="235.7" y="1077" width="0.5" height="15.0" fill="rgb(245,77,24)" rx="2" ry="2" />
<text  x="238.69" y="1087.5" ></text>
</g>
<g >
<title>_memcmp_avx2_movbe (85 samples, 0.09%)</title><rect x="196.9" y="501" width="1.1" height="15.0" fill="rgb(224,70,20)" rx="2" ry="2" />
<text  x="199.93" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (36 samples, 0.04%)</title><rect x="274.7" y="949" width="0.5" height="15.0" fill="rgb(209,43,51)" rx="2" ry="2" />
<text  x="277.71" y="959.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (22,826 samples, 24.49%)</title><rect x="795.0" y="1141" width="288.9" height="15.0" fill="rgb(206,24,35)" rx="2" ry="2" />
<text  x="797.97" y="1151.5" >std::panicking::try::do_call</text>
</g>
<g >
<title>core::tuple::&lt;impl core::cmp::Ord for  (8 samples, 0.01%)</title><rect x="798.3" y="725" width="0.1" height="15.0" fill="rgb(224,23,11)" rx="2" ry="2" />
<text  x="801.28" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (12 samples, 0.01%)</title><rect x="1027.5" y="517" width="0.2" height="15.0" fill="rgb(249,162,52)" rx="2" ry="2" />
<text  x="1030.54" y="527.5" ></text>
</g>
<g >
<title>int_free (14 samples, 0.02%)</title><rect x="396.3" y="901" width="0.2" height="15.0" fill="rgb(252,75,11)" rx="2" ry="2" />
<text  x="399.30" y="911.5" ></text>
</g>
<g >
<title>_local_bh_enable_ip (11 samples, 0.01%)</title><rect x="543.7" y="725" width="0.1" height="15.0" fill="rgb(239,99,18)" rx="2" ry="2" />
<text  x="546.69" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_or (14 samples, 0.02%)</title><rect x="484.2" y="533" width="0.1" height="15.0" fill="rgb(249,172,31)" rx="2" ry="2" />
<text  x="487.16" y="543.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::handle_request (1,006 samples, 1.08%)</title><rect x="53.0" y="1221" width="12.7" height="15.0" fill="rgb(229,117,30)" rx="2" ry="2" />
<text  x="56.01" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;jsonpath_lib::selector::terms::ExprTerm&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="133.0" y="901" width="0.2" height="15.0" fill="rgb(219,28,12)" rx="2" ry="2" />
<text  x="136.00" y="911.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::now (419 samples, 0.45%)</title><rect x="986.0" y="821" width="5.3" height="15.0" fill="rgb(215,122,33)" rx="2" ry="2" />
<text  x="989.03" y="831.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt (43 samples, 0.05%)</title><rect x="1033.2" y="421" width="0.6" height="15.0" fill="rgb(219,78,31)" rx="2" ry="2" />
<text  x="1036.21" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.02%)</title><rect x="435.1" y="709" width="0.1" height="15.0" fill="rgb(221,131,2)" rx="2" ry="2" />
<text  x="438.06" y="719.5" ></text>
</g>
<g >
<title>mntput (9 samples, 0.01%)</title><rect x="1157.7" y="773" width="0.1" height="15.0" fill="rgb(229,75,54)" rx="2" ry="2" />
<text  x="1160.73" y="783.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::codec::Codec as tokio_util::codec::encoder::Encoder&lt;actix_http::h1::Message&lt; (228 samples, 0.24%)</title><rect x="456.0" y="1061" width="2.8" height="15.0" fill="rgb(205,60,42)" rx="2" ry="2" />
<text  x="458.96" y="1071.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (9 samples, 0.01%)</title><rect x="673.1" y="853" width="0.1" height="15.0" fill="rgb(232,108,6)" rx="2" ry="2" />
<text  x="676.09" y="863.5" ></text>
</g>
<g >
<title>&lt;tokio::time::instant::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (9 samples, 0.01%)</title><rect x="343.7" y="1045" width="0.1" height="15.0" fill="rgb(248,183,41)" rx="2" ry="2" />
<text  x="346.68" y="1055.5" ></text>
</g>
<g >
<title>kmem_cache_free (63 samples, 0.07%)</title><rect x="1124.7" y="773" width="0.8" height="15.0" fill="rgb(246,59,31)" rx="2" ry="2" />
<text  x="1127.69" y="783.5" ></text>
</g>
<g >
<title>_inet_lookup_established (182 samples, 0.20%)</title><rect x="606.5" y="341" width="2.3" height="15.0" fill="rgb(249,212,15)" rx="2" ry="2" />
<text  x="609.52" y="351.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (381 samples, 0.41%)</title><rect x="73.3" y="885" width="4.8" height="15.0" fill="rgb(254,11,16)" rx="2" ry="2" />
<text  x="76.25" y="895.5" ></text>
</g>
<g >
<title>_fdget (116 samples, 0.12%)</title><rect x="520.0" y="485" width="1.4" height="15.0" fill="rgb(250,150,25)" rx="2" ry="2" />
<text  x="522.97" y="495.5" ></text>
</g>
<g >
<title>mio::poll::Poll::register (99 samples, 0.11%)</title><rect x="513.0" y="757" width="1.2" height="15.0" fill="rgb(222,85,14)" rx="2" ry="2" />
<text  x="515.99" y="767.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (36 samples, 0.04%)</title><rect x="274.7" y="965" width="0.5" height="15.0" fill="rgb(205,137,1)" rx="2" ry="2" />
<text  x="277.71" y="975.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll::{{closure}} (870 samples, 0.93%)</title><rect x="504.4" y="981" width="11.0" height="15.0" fill="rgb(209,40,23)" rx="2" ry="2" />
<text  x="507.38" y="991.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;jsonpath_lib::paths::tokens::ParseToken&gt;&gt; (37 samples, 0.04%)</title><rect x="132.1" y="917" width="0.4" height="15.0" fill="rgb(220,108,39)" rx="2" ry="2" />
<text  x="135.05" y="927.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="153.9" y="597" width="0.1" height="15.0" fill="rgb(206,115,13)" rx="2" ry="2" />
<text  x="156.89" y="607.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (86 samples, 0.09%)</title><rect x="565.5" y="741" width="1.1" height="15.0" fill="rgb(245,119,37)" rx="2" ry="2" />
<text  x="568.48" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (35 samples, 0.04%)</title><rect x="677.7" y="853" width="0.5" height="15.0" fill="rgb(210,48,32)" rx="2" ry="2" />
<text  x="680.74" y="863.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (122 samples, 0.13%)</title><rect x="215.6" y="533" width="1.5" height="15.0" fill="rgb(244,173,26)" rx="2" ry="2" />
<text  x="218.59" y="543.5" ></text>
</g>
<g >
<title>raw_spin_lock (40 samples, 0.04%)</title><rect x="737.2" y="661" width="0.5" height="15.0" fill="rgb(237,34,46)" rx="2" ry="2" />
<text  x="740.23" y="671.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (37 samples, 0.04%)</title><rect x="418.9" y="773" width="0.5" height="15.0" fill="rgb(242,26,14)" rx="2" ry="2" />
<text  x="421.91" y="783.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (15 samples, 0.02%)</title><rect x="985.4" y="773" width="0.2" height="15.0" fill="rgb(246,92,35)" rx="2" ry="2" />
<text  x="988.43" y="783.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (22,824 samples, 24.48%)</title><rect x="795.0" y="933" width="288.9" height="15.0" fill="rgb(216,185,3)" rx="2" ry="2" />
<text  x="797.97" y="943.5" >tokio::macros::scoped_tls::ScopedKey&lt;T..</text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek::{{closure}} (17 samples, 0.02%)</title><rect x="119.2" y="773" width="0.2" height="15.0" fill="rgb(235,164,30)" rx="2" ry="2" />
<text  x="122.18" y="783.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::&lt;impl core::convert::From&lt;mio::sys::unix::ready::UnixReady&gt; for mio::event_imp::Ready&gt;::from (9 samples, 0.01%)</title><rect x="464.1" y="949" width="0.1" height="15.0" fill="rgb(217,78,35)" rx="2" ry="2" />
<text  x="467.07" y="959.5" ></text>
</g>
<g >
<title>int_free (8 samples, 0.01%)</title><rect x="148.3" y="821" width="0.1" height="15.0" fill="rgb(227,150,11)" rx="2" ry="2" />
<text  x="151.28" y="831.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll2 (12,529 samples, 13.44%)</title><rect x="807.9" y="789" width="158.6" height="15.0" fill="rgb(208,91,9)" rx="2" ry="2" />
<text  x="810.85" y="799.5" >mio::poll::Poll::poll2</text>
</g>
<g >
<title>_GI___pthread_mutex_lock (8 samples, 0.01%)</title><rect x="1081.4" y="613" width="0.1" height="15.0" fill="rgb(227,122,10)" rx="2" ry="2" />
<text  x="1084.44" y="623.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (66 samples, 0.07%)</title><rect x="972.2" y="629" width="0.8" height="15.0" fill="rgb(229,82,9)" rx="2" ry="2" />
<text  x="975.20" y="639.5" ></text>
</g>
<g >
<title>tokio::util::slab::page::Shared&lt;T&gt;::get::{{closure}} (13 samples, 0.01%)</title><rect x="235.0" y="997" width="0.1" height="15.0" fill="rgb(213,3,10)" rx="2" ry="2" />
<text  x="237.98" y="1007.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_or (46 samples, 0.05%)</title><rect x="973.8" y="709" width="0.6" height="15.0" fill="rgb(220,124,15)" rx="2" ry="2" />
<text  x="976.79" y="719.5" ></text>
</g>
<g >
<title>_kfree_skb (364 samples, 0.39%)</title><rect x="692.9" y="693" width="4.6" height="15.0" fill="rgb(242,185,3)" rx="2" ry="2" />
<text  x="695.89" y="703.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46 samples, 0.05%)</title><rect x="164.3" y="741" width="0.6" height="15.0" fill="rgb(239,95,34)" rx="2" ry="2" />
<text  x="167.35" y="751.5" ></text>
</g>
<g >
<title>std::net::tcp::TcpStream::peer_addr (46 samples, 0.05%)</title><rect x="516.0" y="549" width="0.5" height="15.0" fill="rgb(244,51,23)" rx="2" ry="2" />
<text  x="518.96" y="559.5" ></text>
</g>
<g >
<title>task_work_run (622 samples, 0.67%)</title><rect x="1151.8" y="821" width="7.9" height="15.0" fill="rgb(239,44,4)" rx="2" ry="2" />
<text  x="1154.78" y="831.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (31 samples, 0.03%)</title><rect x="230.9" y="933" width="0.3" height="15.0" fill="rgb(221,75,49)" rx="2" ry="2" />
<text  x="233.85" y="943.5" ></text>
</g>
<g >
<title>_rdl_alloc (11 samples, 0.01%)</title><rect x="109.0" y="725" width="0.1" height="15.0" fill="rgb(226,51,38)" rx="2" ry="2" />
<text  x="111.98" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="426.3" y="613" width="0.2" height="15.0" fill="rgb(235,74,10)" rx="2" ry="2" />
<text  x="429.34" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (102 samples, 0.11%)</title><rect x="427.7" y="517" width="1.3" height="15.0" fill="rgb(205,33,31)" rx="2" ry="2" />
<text  x="430.71" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::response::ResponseBuilder&gt; (34 samples, 0.04%)</title><rect x="380.3" y="901" width="0.5" height="15.0" fill="rgb(209,26,11)" rx="2" ry="2" />
<text  x="383.34" y="911.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set_epi8 (52 samples, 0.06%)</title><rect x="177.8" y="437" width="0.6" height="15.0" fill="rgb(245,15,0)" rx="2" ry="2" />
<text  x="180.75" y="447.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (33 samples, 0.04%)</title><rect x="1115.9" y="629" width="0.5" height="15.0" fill="rgb(247,145,18)" rx="2" ry="2" />
<text  x="1118.95" y="639.5" ></text>
</g>
<g >
<title>core::num::dec2flt::dec2flt (245 samples, 0.26%)</title><rect x="102.4" y="789" width="3.1" height="15.0" fill="rgb(212,131,29)" rx="2" ry="2" />
<text  x="105.42" y="799.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::from_raw (23 samples, 0.02%)</title><rect x="1072.2" y="501" width="0.3" height="15.0" fill="rgb(244,50,49)" rx="2" ry="2" />
<text  x="1075.19" y="511.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::drop_waker (61 samples, 0.07%)</title><rect x="791.6" y="613" width="0.7" height="15.0" fill="rgb(239,57,18)" rx="2" ry="2" />
<text  x="794.56" y="623.5" ></text>
</g>
<g >
<title>_dentry_kill (1,084 samples, 1.16%)</title><rect x="742.6" y="597" width="13.7" height="15.0" fill="rgb(241,114,5)" rx="2" ry="2" />
<text  x="745.62" y="607.5" ></text>
</g>
<g >
<title>tokio::util::slab::addr::Address::slot (14 samples, 0.02%)</title><rect x="790.8" y="741" width="0.2" height="15.0" fill="rgb(218,205,5)" rx="2" ry="2" />
<text  x="793.81" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (156 samples, 0.17%)</title><rect x="427.4" y="613" width="2.0" height="15.0" fill="rgb(253,154,1)" rx="2" ry="2" />
<text  x="430.39" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (9 samples, 0.01%)</title><rect x="1136.3" y="725" width="0.1" height="15.0" fill="rgb(226,44,25)" rx="2" ry="2" />
<text  x="1139.32" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="1114.6" y="773" width="0.3" height="15.0" fill="rgb(217,170,51)" rx="2" ry="2" />
<text  x="1117.59" y="783.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (314 samples, 0.34%)</title><rect x="189.4" y="645" width="4.0" height="15.0" fill="rgb(220,64,32)" rx="2" ry="2" />
<text  x="192.43" y="655.5" ></text>
</g>
<g >
<title>sock_put (9 samples, 0.01%)</title><rect x="611.9" y="341" width="0.1" height="15.0" fill="rgb(224,111,22)" rx="2" ry="2" />
<text  x="614.86" y="351.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (60 samples, 0.06%)</title><rect x="111.1" y="869" width="0.8" height="15.0" fill="rgb(237,169,36)" rx="2" ry="2" />
<text  x="114.12" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (36 samples, 0.04%)</title><rect x="179.6" y="709" width="0.4" height="15.0" fill="rgb(230,35,11)" rx="2" ry="2" />
<text  x="182.56" y="719.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.01%)</title><rect x="676.4" y="901" width="0.1" height="15.0" fill="rgb(215,104,30)" rx="2" ry="2" />
<text  x="679.38" y="911.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (31 samples, 0.03%)</title><rect x="274.7" y="933" width="0.4" height="15.0" fill="rgb(236,177,1)" rx="2" ry="2" />
<text  x="277.71" y="943.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::default::Default&gt;::default (169 samples, 0.18%)</title><rect x="357.9" y="981" width="2.2" height="15.0" fill="rgb(209,22,49)" rx="2" ry="2" />
<text  x="360.94" y="991.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (42 samples, 0.05%)</title><rect x="204.1" y="533" width="0.5" height="15.0" fill="rgb(212,145,34)" rx="2" ry="2" />
<text  x="207.09" y="543.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (16 samples, 0.02%)</title><rect x="259.9" y="549" width="0.2" height="15.0" fill="rgb(230,189,0)" rx="2" ry="2" />
<text  x="262.94" y="559.5" ></text>
</g>
<g >
<title>tokio::sync::oneshot::State::is_tx_task_set (10 samples, 0.01%)</title><rect x="1075.3" y="533" width="0.1" height="15.0" fill="rgb(254,105,8)" rx="2" ry="2" />
<text  x="1078.28" y="543.5" ></text>
</g>
<g >
<title>actix_http::message::Message&lt;T&gt;::new (352 samples, 0.38%)</title><rect x="37.6" y="1157" width="4.4" height="15.0" fill="rgb(222,50,17)" rx="2" ry="2" />
<text  x="40.57" y="1167.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1,875 samples, 2.01%)</title><rect x="1091.9" y="885" width="23.8" height="15.0" fill="rgb(233,223,44)" rx="2" ry="2" />
<text  x="1094.93" y="895.5" >t..</text>
</g>
<g >
<title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (16 samples, 0.02%)</title><rect x="194.7" y="565" width="0.2" height="15.0" fill="rgb(236,218,50)" rx="2" ry="2" />
<text  x="197.69" y="575.5" ></text>
</g>
<g >
<title>&lt;rust_actix_jsonpath_bench::new as actix_web::service::HttpServiceFactory&gt;::register::new::{{closure}} (356 samples, 0.38%)</title><rect x="238.9" y="1013" width="4.5" height="15.0" fill="rgb(231,119,37)" rx="2" ry="2" />
<text  x="241.85" y="1023.5" ></text>
</g>
<g >
<title>pipe_poll (8 samples, 0.01%)</title><rect x="855.0" y="661" width="0.1" height="15.0" fill="rgb(220,203,8)" rx="2" ry="2" />
<text  x="857.97" y="671.5" ></text>
</g>
<g >
<title>alloc::alloc::box_free (157 samples, 0.17%)</title><rect x="390.1" y="549" width="2.0" height="15.0" fill="rgb(219,164,11)" rx="2" ry="2" />
<text  x="393.12" y="559.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (8 samples, 0.01%)</title><rect x="975.9" y="565" width="0.1" height="15.0" fill="rgb(230,172,44)" rx="2" ry="2" />
<text  x="978.88" y="575.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::get_ref (10 samples, 0.01%)</title><rect x="516.5" y="581" width="0.2" height="15.0" fill="rgb(243,189,8)" rx="2" ry="2" />
<text  x="519.54" y="591.5" ></text>
</g>
<g >
<title>alloc::rc::Rc&lt;T&gt;::new (36 samples, 0.04%)</title><rect x="402.2" y="885" width="0.5" height="15.0" fill="rgb(237,78,38)" rx="2" ry="2" />
<text  x="405.25" y="895.5" ></text>
</g>
<g >
<title>core::mem::replace (11 samples, 0.01%)</title><rect x="172.3" y="901" width="0.1" height="15.0" fill="rgb(210,98,22)" rx="2" ry="2" />
<text  x="175.28" y="911.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (81 samples, 0.09%)</title><rect x="221.9" y="485" width="1.0" height="15.0" fill="rgb(236,150,10)" rx="2" ry="2" />
<text  x="224.85" y="495.5" ></text>
</g>
<g >
<title>sk_reset_timer (8 samples, 0.01%)</title><rect x="309.7" y="421" width="0.1" height="15.0" fill="rgb(239,79,39)" rx="2" ry="2" />
<text  x="312.66" y="431.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (71 samples, 0.08%)</title><rect x="87.5" y="789" width="0.9" height="15.0" fill="rgb(253,38,36)" rx="2" ry="2" />
<text  x="90.47" y="799.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::decoder::MessageDecoder&lt;T&gt; as tokio_util::codec::decoder::Decoder&gt;::decode (3,324 samples, 3.57%)</title><rect x="10.9" y="1205" width="42.1" height="15.0" fill="rgb(219,155,13)" rx="2" ry="2" />
<text  x="13.94" y="1215.5" >&lt;ac..</text>
</g>
<g >
<title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (197 samples, 0.21%)</title><rect x="339.5" y="1061" width="2.5" height="15.0" fill="rgb(228,19,51)" rx="2" ry="2" />
<text  x="342.46" y="1071.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (30 samples, 0.03%)</title><rect x="231.4" y="821" width="0.4" height="15.0" fill="rgb(205,151,21)" rx="2" ry="2" />
<text  x="234.40" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk_dedup (3,028 samples, 3.25%)</title><rect x="186.9" y="709" width="38.3" height="15.0" fill="rgb(239,169,35)" rx="2" ry="2" />
<text  x="189.90" y="719.5" >jso..</text>
</g>
<g >
<title>alloc::alloc::alloc (34 samples, 0.04%)</title><rect x="108.7" y="741" width="0.4" height="15.0" fill="rgb(213,168,25)" rx="2" ry="2" />
<text  x="111.71" y="751.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (511 samples, 0.55%)</title><rect x="198.3" y="629" width="6.5" height="15.0" fill="rgb(213,112,16)" rx="2" ry="2" />
<text  x="201.33" y="639.5" ></text>
</g>
<g >
<title>ep_unregister_pollwai.sr. (345 samples, 0.37%)</title><rect x="777.9" y="629" width="4.3" height="15.0" fill="rgb(249,5,16)" rx="2" ry="2" />
<text  x="780.86" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (47 samples, 0.05%)</title><rect x="228.7" y="773" width="0.5" height="15.0" fill="rgb(254,142,34)" rx="2" ry="2" />
<text  x="231.65" y="783.5" ></text>
</g>
<g >
<title>_tcp_push_pending_frames (2,896 samples, 3.11%)</title><rect x="295.4" y="869" width="36.6" height="15.0" fill="rgb(246,209,8)" rx="2" ry="2" />
<text  x="298.36" y="879.5" >_tc..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.05%)</title><rect x="133.7" y="869" width="0.6" height="15.0" fill="rgb(219,121,11)" rx="2" ry="2" />
<text  x="136.71" y="879.5" ></text>
</g>
<g >
<title>&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop (4,321 samples, 4.64%)</title><rect x="732.8" y="853" width="54.7" height="15.0" fill="rgb(210,184,39)" rx="2" ry="2" />
<text  x="735.83" y="863.5" >&lt;toki..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="142.8" y="613" width="0.2" height="15.0" fill="rgb(251,49,5)" rx="2" ry="2" />
<text  x="145.83" y="623.5" ></text>
</g>
<g >
<title>_sk_dst_check (27 samples, 0.03%)</title><rect x="299.4" y="789" width="0.3" height="15.0" fill="rgb(208,5,24)" rx="2" ry="2" />
<text  x="302.37" y="799.5" ></text>
</g>
<g >
<title>tcp_current_mss (40 samples, 0.04%)</title><rect x="332.2" y="869" width="0.5" height="15.0" fill="rgb(247,125,42)" rx="2" ry="2" />
<text  x="335.21" y="879.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="461.3" y="933" width="0.2" height="15.0" fill="rgb(214,143,28)" rx="2" ry="2" />
<text  x="464.34" y="943.5" ></text>
</g>
<g >
<title>__slab_alloc (10 samples, 0.01%)</title><rect x="258.6" y="533" width="0.1" height="15.0" fill="rgb(206,183,25)" rx="2" ry="2" />
<text  x="261.56" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="42.5" y="1045" width="0.3" height="15.0" fill="rgb(239,108,9)" rx="2" ry="2" />
<text  x="45.49" y="1055.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (29 samples, 0.03%)</title><rect x="179.1" y="613" width="0.3" height="15.0" fill="rgb(219,81,43)" rx="2" ry="2" />
<text  x="182.05" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (87 samples, 0.09%)</title><rect x="379.0" y="805" width="1.1" height="15.0" fill="rgb(222,60,21)" rx="2" ry="2" />
<text  x="381.97" y="815.5" ></text>
</g>
<g >
<title>tokio::time::driver::entry::Entry::poll_elapsed (76 samples, 0.08%)</title><rect x="677.4" y="949" width="1.0" height="15.0" fill="rgb(251,91,12)" rx="2" ry="2" />
<text  x="680.41" y="959.5" ></text>
</g>
<g >
<title>core::core_arch::x86::avx2::mm256_cmpeq_epi8 (19 samples, 0.02%)</title><rect x="49.7" y="1093" width="0.3" height="15.0" fill="rgb(210,4,31)" rx="2" ry="2" />
<text  x="52.75" y="1103.5" ></text>
</g>
<g >
<title>mio::poll::validate_args (14 samples, 0.02%)</title><rect x="245.0" y="677" width="0.1" height="15.0" fill="rgb(245,44,20)" rx="2" ry="2" />
<text  x="247.97" y="687.5" ></text>
</g>
<g >
<title>security_file_alloc (159 samples, 0.17%)</title><rect x="1142.9" y="725" width="2.0" height="15.0" fill="rgb(228,168,53)" rx="2" ry="2" />
<text  x="1145.89" y="735.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.01%)</title><rect x="159.2" y="693" width="0.1" height="15.0" fill="rgb(241,117,29)" rx="2" ry="2" />
<text  x="162.22" y="703.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::tick::{{closure}} (3,458 samples, 3.71%)</title><rect x="1032.5" y="597" width="43.8" height="15.0" fill="rgb(249,115,13)" rx="2" ry="2" />
<text  x="1035.54" y="607.5" >toki..</text>
</g>
<g >
<title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (304 samples, 0.33%)</title><rect x="468.9" y="1173" width="3.8" height="15.0" fill="rgb(214,168,4)" rx="2" ry="2" />
<text  x="471.90" y="1183.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (49 samples, 0.05%)</title><rect x="29.7" y="1061" width="0.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="32.66" y="1071.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1,969 samples, 2.11%)</title><rect x="301.8" y="725" width="25.0" height="15.0" fill="rgb(221,179,39)" rx="2" ry="2" />
<text  x="304.83" y="735.5" >i..</text>
</g>
<g >
<title>&lt;tokio::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="1023.6" y="597" width="0.5" height="15.0" fill="rgb(245,32,53)" rx="2" ry="2" />
<text  x="1026.59" y="607.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="143.3" y="581" width="0.2" height="15.0" fill="rgb(236,91,8)" rx="2" ry="2" />
<text  x="146.32" y="591.5" ></text>
</g>
<g >
<title>sock_alloc (666 samples, 0.71%)</title><rect x="1129.4" y="805" width="8.4" height="15.0" fill="rgb(213,149,50)" rx="2" ry="2" />
<text  x="1132.40" y="815.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::Level&lt;T&gt;::next_expiration (52 samples, 0.06%)</title><rect x="1008.2" y="821" width="0.7" height="15.0" fill="rgb(243,47,6)" rx="2" ry="2" />
<text  x="1011.21" y="831.5" ></text>
</g>
<g >
<title>unlink_chunk (9 samples, 0.01%)</title><rect x="722.6" y="725" width="0.1" height="15.0" fill="rgb(209,79,46)" rx="2" ry="2" />
<text  x="725.57" y="735.5" ></text>
</g>
<g >
<title>core::mem::drop (65 samples, 0.07%)</title><rect x="791.5" y="677" width="0.8" height="15.0" fill="rgb(230,69,46)" rx="2" ry="2" />
<text  x="794.51" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::close_token (40 samples, 0.04%)</title><rect x="112.8" y="949" width="0.5" height="15.0" fill="rgb(225,60,8)" rx="2" ry="2" />
<text  x="115.76" y="959.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="153.9" y="581" width="0.1" height="15.0" fill="rgb(230,43,26)" rx="2" ry="2" />
<text  x="156.89" y="591.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (8 samples, 0.01%)</title><rect x="1152.2" y="773" width="0.1" height="15.0" fill="rgb(218,34,32)" rx="2" ry="2" />
<text  x="1155.21" y="783.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (42 samples, 0.05%)</title><rect x="216.5" y="485" width="0.5" height="15.0" fill="rgb(239,174,53)" rx="2" ry="2" />
<text  x="219.46" y="495.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (209 samples, 0.22%)</title><rect x="167.9" y="853" width="2.7" height="15.0" fill="rgb(208,133,2)" rx="2" ry="2" />
<text  x="170.91" y="863.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::filter (304 samples, 0.33%)</title><rect x="468.9" y="981" width="3.8" height="15.0" fill="rgb(254,206,42)" rx="2" ry="2" />
<text  x="471.90" y="991.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (8 samples, 0.01%)</title><rect x="92.3" y="613" width="0.1" height="15.0" fill="rgb(250,82,33)" rx="2" ry="2" />
<text  x="95.25" y="623.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (12 samples, 0.01%)</title><rect x="953.3" y="677" width="0.2" height="15.0" fill="rgb(247,72,53)" rx="2" ry="2" />
<text  x="956.35" y="687.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (273 samples, 0.29%)</title><rect x="421.0" y="709" width="3.4" height="15.0" fill="rgb(236,93,4)" rx="2" ry="2" />
<text  x="423.96" y="719.5" ></text>
</g>
<g >
<title>tokio::util::slab::slot::Slot&lt;T&gt;::set_next::{{closure}} (16 samples, 0.02%)</title><rect x="792.6" y="677" width="0.2" height="15.0" fill="rgb(221,156,21)" rx="2" ry="2" />
<text  x="795.59" y="687.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_empty_or_deleted (16 samples, 0.02%)</title><rect x="41.2" y="981" width="0.2" height="15.0" fill="rgb(237,48,15)" rx="2" ry="2" />
<text  x="44.17" y="991.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (15 samples, 0.02%)</title><rect x="461.8" y="901" width="0.2" height="15.0" fill="rgb(234,124,28)" rx="2" ry="2" />
<text  x="464.82" y="911.5" ></text>
</g>
<g >
<title>_cgroup_account_cputime (11 samples, 0.01%)</title><rect x="1180.9" y="757" width="0.1" height="15.0" fill="rgb(211,149,50)" rx="2" ry="2" />
<text  x="1183.89" y="767.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (90 samples, 0.10%)</title><rect x="12.5" y="1093" width="1.1" height="15.0" fill="rgb(213,107,46)" rx="2" ry="2" />
<text  x="15.46" y="1103.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once{{vtable-shim}} (22,837 samples, 24.50%)</title><rect x="795.0" y="1205" width="289.0" height="15.0" fill="rgb(213,179,4)" rx="2" ry="2" />
<text  x="797.97" y="1215.5" >core::ops::function::FnOnce::call_once..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.02%)</title><rect x="421.5" y="581" width="0.2" height="15.0" fill="rgb(219,83,0)" rx="2" ry="2" />
<text  x="424.46" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (16,095 samples, 17.27%)</title><rect x="264.0" y="1205" width="203.7" height="15.0" fill="rgb(211,174,16)" rx="2" ry="2" />
<text  x="266.98" y="1215.5" >tokio::runtime::task::core..</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1,906 samples, 2.04%)</title><rect x="683.7" y="901" width="24.2" height="15.0" fill="rgb(225,20,41)" rx="2" ry="2" />
<text  x="686.74" y="911.5" >&lt;..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (78 samples, 0.08%)</title><rect x="242.4" y="613" width="1.0" height="15.0" fill="rgb(209,32,27)" rx="2" ry="2" />
<text  x="245.37" y="623.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (62 samples, 0.07%)</title><rect x="481.4" y="597" width="0.7" height="15.0" fill="rgb(245,138,45)" rx="2" ry="2" />
<text  x="484.35" y="607.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (43 samples, 0.05%)</title><rect x="832.6" y="645" width="0.5" height="15.0" fill="rgb(240,87,25)" rx="2" ry="2" />
<text  x="835.59" y="655.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (288 samples, 0.31%)</title><rect x="473.3" y="581" width="3.6" height="15.0" fill="rgb(226,97,35)" rx="2" ry="2" />
<text  x="476.28" y="591.5" ></text>
</g>
<g >
<title>tcp_urg (9 samples, 0.01%)</title><rect x="640.5" y="309" width="0.1" height="15.0" fill="rgb(227,135,44)" rx="2" ry="2" />
<text  x="643.48" y="319.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (25 samples, 0.03%)</title><rect x="338.3" y="949" width="0.3" height="15.0" fill="rgb(218,12,34)" rx="2" ry="2" />
<text  x="341.26" y="959.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (9 samples, 0.01%)</title><rect x="792.5" y="677" width="0.1" height="15.0" fill="rgb(225,12,27)" rx="2" ry="2" />
<text  x="795.47" y="687.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (24 samples, 0.03%)</title><rect x="1083.5" y="629" width="0.3" height="15.0" fill="rgb(252,154,2)" rx="2" ry="2" />
<text  x="1086.52" y="639.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::{{closure}} (1,071 samples, 1.15%)</title><rect x="472.8" y="981" width="13.5" height="15.0" fill="rgb(239,130,52)" rx="2" ry="2" />
<text  x="475.77" y="991.5" ></text>
</g>
<g >
<title>actix_http::config::DateService::now (74 samples, 0.08%)</title><rect x="265.4" y="1045" width="0.9" height="15.0" fill="rgb(208,88,39)" rx="2" ry="2" />
<text  x="268.37" y="1055.5" ></text>
</g>
<g >
<title>pick_file (15 samples, 0.02%)</title><rect x="737.0" y="661" width="0.2" height="15.0" fill="rgb(206,96,35)" rx="2" ry="2" />
<text  x="740.04" y="671.5" ></text>
</g>
<g >
<title>update_curr (80 samples, 0.09%)</title><rect x="1180.3" y="773" width="1.0" height="15.0" fill="rgb(224,173,34)" rx="2" ry="2" />
<text  x="1183.28" y="783.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="1064.5" y="293" width="0.1" height="15.0" fill="rgb(223,157,30)" rx="2" ry="2" />
<text  x="1067.48" y="303.5" ></text>
</g>
<g >
<title>&lt;actix_http::message::ConnectionType as core::cmp::PartialEq&gt;::eq (8 samples, 0.01%)</title><rect x="450.3" y="1013" width="0.1" height="15.0" fill="rgb(252,38,4)" rx="2" ry="2" />
<text  x="453.34" y="1023.5" ></text>
</g>
<g >
<title>std::panicking::try (870 samples, 0.93%)</title><rect x="504.4" y="1045" width="11.0" height="15.0" fill="rgb(242,43,31)" rx="2" ry="2" />
<text  x="507.38" y="1055.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (133 samples, 0.14%)</title><rect x="203.1" y="581" width="1.7" height="15.0" fill="rgb(229,164,33)" rx="2" ry="2" />
<text  x="206.12" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::h1::dispatcher::State&lt;actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::Body&gt;,actix_http::body::Body,actix_http::h1::expect::ExpectHandler&gt;&gt; (38 samples, 0.04%)</title><rect x="717.8" y="901" width="0.5" height="15.0" fill="rgb(215,61,42)" rx="2" ry="2" />
<text  x="720.84" y="911.5" ></text>
</g>
<g >
<title>_fdget_pos (11 samples, 0.01%)</title><rect x="819.2" y="629" width="0.1" height="15.0" fill="rgb(213,178,43)" rx="2" ry="2" />
<text  x="822.19" y="639.5" ></text>
</g>
<g >
<title>_sys_shutdown (3,854 samples, 4.13%)</title><rect x="286.4" y="949" width="48.8" height="15.0" fill="rgb(207,141,33)" rx="2" ry="2" />
<text  x="289.39" y="959.5" >_sys..</text>
</g>
<g >
<title>tokio::task::local::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;::release (140 samples, 0.15%)</title><rect x="480.8" y="629" width="1.8" height="15.0" fill="rgb(235,203,0)" rx="2" ry="2" />
<text  x="483.79" y="639.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (18 samples, 0.02%)</title><rect x="154.7" y="549" width="0.2" height="15.0" fill="rgb(226,45,38)" rx="2" ry="2" />
<text  x="157.67" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::cloneable::CloneableService&lt;actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::Body&gt;&gt;&gt; (32 samples, 0.03%)</title><rect x="717.1" y="901" width="0.4" height="15.0" fill="rgb(218,229,24)" rx="2" ry="2" />
<text  x="720.13" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::uri::authority::Authority&gt; (30 samples, 0.03%)</title><rect x="361.3" y="981" width="0.4" height="15.0" fill="rgb(239,104,26)" rx="2" ry="2" />
<text  x="364.31" y="991.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (3,613 samples, 3.88%)</title><rect x="1030.6" y="645" width="45.7" height="15.0" fill="rgb(232,68,10)" rx="2" ry="2" />
<text  x="1033.58" y="655.5" >std:..</text>
</g>
<g >
<title>_perf_event_task_sched_out (16 samples, 0.02%)</title><rect x="862.7" y="613" width="0.2" height="15.0" fill="rgb(207,26,52)" rx="2" ry="2" />
<text  x="865.70" y="623.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (26 samples, 0.03%)</title><rect x="793.4" y="773" width="0.3" height="15.0" fill="rgb(227,73,52)" rx="2" ry="2" />
<text  x="796.36" y="783.5" ></text>
</g>
<g >
<title>std::io::error::Error::last_os_error (43 samples, 0.05%)</title><rect x="1033.2" y="405" width="0.6" height="15.0" fill="rgb(244,33,34)" rx="2" ry="2" />
<text  x="1036.21" y="415.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (33 samples, 0.04%)</title><rect x="1024.4" y="629" width="0.5" height="15.0" fill="rgb(220,129,8)" rx="2" ry="2" />
<text  x="1027.44" y="639.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (33 samples, 0.04%)</title><rect x="448.1" y="933" width="0.4" height="15.0" fill="rgb(244,225,28)" rx="2" ry="2" />
<text  x="451.12" y="943.5" ></text>
</g>
<g >
<title>tokio::time::delay::Delay::deadline (26 samples, 0.03%)</title><rect x="277.9" y="1061" width="0.3" height="15.0" fill="rgb(215,113,34)" rx="2" ry="2" />
<text  x="280.85" y="1071.5" ></text>
</g>
<g >
<title>ryu::pretty::mantissa::write_mantissa (51 samples, 0.05%)</title><rect x="434.0" y="597" width="0.7" height="15.0" fill="rgb(222,186,2)" rx="2" ry="2" />
<text  x="437.05" y="607.5" ></text>
</g>
<g >
<title>actix_web::extract::m::TupleFromRequest2::&lt;impl actix_web::extract::FromRequest for  (230 samples, 0.25%)</title><rect x="348.6" y="901" width="2.9" height="15.0" fill="rgb(227,21,37)" rx="2" ry="2" />
<text  x="351.59" y="911.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (14 samples, 0.02%)</title><rect x="352.2" y="821" width="0.1" height="15.0" fill="rgb(254,92,34)" rx="2" ry="2" />
<text  x="355.16" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="419.5" y="725" width="0.1" height="15.0" fill="rgb(253,146,19)" rx="2" ry="2" />
<text  x="422.49" y="735.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::terms::ExprTerm as core::convert::From&lt;&amp;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt;&gt;::from (10 samples, 0.01%)</title><rect x="121.6" y="917" width="0.1" height="15.0" fill="rgb(252,15,24)" rx="2" ry="2" />
<text  x="124.58" y="927.5" ></text>
</g>
<g >
<title>raw_spin_lock_irqsave (12 samples, 0.01%)</title><rect x="1111.6" y="389" width="0.1" height="15.0" fill="rgb(217,215,39)" rx="2" ry="2" />
<text  x="1114.56" y="399.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (14,668 samples, 15.74%)</title><rect x="281.1" y="1093" width="185.6" height="15.0" fill="rgb(219,225,20)" rx="2" ry="2" />
<text  x="284.06" y="1103.5" >&lt;actix_http::h1::dispatc..</text>
</g>
<g >
<title>raw_spin_lock_irq (9 samples, 0.01%)</title><rect x="749.9" y="517" width="0.1" height="15.0" fill="rgb(231,116,12)" rx="2" ry="2" />
<text  x="752.91" y="527.5" ></text>
</g>
<g >
<title>tokio::util::slab::page::Shared&lt;T&gt;::get::{{closure}} (10 samples, 0.01%)</title><rect x="338.6" y="901" width="0.2" height="15.0" fill="rgb(250,191,7)" rx="2" ry="2" />
<text  x="341.63" y="911.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::sse2::Group::match_byte (18 samples, 0.02%)</title><rect x="179.2" y="517" width="0.2" height="15.0" fill="rgb(252,129,21)" rx="2" ry="2" />
<text  x="182.19" y="527.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1,092 samples, 1.17%)</title><rect x="915.4" y="581" width="13.8" height="15.0" fill="rgb(206,80,4)" rx="2" ry="2" />
<text  x="918.37" y="591.5" ></text>
</g>
<g >
<title>int_free (37 samples, 0.04%)</title><rect x="1043.0" y="293" width="0.5" height="15.0" fill="rgb(232,98,23)" rx="2" ry="2" />
<text  x="1046.05" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (61 samples, 0.07%)</title><rect x="791.6" y="645" width="0.7" height="15.0" fill="rgb(235,185,6)" rx="2" ry="2" />
<text  x="794.56" y="655.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,071 samples, 1.15%)</title><rect x="472.8" y="997" width="13.5" height="15.0" fill="rgb(232,54,23)" rx="2" ry="2" />
<text  x="475.77" y="1007.5" ></text>
</g>
<g >
<title>&lt;tokio::time::driver::atomic_stack::AtomicStackEntries as core::ops::drop::Drop&gt;::drop (64 samples, 0.07%)</title><rect x="999.0" y="821" width="0.8" height="15.0" fill="rgb(222,23,49)" rx="2" ry="2" />
<text  x="1002.01" y="831.5" ></text>
</g>
<g >
<title>try_charge (13 samples, 0.01%)</title><rect x="1137.3" y="693" width="0.1" height="15.0" fill="rgb(225,29,25)" rx="2" ry="2" />
<text  x="1140.26" y="703.5" ></text>
</g>
<g >
<title>smallvec::SmallVec&lt;A&gt;::triple_mut (13 samples, 0.01%)</title><rect x="489.8" y="1141" width="0.2" height="15.0" fill="rgb(225,136,32)" rx="2" ry="2" />
<text  x="492.83" y="1151.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (75 samples, 0.08%)</title><rect x="356.4" y="965" width="1.0" height="15.0" fill="rgb(223,188,7)" rx="2" ry="2" />
<text  x="359.44" y="975.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt; (22 samples, 0.02%)</title><rect x="1114.6" y="789" width="0.3" height="15.0" fill="rgb(253,30,20)" rx="2" ry="2" />
<text  x="1117.59" y="799.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (168 samples, 0.18%)</title><rect x="202.7" y="597" width="2.1" height="15.0" fill="rgb(227,72,41)" rx="2" ry="2" />
<text  x="205.68" y="607.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="1089.6" y="901" width="0.1" height="15.0" fill="rgb(232,23,18)" rx="2" ry="2" />
<text  x="1092.57" y="911.5" ></text>
</g>
<g >
<title>_release_sock (12 samples, 0.01%)</title><rect x="764.3" y="533" width="0.1" height="15.0" fill="rgb(216,0,22)" rx="2" ry="2" />
<text  x="767.26" y="543.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (66 samples, 0.07%)</title><rect x="1083.0" y="693" width="0.8" height="15.0" fill="rgb(241,214,50)" rx="2" ry="2" />
<text  x="1085.99" y="703.5" ></text>
</g>
<g >
<title>mio::poll::Events::iter (62 samples, 0.07%)</title><rect x="804.3" y="821" width="0.8" height="15.0" fill="rgb(247,127,46)" rx="2" ry="2" />
<text  x="807.30" y="831.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::&lt;impl core::convert::From&lt;mio::sys::unix::ready::UnixReady&gt; for mio::event_imp::Ready&gt;::from (21 samples, 0.02%)</title><rect x="463.5" y="981" width="0.3" height="15.0" fill="rgb(242,189,22)" rx="2" ry="2" />
<text  x="466.49" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (35 samples, 0.04%)</title><rect x="1032.8" y="485" width="0.4" height="15.0" fill="rgb(216,229,3)" rx="2" ry="2" />
<text  x="1035.77" y="495.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (11 samples, 0.01%)</title><rect x="1156.4" y="677" width="0.2" height="15.0" fill="rgb(219,88,1)" rx="2" ry="2" />
<text  x="1159.43" y="687.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="274.5" y="933" width="0.2" height="15.0" fill="rgb(205,8,8)" rx="2" ry="2" />
<text  x="277.50" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;actix_http::extensions::Extensions&gt;&gt; (79 samples, 0.08%)</title><rect x="367.3" y="965" width="1.0" height="15.0" fill="rgb(247,137,35)" rx="2" ry="2" />
<text  x="370.29" y="975.5" ></text>
</g>
<g >
<title>expand_files (13 samples, 0.01%)</title><rect x="1120.9" y="773" width="0.2" height="15.0" fill="rgb(245,35,14)" rx="2" ry="2" />
<text  x="1123.94" y="783.5" ></text>
</g>
<g >
<title>_fget_light (22 samples, 0.02%)</title><rect x="511.6" y="581" width="0.3" height="15.0" fill="rgb(213,112,26)" rx="2" ry="2" />
<text  x="514.62" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (8 samples, 0.01%)</title><rect x="1083.9" y="1029" width="0.1" height="15.0" fill="rgb(254,46,13)" rx="2" ry="2" />
<text  x="1086.93" y="1039.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (274 samples, 0.29%)</title><rect x="83.6" y="821" width="3.4" height="15.0" fill="rgb(227,147,14)" rx="2" ry="2" />
<text  x="86.57" y="831.5" ></text>
</g>
<g >
<title>_lock_text_start (10 samples, 0.01%)</title><rect x="315.6" y="357" width="0.1" height="15.0" fill="rgb(231,45,35)" rx="2" ry="2" />
<text  x="318.55" y="367.5" ></text>
</g>
<g >
<title>mutex_unlock (17 samples, 0.02%)</title><rect x="824.1" y="581" width="0.2" height="15.0" fill="rgb(212,215,4)" rx="2" ry="2" />
<text  x="827.09" y="591.5" ></text>
</g>
<g >
<title>&lt;T as core::any::Any&gt;::type_id (49 samples, 0.05%)</title><rect x="350.0" y="773" width="0.6" height="15.0" fill="rgb(224,40,31)" rx="2" ry="2" />
<text  x="353.01" y="783.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (190 samples, 0.20%)</title><rect x="386.9" y="565" width="2.4" height="15.0" fill="rgb(231,151,29)" rx="2" ry="2" />
<text  x="389.89" y="575.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (13 samples, 0.01%)</title><rect x="702.5" y="661" width="0.2" height="15.0" fill="rgb(218,221,17)" rx="2" ry="2" />
<text  x="705.53" y="671.5" ></text>
</g>
<g >
<title>_fget_light (15 samples, 0.02%)</title><rect x="248.1" y="581" width="0.2" height="15.0" fill="rgb(208,189,39)" rx="2" ry="2" />
<text  x="251.14" y="591.5" ></text>
</g>
<g >
<title>&lt;actix_web::handler::HandlerServiceResponse&lt;T,R&gt; as core::future::future::Future&gt;::poll (1,006 samples, 1.08%)</title><rect x="53.0" y="1109" width="12.7" height="15.0" fill="rgb(250,205,43)" rx="2" ry="2" />
<text  x="56.01" y="1119.5" ></text>
</g>
<g >
<title>inode_init_always (146 samples, 0.16%)</title><rect x="1130.4" y="757" width="1.9" height="15.0" fill="rgb(249,184,7)" rx="2" ry="2" />
<text  x="1133.43" y="767.5" ></text>
</g>
<g >
<title>_fget_light (21 samples, 0.02%)</title><rect x="1119.4" y="821" width="0.3" height="15.0" fill="rgb(242,179,33)" rx="2" ry="2" />
<text  x="1122.44" y="831.5" ></text>
</g>
<g >
<title>alloc::alloc::box_free (103 samples, 0.11%)</title><rect x="383.5" y="693" width="1.3" height="15.0" fill="rgb(215,204,13)" rx="2" ry="2" />
<text  x="386.54" y="703.5" ></text>
</g>
<g >
<title>raw_spin_lock_irqsave (39 samples, 0.04%)</title><rect x="311.1" y="357" width="0.5" height="15.0" fill="rgb(222,94,21)" rx="2" ry="2" />
<text  x="314.12" y="367.5" ></text>
</g>
<g >
<title>_memcmp_avx2_movbe (9 samples, 0.01%)</title><rect x="143.9" y="501" width="0.1" height="15.0" fill="rgb(247,18,4)" rx="2" ry="2" />
<text  x="146.88" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (48 samples, 0.05%)</title><rect x="176.1" y="517" width="0.7" height="15.0" fill="rgb(247,97,31)" rx="2" ry="2" />
<text  x="179.14" y="527.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (21 samples, 0.02%)</title><rect x="396.0" y="885" width="0.3" height="15.0" fill="rgb(213,37,10)" rx="2" ry="2" />
<text  x="399.03" y="895.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (81 samples, 0.09%)</title><rect x="221.9" y="501" width="1.0" height="15.0" fill="rgb(249,228,42)" rx="2" ry="2" />
<text  x="224.85" y="511.5" ></text>
</g>
<g >
<title>iput (8 samples, 0.01%)</title><rect x="756.2" y="581" width="0.1" height="15.0" fill="rgb(243,162,49)" rx="2" ry="2" />
<text  x="759.22" y="591.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set1_epi8 (19 samples, 0.02%)</title><rect x="183.1" y="661" width="0.3" height="15.0" fill="rgb(205,23,25)" rx="2" ry="2" />
<text  x="186.14" y="671.5" ></text>
</g>
<g >
<title>newidle_balance (28 samples, 0.03%)</title><rect x="940.5" y="597" width="0.4" height="15.0" fill="rgb(247,214,12)" rx="2" ry="2" />
<text  x="943.53" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.03%)</title><rect x="414.8" y="789" width="0.3" height="15.0" fill="rgb(219,156,44)" rx="2" ry="2" />
<text  x="417.78" y="799.5" ></text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (55 samples, 0.06%)</title><rect x="243.4" y="1125" width="0.7" height="15.0" fill="rgb(210,64,27)" rx="2" ry="2" />
<text  x="246.37" y="1135.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (10 samples, 0.01%)</title><rect x="516.5" y="565" width="0.2" height="15.0" fill="rgb(243,135,27)" rx="2" ry="2" />
<text  x="519.54" y="575.5" ></text>
</g>
<g >
<title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="677.3" y="901" width="0.1" height="15.0" fill="rgb(226,160,21)" rx="2" ry="2" />
<text  x="680.25" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (25 samples, 0.03%)</title><rect x="42.5" y="1093" width="0.3" height="15.0" fill="rgb(223,44,11)" rx="2" ry="2" />
<text  x="45.49" y="1103.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (20,985 samples, 22.51%)</title><rect x="529.3" y="1125" width="265.7" height="15.0" fill="rgb(232,121,36)" rx="2" ry="2" />
<text  x="532.33" y="1135.5" >tokio::loom::std::unsafe_cell::Unsa..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::service::HttpServiceHandlerResponse&lt;tokio::net::tcp::stream::TcpStream,actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::Body&gt;,actix_http::body::Body,actix_http::h1::expect::ExpectHandler,actix_http::h1::upgrade::UpgradeHandler&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt; (6,169 samples, 6.62%)</title><rect x="716.9" y="981" width="78.1" height="15.0" fill="rgb(224,200,40)" rx="2" ry="2" />
<text  x="719.88" y="991.5" >core::ptr..</text>
</g>
<g >
<title>dequeue_entity (187 samples, 0.20%)</title><rect x="1179.6" y="789" width="2.4" height="15.0" fill="rgb(212,27,8)" rx="2" ry="2" />
<text  x="1182.62" y="799.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::is_empty (14 samples, 0.02%)</title><rect x="463.3" y="981" width="0.2" height="15.0" fill="rgb(222,48,53)" rx="2" ry="2" />
<text  x="466.31" y="991.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="443.5" y="901" width="0.1" height="15.0" fill="rgb(209,222,21)" rx="2" ry="2" />
<text  x="446.45" y="911.5" ></text>
</g>
<g >
<title>d_instantiate (48 samples, 0.05%)</title><rect x="1148.9" y="773" width="0.7" height="15.0" fill="rgb(238,1,52)" rx="2" ry="2" />
<text  x="1151.95" y="783.5" ></text>
</g>
<g >
<title>&lt;tokio::time::instant::Instant as core::cmp::PartialOrd&gt;::partial_cmp (24 samples, 0.03%)</title><rect x="272.6" y="965" width="0.3" height="15.0" fill="rgb(220,229,33)" rx="2" ry="2" />
<text  x="275.63" y="975.5" ></text>
</g>
<g >
<title>core::time::Duration::new (16 samples, 0.02%)</title><rect x="985.6" y="773" width="0.2" height="15.0" fill="rgb(228,50,45)" rx="2" ry="2" />
<text  x="988.62" y="783.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (13 samples, 0.01%)</title><rect x="553.3" y="693" width="0.2" height="15.0" fill="rgb(241,128,4)" rx="2" ry="2" />
<text  x="556.34" y="703.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::&lt;impl core::convert::From&lt;mio::sys::unix::ready::UnixReady&gt; for mio::event_imp::Ready&gt;::from (18 samples, 0.02%)</title><rect x="465.5" y="917" width="0.3" height="15.0" fill="rgb(228,144,29)" rx="2" ry="2" />
<text  x="468.54" y="927.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (13 samples, 0.01%)</title><rect x="651.8" y="533" width="0.2" height="15.0" fill="rgb(219,2,52)" rx="2" ry="2" />
<text  x="654.79" y="543.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="37.1" y="1045" width="0.2" height="15.0" fill="rgb(241,82,20)" rx="2" ry="2" />
<text  x="40.06" y="1055.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (708 samples, 0.76%)</title><rect x="494.1" y="1029" width="8.9" height="15.0" fill="rgb(232,163,21)" rx="2" ry="2" />
<text  x="497.06" y="1039.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueue::poll (428 samples, 0.46%)</title><rect x="809.4" y="773" width="5.4" height="15.0" fill="rgb(211,150,4)" rx="2" ry="2" />
<text  x="812.40" y="783.5" ></text>
</g>
<g >
<title>_posix_memalign (335 samples, 0.36%)</title><rect x="267.5" y="869" width="4.2" height="15.0" fill="rgb(253,116,24)" rx="2" ry="2" />
<text  x="270.47" y="879.5" ></text>
</g>
<g >
<title>smallvec::SmallVec&lt;A&gt;::spilled (10 samples, 0.01%)</title><rect x="489.8" y="1125" width="0.2" height="15.0" fill="rgb(254,94,28)" rx="2" ry="2" />
<text  x="492.83" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (46 samples, 0.05%)</title><rect x="230.3" y="933" width="0.6" height="15.0" fill="rgb(205,100,45)" rx="2" ry="2" />
<text  x="233.27" y="943.5" ></text>
</g>
<g >
<title>_wake_up_common (990 samples, 1.06%)</title><rect x="1098.3" y="325" width="12.5" height="15.0" fill="rgb(210,58,25)" rx="2" ry="2" />
<text  x="1101.29" y="335.5" ></text>
</g>
<g >
<title>_memcg_kmem_charge (15 samples, 0.02%)</title><rect x="1142.0" y="693" width="0.2" height="15.0" fill="rgb(207,90,45)" rx="2" ry="2" />
<text  x="1144.99" y="703.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="177.5" y="517" width="0.3" height="15.0" fill="rgb(213,115,43)" rx="2" ry="2" />
<text  x="180.54" y="527.5" ></text>
</g>
<g >
<title>&lt;actix_web::app_service::AppRouting as actix_service::Service&gt;::call (872 samples, 0.94%)</title><rect x="346.3" y="1013" width="11.1" height="15.0" fill="rgb(241,165,33)" rx="2" ry="2" />
<text  x="349.35" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt;actix_web::data::Data&lt;serde_json::value::Value&gt;,actix_http::error::Error&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="437.3" y="837" width="0.2" height="15.0" fill="rgb(209,112,9)" rx="2" ry="2" />
<text  x="440.33" y="847.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (39 samples, 0.04%)</title><rect x="163.8" y="565" width="0.5" height="15.0" fill="rgb(248,51,52)" rx="2" ry="2" />
<text  x="166.84" y="575.5" ></text>
</g>
<g >
<title>_wake_up_common_lock (1,166 samples, 1.25%)</title><rect x="1096.9" y="405" width="14.8" height="15.0" fill="rgb(242,74,50)" rx="2" ry="2" />
<text  x="1099.95" y="415.5" ></text>
</g>
<g >
<title>ip_rcv_cor.sr. (8 samples, 0.01%)</title><rect x="644.1" y="437" width="0.1" height="15.0" fill="rgb(249,23,8)" rx="2" ry="2" />
<text  x="647.11" y="447.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="461.9" y="821" width="0.1" height="15.0" fill="rgb(248,190,51)" rx="2" ry="2" />
<text  x="464.86" y="831.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (72 samples, 0.08%)</title><rect x="130.5" y="677" width="0.9" height="15.0" fill="rgb(207,79,39)" rx="2" ry="2" />
<text  x="133.48" y="687.5" ></text>
</g>
<g >
<title>cpuacct_charge (14 samples, 0.02%)</title><rect x="1181.1" y="757" width="0.1" height="15.0" fill="rgb(237,205,43)" rx="2" ry="2" />
<text  x="1184.05" y="767.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (3,630 samples, 3.89%)</title><rect x="867.1" y="549" width="45.9" height="15.0" fill="rgb(254,199,13)" rx="2" ry="2" />
<text  x="870.07" y="559.5" >amd_..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (354 samples, 0.38%)</title><rect x="141.5" y="805" width="4.5" height="15.0" fill="rgb(237,58,0)" rx="2" ry="2" />
<text  x="144.47" y="815.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_whitespace (12 samples, 0.01%)</title><rect x="64.5" y="693" width="0.2" height="15.0" fill="rgb(254,21,34)" rx="2" ry="2" />
<text  x="67.53" y="703.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (26 samples, 0.03%)</title><rect x="491.1" y="1109" width="0.4" height="15.0" fill="rgb(241,196,35)" rx="2" ry="2" />
<text  x="494.12" y="1119.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (111 samples, 0.12%)</title><rect x="130.0" y="757" width="1.4" height="15.0" fill="rgb(206,50,37)" rx="2" ry="2" />
<text  x="132.99" y="767.5" ></text>
</g>
<g >
<title>&lt;actix_web::handler::ExtractResponse&lt;T,S&gt; as core::future::future::Future&gt;::poll (356 samples, 0.38%)</title><rect x="238.9" y="1061" width="4.5" height="15.0" fill="rgb(210,183,14)" rx="2" ry="2" />
<text  x="241.85" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;actix_web::handler::HandlerServiceResponse&lt;core::future::from_generator::GenFuture&lt;&lt;rust_actix_jsonpath_bench::new as actix_web::service::HttpServiceFactory&gt;::register::new::{{closure}}&gt;,actix_http::response::Response&gt;&gt;&gt; (43 samples, 0.05%)</title><rect x="438.0" y="917" width="0.5" height="15.0" fill="rgb(234,164,53)" rx="2" ry="2" />
<text  x="440.97" y="927.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::cleanup (1,474 samples, 1.58%)</title><rect x="815.3" y="773" width="18.7" height="15.0" fill="rgb(205,94,2)" rx="2" ry="2" />
<text  x="818.32" y="783.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::string_to_num (250 samples, 0.27%)</title><rect x="102.4" y="837" width="3.1" height="15.0" fill="rgb(217,101,39)" rx="2" ry="2" />
<text  x="105.36" y="847.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (12 samples, 0.01%)</title><rect x="369.9" y="981" width="0.1" height="15.0" fill="rgb(231,8,15)" rx="2" ry="2" />
<text  x="372.88" y="991.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (13 samples, 0.01%)</title><rect x="739.5" y="661" width="0.2" height="15.0" fill="rgb(238,76,29)" rx="2" ry="2" />
<text  x="742.55" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.02%)</title><rect x="190.1" y="581" width="0.2" height="15.0" fill="rgb(217,67,6)" rx="2" ry="2" />
<text  x="193.11" y="591.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (102 samples, 0.11%)</title><rect x="572.0" y="725" width="1.3" height="15.0" fill="rgb(216,145,2)" rx="2" ry="2" />
<text  x="575.00" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt; (17 samples, 0.02%)</title><rect x="38.6" y="1045" width="0.2" height="15.0" fill="rgb(216,13,32)" rx="2" ry="2" />
<text  x="41.57" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (52 samples, 0.06%)</title><rect x="177.8" y="485" width="0.6" height="15.0" fill="rgb(238,131,1)" rx="2" ry="2" />
<text  x="180.75" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;futures_util::future::future::Map&lt;actix_web::handler::ExtractResponse&lt; (55 samples, 0.06%)</title><rect x="453.0" y="901" width="0.7" height="15.0" fill="rgb(222,97,35)" rx="2" ry="2" />
<text  x="455.98" y="911.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::fetch_update (36 samples, 0.04%)</title><rect x="485.9" y="661" width="0.4" height="15.0" fill="rgb(242,65,3)" rx="2" ry="2" />
<text  x="488.87" y="671.5" ></text>
</g>
<g >
<title>&lt;actix_service::fn_service::FnService&lt;F,Fut,Req,Res,Err&gt; as actix_service::Service&gt;::call (12 samples, 0.01%)</title><rect x="525.7" y="597" width="0.1" height="15.0" fill="rgb(243,186,32)" rx="2" ry="2" />
<text  x="528.67" y="607.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::PathParser::parse (1,226 samples, 1.32%)</title><rect x="403.4" y="869" width="15.5" height="15.0" fill="rgb(254,47,8)" rx="2" ry="2" />
<text  x="406.35" y="879.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (41 samples, 0.04%)</title><rect x="201.4" y="549" width="0.6" height="15.0" fill="rgb(212,171,54)" rx="2" ry="2" />
<text  x="204.45" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (81 samples, 0.09%)</title><rect x="54.6" y="741" width="1.1" height="15.0" fill="rgb(253,131,12)" rx="2" ry="2" />
<text  x="57.65" y="751.5" ></text>
</g>
<g >
<title>_fget_light (21 samples, 0.02%)</title><rect x="775.5" y="645" width="0.2" height="15.0" fill="rgb(226,67,5)" rx="2" ry="2" />
<text  x="778.46" y="655.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (74 samples, 0.08%)</title><rect x="68.5" y="869" width="0.9" height="15.0" fill="rgb(254,89,42)" rx="2" ry="2" />
<text  x="71.48" y="879.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (382 samples, 0.41%)</title><rect x="159.5" y="789" width="4.8" height="15.0" fill="rgb(212,171,4)" rx="2" ry="2" />
<text  x="162.50" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next_char (12 samples, 0.01%)</title><rect x="80.4" y="789" width="0.1" height="15.0" fill="rgb(239,160,39)" rx="2" ry="2" />
<text  x="83.37" y="799.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (18 samples, 0.02%)</title><rect x="179.2" y="469" width="0.2" height="15.0" fill="rgb(212,46,40)" rx="2" ry="2" />
<text  x="182.19" y="479.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::pop_term (13 samples, 0.01%)</title><rect x="417.2" y="805" width="0.2" height="15.0" fill="rgb(222,91,19)" rx="2" ry="2" />
<text  x="420.22" y="815.5" ></text>
</g>
<g >
<title>actix_http::service::HttpService&lt;tokio::net::tcp::stream::TcpStream,S,B,X,U&gt;::tcp::{{closure}} (92 samples, 0.10%)</title><rect x="515.5" y="613" width="1.2" height="15.0" fill="rgb(212,219,38)" rx="2" ry="2" />
<text  x="518.50" y="623.5" ></text>
</g>
<g >
<title>_tcp_select_window (14 samples, 0.02%)</title><rect x="582.5" y="693" width="0.2" height="15.0" fill="rgb(216,142,2)" rx="2" ry="2" />
<text  x="585.49" y="703.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="1078.9" y="549" width="0.2" height="15.0" fill="rgb(234,174,5)" rx="2" ry="2" />
<text  x="1081.90" y="559.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (16 samples, 0.02%)</title><rect x="263.2" y="613" width="0.2" height="15.0" fill="rgb(219,38,15)" rx="2" ry="2" />
<text  x="266.18" y="623.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (62 samples, 0.07%)</title><rect x="481.4" y="581" width="0.7" height="15.0" fill="rgb(226,143,40)" rx="2" ry="2" />
<text  x="484.35" y="591.5" ></text>
</g>
<g >
<title>malloc_consolidate (39 samples, 0.04%)</title><rect x="501.7" y="949" width="0.5" height="15.0" fill="rgb(222,73,32)" rx="2" ry="2" />
<text  x="504.74" y="959.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (70 samples, 0.08%)</title><rect x="961.6" y="741" width="0.9" height="15.0" fill="rgb(226,159,41)" rx="2" ry="2" />
<text  x="964.64" y="751.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (17 samples, 0.02%)</title><rect x="38.6" y="981" width="0.2" height="15.0" fill="rgb(232,74,33)" rx="2" ry="2" />
<text  x="41.57" y="991.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::other::{{closure}} (8 samples, 0.01%)</title><rect x="110.2" y="709" width="0.1" height="15.0" fill="rgb(216,62,2)" rx="2" ry="2" />
<text  x="113.22" y="719.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_mut (16 samples, 0.02%)</title><rect x="1052.6" y="309" width="0.2" height="15.0" fill="rgb(205,45,51)" rx="2" ry="2" />
<text  x="1055.55" y="319.5" ></text>
</g>
<g >
<title>raw_read_lock_irqsave (37 samples, 0.04%)</title><rect x="317.9" y="325" width="0.5" height="15.0" fill="rgb(239,165,34)" rx="2" ry="2" />
<text  x="320.92" y="335.5" ></text>
</g>
<g >
<title>&lt;tokio::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="1032.0" y="581" width="0.5" height="15.0" fill="rgb(213,197,52)" rx="2" ry="2" />
<text  x="1035.03" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::poll (870 samples, 0.93%)</title><rect x="504.4" y="1093" width="11.0" height="15.0" fill="rgb(211,33,2)" rx="2" ry="2" />
<text  x="507.38" y="1103.5" ></text>
</g>
<g >
<title>_GI___clock_gettime (357 samples, 0.38%)</title><rect x="977.6" y="805" width="4.6" height="15.0" fill="rgb(247,45,36)" rx="2" ry="2" />
<text  x="980.64" y="815.5" ></text>
</g>
<g >
<title>psi_task_switch (19 samples, 0.02%)</title><rect x="944.6" y="597" width="0.3" height="15.0" fill="rgb(246,143,38)" rx="2" ry="2" />
<text  x="947.63" y="607.5" ></text>
</g>
<g >
<title>rb_first (18 samples, 0.02%)</title><rect x="660.2" y="709" width="0.2" height="15.0" fill="rgb(245,95,3)" rx="2" ry="2" />
<text  x="663.22" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (38 samples, 0.04%)</title><rect x="167.2" y="789" width="0.4" height="15.0" fill="rgb(242,194,34)" rx="2" ry="2" />
<text  x="170.17" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp_json_number (492 samples, 0.53%)</title><rect x="141.2" y="885" width="6.2" height="15.0" fill="rgb(217,180,35)" rx="2" ry="2" />
<text  x="144.19" y="895.5" ></text>
</g>
<g >
<title>tokio::time::driver::registration::Registration::poll_elapsed (101 samples, 0.11%)</title><rect x="677.1" y="965" width="1.3" height="15.0" fill="rgb(242,155,37)" rx="2" ry="2" />
<text  x="680.09" y="975.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (59 samples, 0.06%)</title><rect x="423.7" y="645" width="0.7" height="15.0" fill="rgb(226,186,34)" rx="2" ry="2" />
<text  x="426.67" y="655.5" ></text>
</g>
<g >
<title>core::mem::take (11 samples, 0.01%)</title><rect x="172.3" y="917" width="0.1" height="15.0" fill="rgb(205,29,17)" rx="2" ry="2" />
<text  x="175.28" y="927.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (92 samples, 0.10%)</title><rect x="984.7" y="837" width="1.1" height="15.0" fill="rgb(222,141,20)" rx="2" ry="2" />
<text  x="987.65" y="847.5" ></text>
</g>
<g >
<title>mntput_no_expire (22 samples, 0.02%)</title><rect x="758.0" y="597" width="0.3" height="15.0" fill="rgb(231,123,50)" rx="2" ry="2" />
<text  x="760.98" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (13 samples, 0.01%)</title><rect x="139.7" y="693" width="0.2" height="15.0" fill="rgb(240,94,54)" rx="2" ry="2" />
<text  x="142.72" y="703.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (666 samples, 0.71%)</title><rect x="1151.2" y="837" width="8.5" height="15.0" fill="rgb(215,91,28)" rx="2" ry="2" />
<text  x="1154.23" y="847.5" ></text>
</g>
<g >
<title>tokio::time::driver::Driver&lt;T&gt;::add_entry (185 samples, 0.20%)</title><rect x="999.8" y="837" width="2.4" height="15.0" fill="rgb(235,114,4)" rx="2" ry="2" />
<text  x="1002.82" y="847.5" ></text>
</g>
<g >
<title>tokio::task::local::CURRENT::FOO::_getit (35 samples, 0.04%)</title><rect x="1082.5" y="645" width="0.5" height="15.0" fill="rgb(216,176,32)" rx="2" ry="2" />
<text  x="1085.54" y="655.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (9 samples, 0.01%)</title><rect x="139.7" y="677" width="0.2" height="15.0" fill="rgb(244,19,16)" rx="2" ry="2" />
<text  x="142.75" y="687.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,795 samples, 5.14%)</title><rect x="374.6" y="933" width="60.7" height="15.0" fill="rgb(212,137,18)" rx="2" ry="2" />
<text  x="377.58" y="943.5" >&lt;core:..</text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="1115.0" y="773" width="0.1" height="15.0" fill="rgb(228,132,37)" rx="2" ry="2" />
<text  x="1117.97" y="783.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (32 samples, 0.03%)</title><rect x="194.9" y="597" width="0.4" height="15.0" fill="rgb(247,179,6)" rx="2" ry="2" />
<text  x="197.89" y="607.5" ></text>
</g>
<g >
<title>locks_remove_file (8 samples, 0.01%)</title><rect x="1157.6" y="773" width="0.1" height="15.0" fill="rgb(236,78,35)" rx="2" ry="2" />
<text  x="1160.63" y="783.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (63 samples, 0.07%)</title><rect x="1026.9" y="549" width="0.8" height="15.0" fill="rgb(254,22,39)" rx="2" ry="2" />
<text  x="1029.90" y="559.5" ></text>
</g>
<g >
<title>_rdl_alloc (14 samples, 0.02%)</title><rect x="412.3" y="725" width="0.2" height="15.0" fill="rgb(248,116,23)" rx="2" ry="2" />
<text  x="415.27" y="735.5" ></text>
</g>
<g >
<title>sock_sendmsg (10,383 samples, 11.14%)</title><rect x="540.2" y="821" width="131.4" height="15.0" fill="rgb(229,193,1)" rx="2" ry="2" />
<text  x="543.20" y="831.5" >sock_sendmsg</text>
</g>
<g >
<title>tokio::task::local::spawn_local (27 samples, 0.03%)</title><rect x="503.4" y="1205" width="0.3" height="15.0" fill="rgb(227,164,50)" rx="2" ry="2" />
<text  x="506.37" y="1215.5" ></text>
</g>
<g >
<title>&lt;actix_server::service::StreamService&lt;T&gt; as actix_service::Service&gt;::call (49 samples, 0.05%)</title><rect x="1049.7" y="341" width="0.6" height="15.0" fill="rgb(211,95,28)" rx="2" ry="2" />
<text  x="1052.66" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.02%)</title><rect x="421.5" y="613" width="0.2" height="15.0" fill="rgb(223,178,32)" rx="2" ry="2" />
<text  x="424.46" y="623.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9 samples, 0.01%)</title><rect x="515.3" y="661" width="0.1" height="15.0" fill="rgb(254,131,43)" rx="2" ry="2" />
<text  x="518.26" y="671.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (8 samples, 0.01%)</title><rect x="798.3" y="741" width="0.1" height="15.0" fill="rgb(225,220,10)" rx="2" ry="2" />
<text  x="801.28" y="751.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::&lt;impl core::convert::From&lt;mio::sys::unix::ready::UnixReady&gt; for mio::event_imp::Ready&gt;::from (10 samples, 0.01%)</title><rect x="675.7" y="917" width="0.1" height="15.0" fill="rgb(250,217,42)" rx="2" ry="2" />
<text  x="678.67" y="927.5" ></text>
</g>
<g >
<title>int_free (13 samples, 0.01%)</title><rect x="131.7" y="789" width="0.2" height="15.0" fill="rgb(223,112,48)" rx="2" ry="2" />
<text  x="134.70" y="799.5" ></text>
</g>
<g >
<title>core::ptr::write (15 samples, 0.02%)</title><rect x="365.1" y="901" width="0.2" height="15.0" fill="rgb(253,32,8)" rx="2" ry="2" />
<text  x="368.07" y="911.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (43 samples, 0.05%)</title><rect x="153.2" y="597" width="0.6" height="15.0" fill="rgb(218,38,16)" rx="2" ry="2" />
<text  x="156.22" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,031 samples, 2.18%)</title><rect x="1161.7" y="949" width="25.7" height="15.0" fill="rgb(237,88,1)" rx="2" ry="2" />
<text  x="1164.68" y="959.5" >d..</text>
</g>
<g >
<title>_sysvec_apic_timer_interrupt (8 samples, 0.01%)</title><rect x="940.3" y="533" width="0.1" height="15.0" fill="rgb(208,143,21)" rx="2" ry="2" />
<text  x="943.26" y="543.5" ></text>
</g>
<g >
<title>tokio::runtime::task::Notified&lt;S&gt;::run (1,071 samples, 1.15%)</title><rect x="472.8" y="741" width="13.5" height="15.0" fill="rgb(244,79,37)" rx="2" ry="2" />
<text  x="475.77" y="751.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::_rust_begin_short_backtrace (1,071 samples, 1.15%)</title><rect x="472.8" y="1253" width="13.5" height="15.0" fill="rgb(212,173,44)" rx="2" ry="2" />
<text  x="475.77" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;actix_web::service::ServiceResponse,actix_http::error::Error&gt;&gt;&gt;&gt;&gt;&gt; (250 samples, 0.27%)</title><rect x="450.8" y="1045" width="3.1" height="15.0" fill="rgb(243,209,20)" rx="2" ry="2" />
<text  x="453.78" y="1055.5" ></text>
</g>
<g >
<title>&lt;core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="1067.2" y="293" width="0.1" height="15.0" fill="rgb(253,178,22)" rx="2" ry="2" />
<text  x="1070.17" y="303.5" ></text>
</g>
<g >
<title>_fput (12 samples, 0.01%)</title><rect x="769.4" y="645" width="0.2" height="15.0" fill="rgb(221,193,19)" rx="2" ry="2" />
<text  x="772.41" y="655.5" ></text>
</g>
<g >
<title>_check_object_size (83 samples, 0.09%)</title><rect x="699.3" y="645" width="1.1" height="15.0" fill="rgb(212,62,48)" rx="2" ry="2" />
<text  x="702.33" y="655.5" ></text>
</g>
<g >
<title>skb_entail (67 samples, 0.07%)</title><rect x="574.5" y="757" width="0.9" height="15.0" fill="rgb(252,37,11)" rx="2" ry="2" />
<text  x="577.53" y="767.5" ></text>
</g>
<g >
<title>tcp_check_space (11 samples, 0.01%)</title><rect x="309.1" y="453" width="0.2" height="15.0" fill="rgb(247,29,48)" rx="2" ry="2" />
<text  x="312.12" y="463.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::condition_expr (1,006 samples, 1.08%)</title><rect x="53.0" y="933" width="12.7" height="15.0" fill="rgb(240,153,22)" rx="2" ry="2" />
<text  x="56.01" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="393.3" y="437" width="0.1" height="15.0" fill="rgb(205,197,6)" rx="2" ry="2" />
<text  x="396.27" y="447.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (39 samples, 0.04%)</title><rect x="163.8" y="597" width="0.5" height="15.0" fill="rgb(252,163,7)" rx="2" ry="2" />
<text  x="166.84" y="607.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (93 samples, 0.10%)</title><rect x="146.0" y="789" width="1.1" height="15.0" fill="rgb(247,206,6)" rx="2" ry="2" />
<text  x="148.95" y="799.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (28 samples, 0.03%)</title><rect x="369.4" y="933" width="0.3" height="15.0" fill="rgb(238,61,1)" rx="2" ry="2" />
<text  x="372.36" y="943.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="240.5" y="837" width="0.1" height="15.0" fill="rgb(254,30,34)" rx="2" ry="2" />
<text  x="243.46" y="847.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (615 samples, 0.66%)</title><rect x="472.8" y="693" width="7.8" height="15.0" fill="rgb(221,188,21)" rx="2" ry="2" />
<text  x="475.77" y="703.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (25 samples, 0.03%)</title><rect x="146.5" y="677" width="0.3" height="15.0" fill="rgb(209,175,53)" rx="2" ry="2" />
<text  x="149.51" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (34 samples, 0.04%)</title><rect x="113.8" y="885" width="0.5" height="15.0" fill="rgb(228,192,22)" rx="2" ry="2" />
<text  x="116.84" y="895.5" ></text>
</g>
<g >
<title>core::ptr::write (13 samples, 0.01%)</title><rect x="973.2" y="517" width="0.2" height="15.0" fill="rgb(208,92,23)" rx="2" ry="2" />
<text  x="976.20" y="527.5" ></text>
</g>
<g >
<title>_rdl_alloc (347 samples, 0.37%)</title><rect x="267.4" y="917" width="4.4" height="15.0" fill="rgb(222,127,52)" rx="2" ry="2" />
<text  x="270.41" y="927.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (278 samples, 0.30%)</title><rect x="198.4" y="597" width="3.6" height="15.0" fill="rgb(232,40,6)" rx="2" ry="2" />
<text  x="201.45" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 0.01%)</title><rect x="1189.8" y="1237" width="0.2" height="15.0" fill="rgb(210,42,53)" rx="2" ry="2" />
<text  x="1192.84" y="1247.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (17 samples, 0.02%)</title><rect x="658.8" y="693" width="0.2" height="15.0" fill="rgb(223,109,51)" rx="2" ry="2" />
<text  x="661.77" y="703.5" ></text>
</g>
<g >
<title>tokio::time::wheel::Wheel&lt;T&gt;::elapsed (9 samples, 0.01%)</title><rect x="992.2" y="837" width="0.2" height="15.0" fill="rgb(208,160,41)" rx="2" ry="2" />
<text  x="995.24" y="847.5" ></text>
</g>
<g >
<title>ip_rcv (3,580 samples, 3.84%)</title><rect x="598.8" y="437" width="45.3" height="15.0" fill="rgb(237,15,37)" rx="2" ry="2" />
<text  x="601.80" y="447.5" >ip_rcv</text>
</g>
<g >
<title>raw_write_lock_bh (21 samples, 0.02%)</title><rect x="766.2" y="549" width="0.3" height="15.0" fill="rgb(236,194,30)" rx="2" ry="2" />
<text  x="769.24" y="559.5" ></text>
</g>
<g >
<title>httparse::Request::parse (518 samples, 0.56%)</title><rect x="46.3" y="1173" width="6.5" height="15.0" fill="rgb(253,223,50)" rx="2" ry="2" />
<text  x="49.29" y="1183.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (52 samples, 0.06%)</title><rect x="1060.3" y="261" width="0.7" height="15.0" fill="rgb(231,140,3)" rx="2" ry="2" />
<text  x="1063.34" y="271.5" ></text>
</g>
<g >
<title>_wake_up_common_lock (80 samples, 0.09%)</title><rect x="315.5" y="373" width="1.0" height="15.0" fill="rgb(247,112,46)" rx="2" ry="2" />
<text  x="318.47" y="383.5" ></text>
</g>
<g >
<title>_wake_up_common_lock (192 samples, 0.21%)</title><rect x="634.6" y="245" width="2.5" height="15.0" fill="rgb(220,69,12)" rx="2" ry="2" />
<text  x="637.63" y="255.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="218.0" y="549" width="0.1" height="15.0" fill="rgb(223,219,43)" rx="2" ry="2" />
<text  x="220.98" y="559.5" ></text>
</g>
<g >
<title>httparse::simd::runtime::detect (52 samples, 0.06%)</title><rect x="51.5" y="1125" width="0.6" height="15.0" fill="rgb(225,59,14)" rx="2" ry="2" />
<text  x="54.46" y="1135.5" ></text>
</g>
<g >
<title>_GI___pthread_mutex_lock (8 samples, 0.01%)</title><rect x="1115.3" y="741" width="0.1" height="15.0" fill="rgb(232,126,49)" rx="2" ry="2" />
<text  x="1118.31" y="751.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (40 samples, 0.04%)</title><rect x="1032.0" y="565" width="0.5" height="15.0" fill="rgb(240,124,45)" rx="2" ry="2" />
<text  x="1035.03" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (21 samples, 0.02%)</title><rect x="344.0" y="933" width="0.3" height="15.0" fill="rgb(226,18,46)" rx="2" ry="2" />
<text  x="346.99" y="943.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (179 samples, 0.19%)</title><rect x="204.8" y="613" width="2.3" height="15.0" fill="rgb(252,225,9)" rx="2" ry="2" />
<text  x="207.80" y="623.5" ></text>
</g>
<g >
<title>loopback_xmit (13 samples, 0.01%)</title><rect x="652.1" y="549" width="0.2" height="15.0" fill="rgb(248,155,41)" rx="2" ry="2" />
<text  x="655.10" y="559.5" ></text>
</g>
<g >
<title>_softirqentry_text_start (12 samples, 0.01%)</title><rect x="940.4" y="501" width="0.1" height="15.0" fill="rgb(246,180,7)" rx="2" ry="2" />
<text  x="943.36" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,040 samples, 2.19%)</title><rect x="1161.6" y="965" width="25.8" height="15.0" fill="rgb(246,218,25)" rx="2" ry="2" />
<text  x="1164.59" y="975.5" >e..</text>
</g>
<g >
<title>switch_fpu_return (229 samples, 0.25%)</title><rect x="957.9" y="677" width="2.9" height="15.0" fill="rgb(225,27,9)" rx="2" ry="2" />
<text  x="960.86" y="687.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.04%)</title><rect x="131.4" y="821" width="0.5" height="15.0" fill="rgb(229,82,7)" rx="2" ry="2" />
<text  x="134.43" y="831.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u8 (19 samples, 0.02%)</title><rect x="162.5" y="645" width="0.2" height="15.0" fill="rgb(232,97,0)" rx="2" ry="2" />
<text  x="165.48" y="655.5" ></text>
</g>
<g >
<title>tokio::task::local::spawn_local::{{closure}} (926 samples, 0.99%)</title><rect x="491.5" y="1125" width="11.7" height="15.0" fill="rgb(217,113,19)" rx="2" ry="2" />
<text  x="494.45" y="1135.5" ></text>
</g>
<g >
<title>delay_halt_mwaitx (1,173 samples, 1.26%)</title><rect x="872.6" y="485" width="14.8" height="15.0" fill="rgb(252,33,54)" rx="2" ry="2" />
<text  x="875.60" y="495.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::next_task (413 samples, 0.44%)</title><rect x="1076.3" y="677" width="5.2" height="15.0" fill="rgb(224,11,2)" rx="2" ry="2" />
<text  x="1079.31" y="687.5" ></text>
</g>
<g >
<title>apparmor_socket_sock_rcv_skb (18 samples, 0.02%)</title><rect x="610.9" y="325" width="0.3" height="15.0" fill="rgb(214,156,49)" rx="2" ry="2" />
<text  x="613.94" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (110 samples, 0.12%)</title><rect x="837.4" y="741" width="1.4" height="15.0" fill="rgb(211,72,4)" rx="2" ry="2" />
<text  x="840.44" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk::{{closure}} (84 samples, 0.09%)</title><rect x="174.4" y="581" width="1.1" height="15.0" fill="rgb(215,77,8)" rx="2" ry="2" />
<text  x="177.41" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (91 samples, 0.10%)</title><rect x="205.9" y="565" width="1.2" height="15.0" fill="rgb(219,130,4)" rx="2" ry="2" />
<text  x="208.92" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::checked_add_duration (26 samples, 0.03%)</title><rect x="265.0" y="997" width="0.4" height="15.0" fill="rgb(215,223,25)" rx="2" ry="2" />
<text  x="268.03" y="1007.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::json_path (4,291 samples, 4.60%)</title><rect x="67.1" y="997" width="54.3" height="15.0" fill="rgb(244,128,49)" rx="2" ry="2" />
<text  x="70.06" y="1007.5" >jsonp..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.01%)</title><rect x="419.5" y="741" width="0.1" height="15.0" fill="rgb(229,118,24)" rx="2" ry="2" />
<text  x="422.49" y="751.5" ></text>
</g>
<g >
<title>fsnotify (28 samples, 0.03%)</title><rect x="1095.3" y="453" width="0.4" height="15.0" fill="rgb(217,43,47)" rx="2" ry="2" />
<text  x="1098.34" y="463.5" ></text>
</g>
<g >
<title>tokio::util::wake::inc_ref_count (63 samples, 0.07%)</title><rect x="1026.9" y="581" width="0.8" height="15.0" fill="rgb(234,202,5)" rx="2" ry="2" />
<text  x="1029.90" y="591.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1,611 samples, 1.73%)</title><rect x="303.1" y="661" width="20.4" height="15.0" fill="rgb(230,128,33)" rx="2" ry="2" />
<text  x="306.07" y="671.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::all_with_strs::{{closure}} (319 samples, 0.34%)</title><rect x="127.4" y="853" width="4.0" height="15.0" fill="rgb(220,20,6)" rx="2" ry="2" />
<text  x="130.36" y="863.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (50 samples, 0.05%)</title><rect x="475.1" y="517" width="0.7" height="15.0" fill="rgb(241,84,43)" rx="2" ry="2" />
<text  x="478.12" y="527.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::drop_waker (58 samples, 0.06%)</title><rect x="341.1" y="885" width="0.8" height="15.0" fill="rgb(228,32,22)" rx="2" ry="2" />
<text  x="344.12" y="895.5" ></text>
</g>
<g >
<title>tokio::time::driver::registration::Registration::deadline (26 samples, 0.03%)</title><rect x="277.9" y="1045" width="0.3" height="15.0" fill="rgb(205,101,52)" rx="2" ry="2" />
<text  x="280.85" y="1055.5" ></text>
</g>
<g >
<title>&lt;mio::sys::unix::tcp::TcpStream as mio::event_imp::Evented&gt;::deregister (1,182 samples, 1.27%)</title><rect x="772.4" y="773" width="15.0" height="15.0" fill="rgb(242,154,12)" rx="2" ry="2" />
<text  x="775.43" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="369.7" y="997" width="0.2" height="15.0" fill="rgb(223,143,33)" rx="2" ry="2" />
<text  x="372.72" y="1007.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (37 samples, 0.04%)</title><rect x="418.9" y="757" width="0.5" height="15.0" fill="rgb(226,123,52)" rx="2" ry="2" />
<text  x="421.91" y="767.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (81 samples, 0.09%)</title><rect x="482.6" y="661" width="1.0" height="15.0" fill="rgb(215,154,37)" rx="2" ry="2" />
<text  x="485.57" y="671.5" ></text>
</g>
<g >
<title>_pthread_enable_asynccancel (26 samples, 0.03%)</title><rect x="536.9" y="885" width="0.4" height="15.0" fill="rgb(231,92,49)" rx="2" ry="2" />
<text  x="539.95" y="895.5" ></text>
</g>
<g >
<title>&lt;actix_server::service::StreamService&lt;T&gt; as actix_service::Service&gt;::call::{{closure}} (555 samples, 0.60%)</title><rect x="237.0" y="1237" width="7.1" height="15.0" fill="rgb(227,222,53)" rx="2" ry="2" />
<text  x="240.04" y="1247.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.01%)</title><rect x="426.3" y="629" width="0.2" height="15.0" fill="rgb(205,67,32)" rx="2" ry="2" />
<text  x="429.34" y="639.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (23 samples, 0.02%)</title><rect x="344.0" y="997" width="0.3" height="15.0" fill="rgb(213,120,42)" rx="2" ry="2" />
<text  x="346.99" y="1007.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (8 samples, 0.01%)</title><rect x="690.6" y="709" width="0.1" height="15.0" fill="rgb(248,35,33)" rx="2" ry="2" />
<text  x="693.57" y="719.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (870 samples, 0.93%)</title><rect x="504.4" y="1157" width="11.0" height="15.0" fill="rgb(227,47,29)" rx="2" ry="2" />
<text  x="507.38" y="1167.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (90 samples, 0.10%)</title><rect x="174.3" y="629" width="1.2" height="15.0" fill="rgb(230,205,29)" rx="2" ry="2" />
<text  x="177.33" y="639.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="147.2" y="725" width="0.2" height="15.0" fill="rgb(213,214,33)" rx="2" ry="2" />
<text  x="150.15" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (58 samples, 0.06%)</title><rect x="191.9" y="581" width="0.8" height="15.0" fill="rgb(237,116,10)" rx="2" ry="2" />
<text  x="194.94" y="591.5" ></text>
</g>
<g >
<title>&lt;mio::sys::unix::ready::UnixReady as core::convert::From&lt;mio::event_imp::Ready&gt;&gt;::from (18 samples, 0.02%)</title><rect x="709.6" y="901" width="0.2" height="15.0" fill="rgb(254,40,9)" rx="2" ry="2" />
<text  x="712.57" y="911.5" ></text>
</g>
<g >
<title>futures_util::future::future::map::::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (177 samples, 0.19%)</title><rect x="436.6" y="965" width="2.3" height="15.0" fill="rgb(232,192,47)" rx="2" ry="2" />
<text  x="439.62" y="975.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (154 samples, 0.17%)</title><rect x="144.0" y="741" width="2.0" height="15.0" fill="rgb(231,192,39)" rx="2" ry="2" />
<text  x="147.00" y="751.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.07%)</title><rect x="205.1" y="597" width="0.8" height="15.0" fill="rgb(226,59,25)" rx="2" ry="2" />
<text  x="208.14" y="607.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="178.8" y="597" width="0.2" height="15.0" fill="rgb(227,196,49)" rx="2" ry="2" />
<text  x="181.84" y="607.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (111 samples, 0.12%)</title><rect x="624.9" y="101" width="1.4" height="15.0" fill="rgb(216,168,47)" rx="2" ry="2" />
<text  x="627.89" y="111.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (45 samples, 0.05%)</title><rect x="1022.2" y="549" width="0.6" height="15.0" fill="rgb(221,136,21)" rx="2" ry="2" />
<text  x="1025.21" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="426.1" y="581" width="0.2" height="15.0" fill="rgb(245,112,33)" rx="2" ry="2" />
<text  x="429.14" y="591.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (1,573 samples, 1.69%)</title><rect x="244.1" y="965" width="19.9" height="15.0" fill="rgb(254,109,51)" rx="2" ry="2" />
<text  x="247.07" y="975.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (30 samples, 0.03%)</title><rect x="530.9" y="997" width="0.4" height="15.0" fill="rgb(212,115,22)" rx="2" ry="2" />
<text  x="533.90" y="1007.5" ></text>
</g>
<g >
<title>native_smp_send_reschedule (26 samples, 0.03%)</title><rect x="1109.2" y="197" width="0.4" height="15.0" fill="rgb(209,168,11)" rx="2" ry="2" />
<text  x="1112.23" y="207.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (19 samples, 0.02%)</title><rect x="241.5" y="901" width="0.3" height="15.0" fill="rgb(220,106,38)" rx="2" ry="2" />
<text  x="244.52" y="911.5" ></text>
</g>
<g >
<title>page_counter_cancel (23 samples, 0.02%)</title><rect x="746.9" y="469" width="0.3" height="15.0" fill="rgb(246,205,53)" rx="2" ry="2" />
<text  x="749.88" y="479.5" ></text>
</g>
<g >
<title>memset_erms (67 samples, 0.07%)</title><rect x="261.2" y="565" width="0.8" height="15.0" fill="rgb(214,24,39)" rx="2" ry="2" />
<text  x="264.17" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (15 samples, 0.02%)</title><rect x="486.0" y="613" width="0.1" height="15.0" fill="rgb(252,89,15)" rx="2" ry="2" />
<text  x="488.96" y="623.5" ></text>
</g>
<g >
<title>_slab_alloc (55 samples, 0.06%)</title><rect x="1134.6" y="725" width="0.7" height="15.0" fill="rgb(219,108,54)" rx="2" ry="2" />
<text  x="1137.59" y="735.5" ></text>
</g>
<g >
<title>tokio::io::driver::platform::sys::error (10 samples, 0.01%)</title><rect x="463.8" y="981" width="0.1" height="15.0" fill="rgb(240,213,4)" rx="2" ry="2" />
<text  x="466.76" y="991.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (23 samples, 0.02%)</title><rect x="176.4" y="485" width="0.3" height="15.0" fill="rgb(251,138,8)" rx="2" ry="2" />
<text  x="179.38" y="495.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 0.05%)</title><rect x="1086.3" y="1269" width="0.5" height="15.0" fill="rgb(242,110,28)" rx="2" ry="2" />
<text  x="1089.30" y="1279.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (200 samples, 0.21%)</title><rect x="207.4" y="629" width="2.6" height="15.0" fill="rgb(250,29,28)" rx="2" ry="2" />
<text  x="210.42" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (15 samples, 0.02%)</title><rect x="395.6" y="853" width="0.1" height="15.0" fill="rgb(206,137,46)" rx="2" ry="2" />
<text  x="398.55" y="863.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::{{closure}} (870 samples, 0.93%)</title><rect x="504.4" y="1141" width="11.0" height="15.0" fill="rgb(214,82,10)" rx="2" ry="2" />
<text  x="507.38" y="1151.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (555 samples, 0.60%)</title><rect x="237.0" y="1189" width="7.1" height="15.0" fill="rgb(245,107,31)" rx="2" ry="2" />
<text  x="240.04" y="1199.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (32 samples, 0.03%)</title><rect x="132.6" y="901" width="0.4" height="15.0" fill="rgb(240,109,7)" rx="2" ry="2" />
<text  x="135.60" y="911.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46 samples, 0.05%)</title><rect x="164.3" y="773" width="0.6" height="15.0" fill="rgb(214,166,40)" rx="2" ry="2" />
<text  x="167.35" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt; (10 samples, 0.01%)</title><rect x="487.6" y="1205" width="0.1" height="15.0" fill="rgb(232,64,34)" rx="2" ry="2" />
<text  x="490.59" y="1215.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (31 samples, 0.03%)</title><rect x="663.9" y="645" width="0.4" height="15.0" fill="rgb(244,203,35)" rx="2" ry="2" />
<text  x="666.91" y="655.5" ></text>
</g>
<g >
<title>actix_http::helpers::write_content_length (102 samples, 0.11%)</title><rect x="447.8" y="981" width="1.3" height="15.0" fill="rgb(253,34,36)" rx="2" ry="2" />
<text  x="450.77" y="991.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (18 samples, 0.02%)</title><rect x="1088.7" y="997" width="0.2" height="15.0" fill="rgb(227,125,2)" rx="2" ry="2" />
<text  x="1091.71" y="1007.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (76 samples, 0.08%)</title><rect x="54.7" y="709" width="0.9" height="15.0" fill="rgb(241,11,17)" rx="2" ry="2" />
<text  x="57.66" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::stack_overflow::imp::get_stack (9 samples, 0.01%)</title><rect x="1189.8" y="1189" width="0.2" height="15.0" fill="rgb(207,13,25)" rx="2" ry="2" />
<text  x="1192.85" y="1199.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1,018 samples, 1.09%)</title><rect x="309.3" y="453" width="12.9" height="15.0" fill="rgb(218,64,33)" rx="2" ry="2" />
<text  x="312.34" y="463.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::basic_scheduler::Shared as tokio::util::wake::Wake&gt;::wake (33 samples, 0.04%)</title><rect x="1115.9" y="837" width="0.5" height="15.0" fill="rgb(239,217,27)" rx="2" ry="2" />
<text  x="1118.95" y="847.5" ></text>
</g>
<g >
<title>_sched_text_start (6,683 samples, 7.17%)</title><rect x="862.9" y="613" width="84.6" height="15.0" fill="rgb(219,97,34)" rx="2" ry="2" />
<text  x="865.90" y="623.5" >_sched_te..</text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (12 samples, 0.01%)</title><rect x="813.7" y="725" width="0.1" height="15.0" fill="rgb(225,73,12)" rx="2" ry="2" />
<text  x="816.65" y="735.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (39 samples, 0.04%)</title><rect x="448.6" y="933" width="0.5" height="15.0" fill="rgb(221,214,30)" rx="2" ry="2" />
<text  x="451.57" y="943.5" ></text>
</g>
<g >
<title>actix-server_ac (8,085 samples, 8.67%)</title><rect x="1086.2" y="1285" width="102.4" height="15.0" fill="rgb(254,33,7)" rx="2" ry="2" />
<text  x="1089.23" y="1295.5" >actix-server..</text>
</g>
<g >
<title>tcache_get (30 samples, 0.03%)</title><rect x="222.2" y="453" width="0.3" height="15.0" fill="rgb(214,216,42)" rx="2" ry="2" />
<text  x="225.16" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="1068.4" y="325" width="0.1" height="15.0" fill="rgb(207,11,15)" rx="2" ry="2" />
<text  x="1071.36" y="335.5" ></text>
</g>
<g >
<title>new_sync_read (530 samples, 0.57%)</title><rect x="822.6" y="597" width="6.7" height="15.0" fill="rgb(218,36,5)" rx="2" ry="2" />
<text  x="825.61" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (49 samples, 0.05%)</title><rect x="975.4" y="725" width="0.6" height="15.0" fill="rgb(222,30,3)" rx="2" ry="2" />
<text  x="978.36" y="735.5" ></text>
</g>
<g >
<title>eth_type_trans (12 samples, 0.01%)</title><rect x="325.0" y="645" width="0.2" height="15.0" fill="rgb(221,185,43)" rx="2" ry="2" />
<text  x="328.02" y="655.5" ></text>
</g>
<g >
<title>apparmor_socket_shutdown (37 samples, 0.04%)</title><rect x="333.2" y="901" width="0.5" height="15.0" fill="rgb(218,204,18)" rx="2" ry="2" />
<text  x="336.25" y="911.5" ></text>
</g>
<g >
<title>remove_entity_load_avg (9 samples, 0.01%)</title><rect x="1101.1" y="229" width="0.2" height="15.0" fill="rgb(219,156,8)" rx="2" ry="2" />
<text  x="1104.15" y="239.5" ></text>
</g>
<g >
<title>_GI_getpeername (657 samples, 0.70%)</title><rect x="504.6" y="693" width="8.3" height="15.0" fill="rgb(248,53,4)" rx="2" ry="2" />
<text  x="507.59" y="703.5" ></text>
</g>
<g >
<title>rb_next (11 samples, 0.01%)</title><rect x="547.6" y="693" width="0.2" height="15.0" fill="rgb(236,19,24)" rx="2" ry="2" />
<text  x="550.62" y="703.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (44 samples, 0.05%)</title><rect x="142.2" y="597" width="0.6" height="15.0" fill="rgb(209,46,12)" rx="2" ry="2" />
<text  x="145.21" y="607.5" ></text>
</g>
<g >
<title>raw_spin_lock (15 samples, 0.02%)</title><rect x="1099.4" y="261" width="0.2" height="15.0" fill="rgb(215,83,19)" rx="2" ry="2" />
<text  x="1102.40" y="271.5" ></text>
</g>
<g >
<title>_fget_files (9 samples, 0.01%)</title><rect x="843.0" y="661" width="0.1" height="15.0" fill="rgb(207,106,10)" rx="2" ry="2" />
<text  x="845.98" y="671.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (26 samples, 0.03%)</title><rect x="424.4" y="709" width="0.4" height="15.0" fill="rgb(226,176,49)" rx="2" ry="2" />
<text  x="427.43" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (8 samples, 0.01%)</title><rect x="92.8" y="725" width="0.1" height="15.0" fill="rgb(209,196,27)" rx="2" ry="2" />
<text  x="95.77" y="735.5" ></text>
</g>
<g >
<title>_fget_light (46 samples, 0.05%)</title><rect x="334.6" y="917" width="0.6" height="15.0" fill="rgb(246,100,47)" rx="2" ry="2" />
<text  x="337.59" y="927.5" ></text>
</g>
<g >
<title>tcp_check_oom (25 samples, 0.03%)</title><rect x="765.3" y="533" width="0.3" height="15.0" fill="rgb(234,155,13)" rx="2" ry="2" />
<text  x="768.31" y="543.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (55 samples, 0.06%)</title><rect x="677.5" y="917" width="0.7" height="15.0" fill="rgb(212,159,20)" rx="2" ry="2" />
<text  x="680.48" y="927.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll::{{closure}} (16,095 samples, 17.27%)</title><rect x="264.0" y="1221" width="203.7" height="15.0" fill="rgb(228,93,18)" rx="2" ry="2" />
<text  x="266.98" y="1231.5" >tokio::runtime::task::harn..</text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="366.3" y="981" width="0.4" height="15.0" fill="rgb(241,80,25)" rx="2" ry="2" />
<text  x="369.30" y="991.5" ></text>
</g>
<g >
<title>tokio::time::driver::entry::Entry::upgrade_inner (15 samples, 0.02%)</title><rect x="794.7" y="837" width="0.2" height="15.0" fill="rgb(231,166,30)" rx="2" ry="2" />
<text  x="797.66" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (86 samples, 0.09%)</title><rect x="379.0" y="757" width="1.1" height="15.0" fill="rgb(247,225,22)" rx="2" ry="2" />
<text  x="381.98" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::header::name::HeaderName&gt; (45 samples, 0.05%)</title><rect x="40.6" y="981" width="0.5" height="15.0" fill="rgb(250,113,22)" rx="2" ry="2" />
<text  x="43.56" y="991.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.04%)</title><rect x="43.7" y="1093" width="0.4" height="15.0" fill="rgb(214,155,52)" rx="2" ry="2" />
<text  x="46.67" y="1103.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::peer_addr::{{closure}} (657 samples, 0.70%)</title><rect x="504.6" y="709" width="8.3" height="15.0" fill="rgb(224,8,0)" rx="2" ry="2" />
<text  x="507.59" y="719.5" ></text>
</g>
<g >
<title>_rust_alloc (8 samples, 0.01%)</title><rect x="13.4" y="933" width="0.1" height="15.0" fill="rgb(212,123,27)" rx="2" ry="2" />
<text  x="16.43" y="943.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (16 samples, 0.02%)</title><rect x="1113.8" y="501" width="0.2" height="15.0" fill="rgb(225,16,6)" rx="2" ry="2" />
<text  x="1116.77" y="511.5" ></text>
</g>
<g >
<title>_x64_sys_shutdown (9 samples, 0.01%)</title><rect x="285.8" y="981" width="0.1" height="15.0" fill="rgb(213,94,21)" rx="2" ry="2" />
<text  x="288.78" y="991.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::ref_inc (10 samples, 0.01%)</title><rect x="677.6" y="821" width="0.1" height="15.0" fill="rgb(210,225,20)" rx="2" ry="2" />
<text  x="680.60" y="831.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (298 samples, 0.32%)</title><rect x="83.3" y="837" width="3.7" height="15.0" fill="rgb(232,142,47)" rx="2" ry="2" />
<text  x="86.27" y="847.5" ></text>
</g>
<g >
<title>&lt;actix_http::service::HttpServiceHandlerResponse&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (14,701 samples, 15.77%)</title><rect x="281.1" y="1109" width="186.0" height="15.0" fill="rgb(230,16,31)" rx="2" ry="2" />
<text  x="284.06" y="1119.5" >&lt;actix_http::service::Ht..</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (41 samples, 0.04%)</title><rect x="82.3" y="789" width="0.5" height="15.0" fill="rgb(220,64,53)" rx="2" ry="2" />
<text  x="85.32" y="799.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (78 samples, 0.08%)</title><rect x="242.4" y="725" width="1.0" height="15.0" fill="rgb(211,189,2)" rx="2" ry="2" />
<text  x="245.37" y="735.5" ></text>
</g>
<g >
<title>&lt;actix_web::route::RouteServiceWrapper&lt;T&gt; as actix_service::Service&gt;::call (345 samples, 0.37%)</title><rect x="348.0" y="933" width="4.4" height="15.0" fill="rgb(213,123,19)" rx="2" ry="2" />
<text  x="351.01" y="943.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (11,006 samples, 11.81%)</title><rect x="535.1" y="933" width="139.3" height="15.0" fill="rgb(254,59,12)" rx="2" ry="2" />
<text  x="538.10" y="943.5" >&lt;&amp;std::net::tcp::..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (39 samples, 0.04%)</title><rect x="163.8" y="581" width="0.5" height="15.0" fill="rgb(242,83,8)" rx="2" ry="2" />
<text  x="166.84" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;*const serde_json::value::Value,std::collections::hash::map::RandomState&gt;&gt; (47 samples, 0.05%)</title><rect x="185.0" y="853" width="0.6" height="15.0" fill="rgb(238,142,31)" rx="2" ry="2" />
<text  x="188.03" y="863.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_span (9 samples, 0.01%)</title><rect x="106.3" y="821" width="0.1" height="15.0" fill="rgb(224,180,38)" rx="2" ry="2" />
<text  x="109.27" y="831.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (14 samples, 0.02%)</title><rect x="1031.8" y="581" width="0.2" height="15.0" fill="rgb(208,119,25)" rx="2" ry="2" />
<text  x="1034.83" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (485 samples, 0.52%)</title><rect x="141.2" y="853" width="6.2" height="15.0" fill="rgb(252,191,18)" rx="2" ry="2" />
<text  x="144.23" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,264 samples, 3.50%)</title><rect x="1118.6" y="885" width="41.3" height="15.0" fill="rgb(241,56,35)" rx="2" ry="2" />
<text  x="1121.62" y="895.5" >ent..</text>
</g>
<g >
<title>_x86_indirect_thunk_rax (11 samples, 0.01%)</title><rect x="584.6" y="661" width="0.1" height="15.0" fill="rgb(233,74,50)" rx="2" ry="2" />
<text  x="587.61" y="671.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (132 samples, 0.14%)</title><rect x="376.0" y="853" width="1.6" height="15.0" fill="rgb(238,173,3)" rx="2" ry="2" />
<text  x="378.97" y="863.5" ></text>
</g>
<g >
<title>start_thread (22,837 samples, 24.50%)</title><rect x="795.0" y="1253" width="289.0" height="15.0" fill="rgb(249,16,7)" rx="2" ry="2" />
<text  x="797.97" y="1263.5" >start_thread</text>
</g>
<g >
<title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="461.0" y="933" width="0.1" height="15.0" fill="rgb(229,140,5)" rx="2" ry="2" />
<text  x="464.03" y="943.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (47 samples, 0.05%)</title><rect x="423.8" y="533" width="0.6" height="15.0" fill="rgb(209,213,50)" rx="2" ry="2" />
<text  x="426.82" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt; (75 samples, 0.08%)</title><rect x="392.9" y="517" width="0.9" height="15.0" fill="rgb(235,190,31)" rx="2" ry="2" />
<text  x="395.87" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt; (22 samples, 0.02%)</title><rect x="376.5" y="725" width="0.2" height="15.0" fill="rgb(225,205,20)" rx="2" ry="2" />
<text  x="379.46" y="735.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::ref_dec (36 samples, 0.04%)</title><rect x="791.9" y="581" width="0.4" height="15.0" fill="rgb(236,113,30)" rx="2" ry="2" />
<text  x="794.88" y="591.5" ></text>
</g>
<g >
<title>&lt;actix_http::service::HttpServiceHandler&lt;T,S,B,X,U&gt; as actix_service::Service&gt;::call (1,338 samples, 1.44%)</title><rect x="264.1" y="1109" width="17.0" height="15.0" fill="rgb(205,187,41)" rx="2" ry="2" />
<text  x="267.12" y="1119.5" ></text>
</g>
<g >
<title>aa_sk_perm (12 samples, 0.01%)</title><rect x="1129.2" y="773" width="0.2" height="15.0" fill="rgb(245,188,49)" rx="2" ry="2" />
<text  x="1132.20" y="783.5" ></text>
</g>
<g >
<title>core::mem::replace (13 samples, 0.01%)</title><rect x="165.8" y="869" width="0.1" height="15.0" fill="rgb(244,92,6)" rx="2" ry="2" />
<text  x="168.75" y="879.5" ></text>
</g>
<g >
<title>_copy_skb_header (8 samples, 0.01%)</title><rect x="657.4" y="677" width="0.1" height="15.0" fill="rgb(226,21,36)" rx="2" ry="2" />
<text  x="660.43" y="687.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (54 samples, 0.06%)</title><rect x="523.8" y="533" width="0.7" height="15.0" fill="rgb(223,182,44)" rx="2" ry="2" />
<text  x="526.80" y="543.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u8 (12 samples, 0.01%)</title><rect x="154.0" y="613" width="0.2" height="15.0" fill="rgb(212,31,18)" rx="2" ry="2" />
<text  x="157.04" y="623.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (8 samples, 0.01%)</title><rect x="503.6" y="1125" width="0.1" height="15.0" fill="rgb(226,147,36)" rx="2" ry="2" />
<text  x="506.59" y="1135.5" ></text>
</g>
<g >
<title>tokio::util::slab::page::Local::set_head (9 samples, 0.01%)</title><rect x="515.3" y="677" width="0.1" height="15.0" fill="rgb(247,77,45)" rx="2" ry="2" />
<text  x="518.26" y="687.5" ></text>
</g>
<g >
<title>sock_poll (371 samples, 0.40%)</title><rect x="249.7" y="549" width="4.7" height="15.0" fill="rgb(251,4,35)" rx="2" ry="2" />
<text  x="252.66" y="559.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::&lt;impl core::convert::From&lt;mio::sys::unix::ready::UnixReady&gt; for mio::event_imp::Ready&gt;::from (19 samples, 0.02%)</title><rect x="712.4" y="917" width="0.2" height="15.0" fill="rgb(219,191,27)" rx="2" ry="2" />
<text  x="715.36" y="927.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::checked_sub_instant (77 samples, 0.08%)</title><rect x="797.7" y="821" width="0.9" height="15.0" fill="rgb(245,229,35)" rx="2" ry="2" />
<text  x="800.66" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (100 samples, 0.11%)</title><rect x="1084.7" y="1269" width="1.3" height="15.0" fill="rgb(253,208,18)" rx="2" ry="2" />
<text  x="1087.71" y="1279.5" ></text>
</g>
<g >
<title>tokio::task::local::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;::schedule (1,875 samples, 2.01%)</title><rect x="1091.9" y="853" width="23.8" height="15.0" fill="rgb(254,105,7)" rx="2" ry="2" />
<text  x="1094.93" y="863.5" >t..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.02%)</title><rect x="434.7" y="597" width="0.3" height="15.0" fill="rgb(243,161,6)" rx="2" ry="2" />
<text  x="437.69" y="607.5" ></text>
</g>
<g >
<title>raw_spin_lock (9 samples, 0.01%)</title><rect x="644.7" y="485" width="0.2" height="15.0" fill="rgb(214,188,36)" rx="2" ry="2" />
<text  x="647.75" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::os::errno (38 samples, 0.04%)</title><rect x="833.4" y="661" width="0.5" height="15.0" fill="rgb(211,59,47)" rx="2" ry="2" />
<text  x="836.44" y="671.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (12 samples, 0.01%)</title><rect x="752.8" y="501" width="0.1" height="15.0" fill="rgb(213,184,44)" rx="2" ry="2" />
<text  x="755.79" y="511.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::wakeup (78 samples, 0.08%)</title><rect x="969.4" y="581" width="1.0" height="15.0" fill="rgb(208,118,37)" rx="2" ry="2" />
<text  x="972.40" y="591.5" ></text>
</g>
<g >
<title>&lt;http::byte_str::ByteStr as core::clone::Clone&gt;::clone (60 samples, 0.06%)</title><rect x="360.5" y="965" width="0.8" height="15.0" fill="rgb(235,164,40)" rx="2" ry="2" />
<text  x="363.53" y="975.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="445.7" y="981" width="0.1" height="15.0" fill="rgb(254,95,38)" rx="2" ry="2" />
<text  x="448.65" y="991.5" ></text>
</g>
<g >
<title>_local_bh_enable_ip (8 samples, 0.01%)</title><rect x="508.3" y="581" width="0.1" height="15.0" fill="rgb(209,228,27)" rx="2" ry="2" />
<text  x="511.29" y="591.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="178.8" y="581" width="0.2" height="15.0" fill="rgb(245,209,44)" rx="2" ry="2" />
<text  x="181.84" y="591.5" ></text>
</g>
<g >
<title>alloc::rc::Rc&lt;T&gt;::is_unique (20 samples, 0.02%)</title><rect x="365.7" y="997" width="0.2" height="15.0" fill="rgb(250,40,6)" rx="2" ry="2" />
<text  x="368.65" y="1007.5" ></text>
</g>
<g >
<title>sock_def_wakeup (144 samples, 0.15%)</title><rect x="288.6" y="901" width="1.8" height="15.0" fill="rgb(251,166,26)" rx="2" ry="2" />
<text  x="291.59" y="911.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::clone_waker (20 samples, 0.02%)</title><rect x="340.9" y="901" width="0.2" height="15.0" fill="rgb(246,160,22)" rx="2" ry="2" />
<text  x="343.86" y="911.5" ></text>
</g>
<g >
<title>core::ptr::write (25 samples, 0.03%)</title><rect x="171.3" y="901" width="0.3" height="15.0" fill="rgb(241,199,45)" rx="2" ry="2" />
<text  x="174.29" y="911.5" ></text>
</g>
<g >
<title>inet_getname (9 samples, 0.01%)</title><rect x="512.2" y="629" width="0.1" height="15.0" fill="rgb(241,28,39)" rx="2" ry="2" />
<text  x="515.19" y="639.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (88 samples, 0.09%)</title><rect x="966.5" y="821" width="1.1" height="15.0" fill="rgb(216,8,38)" rx="2" ry="2" />
<text  x="969.45" y="831.5" ></text>
</g>
<g >
<title>actix_http::extensions::Extensions::clear (33 samples, 0.04%)</title><rect x="369.3" y="997" width="0.4" height="15.0" fill="rgb(252,117,49)" rx="2" ry="2" />
<text  x="372.30" y="1007.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (8 samples, 0.01%)</title><rect x="361.0" y="821" width="0.1" height="15.0" fill="rgb(243,163,19)" rx="2" ry="2" />
<text  x="364.05" y="831.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,832 samples, 1.97%)</title><rect x="1046.0" y="389" width="23.2" height="15.0" fill="rgb(218,214,30)" rx="2" ry="2" />
<text  x="1048.97" y="399.5" >&lt;..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="450.6" y="1013" width="0.2" height="15.0" fill="rgb(212,224,14)" rx="2" ry="2" />
<text  x="453.57" y="1023.5" ></text>
</g>
<g >
<title>tokio::runtime::task::Notified&lt;S&gt;::run (1,573 samples, 1.69%)</title><rect x="244.1" y="1045" width="19.9" height="15.0" fill="rgb(245,117,27)" rx="2" ry="2" />
<text  x="247.07" y="1055.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="792.3" y="661" width="0.2" height="15.0" fill="rgb(225,72,15)" rx="2" ry="2" />
<text  x="795.33" y="671.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (29 samples, 0.03%)</title><rect x="92.5" y="789" width="0.4" height="15.0" fill="rgb(216,127,43)" rx="2" ry="2" />
<text  x="95.55" y="799.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.05%)</title><rect x="1011.0" y="821" width="0.5" height="15.0" fill="rgb(211,198,48)" rx="2" ry="2" />
<text  x="1014.00" y="831.5" ></text>
</g>
<g >
<title>ima_file_free (23 samples, 0.02%)</title><rect x="768.6" y="629" width="0.3" height="15.0" fill="rgb(246,119,47)" rx="2" ry="2" />
<text  x="771.64" y="639.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (59 samples, 0.06%)</title><rect x="423.7" y="629" width="0.7" height="15.0" fill="rgb(207,133,41)" rx="2" ry="2" />
<text  x="426.67" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,795 samples, 3.00%)</title><rect x="734.9" y="725" width="35.4" height="15.0" fill="rgb(238,160,4)" rx="2" ry="2" />
<text  x="737.90" y="735.5" >en..</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (53 samples, 0.06%)</title><rect x="98.3" y="837" width="0.7" height="15.0" fill="rgb(251,109,50)" rx="2" ry="2" />
<text  x="101.33" y="847.5" ></text>
</g>
<g >
<title>&lt;actix_server::worker::Worker as core::future::future::Future&gt;::poll (770 samples, 0.83%)</title><rect x="515.4" y="677" width="9.7" height="15.0" fill="rgb(224,20,39)" rx="2" ry="2" />
<text  x="518.39" y="687.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (12 samples, 0.01%)</title><rect x="419.5" y="773" width="0.1" height="15.0" fill="rgb(229,1,11)" rx="2" ry="2" />
<text  x="422.49" y="783.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (12 samples, 0.01%)</title><rect x="461.9" y="869" width="0.1" height="15.0" fill="rgb(251,94,50)" rx="2" ry="2" />
<text  x="464.86" y="879.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::none (11 samples, 0.01%)</title><rect x="463.4" y="965" width="0.1" height="15.0" fill="rgb(224,82,19)" rx="2" ry="2" />
<text  x="466.35" y="975.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (302 samples, 0.32%)</title><rect x="155.4" y="661" width="3.8" height="15.0" fill="rgb(209,2,16)" rx="2" ry="2" />
<text  x="158.40" y="671.5" ></text>
</g>
<g >
<title>actix_http::response::ResponseBuilder::new (133 samples, 0.14%)</title><rect x="376.0" y="885" width="1.6" height="15.0" fill="rgb(232,108,32)" rx="2" ry="2" />
<text  x="378.96" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (109 samples, 0.12%)</title><rect x="125.7" y="821" width="1.3" height="15.0" fill="rgb(217,78,51)" rx="2" ry="2" />
<text  x="128.66" y="831.5" ></text>
</g>
<g >
<title>epoll_wait (2,065 samples, 2.22%)</title><rect x="1161.3" y="981" width="26.1" height="15.0" fill="rgb(225,120,18)" rx="2" ry="2" />
<text  x="1164.30" y="991.5" >e..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (36 samples, 0.04%)</title><rect x="274.7" y="1013" width="0.5" height="15.0" fill="rgb(210,88,12)" rx="2" ry="2" />
<text  x="277.71" y="1023.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (23 samples, 0.02%)</title><rect x="416.2" y="725" width="0.3" height="15.0" fill="rgb(246,109,12)" rx="2" ry="2" />
<text  x="419.20" y="735.5" ></text>
</g>
<g >
<title>_rdl_dealloc (22 samples, 0.02%)</title><rect x="387.8" y="549" width="0.3" height="15.0" fill="rgb(252,72,3)" rx="2" ry="2" />
<text  x="390.78" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (13 samples, 0.01%)</title><rect x="1002.6" y="805" width="0.1" height="15.0" fill="rgb(238,147,12)" rx="2" ry="2" />
<text  x="1005.57" y="815.5" ></text>
</g>
<g >
<title>&lt;actix_http::message::RequestHead as actix_http::message::Head&gt;::pool (33 samples, 0.04%)</title><rect x="37.6" y="1141" width="0.4" height="15.0" fill="rgb(233,197,28)" rx="2" ry="2" />
<text  x="40.58" y="1151.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParserNode&gt; (164 samples, 0.18%)</title><rect x="392.1" y="549" width="2.1" height="15.0" fill="rgb(209,178,39)" rx="2" ry="2" />
<text  x="395.11" y="559.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::string_to_num (73 samples, 0.08%)</title><rect x="88.6" y="805" width="0.9" height="15.0" fill="rgb(217,194,37)" rx="2" ry="2" />
<text  x="91.62" y="815.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::register (26 samples, 0.03%)</title><rect x="338.2" y="965" width="0.4" height="15.0" fill="rgb(226,131,5)" rx="2" ry="2" />
<text  x="341.25" y="975.5" ></text>
</g>
<g >
<title>core::ptr::write (28 samples, 0.03%)</title><rect x="125.7" y="693" width="0.4" height="15.0" fill="rgb(245,189,4)" rx="2" ry="2" />
<text  x="128.75" y="703.5" ></text>
</g>
<g >
<title>page_counter_try_charge (26 samples, 0.03%)</title><rect x="260.5" y="517" width="0.3" height="15.0" fill="rgb(238,45,33)" rx="2" ry="2" />
<text  x="263.50" y="527.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (17 samples, 0.02%)</title><rect x="1109.8" y="261" width="0.2" height="15.0" fill="rgb(246,114,1)" rx="2" ry="2" />
<text  x="1112.81" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (43 samples, 0.05%)</title><rect x="127.7" y="789" width="0.6" height="15.0" fill="rgb(254,147,40)" rx="2" ry="2" />
<text  x="130.72" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParserNode&gt; (992 samples, 1.06%)</title><rect x="382.7" y="789" width="12.5" height="15.0" fill="rgb(250,215,8)" rx="2" ry="2" />
<text  x="385.68" y="799.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (8 samples, 0.01%)</title><rect x="316.1" y="357" width="0.1" height="15.0" fill="rgb(249,136,8)" rx="2" ry="2" />
<text  x="319.13" y="367.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::Snapshot::is_cancelled (24 samples, 0.03%)</title><rect x="480.3" y="597" width="0.3" height="15.0" fill="rgb(253,219,17)" rx="2" ry="2" />
<text  x="483.25" y="607.5" ></text>
</g>
<g >
<title>_GI___libc_free (8 samples, 0.01%)</title><rect x="165.2" y="821" width="0.1" height="15.0" fill="rgb(253,169,13)" rx="2" ry="2" />
<text  x="168.19" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path (185 samples, 0.20%)</title><rect x="108.0" y="837" width="2.3" height="15.0" fill="rgb(211,202,8)" rx="2" ry="2" />
<text  x="110.98" y="847.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (13 samples, 0.01%)</title><rect x="742.2" y="597" width="0.2" height="15.0" fill="rgb(248,213,20)" rx="2" ry="2" />
<text  x="745.19" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="425.0" y="613" width="0.1" height="15.0" fill="rgb(206,89,28)" rx="2" ry="2" />
<text  x="427.97" y="623.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap (28 samples, 0.03%)</title><rect x="32.0" y="1157" width="0.4" height="15.0" fill="rgb(206,139,10)" rx="2" ry="2" />
<text  x="35.04" y="1167.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (117 samples, 0.13%)</title><rect x="63.2" y="757" width="1.5" height="15.0" fill="rgb(237,164,16)" rx="2" ry="2" />
<text  x="66.20" y="767.5" ></text>
</g>
<g >
<title>raw_spin_lock_bh (27 samples, 0.03%)</title><rect x="689.8" y="709" width="0.3" height="15.0" fill="rgb(241,37,48)" rx="2" ry="2" />
<text  x="692.76" y="719.5" ></text>
</g>
<g >
<title>&lt;actix_service::and_then::AndThenServiceResponse&lt;A,B&gt; as core::future::future::Future&gt;::poll (555 samples, 0.60%)</title><rect x="237.0" y="1221" width="7.1" height="15.0" fill="rgb(250,151,39)" rx="2" ry="2" />
<text  x="240.04" y="1231.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::into_allocation (21 samples, 0.02%)</title><rect x="344.0" y="949" width="0.3" height="15.0" fill="rgb(220,84,19)" rx="2" ry="2" />
<text  x="346.99" y="959.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (14 samples, 0.02%)</title><rect x="30.7" y="1077" width="0.2" height="15.0" fill="rgb(235,197,23)" rx="2" ry="2" />
<text  x="33.70" y="1087.5" ></text>
</g>
<g >
<title>mio::poll::AtomicState::load (34 samples, 0.04%)</title><rect x="967.0" y="789" width="0.4" height="15.0" fill="rgb(208,189,14)" rx="2" ry="2" />
<text  x="970.01" y="799.5" ></text>
</g>
<g >
<title>int_realloc (47 samples, 0.05%)</title><rect x="428.3" y="421" width="0.6" height="15.0" fill="rgb(242,221,46)" rx="2" ry="2" />
<text  x="431.29" y="431.5" ></text>
</g>
<g >
<title>bytes::bytes::promotable_even_drop::{{closure}} (47 samples, 0.05%)</title><rect x="42.2" y="1141" width="0.6" height="15.0" fill="rgb(243,133,50)" rx="2" ry="2" />
<text  x="45.22" y="1151.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::PathParser::compile (304 samples, 0.33%)</title><rect x="468.9" y="1077" width="3.8" height="15.0" fill="rgb(235,16,28)" rx="2" ry="2" />
<text  x="471.90" y="1087.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="16.0" y="1077" width="0.1" height="15.0" fill="rgb(222,111,13)" rx="2" ry="2" />
<text  x="18.97" y="1087.5" ></text>
</g>
<g >
<title>tokio::util::bit::Pack::unpack (14 samples, 0.02%)</title><rect x="790.8" y="725" width="0.2" height="15.0" fill="rgb(243,3,52)" rx="2" ry="2" />
<text  x="793.81" y="735.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="427.2" y="661" width="0.2" height="15.0" fill="rgb(215,211,47)" rx="2" ry="2" />
<text  x="430.22" y="671.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessState::get (10 samples, 0.01%)</title><rect x="967.4" y="757" width="0.2" height="15.0" fill="rgb(212,2,2)" rx="2" ry="2" />
<text  x="970.44" y="767.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::borrow_mut (23 samples, 0.02%)</title><rect x="41.7" y="1125" width="0.3" height="15.0" fill="rgb(240,157,19)" rx="2" ry="2" />
<text  x="44.73" y="1135.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (13 samples, 0.01%)</title><rect x="210.0" y="581" width="0.2" height="15.0" fill="rgb(227,126,32)" rx="2" ry="2" />
<text  x="212.99" y="591.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (137 samples, 0.15%)</title><rect x="153.2" y="661" width="1.7" height="15.0" fill="rgb(224,0,27)" rx="2" ry="2" />
<text  x="156.17" y="671.5" ></text>
</g>
<g >
<title>ipv4_mtu (29 samples, 0.03%)</title><rect x="669.4" y="725" width="0.4" height="15.0" fill="rgb(226,125,21)" rx="2" ry="2" />
<text  x="672.43" y="735.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (36 samples, 0.04%)</title><rect x="274.7" y="1061" width="0.5" height="15.0" fill="rgb(210,161,23)" rx="2" ry="2" />
<text  x="277.71" y="1071.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="421.7" y="597" width="0.1" height="15.0" fill="rgb(236,170,33)" rx="2" ry="2" />
<text  x="424.72" y="607.5" ></text>
</g>
<g >
<title>_calc_delta (35 samples, 0.04%)</title><rect x="922.3" y="533" width="0.5" height="15.0" fill="rgb(235,72,4)" rx="2" ry="2" />
<text  x="925.32" y="543.5" ></text>
</g>
<g >
<title>lockref_put_return (40 samples, 0.04%)</title><rect x="757.4" y="613" width="0.5" height="15.0" fill="rgb(243,64,3)" rx="2" ry="2" />
<text  x="760.38" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (156 samples, 0.17%)</title><rect x="278.4" y="1029" width="2.0" height="15.0" fill="rgb(219,181,1)" rx="2" ry="2" />
<text  x="281.40" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;actix_http::h1::expect::ExpectHandler&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="717.0" y="885" width="0.1" height="15.0" fill="rgb(221,30,39)" rx="2" ry="2" />
<text  x="719.99" y="895.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (41 samples, 0.04%)</title><rect x="673.9" y="885" width="0.5" height="15.0" fill="rgb(232,82,36)" rx="2" ry="2" />
<text  x="676.89" y="895.5" ></text>
</g>
<g >
<title>int_free (14 samples, 0.02%)</title><rect x="165.4" y="821" width="0.1" height="15.0" fill="rgb(210,120,10)" rx="2" ry="2" />
<text  x="168.37" y="831.5" ></text>
</g>
<g >
<title>aa_sock_perm (9 samples, 0.01%)</title><rect x="333.1" y="901" width="0.1" height="15.0" fill="rgb(225,188,46)" rx="2" ry="2" />
<text  x="336.13" y="911.5" ></text>
</g>
<g >
<title>start_thread (32 samples, 0.03%)</title><rect x="1189.6" y="1253" width="0.4" height="15.0" fill="rgb(231,18,45)" rx="2" ry="2" />
<text  x="1192.56" y="1263.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="443.5" y="917" width="0.1" height="15.0" fill="rgb(228,135,52)" rx="2" ry="2" />
<text  x="446.45" y="927.5" ></text>
</g>
<g >
<title>aa_sk_perm (48 samples, 0.05%)</title><rect x="670.9" y="773" width="0.6" height="15.0" fill="rgb(205,83,49)" rx="2" ry="2" />
<text  x="673.94" y="783.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (148 samples, 0.16%)</title><rect x="142.1" y="677" width="1.9" height="15.0" fill="rgb(213,207,52)" rx="2" ry="2" />
<text  x="145.12" y="687.5" ></text>
</g>
<g >
<title>security_file_free (42 samples, 0.05%)</title><rect x="1157.9" y="773" width="0.6" height="15.0" fill="rgb(232,228,41)" rx="2" ry="2" />
<text  x="1160.94" y="783.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (75 samples, 0.08%)</title><rect x="68.5" y="885" width="0.9" height="15.0" fill="rgb(246,139,25)" rx="2" ry="2" />
<text  x="71.47" y="895.5" ></text>
</g>
<g >
<title>core::cell::BorrowRefMut::new (18 samples, 0.02%)</title><rect x="1066.8" y="229" width="0.2" height="15.0" fill="rgb(215,102,27)" rx="2" ry="2" />
<text  x="1069.76" y="239.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (97 samples, 0.10%)</title><rect x="200.2" y="549" width="1.2" height="15.0" fill="rgb(232,227,52)" rx="2" ry="2" />
<text  x="203.22" y="559.5" ></text>
</g>
<g >
<title>___fput (583 samples, 0.63%)</title><rect x="1151.9" y="805" width="7.4" height="15.0" fill="rgb(246,55,18)" rx="2" ry="2" />
<text  x="1154.92" y="815.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll1 (54 samples, 0.06%)</title><rect x="975.3" y="789" width="0.7" height="15.0" fill="rgb(242,44,18)" rx="2" ry="2" />
<text  x="978.30" y="799.5" ></text>
</g>
<g >
<title>raw_read_unlock_irqrestore (9 samples, 0.01%)</title><rect x="316.0" y="325" width="0.1" height="15.0" fill="rgb(231,35,5)" rx="2" ry="2" />
<text  x="319.02" y="335.5" ></text>
</g>
<g >
<title>mio::poll::Poll::deregister (30 samples, 0.03%)</title><rect x="770.4" y="709" width="0.4" height="15.0" fill="rgb(233,68,31)" rx="2" ry="2" />
<text  x="773.45" y="719.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::load (15 samples, 0.02%)</title><rect x="486.0" y="645" width="0.1" height="15.0" fill="rgb(236,146,43)" rx="2" ry="2" />
<text  x="488.96" y="655.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::pin (20 samples, 0.02%)</title><rect x="352.1" y="901" width="0.3" height="15.0" fill="rgb(246,76,49)" rx="2" ry="2" />
<text  x="355.11" y="911.5" ></text>
</g>
<g >
<title>tcache_get (12 samples, 0.01%)</title><rect x="414.9" y="725" width="0.1" height="15.0" fill="rgb(221,139,16)" rx="2" ry="2" />
<text  x="417.88" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="51.8" y="1093" width="0.3" height="15.0" fill="rgb(224,72,45)" rx="2" ry="2" />
<text  x="54.85" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (191 samples, 0.20%)</title><rect x="215.6" y="565" width="2.4" height="15.0" fill="rgb(240,50,52)" rx="2" ry="2" />
<text  x="218.56" y="575.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (30 samples, 0.03%)</title><rect x="37.6" y="1077" width="0.4" height="15.0" fill="rgb(215,65,4)" rx="2" ry="2" />
<text  x="40.62" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (31 samples, 0.03%)</title><rect x="183.0" y="757" width="0.4" height="15.0" fill="rgb(250,39,3)" rx="2" ry="2" />
<text  x="185.99" y="767.5" ></text>
</g>
<g >
<title>ip_finish_output (5,429 samples, 5.82%)</title><rect x="586.3" y="629" width="68.7" height="15.0" fill="rgb(244,119,4)" rx="2" ry="2" />
<text  x="589.28" y="639.5" >ip_fini..</text>
</g>
<g >
<title>core::ptr::write (34 samples, 0.04%)</title><rect x="229.4" y="853" width="0.4" height="15.0" fill="rgb(230,67,47)" rx="2" ry="2" />
<text  x="232.36" y="863.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (1,085 samples, 1.16%)</title><rect x="151.2" y="869" width="13.7" height="15.0" fill="rgb(219,2,15)" rx="2" ry="2" />
<text  x="154.19" y="879.5" ></text>
</g>
<g >
<title>mio::poll::Poll::deregister (1,242 samples, 1.33%)</title><rect x="771.8" y="805" width="15.7" height="15.0" fill="rgb(231,220,22)" rx="2" ry="2" />
<text  x="774.80" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::other (31 samples, 0.03%)</title><rect x="92.0" y="709" width="0.4" height="15.0" fill="rgb(235,214,5)" rx="2" ry="2" />
<text  x="94.99" y="719.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (35 samples, 0.04%)</title><rect x="1088.3" y="997" width="0.4" height="15.0" fill="rgb(236,120,30)" rx="2" ry="2" />
<text  x="1091.26" y="1007.5" ></text>
</g>
<g >
<title>core::mem::replace (16 samples, 0.02%)</title><rect x="973.2" y="533" width="0.2" height="15.0" fill="rgb(249,66,10)" rx="2" ry="2" />
<text  x="976.16" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (44 samples, 0.05%)</title><rect x="185.0" y="789" width="0.6" height="15.0" fill="rgb(210,25,3)" rx="2" ry="2" />
<text  x="188.04" y="799.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.01%)</title><rect x="1008.0" y="805" width="0.1" height="15.0" fill="rgb(251,205,53)" rx="2" ry="2" />
<text  x="1011.02" y="815.5" ></text>
</g>
<g >
<title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (70 samples, 0.08%)</title><rect x="237.0" y="1157" width="0.9" height="15.0" fill="rgb(253,47,43)" rx="2" ry="2" />
<text  x="240.04" y="1167.5" ></text>
</g>
<g >
<title>_sys_shutdown_sock (3,720 samples, 3.99%)</title><rect x="286.7" y="933" width="47.1" height="15.0" fill="rgb(211,27,40)" rx="2" ry="2" />
<text  x="289.73" y="943.5" >_sys..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::time::driver::entry::Entry&gt;&gt; (166 samples, 0.18%)</title><rect x="996.8" y="837" width="2.1" height="15.0" fill="rgb(227,198,14)" rx="2" ry="2" />
<text  x="999.82" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (162 samples, 0.17%)</title><rect x="168.5" y="821" width="2.1" height="15.0" fill="rgb(242,148,9)" rx="2" ry="2" />
<text  x="171.51" y="831.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::expect (8 samples, 0.01%)</title><rect x="362.4" y="981" width="0.1" height="15.0" fill="rgb(221,97,50)" rx="2" ry="2" />
<text  x="365.44" y="991.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="464.7" y="949" width="0.1" height="15.0" fill="rgb(209,131,36)" rx="2" ry="2" />
<text  x="467.66" y="959.5" ></text>
</g>
<g >
<title>task_work_run (10 samples, 0.01%)</title><rect x="1159.7" y="837" width="0.1" height="15.0" fill="rgb(242,102,16)" rx="2" ry="2" />
<text  x="1162.68" y="847.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::&lt;impl core::convert::From&lt;mio::sys::unix::ready::UnixReady&gt; for mio::event_imp::Ready&gt;::from (20 samples, 0.02%)</title><rect x="235.3" y="1045" width="0.2" height="15.0" fill="rgb(237,146,23)" rx="2" ry="2" />
<text  x="238.30" y="1055.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (84 samples, 0.09%)</title><rect x="101.0" y="821" width="1.1" height="15.0" fill="rgb(216,210,37)" rx="2" ry="2" />
<text  x="103.99" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,290 samples, 3.53%)</title><rect x="1033.8" y="549" width="41.6" height="15.0" fill="rgb(225,220,53)" rx="2" ry="2" />
<text  x="1036.76" y="559.5" >tok..</text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (233 samples, 0.25%)</title><rect x="421.5" y="677" width="2.9" height="15.0" fill="rgb(223,205,8)" rx="2" ry="2" />
<text  x="424.46" y="687.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (201 samples, 0.22%)</title><rect x="948.7" y="661" width="2.6" height="15.0" fill="rgb(225,39,20)" rx="2" ry="2" />
<text  x="951.74" y="671.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (193 samples, 0.21%)</title><rect x="1026.5" y="645" width="2.4" height="15.0" fill="rgb(216,154,9)" rx="2" ry="2" />
<text  x="1029.46" y="655.5" ></text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as actix_server::socket::FromStream&gt;::from_stdstream (1,573 samples, 1.69%)</title><rect x="244.1" y="789" width="19.9" height="15.0" fill="rgb(205,69,20)" rx="2" ry="2" />
<text  x="247.07" y="799.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (770 samples, 0.83%)</title><rect x="515.4" y="821" width="9.7" height="15.0" fill="rgb(206,172,51)" rx="2" ry="2" />
<text  x="518.39" y="831.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node (14 samples, 0.02%)</title><rect x="814.0" y="757" width="0.2" height="15.0" fill="rgb(214,118,26)" rx="2" ry="2" />
<text  x="817.04" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (63 samples, 0.07%)</title><rect x="110.3" y="853" width="0.8" height="15.0" fill="rgb(205,73,27)" rx="2" ry="2" />
<text  x="113.32" y="863.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (43 samples, 0.05%)</title><rect x="511.5" y="613" width="0.6" height="15.0" fill="rgb(214,164,23)" rx="2" ry="2" />
<text  x="514.54" y="623.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (10 samples, 0.01%)</title><rect x="227.8" y="629" width="0.1" height="15.0" fill="rgb(227,105,23)" rx="2" ry="2" />
<text  x="230.78" y="639.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::current_pos (12 samples, 0.01%)</title><rect x="97.4" y="853" width="0.2" height="15.0" fill="rgb(243,129,36)" rx="2" ry="2" />
<text  x="100.42" y="863.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (198 samples, 0.21%)</title><rect x="609.3" y="341" width="2.5" height="15.0" fill="rgb(231,129,38)" rx="2" ry="2" />
<text  x="612.33" y="351.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1,116 samples, 1.20%)</title><rect x="544.5" y="725" width="14.2" height="15.0" fill="rgb(253,144,12)" rx="2" ry="2" />
<text  x="547.53" y="735.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (26 samples, 0.03%)</title><rect x="1063.1" y="245" width="0.3" height="15.0" fill="rgb(207,55,33)" rx="2" ry="2" />
<text  x="1066.09" y="255.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (9 samples, 0.01%)</title><rect x="862.2" y="629" width="0.1" height="15.0" fill="rgb(228,228,15)" rx="2" ry="2" />
<text  x="865.18" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::io::poll_evented::Inner&gt; (410 samples, 0.44%)</title><rect x="787.6" y="853" width="5.2" height="15.0" fill="rgb(242,6,25)" rx="2" ry="2" />
<text  x="790.64" y="863.5" ></text>
</g>
<g >
<title>&lt;tokio::time::driver::stack::Stack as tokio::time::wheel::stack::Stack&gt;::when (22 samples, 0.02%)</title><rect x="1002.7" y="805" width="0.3" height="15.0" fill="rgb(231,206,11)" rx="2" ry="2" />
<text  x="1005.73" y="815.5" ></text>
</g>
<g >
<title>_fget_light (109 samples, 0.12%)</title><rect x="843.1" y="661" width="1.4" height="15.0" fill="rgb(241,79,24)" rx="2" ry="2" />
<text  x="846.09" y="671.5" ></text>
</g>
<g >
<title>core::f64::&lt;impl f64&gt;::to_bits (9 samples, 0.01%)</title><rect x="430.0" y="661" width="0.1" height="15.0" fill="rgb(221,228,27)" rx="2" ry="2" />
<text  x="432.97" y="671.5" ></text>
</g>
<g >
<title>futures_core::task::_internal::atomic_waker::AtomicWaker::take (17 samples, 0.02%)</title><rect x="1091.4" y="933" width="0.2" height="15.0" fill="rgb(247,45,7)" rx="2" ry="2" />
<text  x="1094.39" y="943.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (23 samples, 0.02%)</title><rect x="420.7" y="709" width="0.3" height="15.0" fill="rgb(206,5,35)" rx="2" ry="2" />
<text  x="423.67" y="719.5" ></text>
</g>
<g >
<title>int_free (11 samples, 0.01%)</title><rect x="368.6" y="917" width="0.1" height="15.0" fill="rgb(233,39,5)" rx="2" ry="2" />
<text  x="371.59" y="927.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (34 samples, 0.04%)</title><rect x="967.0" y="773" width="0.4" height="15.0" fill="rgb(237,133,20)" rx="2" ry="2" />
<text  x="970.01" y="783.5" ></text>
</g>
<g >
<title>std::thread::panicking (13 samples, 0.01%)</title><rect x="1078.9" y="581" width="0.2" height="15.0" fill="rgb(242,169,29)" rx="2" ry="2" />
<text  x="1081.90" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt;&gt; (41 samples, 0.04%)</title><rect x="416.0" y="805" width="0.5" height="15.0" fill="rgb(214,84,1)" rx="2" ry="2" />
<text  x="419.02" y="815.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::is_bound::{{closure}} (19 samples, 0.02%)</title><rect x="1071.0" y="501" width="0.3" height="15.0" fill="rgb(210,44,20)" rx="2" ry="2" />
<text  x="1074.02" y="511.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (30 samples, 0.03%)</title><rect x="974.7" y="805" width="0.4" height="15.0" fill="rgb(234,139,17)" rx="2" ry="2" />
<text  x="977.70" y="815.5" ></text>
</g>
<g >
<title>refill_obj_stock (16 samples, 0.02%)</title><rect x="1153.6" y="693" width="0.2" height="15.0" fill="rgb(223,64,35)" rx="2" ry="2" />
<text  x="1156.63" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (1,865 samples, 2.00%)</title><rect x="684.3" y="869" width="23.6" height="15.0" fill="rgb(221,6,13)" rx="2" ry="2" />
<text  x="687.25" y="879.5" >s..</text>
</g>
<g >
<title>_sched_text_start (1,840 samples, 1.97%)</title><rect x="1163.5" y="837" width="23.3" height="15.0" fill="rgb(238,130,44)" rx="2" ry="2" />
<text  x="1166.47" y="847.5" >_..</text>
</g>
<g >
<title>httparse::simd::avx2::match_header_value_char_32_avx (25 samples, 0.03%)</title><rect x="49.7" y="1109" width="0.4" height="15.0" fill="rgb(219,58,52)" rx="2" ry="2" />
<text  x="52.75" y="1119.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (78 samples, 0.08%)</title><rect x="637.1" y="293" width="1.0" height="15.0" fill="rgb(229,183,40)" rx="2" ry="2" />
<text  x="640.09" y="303.5" ></text>
</g>
<g >
<title>_local_bh_enable_ip (8 samples, 0.01%)</title><rect x="1125.5" y="757" width="0.1" height="15.0" fill="rgb(210,49,2)" rx="2" ry="2" />
<text  x="1128.53" y="767.5" ></text>
</g>
<g >
<title>core::num::dec2flt::parse::parse_number (75 samples, 0.08%)</title><rect x="104.3" y="773" width="1.0" height="15.0" fill="rgb(250,83,14)" rx="2" ry="2" />
<text  x="107.32" y="783.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (43 samples, 0.05%)</title><rect x="376.5" y="741" width="0.5" height="15.0" fill="rgb(211,160,19)" rx="2" ry="2" />
<text  x="379.45" y="751.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (870 samples, 0.93%)</title><rect x="504.4" y="1173" width="11.0" height="15.0" fill="rgb(214,143,16)" rx="2" ry="2" />
<text  x="507.38" y="1183.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (8 samples, 0.01%)</title><rect x="1156.9" y="709" width="0.1" height="15.0" fill="rgb(215,213,50)" rx="2" ry="2" />
<text  x="1159.91" y="719.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (86 samples, 0.09%)</title><rect x="379.0" y="741" width="1.1" height="15.0" fill="rgb(231,37,47)" rx="2" ry="2" />
<text  x="381.98" y="751.5" ></text>
</g>
<g >
<title>ip_finish_output (8 samples, 0.01%)</title><rect x="585.2" y="645" width="0.1" height="15.0" fill="rgb(238,97,4)" rx="2" ry="2" />
<text  x="588.19" y="655.5" ></text>
</g>
<g >
<title>rb_insert_color (28 samples, 0.03%)</title><rect x="857.5" y="597" width="0.4" height="15.0" fill="rgb(212,19,52)" rx="2" ry="2" />
<text  x="860.55" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::h1::dispatcher::State&lt;actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::Body&gt;,actix_http::body::Body,actix_http::h1::expect::ExpectHandler&gt;&gt; (11 samples, 0.01%)</title><rect x="681.0" y="981" width="0.1" height="15.0" fill="rgb(215,74,19)" rx="2" ry="2" />
<text  x="683.99" y="991.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="91.5" y="725" width="0.2" height="15.0" fill="rgb(206,181,44)" rx="2" ry="2" />
<text  x="94.48" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (274 samples, 0.29%)</title><rect x="83.6" y="805" width="3.4" height="15.0" fill="rgb(232,210,47)" rx="2" ry="2" />
<text  x="86.57" y="815.5" ></text>
</g>
<g >
<title>eth_type_trans (40 samples, 0.04%)</title><rect x="649.1" y="517" width="0.5" height="15.0" fill="rgb(253,157,47)" rx="2" ry="2" />
<text  x="652.09" y="527.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (17 samples, 0.02%)</title><rect x="143.8" y="533" width="0.2" height="15.0" fill="rgb(212,128,34)" rx="2" ry="2" />
<text  x="146.78" y="543.5" ></text>
</g>
<g >
<title>core::ptr::read (18 samples, 0.02%)</title><rect x="974.9" y="709" width="0.2" height="15.0" fill="rgb(232,123,20)" rx="2" ry="2" />
<text  x="977.86" y="719.5" ></text>
</g>
<g >
<title>_sys_recvfrom (1,483 samples, 1.59%)</title><rect x="687.1" y="773" width="18.8" height="15.0" fill="rgb(229,222,46)" rx="2" ry="2" />
<text  x="690.09" y="783.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (26 samples, 0.03%)</title><rect x="344.9" y="1029" width="0.3" height="15.0" fill="rgb(242,83,36)" rx="2" ry="2" />
<text  x="347.86" y="1039.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::new_with_ready (138 samples, 0.15%)</title><rect x="523.4" y="581" width="1.7" height="15.0" fill="rgb(253,187,8)" rx="2" ry="2" />
<text  x="526.38" y="591.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (20 samples, 0.02%)</title><rect x="93.0" y="821" width="0.2" height="15.0" fill="rgb(214,16,45)" rx="2" ry="2" />
<text  x="95.95" y="831.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (14 samples, 0.02%)</title><rect x="1031.8" y="565" width="0.2" height="15.0" fill="rgb(222,145,43)" rx="2" ry="2" />
<text  x="1034.83" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (77 samples, 0.08%)</title><rect x="188.0" y="613" width="1.0" height="15.0" fill="rgb(224,181,27)" rx="2" ry="2" />
<text  x="191.02" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::all_with_str::{{closure}} (43 samples, 0.05%)</title><rect x="174.9" y="549" width="0.6" height="15.0" fill="rgb(222,64,51)" rx="2" ry="2" />
<text  x="177.93" y="559.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp_json (168 samples, 0.18%)</title><rect x="137.8" y="901" width="2.1" height="15.0" fill="rgb(231,183,26)" rx="2" ry="2" />
<text  x="140.80" y="911.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::now (61 samples, 0.07%)</title><rect x="1187.5" y="965" width="0.8" height="15.0" fill="rgb(230,130,15)" rx="2" ry="2" />
<text  x="1190.52" y="975.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="96.4" y="789" width="0.1" height="15.0" fill="rgb(252,212,48)" rx="2" ry="2" />
<text  x="99.37" y="799.5" ></text>
</g>
<g >
<title>mio::sys::unix::tcp::TcpStream::peer_addr (46 samples, 0.05%)</title><rect x="516.0" y="565" width="0.5" height="15.0" fill="rgb(208,169,43)" rx="2" ry="2" />
<text  x="518.96" y="575.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (17 samples, 0.02%)</title><rect x="946.0" y="597" width="0.2" height="15.0" fill="rgb(227,71,5)" rx="2" ry="2" />
<text  x="949.03" y="607.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (31 samples, 0.03%)</title><rect x="180.9" y="565" width="0.4" height="15.0" fill="rgb(239,23,41)" rx="2" ry="2" />
<text  x="183.93" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="420.6" y="677" width="0.1" height="15.0" fill="rgb(206,191,4)" rx="2" ry="2" />
<text  x="423.55" y="687.5" ></text>
</g>
<g >
<title>tokio::sync::oneshot::State::is_closed (32 samples, 0.03%)</title><rect x="1074.9" y="533" width="0.4" height="15.0" fill="rgb(223,60,53)" rx="2" ry="2" />
<text  x="1077.87" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_and (22 samples, 0.02%)</title><rect x="807.6" y="773" width="0.3" height="15.0" fill="rgb(226,162,39)" rx="2" ry="2" />
<text  x="810.57" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,151 samples, 1.23%)</title><rect x="818.6" y="677" width="14.6" height="15.0" fill="rgb(221,79,6)" rx="2" ry="2" />
<text  x="821.61" y="687.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="435.5" y="933" width="0.1" height="15.0" fill="rgb(230,41,18)" rx="2" ry="2" />
<text  x="438.48" y="943.5" ></text>
</g>
<g >
<title>unlink_chunk (17 samples, 0.02%)</title><rect x="470.0" y="805" width="0.2" height="15.0" fill="rgb(232,227,25)" rx="2" ry="2" />
<text  x="473.02" y="815.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (12 samples, 0.01%)</title><rect x="1129.9" y="773" width="0.2" height="15.0" fill="rgb(207,34,51)" rx="2" ry="2" />
<text  x="1132.92" y="783.5" ></text>
</g>
<g >
<title>lockref_mark_dead (9 samples, 0.01%)</title><rect x="756.5" y="597" width="0.1" height="15.0" fill="rgb(232,79,17)" rx="2" ry="2" />
<text  x="759.52" y="607.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::borrow_mut (21 samples, 0.02%)</title><rect x="1076.9" y="661" width="0.3" height="15.0" fill="rgb(208,7,13)" rx="2" ry="2" />
<text  x="1079.91" y="671.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (12 samples, 0.01%)</title><rect x="227.4" y="581" width="0.2" height="15.0" fill="rgb(245,96,51)" rx="2" ry="2" />
<text  x="230.42" y="591.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (148 samples, 0.16%)</title><rect x="278.4" y="949" width="1.9" height="15.0" fill="rgb(223,127,42)" rx="2" ry="2" />
<text  x="281.40" y="959.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;actix_rt::arbiter::CleanupPending,alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="1044.0" y="85" width="0.2" height="15.0" fill="rgb(253,144,22)" rx="2" ry="2" />
<text  x="1047.05" y="95.5" ></text>
</g>
<g >
<title>&lt;tokio::time::driver::atomic_stack::AtomicStackEntries as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.06%)</title><rect x="999.1" y="789" width="0.7" height="15.0" fill="rgb(242,6,12)" rx="2" ry="2" />
<text  x="1002.07" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (45 samples, 0.05%)</title><rect x="110.5" y="821" width="0.6" height="15.0" fill="rgb(228,63,46)" rx="2" ry="2" />
<text  x="113.55" y="831.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (20 samples, 0.02%)</title><rect x="420.1" y="757" width="0.3" height="15.0" fill="rgb(216,182,14)" rx="2" ry="2" />
<text  x="423.10" y="767.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="142.8" y="581" width="0.2" height="15.0" fill="rgb(224,30,29)" rx="2" ry="2" />
<text  x="145.84" y="591.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::with (5,170 samples, 5.55%)</title><rect x="1018.4" y="741" width="65.4" height="15.0" fill="rgb(221,50,26)" rx="2" ry="2" />
<text  x="1021.38" y="751.5" >tokio::..</text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_relative (34 samples, 0.04%)</title><rect x="241.9" y="917" width="0.5" height="15.0" fill="rgb(231,229,9)" rx="2" ry="2" />
<text  x="244.94" y="927.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (13 samples, 0.01%)</title><rect x="670.5" y="773" width="0.2" height="15.0" fill="rgb(236,184,15)" rx="2" ry="2" />
<text  x="673.50" y="783.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (25 samples, 0.03%)</title><rect x="331.5" y="837" width="0.3" height="15.0" fill="rgb(253,67,22)" rx="2" ry="2" />
<text  x="334.48" y="847.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (85 samples, 0.09%)</title><rect x="490.0" y="1141" width="1.1" height="15.0" fill="rgb(216,109,16)" rx="2" ry="2" />
<text  x="493.00" y="1151.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;actix_utils::counter::CounterGuard&gt;&gt; (63 samples, 0.07%)</title><rect x="475.8" y="501" width="0.8" height="15.0" fill="rgb(219,170,54)" rx="2" ry="2" />
<text  x="478.78" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;jsonpath_lib::selector::utils::PathKey&gt;&gt; (42 samples, 0.05%)</title><rect x="131.4" y="853" width="0.6" height="15.0" fill="rgb(240,224,52)" rx="2" ry="2" />
<text  x="134.43" y="863.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (37 samples, 0.04%)</title><rect x="418.9" y="789" width="0.5" height="15.0" fill="rgb(239,139,6)" rx="2" ry="2" />
<text  x="421.91" y="799.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (16 samples, 0.02%)</title><rect x="641.7" y="341" width="0.2" height="15.0" fill="rgb(245,148,46)" rx="2" ry="2" />
<text  x="644.74" y="351.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessState::interest (10 samples, 0.01%)</title><rect x="967.4" y="773" width="0.2" height="15.0" fill="rgb(220,64,0)" rx="2" ry="2" />
<text  x="970.44" y="783.5" ></text>
</g>
<g >
<title>&lt;actix_server::service::StreamService&lt;T&gt; as actix_service::Service&gt;::call::{{closure}} (16,095 samples, 17.27%)</title><rect x="264.0" y="1141" width="203.7" height="15.0" fill="rgb(209,54,0)" rx="2" ry="2" />
<text  x="266.98" y="1151.5" >&lt;actix_server::service::St..</text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (19 samples, 0.02%)</title><rect x="183.1" y="629" width="0.3" height="15.0" fill="rgb(243,202,44)" rx="2" ry="2" />
<text  x="186.14" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (228 samples, 0.24%)</title><rect x="426.5" y="677" width="2.9" height="15.0" fill="rgb(210,187,49)" rx="2" ry="2" />
<text  x="429.48" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (8 samples, 0.01%)</title><rect x="241.4" y="901" width="0.1" height="15.0" fill="rgb(210,70,34)" rx="2" ry="2" />
<text  x="244.42" y="911.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (46 samples, 0.05%)</title><rect x="164.3" y="725" width="0.6" height="15.0" fill="rgb(248,106,51)" rx="2" ry="2" />
<text  x="167.35" y="735.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_ready (190 samples, 0.20%)</title><rect x="513.0" y="805" width="2.4" height="15.0" fill="rgb(213,156,27)" rx="2" ry="2" />
<text  x="515.99" y="815.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueue::prepare_for_sleep (40 samples, 0.04%)</title><rect x="814.8" y="773" width="0.5" height="15.0" fill="rgb(205,191,26)" rx="2" ry="2" />
<text  x="817.81" y="783.5" ></text>
</g>
<g >
<title>tokio::util::slab::shard::Shard&lt;T&gt;::alloc (33 samples, 0.04%)</title><rect x="515.0" y="741" width="0.4" height="15.0" fill="rgb(214,47,47)" rx="2" ry="2" />
<text  x="517.97" y="751.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (60 samples, 0.06%)</title><rect x="226.8" y="645" width="0.8" height="15.0" fill="rgb(234,38,47)" rx="2" ry="2" />
<text  x="229.81" y="655.5" ></text>
</g>
<g >
<title>tcp_check_space (36 samples, 0.04%)</title><rect x="613.6" y="325" width="0.4" height="15.0" fill="rgb(237,74,6)" rx="2" ry="2" />
<text  x="616.58" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::uri::authority::Authority&gt; (20 samples, 0.02%)</title><rect x="44.7" y="1157" width="0.3" height="15.0" fill="rgb(219,218,40)" rx="2" ry="2" />
<text  x="47.73" y="1167.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (22 samples, 0.02%)</title><rect x="340.4" y="917" width="0.3" height="15.0" fill="rgb(253,9,10)" rx="2" ry="2" />
<text  x="343.37" y="927.5" ></text>
</g>
<g >
<title>&lt;actix_web::request::HttpRequest as core::ops::drop::Drop&gt;::drop (80 samples, 0.09%)</title><rect x="369.0" y="1013" width="1.0" height="15.0" fill="rgb(253,188,25)" rx="2" ry="2" />
<text  x="372.02" y="1023.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (268 samples, 0.29%)</title><rect x="421.0" y="693" width="3.4" height="15.0" fill="rgb(236,45,0)" rx="2" ry="2" />
<text  x="424.02" y="703.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (18 samples, 0.02%)</title><rect x="41.1" y="1029" width="0.3" height="15.0" fill="rgb(209,49,26)" rx="2" ry="2" />
<text  x="44.14" y="1039.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (107 samples, 0.11%)</title><rect x="797.3" y="853" width="1.3" height="15.0" fill="rgb(243,81,47)" rx="2" ry="2" />
<text  x="800.28" y="863.5" ></text>
</g>
<g >
<title>default_wake_function (965 samples, 1.04%)</title><rect x="1098.5" y="293" width="12.2" height="15.0" fill="rgb(252,33,22)" rx="2" ry="2" />
<text  x="1101.48" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="448.9" y="917" width="0.2" height="15.0" fill="rgb(241,169,28)" rx="2" ry="2" />
<text  x="451.90" y="927.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (31 samples, 0.03%)</title><rect x="180.9" y="613" width="0.4" height="15.0" fill="rgb(238,25,23)" rx="2" ry="2" />
<text  x="183.93" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="352.2" y="869" width="0.2" height="15.0" fill="rgb(217,138,31)" rx="2" ry="2" />
<text  x="355.16" y="879.5" ></text>
</g>
<g >
<title>actix_http::message::REQUEST_POOL::_getit (30 samples, 0.03%)</title><rect x="37.6" y="1093" width="0.4" height="15.0" fill="rgb(236,35,18)" rx="2" ry="2" />
<text  x="40.62" y="1103.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (115 samples, 0.12%)</title><rect x="138.5" y="837" width="1.4" height="15.0" fill="rgb(213,111,7)" rx="2" ry="2" />
<text  x="141.47" y="847.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt (11 samples, 0.01%)</title><rect x="1117.4" y="917" width="0.1" height="15.0" fill="rgb(224,120,16)" rx="2" ry="2" />
<text  x="1120.35" y="927.5" ></text>
</g>
<g >
<title>raw_write_lock_irq (11 samples, 0.01%)</title><rect x="784.0" y="629" width="0.1" height="15.0" fill="rgb(210,162,51)" rx="2" ry="2" />
<text  x="786.98" y="639.5" ></text>
</g>
<g >
<title>&lt;actix_router::url::Url as actix_router::ResourcePath&gt;::path (31 samples, 0.03%)</title><rect x="355.8" y="949" width="0.4" height="15.0" fill="rgb(215,156,1)" rx="2" ry="2" />
<text  x="358.83" y="959.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (12 samples, 0.01%)</title><rect x="243.7" y="1061" width="0.1" height="15.0" fill="rgb(246,62,7)" rx="2" ry="2" />
<text  x="246.69" y="1071.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.01%)</title><rect x="196.1" y="533" width="0.1" height="15.0" fill="rgb(223,224,22)" rx="2" ry="2" />
<text  x="199.12" y="543.5" ></text>
</g>
<g >
<title>dnotify_flush (8 samples, 0.01%)</title><rect x="735.4" y="645" width="0.1" height="15.0" fill="rgb(215,144,28)" rx="2" ry="2" />
<text  x="738.43" y="655.5" ></text>
</g>
<g >
<title>ep_poll_callback (80 samples, 0.09%)</title><rect x="317.5" y="341" width="1.0" height="15.0" fill="rgb(233,208,40)" rx="2" ry="2" />
<text  x="320.53" y="351.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::inner (20 samples, 0.02%)</title><rect x="1114.1" y="725" width="0.3" height="15.0" fill="rgb(244,181,21)" rx="2" ry="2" />
<text  x="1117.14" y="735.5" ></text>
</g>
<g >
<title>read_tsc (35 samples, 0.04%)</title><rect x="660.4" y="709" width="0.5" height="15.0" fill="rgb(237,179,48)" rx="2" ry="2" />
<text  x="663.44" y="719.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_sub (8 samples, 0.01%)</title><rect x="680.8" y="965" width="0.2" height="15.0" fill="rgb(212,139,51)" rx="2" ry="2" />
<text  x="683.85" y="975.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (10 samples, 0.01%)</title><rect x="191.7" y="581" width="0.1" height="15.0" fill="rgb(223,108,29)" rx="2" ry="2" />
<text  x="194.69" y="591.5" ></text>
</g>
<g >
<title>update_cfs_group (45 samples, 0.05%)</title><rect x="919.4" y="549" width="0.6" height="15.0" fill="rgb(219,167,25)" rx="2" ry="2" />
<text  x="922.40" y="559.5" ></text>
</g>
<g >
<title>tcache_get (11 samples, 0.01%)</title><rect x="43.7" y="1029" width="0.2" height="15.0" fill="rgb(226,167,43)" rx="2" ry="2" />
<text  x="46.72" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (201 samples, 0.22%)</title><rect x="275.2" y="1045" width="2.5" height="15.0" fill="rgb(235,1,3)" rx="2" ry="2" />
<text  x="278.18" y="1055.5" ></text>
</g>
<g >
<title>_x64_sys_recvfrom (16 samples, 0.02%)</title><rect x="686.6" y="805" width="0.2" height="15.0" fill="rgb(254,170,30)" rx="2" ry="2" />
<text  x="689.65" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::tokens::ParseToken&gt; (15 samples, 0.02%)</title><rect x="395.0" y="677" width="0.2" height="15.0" fill="rgb(217,122,37)" rx="2" ry="2" />
<text  x="398.03" y="687.5" ></text>
</g>
<g >
<title>tokio::time::clock::now (31 samples, 0.03%)</title><rect x="991.3" y="821" width="0.4" height="15.0" fill="rgb(247,161,37)" rx="2" ry="2" />
<text  x="994.34" y="831.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (12 samples, 0.01%)</title><rect x="662.4" y="693" width="0.2" height="15.0" fill="rgb(227,154,2)" rx="2" ry="2" />
<text  x="665.43" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::cloneable::CloneableService&lt;actix_http::h1::expect::ExpectHandler&gt;&gt; (11 samples, 0.01%)</title><rect x="717.0" y="901" width="0.1" height="15.0" fill="rgb(236,9,43)" rx="2" ry="2" />
<text  x="719.99" y="911.5" ></text>
</g>
<g >
<title>dput (1,127 samples, 1.21%)</title><rect x="742.4" y="613" width="14.3" height="15.0" fill="rgb(209,216,20)" rx="2" ry="2" />
<text  x="745.40" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (85 samples, 0.09%)</title><rect x="379.0" y="725" width="1.1" height="15.0" fill="rgb(233,221,14)" rx="2" ry="2" />
<text  x="382.00" y="735.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (72 samples, 0.08%)</title><rect x="109.4" y="773" width="0.9" height="15.0" fill="rgb(210,84,34)" rx="2" ry="2" />
<text  x="112.41" y="783.5" ></text>
</g>
<g >
<title>&lt;tokio::time::driver::entry::Entry as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="997.3" y="773" width="0.2" height="15.0" fill="rgb(223,70,12)" rx="2" ry="2" />
<text  x="1000.27" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (25 samples, 0.03%)</title><rect x="42.5" y="1061" width="0.3" height="15.0" fill="rgb(214,53,12)" rx="2" ry="2" />
<text  x="45.49" y="1071.5" ></text>
</g>
<g >
<title>tokio::runtime::Runtime::block_on::{{closure}} (22,824 samples, 24.48%)</title><rect x="795.0" y="981" width="288.9" height="15.0" fill="rgb(248,200,24)" rx="2" ry="2" />
<text  x="797.97" y="991.5" >tokio::runtime::Runtime::block_on::{{c..</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (34 samples, 0.04%)</title><rect x="56.1" y="741" width="0.4" height="15.0" fill="rgb(228,19,23)" rx="2" ry="2" />
<text  x="59.06" y="751.5" ></text>
</g>
<g >
<title>security_socket_shutdown (47 samples, 0.05%)</title><rect x="333.1" y="917" width="0.6" height="15.0" fill="rgb(233,169,25)" rx="2" ry="2" />
<text  x="336.12" y="927.5" ></text>
</g>
<g >
<title>actix_http::extensions::Extensions::clear (16 samples, 0.02%)</title><rect x="38.4" y="1109" width="0.2" height="15.0" fill="rgb(239,157,26)" rx="2" ry="2" />
<text  x="41.37" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (119 samples, 0.13%)</title><rect x="427.5" y="565" width="1.5" height="15.0" fill="rgb(231,123,41)" rx="2" ry="2" />
<text  x="430.49" y="575.5" ></text>
</g>
<g >
<title>int_free (59 samples, 0.06%)</title><rect x="458.1" y="1013" width="0.7" height="15.0" fill="rgb(247,116,51)" rx="2" ry="2" />
<text  x="461.10" y="1023.5" ></text>
</g>
<g >
<title>newidle_balance (30 samples, 0.03%)</title><rect x="1185.4" y="805" width="0.3" height="15.0" fill="rgb(217,174,39)" rx="2" ry="2" />
<text  x="1188.35" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::set_nonblocking (24 samples, 0.03%)</title><rect x="10.6" y="1237" width="0.3" height="15.0" fill="rgb(254,46,43)" rx="2" ry="2" />
<text  x="13.63" y="1247.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (24 samples, 0.03%)</title><rect x="234.6" y="1045" width="0.3" height="15.0" fill="rgb(250,140,17)" rx="2" ry="2" />
<text  x="237.60" y="1055.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::ref_dec (20 samples, 0.02%)</title><rect x="1091.7" y="901" width="0.2" height="15.0" fill="rgb(233,30,38)" rx="2" ry="2" />
<text  x="1094.68" y="911.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::compute_absolute_path_filter (931 samples, 1.00%)</title><rect x="121.5" y="949" width="11.8" height="15.0" fill="rgb(247,129,36)" rx="2" ry="2" />
<text  x="124.48" y="959.5" ></text>
</g>
<g >
<title>_wake_up_common_lock (1,019 samples, 1.09%)</title><rect x="1098.0" y="341" width="12.9" height="15.0" fill="rgb(213,21,48)" rx="2" ry="2" />
<text  x="1101.02" y="351.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::reserve (15 samples, 0.02%)</title><rect x="444.6" y="981" width="0.2" height="15.0" fill="rgb(237,144,0)" rx="2" ry="2" />
<text  x="447.62" y="991.5" ></text>
</g>
<g >
<title>memset_erms (26 samples, 0.03%)</title><rect x="573.9" y="725" width="0.3" height="15.0" fill="rgb(207,68,35)" rx="2" ry="2" />
<text  x="576.89" y="735.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::static_empty (26 samples, 0.03%)</title><rect x="344.9" y="949" width="0.3" height="15.0" fill="rgb(225,189,45)" rx="2" ry="2" />
<text  x="347.86" y="959.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (16 samples, 0.02%)</title><rect x="751.3" y="485" width="0.2" height="15.0" fill="rgb(229,27,34)" rx="2" ry="2" />
<text  x="754.32" y="495.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (670 samples, 0.72%)</title><rect x="1037.4" y="357" width="8.5" height="15.0" fill="rgb(228,204,7)" rx="2" ry="2" />
<text  x="1040.44" y="367.5" ></text>
</g>
<g >
<title>sock_put (18 samples, 0.02%)</title><rect x="602.9" y="357" width="0.2" height="15.0" fill="rgb(252,58,41)" rx="2" ry="2" />
<text  x="605.89" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="136.9" y="869" width="0.2" height="15.0" fill="rgb(228,184,27)" rx="2" ry="2" />
<text  x="139.91" y="879.5" ></text>
</g>
<g >
<title>core::num::dec2flt::parse::parse_partial_number (9 samples, 0.01%)</title><rect x="89.4" y="725" width="0.1" height="15.0" fill="rgb(250,45,22)" rx="2" ry="2" />
<text  x="92.41" y="735.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::take_output (139 samples, 0.15%)</title><rect x="1039.4" y="293" width="1.7" height="15.0" fill="rgb(215,223,7)" rx="2" ry="2" />
<text  x="1042.39" y="303.5" ></text>
</g>
<g >
<title>eth_type_trans (9 samples, 0.01%)</title><rect x="648.6" y="533" width="0.1" height="15.0" fill="rgb(211,138,48)" rx="2" ry="2" />
<text  x="651.57" y="543.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.01%)</title><rect x="65.7" y="1205" width="0.2" height="15.0" fill="rgb(248,112,24)" rx="2" ry="2" />
<text  x="68.75" y="1215.5" ></text>
</g>
<g >
<title>mod_timer (71 samples, 0.08%)</title><rect x="330.4" y="789" width="0.9" height="15.0" fill="rgb(233,157,12)" rx="2" ry="2" />
<text  x="333.42" y="799.5" ></text>
</g>
<g >
<title>&lt;httparse::iter::Bytes as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.08%)</title><rect x="48.1" y="1141" width="1.0" height="15.0" fill="rgb(235,157,36)" rx="2" ry="2" />
<text  x="51.11" y="1151.5" ></text>
</g>
<g >
<title>core::intrinsics::write_bytes (16 samples, 0.02%)</title><rect x="376.5" y="629" width="0.2" height="15.0" fill="rgb(240,148,37)" rx="2" ry="2" />
<text  x="379.49" y="639.5" ></text>
</g>
<g >
<title>psi_task_change (14 samples, 0.02%)</title><rect x="944.5" y="597" width="0.1" height="15.0" fill="rgb(214,207,43)" rx="2" ry="2" />
<text  x="947.45" y="607.5" ></text>
</g>
<g >
<title>&lt;actix_http::message::BoxedResponseHead as core::ops::drop::Drop&gt;::drop::{{closure}} (26 samples, 0.03%)</title><rect x="449.7" y="933" width="0.3" height="15.0" fill="rgb(238,105,43)" rx="2" ry="2" />
<text  x="452.67" y="943.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="1088.1" y="965" width="0.2" height="15.0" fill="rgb(205,68,29)" rx="2" ry="2" />
<text  x="1091.09" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (40 samples, 0.04%)</title><rect x="467.2" y="965" width="0.5" height="15.0" fill="rgb(232,181,15)" rx="2" ry="2" />
<text  x="470.21" y="975.5" ></text>
</g>
<g >
<title>ipv4_dst_check (13 samples, 0.01%)</title><rect x="656.2" y="661" width="0.2" height="15.0" fill="rgb(209,106,47)" rx="2" ry="2" />
<text  x="659.24" y="671.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::as_usize (11 samples, 0.01%)</title><rect x="712.0" y="917" width="0.2" height="15.0" fill="rgb(246,110,19)" rx="2" ry="2" />
<text  x="715.04" y="927.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (8 samples, 0.01%)</title><rect x="1039.3" y="293" width="0.1" height="15.0" fill="rgb(233,96,14)" rx="2" ry="2" />
<text  x="1042.29" y="303.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (10 samples, 0.01%)</title><rect x="653.4" y="533" width="0.2" height="15.0" fill="rgb(243,49,3)" rx="2" ry="2" />
<text  x="656.44" y="543.5" ></text>
</g>
<g >
<title>&lt;actix_service::fn_service::FnService&lt;F,Fut,Req,Res,Err&gt; as actix_service::Service&gt;::call (680 samples, 0.73%)</title><rect x="504.4" y="837" width="8.6" height="15.0" fill="rgb(252,178,31)" rx="2" ry="2" />
<text  x="507.38" y="847.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (2,600 samples, 2.79%)</title><rect x="1036.5" y="469" width="32.9" height="15.0" fill="rgb(233,144,12)" rx="2" ry="2" />
<text  x="1039.50" y="479.5" >co..</text>
</g>
<g >
<title>pick_next_task_fair (40 samples, 0.04%)</title><rect x="1185.2" y="821" width="0.5" height="15.0" fill="rgb(209,46,36)" rx="2" ry="2" />
<text  x="1188.23" y="831.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (4,213 samples, 4.52%)</title><rect x="591.9" y="533" width="53.4" height="15.0" fill="rgb(252,223,2)" rx="2" ry="2" />
<text  x="594.94" y="543.5" >asm_c..</text>
</g>
<g >
<title>_sock_wfree (10 samples, 0.01%)</title><rect x="625.2" y="85" width="0.1" height="15.0" fill="rgb(238,40,3)" rx="2" ry="2" />
<text  x="628.15" y="95.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="165.2" y="869" width="0.4" height="15.0" fill="rgb(220,65,42)" rx="2" ry="2" />
<text  x="168.18" y="879.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget (331 samples, 0.36%)</title><rect x="525.1" y="949" width="4.2" height="15.0" fill="rgb(249,185,11)" rx="2" ry="2" />
<text  x="528.14" y="959.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.07%)</title><rect x="194.1" y="597" width="0.8" height="15.0" fill="rgb(213,2,34)" rx="2" ry="2" />
<text  x="197.07" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt;&gt; (68 samples, 0.07%)</title><rect x="392.9" y="485" width="0.9" height="15.0" fill="rgb(237,101,49)" rx="2" ry="2" />
<text  x="395.92" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (8 samples, 0.01%)</title><rect x="188.9" y="581" width="0.1" height="15.0" fill="rgb(207,139,26)" rx="2" ry="2" />
<text  x="191.89" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::enter (1,071 samples, 1.15%)</title><rect x="472.8" y="1109" width="13.5" height="15.0" fill="rgb(245,125,31)" rx="2" ry="2" />
<text  x="475.77" y="1119.5" ></text>
</g>
<g >
<title>tcp_ack (78 samples, 0.08%)</title><rect x="312.1" y="437" width="0.9" height="15.0" fill="rgb(234,132,40)" rx="2" ry="2" />
<text  x="315.06" y="447.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (138 samples, 0.15%)</title><rect x="125.3" y="869" width="1.7" height="15.0" fill="rgb(241,23,35)" rx="2" ry="2" />
<text  x="128.29" y="879.5" ></text>
</g>
<g >
<title>&lt;serde_json::number::Number as serde::ser::Serialize&gt;::serialize (431 samples, 0.46%)</title><rect x="429.5" y="709" width="5.5" height="15.0" fill="rgb(236,200,38)" rx="2" ry="2" />
<text  x="432.53" y="719.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (70 samples, 0.08%)</title><rect x="469.4" y="837" width="0.8" height="15.0" fill="rgb(219,89,6)" rx="2" ry="2" />
<text  x="472.35" y="847.5" ></text>
</g>
<g >
<title>&lt;tokio::io::driver::Driver as tokio::park::Park&gt;::park_timeout (13,956 samples, 14.97%)</title><rect x="798.6" y="853" width="176.7" height="15.0" fill="rgb(238,94,6)" rx="2" ry="2" />
<text  x="801.64" y="863.5" >&lt;tokio::io::driver::Dr..</text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp (571 samples, 0.61%)</title><rect x="140.2" y="917" width="7.2" height="15.0" fill="rgb(244,179,3)" rx="2" ry="2" />
<text  x="143.19" y="927.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (18 samples, 0.02%)</title><rect x="162.5" y="613" width="0.2" height="15.0" fill="rgb(247,40,1)" rx="2" ry="2" />
<text  x="165.50" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (39 samples, 0.04%)</title><rect x="179.5" y="741" width="0.5" height="15.0" fill="rgb(232,83,31)" rx="2" ry="2" />
<text  x="182.54" y="751.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (363 samples, 0.39%)</title><rect x="73.5" y="869" width="4.6" height="15.0" fill="rgb(249,184,49)" rx="2" ry="2" />
<text  x="76.48" y="879.5" ></text>
</g>
<g >
<title>amd_pmu_addr_offset (20 samples, 0.02%)</title><rect x="1164.9" y="757" width="0.2" height="15.0" fill="rgb(225,47,26)" rx="2" ry="2" />
<text  x="1167.86" y="767.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (359 samples, 0.39%)</title><rect x="159.8" y="757" width="4.5" height="15.0" fill="rgb(252,94,12)" rx="2" ry="2" />
<text  x="162.79" y="767.5" ></text>
</g>
<g >
<title>core::pin::Pin&lt;P&gt;::set (175 samples, 0.19%)</title><rect x="713.5" y="1045" width="2.2" height="15.0" fill="rgb(217,90,31)" rx="2" ry="2" />
<text  x="716.53" y="1055.5" ></text>
</g>
<g >
<title>core::cell::BorrowRefMut::new (13 samples, 0.01%)</title><rect x="368.8" y="997" width="0.1" height="15.0" fill="rgb(229,25,52)" rx="2" ry="2" />
<text  x="371.78" y="1007.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (109 samples, 0.12%)</title><rect x="1011.5" y="837" width="1.4" height="15.0" fill="rgb(243,31,9)" rx="2" ry="2" />
<text  x="1014.53" y="847.5" ></text>
</g>
<g >
<title>&lt;actix_server::worker::Worker as core::future::future::Future&gt;::poll (331 samples, 0.36%)</title><rect x="525.1" y="645" width="4.2" height="15.0" fill="rgb(251,213,21)" rx="2" ry="2" />
<text  x="528.14" y="655.5" ></text>
</g>
<g >
<title>should_failslab (10 samples, 0.01%)</title><rect x="574.2" y="725" width="0.1" height="15.0" fill="rgb(214,165,8)" rx="2" ry="2" />
<text  x="577.21" y="735.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (18 samples, 0.02%)</title><rect x="927.6" y="533" width="0.2" height="15.0" fill="rgb(242,112,53)" rx="2" ry="2" />
<text  x="930.56" y="543.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll1 (78 samples, 0.08%)</title><rect x="1032.8" y="549" width="1.0" height="15.0" fill="rgb(242,100,17)" rx="2" ry="2" />
<text  x="1035.77" y="559.5" ></text>
</g>
<g >
<title>ip_local_out (466 samples, 0.50%)</title><rect x="621.7" y="213" width="5.9" height="15.0" fill="rgb(223,71,24)" rx="2" ry="2" />
<text  x="624.70" y="223.5" ></text>
</g>
<g >
<title>memset_erms (12 samples, 0.01%)</title><rect x="618.5" y="245" width="0.2" height="15.0" fill="rgb(250,41,4)" rx="2" ry="2" />
<text  x="621.53" y="255.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp (194 samples, 0.21%)</title><rect x="137.5" y="917" width="2.4" height="15.0" fill="rgb(248,114,47)" rx="2" ry="2" />
<text  x="140.47" y="927.5" ></text>
</g>
<g >
<title>_rdl_dealloc (19 samples, 0.02%)</title><rect x="391.0" y="501" width="0.2" height="15.0" fill="rgb(235,115,17)" rx="2" ry="2" />
<text  x="393.98" y="511.5" ></text>
</g>
<g >
<title>new_sync_write (1,362 samples, 1.46%)</title><rect x="1095.7" y="453" width="17.3" height="15.0" fill="rgb(217,186,15)" rx="2" ry="2" />
<text  x="1098.73" y="463.5" ></text>
</g>
<g >
<title>pipe_write (1,329 samples, 1.43%)</title><rect x="1096.1" y="437" width="16.9" height="15.0" fill="rgb(251,145,54)" rx="2" ry="2" />
<text  x="1099.15" y="447.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (40 samples, 0.04%)</title><rect x="396.8" y="885" width="0.5" height="15.0" fill="rgb(234,58,32)" rx="2" ry="2" />
<text  x="399.81" y="895.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (809 samples, 0.87%)</title><rect x="492.8" y="1077" width="10.2" height="15.0" fill="rgb(250,81,16)" rx="2" ry="2" />
<text  x="495.78" y="1087.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (39 samples, 0.04%)</title><rect x="128.7" y="709" width="0.5" height="15.0" fill="rgb(227,87,53)" rx="2" ry="2" />
<text  x="131.71" y="719.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (9 samples, 0.01%)</title><rect x="38.4" y="997" width="0.1" height="15.0" fill="rgb(222,146,46)" rx="2" ry="2" />
<text  x="41.37" y="1007.5" ></text>
</g>
<g >
<title>_memset_avx2_unaligned_erms (16 samples, 0.02%)</title><rect x="376.5" y="613" width="0.2" height="15.0" fill="rgb(247,70,45)" rx="2" ry="2" />
<text  x="379.49" y="623.5" ></text>
</g>
<g >
<title>_GI___libc_free (63 samples, 0.07%)</title><rect x="390.2" y="501" width="0.8" height="15.0" fill="rgb(217,34,19)" rx="2" ry="2" />
<text  x="393.19" y="511.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::read (55 samples, 0.06%)</title><rect x="243.4" y="1157" width="0.7" height="15.0" fill="rgb(213,3,27)" rx="2" ry="2" />
<text  x="246.37" y="1167.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (8 samples, 0.01%)</title><rect x="503.6" y="1093" width="0.1" height="15.0" fill="rgb(221,59,41)" rx="2" ry="2" />
<text  x="506.59" y="1103.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (90 samples, 0.10%)</title><rect x="174.3" y="613" width="1.2" height="15.0" fill="rgb(215,37,15)" rx="2" ry="2" />
<text  x="177.33" y="623.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (38 samples, 0.04%)</title><rect x="211.6" y="613" width="0.5" height="15.0" fill="rgb(221,89,11)" rx="2" ry="2" />
<text  x="214.64" y="623.5" ></text>
</g>
<g >
<title>bytes::bytes::shared_drop::{{closure}} (30 samples, 0.03%)</title><rect x="361.9" y="885" width="0.4" height="15.0" fill="rgb(218,179,31)" rx="2" ry="2" />
<text  x="364.89" y="895.5" ></text>
</g>
<g >
<title>sched_clock_cpu (32 samples, 0.03%)</title><rect x="1108.1" y="197" width="0.4" height="15.0" fill="rgb(239,26,31)" rx="2" ry="2" />
<text  x="1111.09" y="207.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (47 samples, 0.05%)</title><rect x="274.1" y="981" width="0.6" height="15.0" fill="rgb(234,85,52)" rx="2" ry="2" />
<text  x="277.12" y="991.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget (870 samples, 0.93%)</title><rect x="504.4" y="1189" width="11.0" height="15.0" fill="rgb(250,211,6)" rx="2" ry="2" />
<text  x="507.38" y="1199.5" ></text>
</g>
<g >
<title>std::panicking::try (615 samples, 0.66%)</title><rect x="472.8" y="677" width="7.8" height="15.0" fill="rgb(215,14,25)" rx="2" ry="2" />
<text  x="475.77" y="687.5" ></text>
</g>
<g >
<title>_shutdown (40 samples, 0.04%)</title><rect x="467.2" y="981" width="0.5" height="15.0" fill="rgb(212,228,32)" rx="2" ry="2" />
<text  x="470.21" y="991.5" ></text>
</g>
<g >
<title>actix_http::header::map::HeaderMap::append (230 samples, 0.25%)</title><rect x="28.0" y="1157" width="2.9" height="15.0" fill="rgb(217,229,31)" rx="2" ry="2" />
<text  x="30.96" y="1167.5" ></text>
</g>
<g >
<title>skb_release_all (245 samples, 0.26%)</title><rect x="694.3" y="677" width="3.1" height="15.0" fill="rgb(208,106,1)" rx="2" ry="2" />
<text  x="697.31" y="687.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,071 samples, 1.15%)</title><rect x="472.8" y="949" width="13.5" height="15.0" fill="rgb(230,80,12)" rx="2" ry="2" />
<text  x="475.77" y="959.5" ></text>
</g>
<g >
<title>skb_try_coalesce (28 samples, 0.03%)</title><rect x="320.0" y="389" width="0.3" height="15.0" fill="rgb(254,88,46)" rx="2" ry="2" />
<text  x="322.96" y="399.5" ></text>
</g>
<g >
<title>int_realloc (96 samples, 0.10%)</title><rect x="144.5" y="629" width="1.2" height="15.0" fill="rgb(234,219,25)" rx="2" ry="2" />
<text  x="147.48" y="639.5" ></text>
</g>
<g >
<title>actix_http::message::MessagePool&lt;T&gt;::get_message (318 samples, 0.34%)</title><rect x="38.0" y="1141" width="4.0" height="15.0" fill="rgb(236,115,30)" rx="2" ry="2" />
<text  x="41.00" y="1151.5" ></text>
</g>
<g >
<title>actix_rt::spawn (10 samples, 0.01%)</title><rect x="65.7" y="1237" width="0.2" height="15.0" fill="rgb(244,39,25)" rx="2" ry="2" />
<text  x="68.75" y="1247.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (8 samples, 0.01%)</title><rect x="165.0" y="885" width="0.1" height="15.0" fill="rgb(206,174,14)" rx="2" ry="2" />
<text  x="167.98" y="895.5" ></text>
</g>
<g >
<title>kmem_cache_free (274 samples, 0.29%)</title><rect x="778.2" y="613" width="3.5" height="15.0" fill="rgb(218,19,28)" rx="2" ry="2" />
<text  x="781.22" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="426.2" y="565" width="0.1" height="15.0" fill="rgb(225,101,4)" rx="2" ry="2" />
<text  x="429.20" y="575.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::shallow_clone (47 samples, 0.05%)</title><rect x="43.5" y="1157" width="0.6" height="15.0" fill="rgb(227,57,8)" rx="2" ry="2" />
<text  x="46.51" y="1167.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (139 samples, 0.15%)</title><rect x="358.3" y="901" width="1.8" height="15.0" fill="rgb(242,211,6)" rx="2" ry="2" />
<text  x="361.32" y="911.5" ></text>
</g>
<g >
<title>_rust_probestack (9 samples, 0.01%)</title><rect x="26.9" y="1173" width="0.1" height="15.0" fill="rgb(219,152,27)" rx="2" ry="2" />
<text  x="29.87" y="1183.5" ></text>
</g>
<g >
<title>inet_getname (61 samples, 0.07%)</title><rect x="1127.6" y="805" width="0.8" height="15.0" fill="rgb(241,148,8)" rx="2" ry="2" />
<text  x="1130.64" y="815.5" ></text>
</g>
<g >
<title>[unknown] (61,937 samples, 66.44%)</title><rect x="10.9" y="1269" width="784.1" height="15.0" fill="rgb(216,225,18)" rx="2" ry="2" />
<text  x="13.94" y="1279.5" >[unknown]</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::other::{{closure}} (12 samples, 0.01%)</title><rect x="64.5" y="709" width="0.2" height="15.0" fill="rgb(234,227,16)" rx="2" ry="2" />
<text  x="67.53" y="719.5" ></text>
</g>
<g >
<title>ktime_get (22 samples, 0.02%)</title><rect x="702.2" y="677" width="0.2" height="15.0" fill="rgb(223,166,24)" rx="2" ry="2" />
<text  x="705.15" y="687.5" ></text>
</g>
<g >
<title>apparmor_file_permission (40 samples, 0.04%)</title><rect x="1113.1" y="421" width="0.5" height="15.0" fill="rgb(222,31,9)" rx="2" ry="2" />
<text  x="1116.06" y="431.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (40 samples, 0.04%)</title><rect x="344.3" y="997" width="0.6" height="15.0" fill="rgb(215,3,25)" rx="2" ry="2" />
<text  x="347.35" y="1007.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (85 samples, 0.09%)</title><rect x="966.5" y="805" width="1.1" height="15.0" fill="rgb(243,98,41)" rx="2" ry="2" />
<text  x="969.49" y="815.5" ></text>
</g>
<g >
<title>kick_process (25 samples, 0.03%)</title><rect x="735.6" y="613" width="0.3" height="15.0" fill="rgb(239,218,7)" rx="2" ry="2" />
<text  x="738.59" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path_leaves_key (42 samples, 0.05%)</title><rect x="117.1" y="917" width="0.5" height="15.0" fill="rgb(248,136,37)" rx="2" ry="2" />
<text  x="120.05" y="927.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths (4,291 samples, 4.60%)</title><rect x="67.1" y="981" width="54.3" height="15.0" fill="rgb(205,220,50)" rx="2" ry="2" />
<text  x="70.06" y="991.5" >jsonp..</text>
</g>
<g >
<title>ip_local_out (5,628 samples, 6.04%)</title><rect x="584.7" y="661" width="71.3" height="15.0" fill="rgb(254,48,47)" rx="2" ry="2" />
<text  x="587.75" y="671.5" >ip_local..</text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::or (436 samples, 0.47%)</title><rect x="165.1" y="933" width="5.5" height="15.0" fill="rgb(211,166,33)" rx="2" ry="2" />
<text  x="168.08" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (49 samples, 0.05%)</title><rect x="975.4" y="709" width="0.6" height="15.0" fill="rgb(220,152,43)" rx="2" ry="2" />
<text  x="978.36" y="719.5" ></text>
</g>
<g >
<title>_fdget_pos (45 samples, 0.05%)</title><rect x="1094.1" y="469" width="0.5" height="15.0" fill="rgb(235,105,43)" rx="2" ry="2" />
<text  x="1097.07" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.01%)</title><rect x="419.5" y="709" width="0.1" height="15.0" fill="rgb(219,18,15)" rx="2" ry="2" />
<text  x="422.49" y="719.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (23 samples, 0.02%)</title><rect x="153.4" y="565" width="0.3" height="15.0" fill="rgb(240,28,43)" rx="2" ry="2" />
<text  x="156.42" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.02%)</title><rect x="208.6" y="565" width="0.3" height="15.0" fill="rgb(244,178,46)" rx="2" ry="2" />
<text  x="211.64" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (26 samples, 0.03%)</title><rect x="179.1" y="581" width="0.3" height="15.0" fill="rgb(232,174,19)" rx="2" ry="2" />
<text  x="182.09" y="591.5" ></text>
</g>
<g >
<title>fsnotify (14 samples, 0.02%)</title><rect x="822.4" y="597" width="0.1" height="15.0" fill="rgb(230,189,52)" rx="2" ry="2" />
<text  x="825.37" y="607.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::drop_waker (12 samples, 0.01%)</title><rect x="461.9" y="805" width="0.1" height="15.0" fill="rgb(226,20,47)" rx="2" ry="2" />
<text  x="464.86" y="815.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::dispatcher::PollResponse as core::cmp::PartialEq&gt;::eq (14 samples, 0.02%)</title><rect x="532.2" y="1013" width="0.2" height="15.0" fill="rgb(227,75,41)" rx="2" ry="2" />
<text  x="535.24" y="1023.5" ></text>
</g>
<g >
<title>_fget_light (42 samples, 0.05%)</title><rect x="820.4" y="613" width="0.6" height="15.0" fill="rgb(234,187,10)" rx="2" ry="2" />
<text  x="823.42" y="623.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_ready (165 samples, 0.18%)</title><rect x="336.9" y="997" width="2.1" height="15.0" fill="rgb(223,43,40)" rx="2" ry="2" />
<text  x="339.88" y="1007.5" ></text>
</g>
<g >
<title>clear_page_erms (17 samples, 0.02%)</title><rect x="1134.8" y="629" width="0.2" height="15.0" fill="rgb(227,92,43)" rx="2" ry="2" />
<text  x="1137.78" y="639.5" ></text>
</g>
<g >
<title>lock_hrtimer_base (13 samples, 0.01%)</title><rect x="862.3" y="629" width="0.2" height="15.0" fill="rgb(220,84,24)" rx="2" ry="2" />
<text  x="865.30" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::selector::selector_impl::JsonSelector&gt; (92 samples, 0.10%)</title><rect x="132.0" y="933" width="1.2" height="15.0" fill="rgb(245,195,17)" rx="2" ry="2" />
<text  x="134.99" y="943.5" ></text>
</g>
<g >
<title>raw_spin_lock (15 samples, 0.02%)</title><rect x="650.8" y="485" width="0.2" height="15.0" fill="rgb(249,219,41)" rx="2" ry="2" />
<text  x="653.84" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::new (31 samples, 0.03%)</title><rect x="447.4" y="917" width="0.4" height="15.0" fill="rgb(249,148,45)" rx="2" ry="2" />
<text  x="450.38" y="927.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (221 samples, 0.24%)</title><rect x="38.6" y="1061" width="2.8" height="15.0" fill="rgb(221,94,17)" rx="2" ry="2" />
<text  x="41.57" y="1071.5" ></text>
</g>
<g >
<title>_fget_light (49 samples, 0.05%)</title><rect x="247.5" y="565" width="0.6" height="15.0" fill="rgb(243,205,11)" rx="2" ry="2" />
<text  x="250.52" y="575.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::slot_range (11 samples, 0.01%)</title><rect x="1009.1" y="821" width="0.2" height="15.0" fill="rgb(239,49,10)" rx="2" ry="2" />
<text  x="1012.15" y="831.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.01%)</title><rect x="146.5" y="645" width="0.2" height="15.0" fill="rgb(236,155,23)" rx="2" ry="2" />
<text  x="149.51" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (999 samples, 1.07%)</title><rect x="773.1" y="693" width="12.6" height="15.0" fill="rgb(205,48,26)" rx="2" ry="2" />
<text  x="776.08" y="703.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (95 samples, 0.10%)</title><rect x="190.3" y="581" width="1.2" height="15.0" fill="rgb(219,187,43)" rx="2" ry="2" />
<text  x="193.32" y="591.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (20 samples, 0.02%)</title><rect x="80.7" y="757" width="0.3" height="15.0" fill="rgb(215,137,13)" rx="2" ry="2" />
<text  x="83.74" y="767.5" ></text>
</g>
<g >
<title>page_counter_try_charge (8 samples, 0.01%)</title><rect x="1142.0" y="677" width="0.1" height="15.0" fill="rgb(215,127,19)" rx="2" ry="2" />
<text  x="1145.00" y="687.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (37 samples, 0.04%)</title><rect x="418.9" y="821" width="0.5" height="15.0" fill="rgb(225,217,23)" rx="2" ry="2" />
<text  x="421.91" y="831.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (15 samples, 0.02%)</title><rect x="644.9" y="485" width="0.2" height="15.0" fill="rgb(247,199,13)" rx="2" ry="2" />
<text  x="647.86" y="495.5" ></text>
</g>
<g >
<title>mio::sys::unix::awakener::pipe::Awakener::cleanup (43 samples, 0.05%)</title><rect x="1033.2" y="501" width="0.6" height="15.0" fill="rgb(211,29,42)" rx="2" ry="2" />
<text  x="1036.21" y="511.5" ></text>
</g>
<g >
<title>tokio::time::driver::Inner::queue (75 samples, 0.08%)</title><rect x="273.0" y="997" width="0.9" height="15.0" fill="rgb(248,193,43)" rx="2" ry="2" />
<text  x="275.99" y="1007.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="420.4" y="725" width="0.1" height="15.0" fill="rgb(239,88,25)" rx="2" ry="2" />
<text  x="423.38" y="735.5" ></text>
</g>
<g >
<title>task_work_run (2,373 samples, 2.55%)</title><rect x="739.7" y="661" width="30.1" height="15.0" fill="rgb(250,115,24)" rx="2" ry="2" />
<text  x="742.72" y="671.5" >ta..</text>
</g>
<g >
<title>_x86_indirect_thunk_rax (10 samples, 0.01%)</title><rect x="659.2" y="709" width="0.1" height="15.0" fill="rgb(254,32,20)" rx="2" ry="2" />
<text  x="662.18" y="719.5" ></text>
</g>
<g >
<title>tcp_send_mss (133 samples, 0.14%)</title><rect x="668.4" y="757" width="1.7" height="15.0" fill="rgb(216,174,5)" rx="2" ry="2" />
<text  x="671.42" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (337 samples, 0.36%)</title><rect x="155.1" y="709" width="4.2" height="15.0" fill="rgb(210,199,16)" rx="2" ry="2" />
<text  x="158.05" y="719.5" ></text>
</g>
<g >
<title>tokio::runtime::task::Task&lt;S&gt;::from_raw (23 samples, 0.02%)</title><rect x="1072.2" y="517" width="0.3" height="15.0" fill="rgb(220,158,43)" rx="2" ry="2" />
<text  x="1075.19" y="527.5" ></text>
</g>
<g >
<title>tcp_current_mss (102 samples, 0.11%)</title><rect x="668.8" y="741" width="1.3" height="15.0" fill="rgb(242,193,5)" rx="2" ry="2" />
<text  x="671.81" y="751.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::and_then (51 samples, 0.05%)</title><rect x="350.0" y="837" width="0.7" height="15.0" fill="rgb(241,34,20)" rx="2" ry="2" />
<text  x="353.01" y="847.5" ></text>
</g>
<g >
<title>int_free (10 samples, 0.01%)</title><rect x="453.7" y="933" width="0.1" height="15.0" fill="rgb(239,183,12)" rx="2" ry="2" />
<text  x="456.68" y="943.5" ></text>
</g>
<g >
<title>_x64_sys_accept4 (2,532 samples, 2.72%)</title><rect x="1119.0" y="853" width="32.0" height="15.0" fill="rgb(226,89,39)" rx="2" ry="2" />
<text  x="1122.00" y="863.5" >_x..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (27 samples, 0.03%)</title><rect x="1041.3" y="245" width="0.4" height="15.0" fill="rgb(206,122,10)" rx="2" ry="2" />
<text  x="1044.31" y="255.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (67 samples, 0.07%)</title><rect x="98.2" y="869" width="0.8" height="15.0" fill="rgb(219,216,4)" rx="2" ry="2" />
<text  x="101.17" y="879.5" ></text>
</g>
<g >
<title>tokio::util::slab::shard::Shard&lt;T&gt;::get (14 samples, 0.02%)</title><rect x="338.6" y="949" width="0.2" height="15.0" fill="rgb(222,175,8)" rx="2" ry="2" />
<text  x="341.58" y="959.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::as_usize (17 samples, 0.02%)</title><rect x="337.3" y="981" width="0.3" height="15.0" fill="rgb(242,192,23)" rx="2" ry="2" />
<text  x="340.34" y="991.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (103 samples, 0.11%)</title><rect x="383.5" y="661" width="1.3" height="15.0" fill="rgb(232,67,51)" rx="2" ry="2" />
<text  x="386.54" y="671.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (50 samples, 0.05%)</title><rect x="1070.1" y="517" width="0.6" height="15.0" fill="rgb(232,119,32)" rx="2" ry="2" />
<text  x="1073.07" y="527.5" ></text>
</g>
<g >
<title>std::time::Instant::now (61 samples, 0.07%)</title><rect x="1187.5" y="997" width="0.8" height="15.0" fill="rgb(210,34,35)" rx="2" ry="2" />
<text  x="1190.52" y="1007.5" ></text>
</g>
<g >
<title>fput_many (21 samples, 0.02%)</title><rect x="539.9" y="821" width="0.2" height="15.0" fill="rgb(205,46,23)" rx="2" ry="2" />
<text  x="542.87" y="831.5" ></text>
</g>
<g >
<title>std::io::error::Error::kind (9 samples, 0.01%)</title><rect x="1117.2" y="917" width="0.2" height="15.0" fill="rgb(205,184,9)" rx="2" ry="2" />
<text  x="1120.24" y="927.5" ></text>
</g>
<g >
<title>ret_from_fork (13 samples, 0.01%)</title><rect x="1189.4" y="1253" width="0.2" height="15.0" fill="rgb(253,54,26)" rx="2" ry="2" />
<text  x="1192.39" y="1263.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.02%)</title><rect x="368.4" y="949" width="0.3" height="15.0" fill="rgb(236,6,14)" rx="2" ry="2" />
<text  x="371.44" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,943 samples, 4.23%)</title><rect x="286.0" y="981" width="49.9" height="15.0" fill="rgb(224,98,36)" rx="2" ry="2" />
<text  x="288.96" y="991.5" >do_sy..</text>
</g>
<g >
<title>raw_spin_lock_irqsave (58 samples, 0.06%)</title><rect x="664.9" y="629" width="0.7" height="15.0" fill="rgb(212,43,5)" rx="2" ry="2" />
<text  x="667.90" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (24 samples, 0.03%)</title><rect x="219.1" y="549" width="0.3" height="15.0" fill="rgb(227,207,0)" rx="2" ry="2" />
<text  x="222.06" y="559.5" ></text>
</g>
<g >
<title>_GI___libc_realloc (119 samples, 0.13%)</title><rect x="144.2" y="645" width="1.5" height="15.0" fill="rgb(254,185,28)" rx="2" ry="2" />
<text  x="147.19" y="655.5" ></text>
</g>
<g >
<title>_ksize (36 samples, 0.04%)</title><rect x="618.1" y="229" width="0.4" height="15.0" fill="rgb(236,195,1)" rx="2" ry="2" />
<text  x="621.08" y="239.5" ></text>
</g>
<g >
<title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,573 samples, 1.69%)</title><rect x="244.1" y="1173" width="19.9" height="15.0" fill="rgb(232,115,1)" rx="2" ry="2" />
<text  x="247.07" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;actix_web::service::ServiceResponse,actix_http::error::Error&gt;&gt;&gt; (61 samples, 0.07%)</title><rect x="452.9" y="917" width="0.8" height="15.0" fill="rgb(223,188,9)" rx="2" ry="2" />
<text  x="455.91" y="927.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::handle_request (304 samples, 0.33%)</title><rect x="468.9" y="1237" width="3.8" height="15.0" fill="rgb(223,70,16)" rx="2" ry="2" />
<text  x="471.90" y="1247.5" ></text>
</g>
<g >
<title>tokio::io::driver::scheduled_io::ScheduledIo::set_readiness (23 samples, 0.02%)</title><rect x="974.4" y="805" width="0.3" height="15.0" fill="rgb(210,102,43)" rx="2" ry="2" />
<text  x="977.41" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (155 samples, 0.17%)</title><rect x="144.0" y="773" width="2.0" height="15.0" fill="rgb(240,199,24)" rx="2" ry="2" />
<text  x="146.99" y="783.5" ></text>
</g>
<g >
<title>_get_user_4 (37 samples, 0.04%)</title><rect x="521.6" y="485" width="0.4" height="15.0" fill="rgb(238,165,10)" rx="2" ry="2" />
<text  x="524.58" y="495.5" ></text>
</g>
<g >
<title>alloc_empty_file (11 samples, 0.01%)</title><rect x="1138.2" y="773" width="0.1" height="15.0" fill="rgb(252,99,4)" rx="2" ry="2" />
<text  x="1141.15" y="783.5" ></text>
</g>
<g >
<title>checked_request2size (8 samples, 0.01%)</title><rect x="77.1" y="773" width="0.1" height="15.0" fill="rgb(234,110,44)" rx="2" ry="2" />
<text  x="80.09" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt; (14 samples, 0.02%)</title><rect x="1028.7" y="549" width="0.2" height="15.0" fill="rgb(213,206,20)" rx="2" ry="2" />
<text  x="1031.73" y="559.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (27 samples, 0.03%)</title><rect x="960.8" y="693" width="0.3" height="15.0" fill="rgb(242,151,17)" rx="2" ry="2" />
<text  x="963.75" y="703.5" ></text>
</g>
<g >
<title>_pthread_disable_asynccancel (12 samples, 0.01%)</title><rect x="818.0" y="677" width="0.2" height="15.0" fill="rgb(210,159,31)" rx="2" ry="2" />
<text  x="821.04" y="687.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::{{closure}} (1,573 samples, 1.69%)</title><rect x="244.1" y="1077" width="19.9" height="15.0" fill="rgb(238,5,9)" rx="2" ry="2" />
<text  x="247.07" y="1087.5" ></text>
</g>
<g >
<title>refill_obj_stock (26 samples, 0.03%)</title><rect x="781.3" y="581" width="0.4" height="15.0" fill="rgb(219,220,40)" rx="2" ry="2" />
<text  x="784.35" y="591.5" ></text>
</g>
<g >
<title>_mod_memcg_lruvec_state (28 samples, 0.03%)</title><rect x="258.2" y="549" width="0.3" height="15.0" fill="rgb(246,198,42)" rx="2" ry="2" />
<text  x="261.16" y="559.5" ></text>
</g>
<g >
<title>&lt;tinyvec::arrayvec::ArrayVec&lt;A&gt; as core::default::Default&gt;::default (204 samples, 0.22%)</title><rect x="357.5" y="1013" width="2.6" height="15.0" fill="rgb(218,119,4)" rx="2" ry="2" />
<text  x="360.50" y="1023.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (69 samples, 0.07%)</title><rect x="180.4" y="693" width="0.9" height="15.0" fill="rgb(207,80,52)" rx="2" ry="2" />
<text  x="183.45" y="703.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (14 samples, 0.02%)</title><rect x="254.2" y="533" width="0.2" height="15.0" fill="rgb(235,39,30)" rx="2" ry="2" />
<text  x="257.18" y="543.5" ></text>
</g>
<g >
<title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (39 samples, 0.04%)</title><rect x="163.8" y="613" width="0.5" height="15.0" fill="rgb(220,218,53)" rx="2" ry="2" />
<text  x="166.84" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::all_with_strs::{{closure}}::{{closure}} (296 samples, 0.32%)</title><rect x="127.6" y="821" width="3.8" height="15.0" fill="rgb(240,128,37)" rx="2" ry="2" />
<text  x="130.65" y="831.5" ></text>
</g>
<g >
<title>tcp_shutdown (3,352 samples, 3.60%)</title><rect x="290.6" y="901" width="42.5" height="15.0" fill="rgb(239,87,10)" rx="2" ry="2" />
<text  x="293.63" y="911.5" >tcp..</text>
</g>
<g >
<title>tokio::io::driver::Handle::wakeup (51 samples, 0.05%)</title><rect x="793.3" y="789" width="0.7" height="15.0" fill="rgb(253,146,38)" rx="2" ry="2" />
<text  x="796.31" y="799.5" ></text>
</g>
<g >
<title>tokio::util::slab::Slab&lt;T&gt;::remove (330 samples, 0.35%)</title><rect x="788.6" y="789" width="4.2" height="15.0" fill="rgb(249,54,32)" rx="2" ry="2" />
<text  x="791.61" y="799.5" ></text>
</g>
<g >
<title>_cgroup_bpf_run_filter_sk (9 samples, 0.01%)</title><rect x="761.2" y="581" width="0.1" height="15.0" fill="rgb(220,97,7)" rx="2" ry="2" />
<text  x="764.17" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (9 samples, 0.01%)</title><rect x="240.5" y="869" width="0.1" height="15.0" fill="rgb(247,215,9)" rx="2" ry="2" />
<text  x="243.46" y="879.5" ></text>
</g>
<g >
<title>net_rx_action (1,553 samples, 1.67%)</title><rect x="303.6" y="629" width="19.7" height="15.0" fill="rgb(250,184,16)" rx="2" ry="2" />
<text  x="306.61" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (22 samples, 0.02%)</title><rect x="1073.0" y="469" width="0.3" height="15.0" fill="rgb(227,98,48)" rx="2" ry="2" />
<text  x="1075.98" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="138.3" y="869" width="0.1" height="15.0" fill="rgb(214,146,22)" rx="2" ry="2" />
<text  x="141.27" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (9 samples, 0.01%)</title><rect x="133.0" y="853" width="0.2" height="15.0" fill="rgb(237,45,49)" rx="2" ry="2" />
<text  x="136.04" y="863.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.03%)</title><rect x="165.2" y="853" width="0.3" height="15.0" fill="rgb(230,21,28)" rx="2" ry="2" />
<text  x="168.18" y="863.5" ></text>
</g>
<g >
<title>move_addr_to_user (34 samples, 0.04%)</title><rect x="1128.4" y="805" width="0.5" height="15.0" fill="rgb(251,165,12)" rx="2" ry="2" />
<text  x="1131.43" y="815.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (43 samples, 0.05%)</title><rect x="153.2" y="629" width="0.6" height="15.0" fill="rgb(225,11,19)" rx="2" ry="2" />
<text  x="156.22" y="639.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (43 samples, 0.05%)</title><rect x="376.5" y="773" width="0.5" height="15.0" fill="rgb(213,110,42)" rx="2" ry="2" />
<text  x="379.45" y="783.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (193 samples, 0.21%)</title><rect x="141.5" y="741" width="2.5" height="15.0" fill="rgb(225,134,49)" rx="2" ry="2" />
<text  x="144.55" y="751.5" ></text>
</g>
<g >
<title>memcpy_erms (22 samples, 0.02%)</title><rect x="1148.7" y="757" width="0.2" height="15.0" fill="rgb(254,95,14)" rx="2" ry="2" />
<text  x="1151.67" y="767.5" ></text>
</g>
<g >
<title>tokio::runtime::task::Task&lt;S&gt;::from_raw (37 samples, 0.04%)</title><rect x="483.6" y="661" width="0.5" height="15.0" fill="rgb(243,128,27)" rx="2" ry="2" />
<text  x="486.59" y="671.5" ></text>
</g>
<g >
<title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (30 samples, 0.03%)</title><rect x="361.9" y="901" width="0.4" height="15.0" fill="rgb(242,169,49)" rx="2" ry="2" />
<text  x="364.89" y="911.5" ></text>
</g>
<g >
<title>evict (194 samples, 0.21%)</title><rect x="1154.3" y="709" width="2.4" height="15.0" fill="rgb(215,166,40)" rx="2" ry="2" />
<text  x="1157.25" y="719.5" ></text>
</g>
<g >
<title>pipe_read (12 samples, 0.01%)</title><rect x="829.3" y="597" width="0.2" height="15.0" fill="rgb(205,59,37)" rx="2" ry="2" />
<text  x="832.32" y="607.5" ></text>
</g>
<g >
<title>_libc_recv (1,833 samples, 1.97%)</title><rect x="684.3" y="837" width="23.2" height="15.0" fill="rgb(229,224,20)" rx="2" ry="2" />
<text  x="687.34" y="847.5" >_..</text>
</g>
<g >
<title>alloc::alloc::box_free (190 samples, 0.20%)</title><rect x="386.9" y="597" width="2.4" height="15.0" fill="rgb(226,183,19)" rx="2" ry="2" />
<text  x="389.89" y="607.5" ></text>
</g>
<g >
<title>tokio::runtime::context::CONTEXT::_getit (8 samples, 0.01%)</title><rect x="274.4" y="949" width="0.1" height="15.0" fill="rgb(240,39,2)" rx="2" ry="2" />
<text  x="277.40" y="959.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (19 samples, 0.02%)</title><rect x="400.3" y="773" width="0.3" height="15.0" fill="rgb(242,126,31)" rx="2" ry="2" />
<text  x="403.31" y="783.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (34 samples, 0.04%)</title><rect x="701.5" y="693" width="0.4" height="15.0" fill="rgb(214,229,21)" rx="2" ry="2" />
<text  x="704.48" y="703.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::enter::{{closure}} (1,071 samples, 1.15%)</title><rect x="472.8" y="1077" width="13.5" height="15.0" fill="rgb(215,49,46)" rx="2" ry="2" />
<text  x="475.77" y="1087.5" ></text>
</g>
<g >
<title>std::time::Instant::duration_since (24 samples, 0.03%)</title><rect x="272.3" y="949" width="0.3" height="15.0" fill="rgb(246,16,21)" rx="2" ry="2" />
<text  x="275.32" y="959.5" ></text>
</g>
<g >
<title>_softirqentry_text_start (43 samples, 0.05%)</title><rect x="537.3" y="885" width="0.5" height="15.0" fill="rgb(205,55,42)" rx="2" ry="2" />
<text  x="540.28" y="895.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (288 samples, 0.31%)</title><rect x="473.3" y="565" width="3.6" height="15.0" fill="rgb(227,128,5)" rx="2" ry="2" />
<text  x="476.28" y="575.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="1070.3" y="453" width="0.2" height="15.0" fill="rgb(253,18,48)" rx="2" ry="2" />
<text  x="1073.30" y="463.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (14 samples, 0.02%)</title><rect x="449.7" y="885" width="0.1" height="15.0" fill="rgb(212,17,16)" rx="2" ry="2" />
<text  x="452.67" y="895.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (16 samples, 0.02%)</title><rect x="194.7" y="549" width="0.2" height="15.0" fill="rgb(239,49,37)" rx="2" ry="2" />
<text  x="197.69" y="559.5" ></text>
</g>
<g >
<title>mod_timer (212 samples, 0.23%)</title><rect x="663.0" y="661" width="2.7" height="15.0" fill="rgb(252,62,32)" rx="2" ry="2" />
<text  x="666.00" y="671.5" ></text>
</g>
<g >
<title>core::ptr::read (9 samples, 0.01%)</title><rect x="172.2" y="917" width="0.1" height="15.0" fill="rgb(215,70,13)" rx="2" ry="2" />
<text  x="175.17" y="927.5" ></text>
</g>
<g >
<title>skb_rbtree_purge (17 samples, 0.02%)</title><rect x="314.7" y="421" width="0.2" height="15.0" fill="rgb(229,9,1)" rx="2" ry="2" />
<text  x="317.66" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::os::errno (8 samples, 0.01%)</title><rect x="1117.4" y="885" width="0.1" height="15.0" fill="rgb(237,107,17)" rx="2" ry="2" />
<text  x="1120.39" y="895.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (1,573 samples, 1.69%)</title><rect x="244.1" y="997" width="19.9" height="15.0" fill="rgb(225,59,36)" rx="2" ry="2" />
<text  x="247.07" y="1007.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47 samples, 0.05%)</title><rect x="227.0" y="597" width="0.6" height="15.0" fill="rgb(252,174,53)" rx="2" ry="2" />
<text  x="229.98" y="607.5" ></text>
</g>
<g >
<title>&lt;actix_web::data::Data&lt;T&gt; as actix_web::extract::FromRequest&gt;::from_request (223 samples, 0.24%)</title><rect x="348.7" y="885" width="2.8" height="15.0" fill="rgb(248,46,33)" rx="2" ry="2" />
<text  x="351.68" y="895.5" ></text>
</g>
<g >
<title>_netif_receive_skb_core (9 samples, 0.01%)</title><rect x="595.5" y="453" width="0.1" height="15.0" fill="rgb(225,67,38)" rx="2" ry="2" />
<text  x="598.53" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::shutdown (40 samples, 0.04%)</title><rect x="467.2" y="997" width="0.5" height="15.0" fill="rgb(220,121,54)" rx="2" ry="2" />
<text  x="470.21" y="1007.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths_dot (587 samples, 0.63%)</title><rect x="57.3" y="853" width="7.5" height="15.0" fill="rgb(217,202,5)" rx="2" ry="2" />
<text  x="60.34" y="863.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (137 samples, 0.15%)</title><rect x="79.8" y="805" width="1.7" height="15.0" fill="rgb(234,50,30)" rx="2" ry="2" />
<text  x="82.76" y="815.5" ></text>
</g>
<g >
<title>lock_timer_base (55 samples, 0.06%)</title><rect x="310.9" y="373" width="0.7" height="15.0" fill="rgb(243,8,3)" rx="2" ry="2" />
<text  x="313.92" y="383.5" ></text>
</g>
<g >
<title>ep_item_pol.sr. (386 samples, 0.41%)</title><rect x="249.5" y="565" width="4.9" height="15.0" fill="rgb(249,125,39)" rx="2" ry="2" />
<text  x="252.54" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76 samples, 0.08%)</title><rect x="99.6" y="837" width="0.9" height="15.0" fill="rgb(218,91,5)" rx="2" ry="2" />
<text  x="102.57" y="847.5" ></text>
</g>
<g >
<title>skb_release_data (21 samples, 0.02%)</title><rect x="550.3" y="645" width="0.2" height="15.0" fill="rgb(237,157,43)" rx="2" ry="2" />
<text  x="553.26" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (56 samples, 0.06%)</title><rect x="143.3" y="613" width="0.7" height="15.0" fill="rgb(250,81,23)" rx="2" ry="2" />
<text  x="146.28" y="623.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (21 samples, 0.02%)</title><rect x="167.2" y="693" width="0.3" height="15.0" fill="rgb(210,83,25)" rx="2" ry="2" />
<text  x="170.23" y="703.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (13 samples, 0.01%)</title><rect x="214.6" y="565" width="0.2" height="15.0" fill="rgb(206,74,31)" rx="2" ry="2" />
<text  x="217.65" y="575.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (5,441 samples, 5.84%)</title><rect x="370.0" y="1029" width="68.9" height="15.0" fill="rgb(205,52,27)" rx="2" ry="2" />
<text  x="373.03" y="1039.5" >&lt;future..</text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (53 samples, 0.06%)</title><rect x="146.5" y="693" width="0.6" height="15.0" fill="rgb(220,4,25)" rx="2" ry="2" />
<text  x="149.46" y="703.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_ready (13 samples, 0.01%)</title><rect x="243.9" y="1061" width="0.2" height="15.0" fill="rgb(212,130,10)" rx="2" ry="2" />
<text  x="246.90" y="1071.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (11 samples, 0.01%)</title><rect x="377.0" y="773" width="0.1" height="15.0" fill="rgb(230,15,1)" rx="2" ry="2" />
<text  x="380.00" y="783.5" ></text>
</g>
<g >
<title>try_charge (11 samples, 0.01%)</title><rect x="260.8" y="517" width="0.2" height="15.0" fill="rgb(209,138,49)" rx="2" ry="2" />
<text  x="263.83" y="527.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (77 samples, 0.08%)</title><rect x="99.6" y="869" width="0.9" height="15.0" fill="rgb(215,77,34)" rx="2" ry="2" />
<text  x="102.56" y="879.5" ></text>
</g>
<g >
<title>_fget_light (59 samples, 0.06%)</title><rect x="671.7" y="789" width="0.8" height="15.0" fill="rgb(252,75,18)" rx="2" ry="2" />
<text  x="674.71" y="799.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.05%)</title><rect x="380.9" y="869" width="0.6" height="15.0" fill="rgb(211,227,16)" rx="2" ry="2" />
<text  x="383.92" y="879.5" ></text>
</g>
<g >
<title>_x64_sys_close (206 samples, 0.22%)</title><rect x="735.2" y="693" width="2.7" height="15.0" fill="rgb(223,11,18)" rx="2" ry="2" />
<text  x="738.24" y="703.5" ></text>
</g>
<g >
<title>actix_server::worker::Worker::start::{{closure}}::{{closure}} (1,573 samples, 1.69%)</title><rect x="244.1" y="837" width="19.9" height="15.0" fill="rgb(219,30,49)" rx="2" ry="2" />
<text  x="247.07" y="847.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (25 samples, 0.03%)</title><rect x="1014.3" y="805" width="0.4" height="15.0" fill="rgb(229,212,14)" rx="2" ry="2" />
<text  x="1017.34" y="815.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (46 samples, 0.05%)</title><rect x="361.7" y="933" width="0.6" height="15.0" fill="rgb(248,28,8)" rx="2" ry="2" />
<text  x="364.69" y="943.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="143.4" y="565" width="0.1" height="15.0" fill="rgb(228,138,17)" rx="2" ry="2" />
<text  x="146.36" y="575.5" ></text>
</g>
<g >
<title>tokio::coop::Budget::initial (97 samples, 0.10%)</title><rect x="1013.0" y="869" width="1.3" height="15.0" fill="rgb(234,190,8)" rx="2" ry="2" />
<text  x="1016.05" y="879.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.02%)</title><rect x="33.3" y="1141" width="0.2" height="15.0" fill="rgb(218,148,30)" rx="2" ry="2" />
<text  x="36.28" y="1151.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::now (403 samples, 0.43%)</title><rect x="977.1" y="821" width="5.1" height="15.0" fill="rgb(213,115,7)" rx="2" ry="2" />
<text  x="980.08" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.01%)</title><rect x="426.3" y="597" width="0.2" height="15.0" fill="rgb(245,31,14)" rx="2" ry="2" />
<text  x="429.34" y="607.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (1,573 samples, 1.69%)</title><rect x="244.1" y="869" width="19.9" height="15.0" fill="rgb(244,169,36)" rx="2" ry="2" />
<text  x="247.07" y="879.5" ></text>
</g>
<g >
<title>_mod_memcg_lruvec_state (9 samples, 0.01%)</title><rect x="1147.3" y="725" width="0.2" height="15.0" fill="rgb(253,44,46)" rx="2" ry="2" />
<text  x="1150.34" y="735.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::compile (4,291 samples, 4.60%)</title><rect x="67.1" y="1013" width="54.3" height="15.0" fill="rgb(251,4,2)" rx="2" ry="2" />
<text  x="70.06" y="1023.5" >jsonp..</text>
</g>
<g >
<title>tokio::time::wheel::level::level_range (10 samples, 0.01%)</title><rect x="994.7" y="805" width="0.2" height="15.0" fill="rgb(228,205,6)" rx="2" ry="2" />
<text  x="997.74" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;jsonpath_lib::paths::tokens::ParseToken&gt;&gt; (20 samples, 0.02%)</title><rect x="381.7" y="869" width="0.2" height="15.0" fill="rgb(206,93,52)" rx="2" ry="2" />
<text  x="384.67" y="879.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (70 samples, 0.08%)</title><rect x="119.7" y="917" width="0.9" height="15.0" fill="rgb(243,23,18)" rx="2" ry="2" />
<text  x="122.71" y="927.5" ></text>
</g>
<g >
<title>&lt;actix_service::and_then::AndThenServiceResponse&lt;A,B&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,202 samples, 6.65%)</title><rect x="716.5" y="1029" width="78.5" height="15.0" fill="rgb(249,166,39)" rx="2" ry="2" />
<text  x="719.46" y="1039.5" >&lt;actix_se..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (57 samples, 0.06%)</title><rect x="225.9" y="661" width="0.7" height="15.0" fill="rgb(224,156,52)" rx="2" ry="2" />
<text  x="228.92" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;dyn tokio::park::Unpark&gt; as tokio::park::Unpark&gt;::unpark (63 samples, 0.07%)</title><rect x="273.0" y="981" width="0.8" height="15.0" fill="rgb(234,60,23)" rx="2" ry="2" />
<text  x="275.99" y="991.5" ></text>
</g>
<g >
<title>_GI___clock_gettime (235 samples, 0.25%)</title><rect x="963.5" y="725" width="2.9" height="15.0" fill="rgb(239,213,7)" rx="2" ry="2" />
<text  x="966.46" y="735.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (15 samples, 0.02%)</title><rect x="412.6" y="741" width="0.2" height="15.0" fill="rgb(236,32,30)" rx="2" ry="2" />
<text  x="415.58" y="751.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output::{{closure}} (262 samples, 0.28%)</title><rect x="476.9" y="549" width="3.3" height="15.0" fill="rgb(228,61,3)" rx="2" ry="2" />
<text  x="479.92" y="559.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (22 samples, 0.02%)</title><rect x="971.4" y="581" width="0.3" height="15.0" fill="rgb(250,213,51)" rx="2" ry="2" />
<text  x="974.41" y="591.5" ></text>
</g>
<g >
<title>security_sock_graft (37 samples, 0.04%)</title><rect x="1127.1" y="789" width="0.4" height="15.0" fill="rgb(206,100,17)" rx="2" ry="2" />
<text  x="1130.06" y="799.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level_for (40 samples, 0.04%)</title><rect x="1000.3" y="789" width="0.5" height="15.0" fill="rgb(239,101,44)" rx="2" ry="2" />
<text  x="1003.34" y="799.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (11 samples, 0.01%)</title><rect x="253.5" y="485" width="0.1" height="15.0" fill="rgb(225,14,12)" rx="2" ry="2" />
<text  x="256.49" y="495.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::ref_dec (17 samples, 0.02%)</title><rect x="236.6" y="933" width="0.2" height="15.0" fill="rgb(234,155,16)" rx="2" ry="2" />
<text  x="239.63" y="943.5" ></text>
</g>
<g >
<title>tokio::util::slab::page::Shared&lt;T&gt;::alloc::{{closure}} (9 samples, 0.01%)</title><rect x="515.3" y="693" width="0.1" height="15.0" fill="rgb(228,106,43)" rx="2" ry="2" />
<text  x="518.26" y="703.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.01%)</title><rect x="217.0" y="485" width="0.1" height="15.0" fill="rgb(212,40,24)" rx="2" ry="2" />
<text  x="219.99" y="495.5" ></text>
</g>
<g >
<title>tokio::io::driver::Inner::deregister_source (30 samples, 0.03%)</title><rect x="770.4" y="725" width="0.4" height="15.0" fill="rgb(219,190,16)" rx="2" ry="2" />
<text  x="773.45" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (34 samples, 0.04%)</title><rect x="236.4" y="997" width="0.4" height="15.0" fill="rgb(209,118,36)" rx="2" ry="2" />
<text  x="239.41" y="1007.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (94 samples, 0.10%)</title><rect x="163.1" y="645" width="1.2" height="15.0" fill="rgb(247,27,17)" rx="2" ry="2" />
<text  x="166.14" y="655.5" ></text>
</g>
<g >
<title>_GI___pthread_mutex_trylock (98 samples, 0.11%)</title><rect x="789.4" y="725" width="1.3" height="15.0" fill="rgb(253,150,32)" rx="2" ry="2" />
<text  x="792.43" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;pin_project_lite::_private::UnsafeOverwriteGuard&lt;futures_util::future::future::map::Map&lt;actix_web::handler::ExtractResponse&lt; (27 samples, 0.03%)</title><rect x="438.5" y="949" width="0.4" height="15.0" fill="rgb(213,174,25)" rx="2" ry="2" />
<text  x="441.52" y="959.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (244 samples, 0.26%)</title><rect x="219.9" y="581" width="3.1" height="15.0" fill="rgb(231,168,30)" rx="2" ry="2" />
<text  x="222.87" y="591.5" ></text>
</g>
<g >
<title>actix_http::extensions::Extensions::drain_from (10 samples, 0.01%)</title><rect x="680.4" y="997" width="0.2" height="15.0" fill="rgb(241,40,21)" rx="2" ry="2" />
<text  x="683.44" y="1007.5" ></text>
</g>
<g >
<title>tokio::task::local::Shared::schedule (372 samples, 0.40%)</title><rect x="968.9" y="677" width="4.7" height="15.0" fill="rgb(215,217,22)" rx="2" ry="2" />
<text  x="971.87" y="687.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (40 samples, 0.04%)</title><rect x="122.4" y="869" width="0.5" height="15.0" fill="rgb(216,26,50)" rx="2" ry="2" />
<text  x="125.43" y="879.5" ></text>
</g>
<g >
<title>switch_fpu_return (22 samples, 0.02%)</title><rect x="1187.1" y="901" width="0.3" height="15.0" fill="rgb(235,183,10)" rx="2" ry="2" />
<text  x="1190.09" y="911.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (185 samples, 0.20%)</title><rect x="152.6" y="757" width="2.3" height="15.0" fill="rgb(219,8,37)" rx="2" ry="2" />
<text  x="155.56" y="767.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (72 samples, 0.08%)</title><rect x="130.5" y="629" width="0.9" height="15.0" fill="rgb(223,172,18)" rx="2" ry="2" />
<text  x="133.48" y="639.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (46 samples, 0.05%)</title><rect x="164.3" y="709" width="0.6" height="15.0" fill="rgb(219,58,45)" rx="2" ry="2" />
<text  x="167.35" y="719.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (26 samples, 0.03%)</title><rect x="491.1" y="1125" width="0.4" height="15.0" fill="rgb(248,203,8)" rx="2" ry="2" />
<text  x="494.12" y="1135.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (13,045 samples, 13.99%)</title><rect x="67.1" y="1109" width="165.1" height="15.0" fill="rgb(237,106,4)" rx="2" ry="2" />
<text  x="70.06" y="1119.5" >&lt;futures_util::future..</text>
</g>
<g >
<title>_GI___libc_free (8 samples, 0.01%)</title><rect x="132.2" y="837" width="0.1" height="15.0" fill="rgb(253,14,31)" rx="2" ry="2" />
<text  x="135.19" y="847.5" ></text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::upgrade (9 samples, 0.01%)</title><rect x="234.4" y="1061" width="0.2" height="15.0" fill="rgb(217,225,17)" rx="2" ry="2" />
<text  x="237.45" y="1071.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.10%)</title><rect x="718.9" y="869" width="1.1" height="15.0" fill="rgb(211,73,28)" rx="2" ry="2" />
<text  x="721.89" y="879.5" ></text>
</g>
<g >
<title>inet_sk_state_store (10 samples, 0.01%)</title><rect x="291.4" y="885" width="0.1" height="15.0" fill="rgb(228,96,20)" rx="2" ry="2" />
<text  x="294.40" y="895.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (106 samples, 0.11%)</title><rect x="100.7" y="837" width="1.4" height="15.0" fill="rgb(208,90,17)" rx="2" ry="2" />
<text  x="103.71" y="847.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (58 samples, 0.06%)</title><rect x="191.9" y="597" width="0.8" height="15.0" fill="rgb(208,120,3)" rx="2" ry="2" />
<text  x="194.94" y="607.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::pin (10 samples, 0.01%)</title><rect x="352.4" y="933" width="0.1" height="15.0" fill="rgb(250,42,0)" rx="2" ry="2" />
<text  x="355.37" y="943.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (18 samples, 0.02%)</title><rect x="71.4" y="901" width="0.2" height="15.0" fill="rgb(206,101,34)" rx="2" ry="2" />
<text  x="74.39" y="911.5" ></text>
</g>
<g >
<title>_fsnotify_inode_delete (27 samples, 0.03%)</title><rect x="1154.8" y="661" width="0.3" height="15.0" fill="rgb(230,18,48)" rx="2" ry="2" />
<text  x="1157.76" y="671.5" ></text>
</g>
<g >
<title>mio::net::tcp::TcpStream::peer_addr (68 samples, 0.07%)</title><rect x="515.7" y="581" width="0.8" height="15.0" fill="rgb(219,33,9)" rx="2" ry="2" />
<text  x="518.68" y="591.5" ></text>
</g>
<g >
<title>finish_task_switch (22 samples, 0.02%)</title><rect x="940.2" y="597" width="0.3" height="15.0" fill="rgb(223,53,14)" rx="2" ry="2" />
<text  x="943.25" y="607.5" ></text>
</g>
<g >
<title>raw_spin_lock_bh (15 samples, 0.02%)</title><rect x="558.9" y="757" width="0.2" height="15.0" fill="rgb(247,13,53)" rx="2" ry="2" />
<text  x="561.95" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (359 samples, 0.39%)</title><rect x="154.9" y="757" width="4.5" height="15.0" fill="rgb(253,114,37)" rx="2" ry="2" />
<text  x="157.90" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::coop::with_budget::ResetGuard&gt; (41 samples, 0.04%)</title><rect x="1023.6" y="613" width="0.5" height="15.0" fill="rgb(213,118,27)" rx="2" ry="2" />
<text  x="1026.57" y="623.5" ></text>
</g>
<g >
<title>inet_getname (188 samples, 0.20%)</title><rect x="507.0" y="613" width="2.4" height="15.0" fill="rgb(253,12,31)" rx="2" ry="2" />
<text  x="509.97" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::array_start (1,006 samples, 1.08%)</title><rect x="53.0" y="981" width="12.7" height="15.0" fill="rgb(219,1,5)" rx="2" ry="2" />
<text  x="56.01" y="991.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (64 samples, 0.07%)</title><rect x="797.8" y="805" width="0.8" height="15.0" fill="rgb(218,50,17)" rx="2" ry="2" />
<text  x="800.83" y="815.5" ></text>
</g>
<g >
<title>_GI___libc_free (8 samples, 0.01%)</title><rect x="368.4" y="917" width="0.1" height="15.0" fill="rgb(227,213,28)" rx="2" ry="2" />
<text  x="371.44" y="927.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (141 samples, 0.15%)</title><rect x="720.9" y="805" width="1.8" height="15.0" fill="rgb(206,44,20)" rx="2" ry="2" />
<text  x="723.91" y="815.5" ></text>
</g>
<g >
<title>&lt;tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set::Reset as core::ops::drop::Drop&gt;::drop (110 samples, 0.12%)</title><rect x="1081.6" y="693" width="1.4" height="15.0" fill="rgb(249,219,11)" rx="2" ry="2" />
<text  x="1084.59" y="703.5" ></text>
</g>
<g >
<title>int_free (104 samples, 0.11%)</title><rect x="721.4" y="741" width="1.3" height="15.0" fill="rgb(224,5,23)" rx="2" ry="2" />
<text  x="724.37" y="751.5" ></text>
</g>
<g >
<title>_cgroup_bpf_run_filter_skb (83 samples, 0.09%)</title><rect x="586.6" y="613" width="1.1" height="15.0" fill="rgb(211,205,32)" rx="2" ry="2" />
<text  x="589.65" y="623.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set1_epi8 (74 samples, 0.08%)</title><rect x="206.1" y="533" width="1.0" height="15.0" fill="rgb(254,171,44)" rx="2" ry="2" />
<text  x="209.13" y="543.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (34 samples, 0.04%)</title><rect x="129.5" y="709" width="0.5" height="15.0" fill="rgb(239,195,6)" rx="2" ry="2" />
<text  x="132.53" y="719.5" ></text>
</g>
<g >
<title>tokio::time::driver::atomic_stack::AtomicStack::push (12 samples, 0.01%)</title><rect x="273.8" y="981" width="0.1" height="15.0" fill="rgb(218,9,1)" rx="2" ry="2" />
<text  x="276.79" y="991.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="402.5" y="853" width="0.2" height="15.0" fill="rgb(221,179,14)" rx="2" ry="2" />
<text  x="405.53" y="863.5" ></text>
</g>
<g >
<title>&lt;f64 as ryu::buffer::Sealed&gt;::write_to_ryu_buffer (364 samples, 0.39%)</title><rect x="430.1" y="645" width="4.6" height="15.0" fill="rgb(212,9,2)" rx="2" ry="2" />
<text  x="433.08" y="655.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (142 samples, 0.15%)</title><rect x="196.2" y="565" width="1.8" height="15.0" fill="rgb(237,86,32)" rx="2" ry="2" />
<text  x="199.22" y="575.5" ></text>
</g>
<g >
<title>_GI___clone (101 samples, 0.11%)</title><rect x="1188.7" y="1269" width="1.3" height="15.0" fill="rgb(225,179,5)" rx="2" ry="2" />
<text  x="1191.68" y="1279.5" ></text>
</g>
<g >
<title>refill_obj_stock (9 samples, 0.01%)</title><rect x="783.9" y="597" width="0.1" height="15.0" fill="rgb(217,181,22)" rx="2" ry="2" />
<text  x="786.85" y="607.5" ></text>
</g>
<g >
<title>http::uri::Uri::from_shared (201 samples, 0.22%)</title><rect x="13.6" y="1109" width="2.5" height="15.0" fill="rgb(244,71,4)" rx="2" ry="2" />
<text  x="16.60" y="1119.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::read (25 samples, 0.03%)</title><rect x="413.8" y="773" width="0.3" height="15.0" fill="rgb(238,201,41)" rx="2" ry="2" />
<text  x="416.77" y="783.5" ></text>
</g>
<g >
<title>tokio::io::driver::platform::sys::hup (33 samples, 0.04%)</title><rect x="465.4" y="949" width="0.4" height="15.0" fill="rgb(229,154,25)" rx="2" ry="2" />
<text  x="468.35" y="959.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::new (18 samples, 0.02%)</title><rect x="401.9" y="869" width="0.2" height="15.0" fill="rgb(218,107,27)" rx="2" ry="2" />
<text  x="404.92" y="879.5" ></text>
</g>
<g >
<title>alloc_pages_current (19 samples, 0.02%)</title><rect x="1134.8" y="677" width="0.2" height="15.0" fill="rgb(219,6,1)" rx="2" ry="2" />
<text  x="1137.77" y="687.5" ></text>
</g>
<g >
<title>actix_http::request::Request&lt;P&gt;::head_mut (12 samples, 0.01%)</title><rect x="42.0" y="1173" width="0.2" height="15.0" fill="rgb(233,144,9)" rx="2" ry="2" />
<text  x="45.03" y="1183.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (18 samples, 0.02%)</title><rect x="1156.3" y="693" width="0.3" height="15.0" fill="rgb(227,198,22)" rx="2" ry="2" />
<text  x="1159.34" y="703.5" ></text>
</g>
<g >
<title>int_free (53 samples, 0.06%)</title><rect x="385.9" y="597" width="0.7" height="15.0" fill="rgb(211,161,6)" rx="2" ry="2" />
<text  x="388.92" y="607.5" ></text>
</g>
<g >
<title>_mod_memcg_state (18 samples, 0.02%)</title><rect x="258.3" y="533" width="0.2" height="15.0" fill="rgb(224,60,24)" rx="2" ry="2" />
<text  x="261.28" y="543.5" ></text>
</g>
<g >
<title>_kfree_skb (214 samples, 0.23%)</title><rect x="554.3" y="693" width="2.7" height="15.0" fill="rgb(209,147,41)" rx="2" ry="2" />
<text  x="557.25" y="703.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (28 samples, 0.03%)</title><rect x="202.3" y="597" width="0.3" height="15.0" fill="rgb(224,112,50)" rx="2" ry="2" />
<text  x="205.27" y="607.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (9 samples, 0.01%)</title><rect x="1045.8" y="293" width="0.1" height="15.0" fill="rgb(248,161,39)" rx="2" ry="2" />
<text  x="1048.81" y="303.5" ></text>
</g>
<g >
<title>all (93,218 samples, 100%)</title><rect x="10.0" y="1301" width="1180.0" height="15.0" fill="rgb(227,127,42)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" ></text>
</g>
<g >
<title>tcp_ack_update_rt.sr. (59 samples, 0.06%)</title><rect x="551.3" y="677" width="0.8" height="15.0" fill="rgb(238,191,47)" rx="2" ry="2" />
<text  x="554.32" y="687.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (86 samples, 0.09%)</title><rect x="1044.4" y="277" width="1.1" height="15.0" fill="rgb(206,129,18)" rx="2" ry="2" />
<text  x="1047.40" y="287.5" ></text>
</g>
<g >
<title>actix-rt:worker (85,020 samples, 91.21%)</title><rect x="10.0" y="1285" width="1076.2" height="15.0" fill="rgb(207,32,46)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" >actix-rt:worker</text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (193 samples, 0.21%)</title><rect x="141.5" y="773" width="2.5" height="15.0" fill="rgb(228,104,6)" rx="2" ry="2" />
<text  x="144.55" y="783.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::clear_sleep_marker (10 samples, 0.01%)</title><rect x="813.2" y="741" width="0.1" height="15.0" fill="rgb(236,92,50)" rx="2" ry="2" />
<text  x="816.17" y="751.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (331 samples, 0.36%)</title><rect x="525.1" y="773" width="4.2" height="15.0" fill="rgb(227,85,4)" rx="2" ry="2" />
<text  x="528.14" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (38 samples, 0.04%)</title><rect x="167.2" y="757" width="0.4" height="15.0" fill="rgb(240,183,10)" rx="2" ry="2" />
<text  x="170.17" y="767.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (1,418 samples, 1.52%)</title><rect x="816.0" y="741" width="17.9" height="15.0" fill="rgb(249,202,26)" rx="2" ry="2" />
<text  x="818.97" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (27 samples, 0.03%)</title><rect x="416.2" y="789" width="0.3" height="15.0" fill="rgb(228,120,49)" rx="2" ry="2" />
<text  x="419.20" y="799.5" ></text>
</g>
<g >
<title>std::panicking::try (1,573 samples, 1.69%)</title><rect x="244.1" y="981" width="19.9" height="15.0" fill="rgb(209,41,5)" rx="2" ry="2" />
<text  x="247.07" y="991.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt (42 samples, 0.05%)</title><rect x="833.4" y="693" width="0.5" height="15.0" fill="rgb(206,107,39)" rx="2" ry="2" />
<text  x="836.38" y="703.5" ></text>
</g>
<g >
<title>security_socket_accept (26 samples, 0.03%)</title><rect x="1129.1" y="805" width="0.3" height="15.0" fill="rgb(230,161,28)" rx="2" ry="2" />
<text  x="1132.07" y="815.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (59 samples, 0.06%)</title><rect x="976.3" y="821" width="0.7" height="15.0" fill="rgb(240,167,43)" rx="2" ry="2" />
<text  x="979.26" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.08%)</title><rect x="367.3" y="949" width="1.0" height="15.0" fill="rgb(249,180,29)" rx="2" ry="2" />
<text  x="370.29" y="959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (282 samples, 0.30%)</title><rect x="519.4" y="533" width="3.5" height="15.0" fill="rgb(206,143,47)" rx="2" ry="2" />
<text  x="522.37" y="543.5" ></text>
</g>
<g >
<title>tokio::coop::budget (5,602 samples, 6.01%)</title><rect x="1012.9" y="885" width="70.9" height="15.0" fill="rgb(220,7,43)" rx="2" ry="2" />
<text  x="1015.91" y="895.5" >tokio::c..</text>
</g>
<g >
<title>_GI___libc_free (45 samples, 0.05%)</title><rect x="387.2" y="549" width="0.6" height="15.0" fill="rgb(206,20,44)" rx="2" ry="2" />
<text  x="390.21" y="559.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::paths::tokens::ParseToken as core::clone::Clone&gt;::clone (35 samples, 0.04%)</title><rect x="411.1" y="821" width="0.4" height="15.0" fill="rgb(243,13,22)" rx="2" ry="2" />
<text  x="414.10" y="831.5" ></text>
</g>
<g >
<title>_rust_probestack (36 samples, 0.04%)</title><rect x="1049.8" y="325" width="0.5" height="15.0" fill="rgb(225,120,8)" rx="2" ry="2" />
<text  x="1052.82" y="335.5" ></text>
</g>
<g >
<title>tcp_options_write (14 samples, 0.02%)</title><rect x="666.2" y="709" width="0.1" height="15.0" fill="rgb(247,62,22)" rx="2" ry="2" />
<text  x="669.17" y="719.5" ></text>
</g>
<g >
<title>inet_csk_accept (239 samples, 0.26%)</title><rect x="1123.5" y="789" width="3.1" height="15.0" fill="rgb(229,203,23)" rx="2" ry="2" />
<text  x="1126.53" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;jsonpath_lib::selector::terms::ExprTerm&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="395.7" y="853" width="0.2" height="15.0" fill="rgb(233,34,27)" rx="2" ry="2" />
<text  x="398.74" y="863.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (12 samples, 0.01%)</title><rect x="1154.9" y="629" width="0.2" height="15.0" fill="rgb(205,153,53)" rx="2" ry="2" />
<text  x="1157.94" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (67 samples, 0.07%)</title><rect x="350.7" y="773" width="0.8" height="15.0" fill="rgb(220,215,18)" rx="2" ry="2" />
<text  x="353.65" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (43 samples, 0.05%)</title><rect x="514.4" y="709" width="0.6" height="15.0" fill="rgb(221,173,28)" rx="2" ry="2" />
<text  x="517.43" y="719.5" ></text>
</g>
<g >
<title>skb_release_head_state (8 samples, 0.01%)</title><rect x="314.5" y="389" width="0.1" height="15.0" fill="rgb(224,211,41)" rx="2" ry="2" />
<text  x="317.50" y="399.5" ></text>
</g>
<g >
<title>_sk_dst_check (53 samples, 0.06%)</title><rect x="583.9" y="661" width="0.7" height="15.0" fill="rgb(205,87,37)" rx="2" ry="2" />
<text  x="586.94" y="671.5" ></text>
</g>
<g >
<title>_destroy_inode (9 samples, 0.01%)</title><rect x="749.4" y="533" width="0.1" height="15.0" fill="rgb(238,199,27)" rx="2" ry="2" />
<text  x="752.43" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::io::registration::Registration&gt; (410 samples, 0.44%)</title><rect x="787.6" y="837" width="5.2" height="15.0" fill="rgb(249,140,23)" rx="2" ry="2" />
<text  x="790.64" y="847.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::enter::DisallowBlockingGuard as core::ops::drop::Drop&gt;::drop (47 samples, 0.05%)</title><rect x="1020.0" y="677" width="0.6" height="15.0" fill="rgb(241,19,9)" rx="2" ry="2" />
<text  x="1022.98" y="687.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (23 samples, 0.02%)</title><rect x="751.5" y="501" width="0.3" height="15.0" fill="rgb(214,41,7)" rx="2" ry="2" />
<text  x="754.52" y="511.5" ></text>
</g>
<g >
<title>actix_server::worker::Worker::start::{{closure}}::{{closure}} (331 samples, 0.36%)</title><rect x="525.1" y="661" width="4.2" height="15.0" fill="rgb(219,26,5)" rx="2" ry="2" />
<text  x="528.14" y="671.5" ></text>
</g>
<g >
<title>_ioctl (24 samples, 0.03%)</title><rect x="10.6" y="1221" width="0.3" height="15.0" fill="rgb(232,38,49)" rx="2" ry="2" />
<text  x="13.63" y="1231.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp_json_number::{{closure}} (165 samples, 0.18%)</title><rect x="141.9" y="709" width="2.1" height="15.0" fill="rgb(224,70,1)" rx="2" ry="2" />
<text  x="144.90" y="719.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (31 samples, 0.03%)</title><rect x="321.5" y="437" width="0.4" height="15.0" fill="rgb(234,33,11)" rx="2" ry="2" />
<text  x="324.48" y="447.5" ></text>
</g>
<g >
<title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (870 samples, 0.93%)</title><rect x="504.4" y="1237" width="11.0" height="15.0" fill="rgb(213,186,13)" rx="2" ry="2" />
<text  x="507.38" y="1247.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::inner (16 samples, 0.02%)</title><rect x="970.2" y="565" width="0.2" height="15.0" fill="rgb(226,106,43)" rx="2" ry="2" />
<text  x="973.19" y="575.5" ></text>
</g>
<g >
<title>&lt;actix_http::message::Message&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="365.9" y="997" width="0.4" height="15.0" fill="rgb(227,25,45)" rx="2" ry="2" />
<text  x="368.92" y="1007.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessState::is_dropped (23 samples, 0.02%)</title><rect x="814.2" y="757" width="0.3" height="15.0" fill="rgb(229,204,19)" rx="2" ry="2" />
<text  x="817.22" y="767.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function (8 samples, 0.01%)</title><rect x="975.9" y="629" width="0.1" height="15.0" fill="rgb(253,112,10)" rx="2" ry="2" />
<text  x="978.88" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::time::driver::registration::Registration::poll_elapsed::{{closure}}&gt; (10 samples, 0.01%)</title><rect x="677.3" y="933" width="0.1" height="15.0" fill="rgb(231,151,25)" rx="2" ry="2" />
<text  x="680.25" y="943.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="168.3" y="805" width="0.2" height="15.0" fill="rgb(240,133,26)" rx="2" ry="2" />
<text  x="171.33" y="815.5" ></text>
</g>
<g >
<title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (770 samples, 0.83%)</title><rect x="515.4" y="1029" width="9.7" height="15.0" fill="rgb(250,73,12)" rx="2" ry="2" />
<text  x="518.39" y="1039.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (210 samples, 0.23%)</title><rect x="720.0" y="885" width="2.7" height="15.0" fill="rgb(238,228,46)" rx="2" ry="2" />
<text  x="723.04" y="895.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::select (2,072 samples, 2.22%)</title><rect x="1161.3" y="997" width="26.2" height="15.0" fill="rgb(206,101,53)" rx="2" ry="2" />
<text  x="1164.29" y="1007.5" >m..</text>
</g>
<g >
<title>_netif_receive_skb (1,459 samples, 1.57%)</title><rect x="304.6" y="597" width="18.5" height="15.0" fill="rgb(230,134,28)" rx="2" ry="2" />
<text  x="307.63" y="607.5" ></text>
</g>
<g >
<title>core::ptr::read (125 samples, 0.13%)</title><rect x="1039.6" y="229" width="1.5" height="15.0" fill="rgb(248,93,29)" rx="2" ry="2" />
<text  x="1042.57" y="239.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u8 (39 samples, 0.04%)</title><rect x="129.5" y="725" width="0.5" height="15.0" fill="rgb(231,123,52)" rx="2" ry="2" />
<text  x="132.47" y="735.5" ></text>
</g>
<g >
<title>_x64_sys_ioctl (212 samples, 0.23%)</title><rect x="519.8" y="501" width="2.6" height="15.0" fill="rgb(253,130,2)" rx="2" ry="2" />
<text  x="522.76" y="511.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_request (4,330 samples, 4.65%)</title><rect x="10.9" y="1237" width="54.8" height="15.0" fill="rgb(227,170,16)" rx="2" ry="2" />
<text  x="13.94" y="1247.5" >actix..</text>
</g>
<g >
<title>put_prev_task_fair (66 samples, 0.07%)</title><rect x="945.0" y="597" width="0.8" height="15.0" fill="rgb(207,105,27)" rx="2" ry="2" />
<text  x="947.99" y="607.5" ></text>
</g>
<g >
<title>actix_rt::arbiter::Arbiter::spawn (10 samples, 0.01%)</title><rect x="65.7" y="1221" width="0.2" height="15.0" fill="rgb(234,167,23)" rx="2" ry="2" />
<text  x="68.75" y="1231.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="91.5" y="741" width="0.2" height="15.0" fill="rgb(210,87,15)" rx="2" ry="2" />
<text  x="94.48" y="751.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5,351 samples, 5.74%)</title><rect x="371.1" y="997" width="67.8" height="15.0" fill="rgb(232,142,7)" rx="2" ry="2" />
<text  x="374.15" y="1007.5" >&lt;future..</text>
</g>
<g >
<title>tcp_v4_rcv (1,252 samples, 1.34%)</title><rect x="306.6" y="485" width="15.9" height="15.0" fill="rgb(208,163,47)" rx="2" ry="2" />
<text  x="309.64" y="495.5" ></text>
</g>
<g >
<title>tcp_poll (81 samples, 0.09%)</title><rect x="853.0" y="629" width="1.1" height="15.0" fill="rgb(230,182,26)" rx="2" ry="2" />
<text  x="856.04" y="639.5" ></text>
</g>
<g >
<title>dequeue_task_fair (232 samples, 0.25%)</title><rect x="1179.2" y="805" width="2.9" height="15.0" fill="rgb(212,90,24)" rx="2" ry="2" />
<text  x="1182.19" y="815.5" ></text>
</g>
<g >
<title>tokio::time::driver::entry::Entry::set_when_internal (12 samples, 0.01%)</title><rect x="1002.2" y="821" width="0.2" height="15.0" fill="rgb(254,171,23)" rx="2" ry="2" />
<text  x="1005.21" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term (349 samples, 0.37%)</title><rect x="102.1" y="869" width="4.4" height="15.0" fill="rgb(240,24,9)" rx="2" ry="2" />
<text  x="105.05" y="879.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (13 samples, 0.01%)</title><rect x="165.8" y="901" width="0.1" height="15.0" fill="rgb(237,217,31)" rx="2" ry="2" />
<text  x="168.75" y="911.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (5,494 samples, 5.89%)</title><rect x="1014.3" y="853" width="69.5" height="15.0" fill="rgb(240,65,47)" rx="2" ry="2" />
<text  x="1017.27" y="863.5" >std::th..</text>
</g>
<g >
<title>_GI___libc_free (13 samples, 0.01%)</title><rect x="185.1" y="725" width="0.1" height="15.0" fill="rgb(212,145,18)" rx="2" ry="2" />
<text  x="188.08" y="735.5" ></text>
</g>
<g >
<title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,071 samples, 1.15%)</title><rect x="472.8" y="869" width="13.5" height="15.0" fill="rgb(220,112,53)" rx="2" ry="2" />
<text  x="475.77" y="879.5" ></text>
</g>
<g >
<title>_ip_queue_xmit (529 samples, 0.57%)</title><rect x="620.9" y="229" width="6.7" height="15.0" fill="rgb(208,162,33)" rx="2" ry="2" />
<text  x="623.95" y="239.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (30 samples, 0.03%)</title><rect x="37.6" y="1109" width="0.4" height="15.0" fill="rgb(230,16,6)" rx="2" ry="2" />
<text  x="40.62" y="1119.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (44 samples, 0.05%)</title><rect x="362.6" y="917" width="0.6" height="15.0" fill="rgb(252,199,22)" rx="2" ry="2" />
<text  x="365.63" y="927.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (13 samples, 0.01%)</title><rect x="111.9" y="885" width="0.1" height="15.0" fill="rgb(250,228,44)" rx="2" ry="2" />
<text  x="114.88" y="895.5" ></text>
</g>
<g >
<title>rb_insert_color (27 samples, 0.03%)</title><rect x="662.0" y="693" width="0.4" height="15.0" fill="rgb(239,22,38)" rx="2" ry="2" />
<text  x="665.01" y="703.5" ></text>
</g>
<g >
<title>mntget (8 samples, 0.01%)</title><rect x="1149.6" y="773" width="0.1" height="15.0" fill="rgb(242,184,0)" rx="2" ry="2" />
<text  x="1152.61" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::io::poll_evented::PollEvented&lt;mio::net::tcp::TcpStream&gt;&gt; (4,740 samples, 5.08%)</title><rect x="732.8" y="869" width="60.0" height="15.0" fill="rgb(239,78,26)" rx="2" ry="2" />
<text  x="735.83" y="879.5" >core::..</text>
</g>
<g >
<title>tcp_v4_do_rcv (2,261 samples, 2.43%)</title><rect x="613.1" y="341" width="28.6" height="15.0" fill="rgb(253,212,41)" rx="2" ry="2" />
<text  x="616.11" y="351.5" >tc..</text>
</g>
<g >
<title>psi_task_change (221 samples, 0.24%)</title><rect x="1182.2" y="805" width="2.8" height="15.0" fill="rgb(209,21,8)" rx="2" ry="2" />
<text  x="1185.16" y="815.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (33 samples, 0.04%)</title><rect x="1115.9" y="725" width="0.5" height="15.0" fill="rgb(205,6,48)" rx="2" ry="2" />
<text  x="1118.95" y="735.5" ></text>
</g>
<g >
<title>sock_poll (24 samples, 0.03%)</title><rect x="1162.9" y="869" width="0.3" height="15.0" fill="rgb(206,225,41)" rx="2" ry="2" />
<text  x="1165.86" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (85 samples, 0.09%)</title><rect x="12.5" y="997" width="1.0" height="15.0" fill="rgb(218,71,52)" rx="2" ry="2" />
<text  x="15.46" y="1007.5" ></text>
</g>
<g >
<title>[anon] (74 samples, 0.08%)</title><rect x="10.0" y="1269" width="0.9" height="15.0" fill="rgb(214,5,6)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" ></text>
</g>
<g >
<title>default_send_IPI_single_phys (23 samples, 0.02%)</title><rect x="1109.3" y="181" width="0.3" height="15.0" fill="rgb(220,195,47)" rx="2" ry="2" />
<text  x="1112.26" y="191.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (46 samples, 0.05%)</title><rect x="217.4" y="517" width="0.6" height="15.0" fill="rgb(206,179,26)" rx="2" ry="2" />
<text  x="220.40" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::sse2::Group::match_byte (31 samples, 0.03%)</title><rect x="194.9" y="549" width="0.4" height="15.0" fill="rgb(211,171,32)" rx="2" ry="2" />
<text  x="197.90" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;mio::net::tcp::TcpStream&gt; (2,989 samples, 3.21%)</title><rect x="733.0" y="837" width="37.8" height="15.0" fill="rgb(240,224,11)" rx="2" ry="2" />
<text  x="735.99" y="847.5" >cor..</text>
</g>
<g >
<title>___fput (2,328 samples, 2.50%)</title><rect x="739.9" y="645" width="29.5" height="15.0" fill="rgb(221,135,5)" rx="2" ry="2" />
<text  x="742.94" y="655.5" >__..</text>
</g>
<g >
<title>_calc_delta (9 samples, 0.01%)</title><rect x="1180.8" y="757" width="0.1" height="15.0" fill="rgb(206,85,26)" rx="2" ry="2" />
<text  x="1183.77" y="767.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (237 samples, 0.25%)</title><rect x="128.4" y="773" width="3.0" height="15.0" fill="rgb(214,135,43)" rx="2" ry="2" />
<text  x="131.39" y="783.5" ></text>
</g>
<g >
<title>tokio::time::driver::Inner::increment (8 samples, 0.01%)</title><rect x="271.9" y="997" width="0.1" height="15.0" fill="rgb(205,57,9)" rx="2" ry="2" />
<text  x="274.94" y="1007.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set1_epi8 (24 samples, 0.03%)</title><rect x="180.6" y="581" width="0.3" height="15.0" fill="rgb(220,143,26)" rx="2" ry="2" />
<text  x="183.62" y="591.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (20 samples, 0.02%)</title><rect x="402.3" y="869" width="0.2" height="15.0" fill="rgb(213,200,33)" rx="2" ry="2" />
<text  x="405.27" y="879.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.01%)</title><rect x="421.7" y="581" width="0.1" height="15.0" fill="rgb(212,175,46)" rx="2" ry="2" />
<text  x="424.72" y="591.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::with (1,573 samples, 1.69%)</title><rect x="244.1" y="1205" width="19.9" height="15.0" fill="rgb(210,29,51)" rx="2" ry="2" />
<text  x="247.07" y="1215.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="1064.5" y="325" width="0.1" height="15.0" fill="rgb(231,178,5)" rx="2" ry="2" />
<text  x="1067.48" y="335.5" ></text>
</g>
<g >
<title>_x64_sys_shutdown (3,875 samples, 4.16%)</title><rect x="286.4" y="965" width="49.0" height="15.0" fill="rgb(225,12,33)" rx="2" ry="2" />
<text  x="289.39" y="975.5" >_x64..</text>
</g>
<g >
<title>tcp_rate_skb_sent (15 samples, 0.02%)</title><rect x="658.6" y="693" width="0.2" height="15.0" fill="rgb(246,73,25)" rx="2" ry="2" />
<text  x="661.58" y="703.5" ></text>
</g>
<g >
<title>_kfree_skb_flush (24 samples, 0.03%)</title><rect x="594.4" y="485" width="0.3" height="15.0" fill="rgb(211,136,7)" rx="2" ry="2" />
<text  x="597.35" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (85 samples, 0.09%)</title><rect x="12.5" y="1029" width="1.0" height="15.0" fill="rgb(222,65,19)" rx="2" ry="2" />
<text  x="15.46" y="1039.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (44 samples, 0.05%)</title><rect x="1022.8" y="565" width="0.5" height="15.0" fill="rgb(252,5,39)" rx="2" ry="2" />
<text  x="1025.78" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.01%)</title><rect x="815.2" y="725" width="0.1" height="15.0" fill="rgb(217,8,46)" rx="2" ry="2" />
<text  x="818.22" y="735.5" ></text>
</g>
<g >
<title>_sock_release (25 samples, 0.03%)</title><rect x="1158.5" y="757" width="0.3" height="15.0" fill="rgb(210,145,22)" rx="2" ry="2" />
<text  x="1161.47" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::other::{{closure}} (11 samples, 0.01%)</title><rect x="119.4" y="805" width="0.1" height="15.0" fill="rgb(232,146,26)" rx="2" ry="2" />
<text  x="122.39" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt;&gt; (991 samples, 1.06%)</title><rect x="382.7" y="773" width="12.5" height="15.0" fill="rgb(244,54,37)" rx="2" ry="2" />
<text  x="385.68" y="783.5" ></text>
</g>
<g >
<title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="38.6" y="1029" width="0.2" height="15.0" fill="rgb(238,170,40)" rx="2" ry="2" />
<text  x="41.57" y="1039.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,071 samples, 1.15%)</title><rect x="472.8" y="709" width="13.5" height="15.0" fill="rgb(205,136,41)" rx="2" ry="2" />
<text  x="475.77" y="719.5" ></text>
</g>
<g >
<title>&lt;actix_web::handler::ExtractService&lt;T,S&gt; as actix_service::Service&gt;::call (286 samples, 0.31%)</title><rect x="348.5" y="917" width="3.6" height="15.0" fill="rgb(237,212,13)" rx="2" ry="2" />
<text  x="351.49" y="927.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (88 samples, 0.09%)</title><rect x="470.2" y="821" width="1.2" height="15.0" fill="rgb(211,218,4)" rx="2" ry="2" />
<text  x="473.24" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (78 samples, 0.08%)</title><rect x="242.4" y="677" width="1.0" height="15.0" fill="rgb(252,217,42)" rx="2" ry="2" />
<text  x="245.37" y="687.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,006 samples, 1.08%)</title><rect x="53.0" y="1141" width="12.7" height="15.0" fill="rgb(226,209,22)" rx="2" ry="2" />
<text  x="56.01" y="1151.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (19 samples, 0.02%)</title><rect x="972.0" y="597" width="0.2" height="15.0" fill="rgb(236,217,46)" rx="2" ry="2" />
<text  x="974.96" y="607.5" ></text>
</g>
<g >
<title>bytes::bytes::Bytes::copy_from_slice (119 samples, 0.13%)</title><rect x="12.1" y="1109" width="1.5" height="15.0" fill="rgb(214,160,20)" rx="2" ry="2" />
<text  x="15.09" y="1119.5" ></text>
</g>
<g >
<title>update_min_vruntime (16 samples, 0.02%)</title><rect x="924.8" y="533" width="0.2" height="15.0" fill="rgb(227,120,1)" rx="2" ry="2" />
<text  x="927.77" y="543.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (112 samples, 0.12%)</title><rect x="162.9" y="677" width="1.4" height="15.0" fill="rgb(232,21,17)" rx="2" ry="2" />
<text  x="165.91" y="687.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="429.4" y="693" width="0.1" height="15.0" fill="rgb(239,174,13)" rx="2" ry="2" />
<text  x="432.36" y="703.5" ></text>
</g>
<g >
<title>_dev_queue_xmit (227 samples, 0.24%)</title><rect x="624.1" y="117" width="2.9" height="15.0" fill="rgb(209,182,45)" rx="2" ry="2" />
<text  x="627.09" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (38 samples, 0.04%)</title><rect x="537.9" y="885" width="0.5" height="15.0" fill="rgb(209,10,29)" rx="2" ry="2" />
<text  x="540.88" y="895.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (32 samples, 0.03%)</title><rect x="754.5" y="517" width="0.4" height="15.0" fill="rgb(215,206,7)" rx="2" ry="2" />
<text  x="757.48" y="527.5" ></text>
</g>
<g >
<title>_wake_up_sync_key (80 samples, 0.09%)</title><rect x="315.5" y="389" width="1.0" height="15.0" fill="rgb(222,69,26)" rx="2" ry="2" />
<text  x="318.47" y="399.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (19 samples, 0.02%)</title><rect x="413.8" y="757" width="0.3" height="15.0" fill="rgb(224,175,20)" rx="2" ry="2" />
<text  x="416.84" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term (219 samples, 0.23%)</title><rect x="90.4" y="853" width="2.8" height="15.0" fill="rgb(229,33,39)" rx="2" ry="2" />
<text  x="93.43" y="863.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (38 samples, 0.04%)</title><rect x="111.4" y="837" width="0.5" height="15.0" fill="rgb(235,105,43)" rx="2" ry="2" />
<text  x="114.39" y="847.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::selector_impl::JsonSelector as jsonpath_lib::paths::parser_token_handler::ParserTokenHandler&gt;::handle (869 samples, 0.93%)</title><rect x="407.7" y="837" width="11.0" height="15.0" fill="rgb(240,215,54)" rx="2" ry="2" />
<text  x="410.70" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (141 samples, 0.15%)</title><rect x="720.9" y="821" width="1.8" height="15.0" fill="rgb(210,95,44)" rx="2" ry="2" />
<text  x="723.91" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (96 samples, 0.10%)</title><rect x="1027.7" y="629" width="1.2" height="15.0" fill="rgb(247,85,10)" rx="2" ry="2" />
<text  x="1030.69" y="639.5" ></text>
</g>
<g >
<title>tokio::time::clock::Clock::now (31 samples, 0.03%)</title><rect x="991.3" y="837" width="0.4" height="15.0" fill="rgb(234,151,37)" rx="2" ry="2" />
<text  x="994.34" y="847.5" ></text>
</g>
<g >
<title>try_to_wake_up (938 samples, 1.01%)</title><rect x="1098.8" y="277" width="11.9" height="15.0" fill="rgb(217,160,14)" rx="2" ry="2" />
<text  x="1101.80" y="287.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::tick (331 samples, 0.36%)</title><rect x="525.1" y="981" width="4.2" height="15.0" fill="rgb(238,82,4)" rx="2" ry="2" />
<text  x="528.14" y="991.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::tcp::TcpStream as std::io::Read&gt;::read (1,906 samples, 2.04%)</title><rect x="683.7" y="917" width="24.2" height="15.0" fill="rgb(246,162,48)" rx="2" ry="2" />
<text  x="686.74" y="927.5" >&lt;..</text>
</g>
<g >
<title>int_malloc (58 samples, 0.06%)</title><rect x="145.0" y="613" width="0.7" height="15.0" fill="rgb(208,18,36)" rx="2" ry="2" />
<text  x="147.96" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="137.2" y="869" width="0.3" height="15.0" fill="rgb(213,207,14)" rx="2" ry="2" />
<text  x="140.15" y="879.5" ></text>
</g>
<g >
<title>_fget_files (46 samples, 0.05%)</title><rect x="247.5" y="549" width="0.6" height="15.0" fill="rgb(244,95,25)" rx="2" ry="2" />
<text  x="250.52" y="559.5" ></text>
</g>
<g >
<title>update_curr (395 samples, 0.42%)</title><rect x="920.0" y="549" width="5.0" height="15.0" fill="rgb(239,31,36)" rx="2" ry="2" />
<text  x="922.97" y="559.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (8 samples, 0.01%)</title><rect x="188.9" y="597" width="0.1" height="15.0" fill="rgb(236,132,28)" rx="2" ry="2" />
<text  x="191.89" y="607.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (62 samples, 0.07%)</title><rect x="143.2" y="645" width="0.8" height="15.0" fill="rgb(228,192,18)" rx="2" ry="2" />
<text  x="146.21" y="655.5" ></text>
</g>
<g >
<title>_fget_files (20 samples, 0.02%)</title><rect x="1119.2" y="789" width="0.2" height="15.0" fill="rgb(242,121,50)" rx="2" ry="2" />
<text  x="1122.18" y="799.5" ></text>
</g>
<g >
<title>int_free (50 samples, 0.05%)</title><rect x="384.2" y="645" width="0.6" height="15.0" fill="rgb(218,135,40)" rx="2" ry="2" />
<text  x="387.21" y="655.5" ></text>
</g>
<g >
<title>migrate_enable (12 samples, 0.01%)</title><rect x="507.9" y="581" width="0.2" height="15.0" fill="rgb(234,92,13)" rx="2" ry="2" />
<text  x="510.95" y="591.5" ></text>
</g>
<g >
<title>_x64_sys_getpeername (545 samples, 0.58%)</title><rect x="505.6" y="645" width="6.9" height="15.0" fill="rgb(230,188,9)" rx="2" ry="2" />
<text  x="508.62" y="655.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::borrow_mut (32 samples, 0.03%)</title><rect x="1067.3" y="293" width="0.4" height="15.0" fill="rgb(212,47,37)" rx="2" ry="2" />
<text  x="1070.28" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (22 samples, 0.02%)</title><rect x="352.7" y="949" width="0.3" height="15.0" fill="rgb(209,82,39)" rx="2" ry="2" />
<text  x="355.69" y="959.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (30 samples, 0.03%)</title><rect x="1087.9" y="981" width="0.4" height="15.0" fill="rgb(207,9,44)" rx="2" ry="2" />
<text  x="1090.87" y="991.5" ></text>
</g>
<g >
<title>apparmor_file_permission (90 samples, 0.10%)</title><rect x="830.4" y="565" width="1.2" height="15.0" fill="rgb(246,184,0)" rx="2" ry="2" />
<text  x="833.42" y="575.5" ></text>
</g>
<g >
<title>d_set_d_op (11 samples, 0.01%)</title><rect x="1145.6" y="741" width="0.1" height="15.0" fill="rgb(252,161,36)" rx="2" ry="2" />
<text  x="1148.56" y="751.5" ></text>
</g>
<g >
<title>_fget_light (33 samples, 0.04%)</title><rect x="705.4" y="741" width="0.5" height="15.0" fill="rgb(251,31,47)" rx="2" ry="2" />
<text  x="708.45" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (42 samples, 0.05%)</title><rect x="127.7" y="757" width="0.6" height="15.0" fill="rgb(251,96,37)" rx="2" ry="2" />
<text  x="130.74" y="767.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (156 samples, 0.17%)</title><rect x="278.4" y="997" width="2.0" height="15.0" fill="rgb(222,104,19)" rx="2" ry="2" />
<text  x="281.40" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (37 samples, 0.04%)</title><rect x="808.9" y="757" width="0.5" height="15.0" fill="rgb(249,26,1)" rx="2" ry="2" />
<text  x="811.93" y="767.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (21 samples, 0.02%)</title><rect x="344.0" y="965" width="0.3" height="15.0" fill="rgb(254,167,47)" rx="2" ry="2" />
<text  x="346.99" y="975.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (412 samples, 0.44%)</title><rect x="1037.6" y="325" width="5.2" height="15.0" fill="rgb(215,11,3)" rx="2" ry="2" />
<text  x="1040.58" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (49 samples, 0.05%)</title><rect x="126.4" y="773" width="0.6" height="15.0" fill="rgb(225,38,29)" rx="2" ry="2" />
<text  x="129.42" y="783.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (47 samples, 0.05%)</title><rect x="274.1" y="965" width="0.6" height="15.0" fill="rgb(241,142,13)" rx="2" ry="2" />
<text  x="277.12" y="975.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.02%)</title><rect x="1070.2" y="485" width="0.3" height="15.0" fill="rgb(212,192,27)" rx="2" ry="2" />
<text  x="1073.24" y="495.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (46 samples, 0.05%)</title><rect x="36.7" y="1125" width="0.6" height="15.0" fill="rgb(242,122,22)" rx="2" ry="2" />
<text  x="39.70" y="1135.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::array_start (3,521 samples, 3.78%)</title><rect x="68.2" y="949" width="44.6" height="15.0" fill="rgb(242,118,52)" rx="2" ry="2" />
<text  x="71.19" y="959.5" >json..</text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::cmp::CmpOr as jsonpath_lib::selector::cmp::Cmp&gt;::cmp_json (294 samples, 0.32%)</title><rect x="166.8" y="869" width="3.8" height="15.0" fill="rgb(252,40,21)" rx="2" ry="2" />
<text  x="169.84" y="879.5" ></text>
</g>
<g >
<title>_fdget (50 samples, 0.05%)</title><rect x="247.5" y="581" width="0.6" height="15.0" fill="rgb(248,109,52)" rx="2" ry="2" />
<text  x="250.51" y="591.5" ></text>
</g>
<g >
<title>unlink_chunk (17 samples, 0.02%)</title><rect x="243.1" y="485" width="0.3" height="15.0" fill="rgb(212,54,12)" rx="2" ry="2" />
<text  x="246.14" y="495.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (13 samples, 0.01%)</title><rect x="273.0" y="917" width="0.2" height="15.0" fill="rgb(220,194,17)" rx="2" ry="2" />
<text  x="276.03" y="927.5" ></text>
</g>
<g >
<title>update_rq_clock (9 samples, 0.01%)</title><rect x="948.6" y="613" width="0.1" height="15.0" fill="rgb(235,177,17)" rx="2" ry="2" />
<text  x="951.56" y="623.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (45 samples, 0.05%)</title><rect x="272.1" y="965" width="0.5" height="15.0" fill="rgb(232,205,2)" rx="2" ry="2" />
<text  x="275.06" y="975.5" ></text>
</g>
<g >
<title>hashbrown::raw::bucket_mask_to_capacity (8 samples, 0.01%)</title><rect x="38.4" y="965" width="0.1" height="15.0" fill="rgb(209,174,19)" rx="2" ry="2" />
<text  x="41.38" y="975.5" ></text>
</g>
<g >
<title>update_min_vruntime (8 samples, 0.01%)</title><rect x="1181.9" y="773" width="0.1" height="15.0" fill="rgb(233,128,37)" rx="2" ry="2" />
<text  x="1184.89" y="783.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::from_std (668 samples, 0.72%)</title><rect x="516.7" y="629" width="8.4" height="15.0" fill="rgb(243,196,39)" rx="2" ry="2" />
<text  x="519.67" y="639.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1,071 samples, 1.15%)</title><rect x="472.8" y="885" width="13.5" height="15.0" fill="rgb(240,93,50)" rx="2" ry="2" />
<text  x="475.77" y="895.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (16 samples, 0.02%)</title><rect x="792.6" y="693" width="0.2" height="15.0" fill="rgb(232,182,32)" rx="2" ry="2" />
<text  x="795.59" y="703.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.02%)</title><rect x="216.2" y="501" width="0.2" height="15.0" fill="rgb(241,4,2)" rx="2" ry="2" />
<text  x="219.16" y="511.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::enter (331 samples, 0.36%)</title><rect x="525.1" y="1237" width="4.2" height="15.0" fill="rgb(238,180,23)" rx="2" ry="2" />
<text  x="528.14" y="1247.5" ></text>
</g>
<g >
<title>ep_poll_callback (71 samples, 0.08%)</title><rect x="289.3" y="837" width="0.9" height="15.0" fill="rgb(253,35,50)" rx="2" ry="2" />
<text  x="292.31" y="847.5" ></text>
</g>
<g >
<title>&lt;actix_utils::counter::CounterGuard as core::ops::drop::Drop&gt;::drop (59 samples, 0.06%)</title><rect x="475.8" y="469" width="0.7" height="15.0" fill="rgb(245,181,38)" rx="2" ry="2" />
<text  x="478.78" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;jsonpath_lib::paths::tokens::ParseToken&gt;&gt; (26 samples, 0.03%)</title><rect x="132.2" y="901" width="0.3" height="15.0" fill="rgb(216,105,48)" rx="2" ry="2" />
<text  x="135.19" y="911.5" ></text>
</g>
<g >
<title>__slab_alloc (55 samples, 0.06%)</title><rect x="1134.6" y="709" width="0.7" height="15.0" fill="rgb(239,132,54)" rx="2" ry="2" />
<text  x="1137.59" y="719.5" ></text>
</g>
<g >
<title>native_read_msr (171 samples, 0.18%)</title><rect x="1176.6" y="741" width="2.2" height="15.0" fill="rgb(216,68,33)" rx="2" ry="2" />
<text  x="1179.59" y="751.5" ></text>
</g>
<g >
<title>&lt;dyn core::any::Any&gt;::is (51 samples, 0.05%)</title><rect x="350.0" y="789" width="0.7" height="15.0" fill="rgb(222,97,19)" rx="2" ry="2" />
<text  x="353.01" y="799.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::wakeup (1,769 samples, 1.90%)</title><rect x="1092.0" y="741" width="22.4" height="15.0" fill="rgb(211,153,21)" rx="2" ry="2" />
<text  x="1095.00" y="751.5" >t..</text>
</g>
<g >
<title>_fget_files (62 samples, 0.07%)</title><rect x="774.7" y="613" width="0.8" height="15.0" fill="rgb(215,10,30)" rx="2" ry="2" />
<text  x="777.67" y="623.5" ></text>
</g>
<g >
<title>_rust_alloc (11 samples, 0.01%)</title><rect x="77.9" y="805" width="0.2" height="15.0" fill="rgb(237,83,41)" rx="2" ry="2" />
<text  x="80.94" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::is_last_before_token_match (54 samples, 0.06%)</title><rect x="416.5" y="805" width="0.7" height="15.0" fill="rgb(206,195,0)" rx="2" ry="2" />
<text  x="419.54" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::result::Result&lt;std::sync::mutex::MutexGuard&lt; (35 samples, 0.04%)</title><rect x="788.8" y="773" width="0.4" height="15.0" fill="rgb(221,131,15)" rx="2" ry="2" />
<text  x="791.80" y="783.5" ></text>
</g>
<g >
<title>tokio::time::wheel::Wheel&lt;T&gt;::poll (214 samples, 0.23%)</title><rect x="992.4" y="837" width="2.7" height="15.0" fill="rgb(232,109,0)" rx="2" ry="2" />
<text  x="995.35" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="132.2" y="869" width="0.2" height="15.0" fill="rgb(232,44,24)" rx="2" ry="2" />
<text  x="135.19" y="879.5" ></text>
</g>
<g >
<title>sock_def_wakeup (22 samples, 0.02%)</title><rect x="315.0" y="421" width="0.3" height="15.0" fill="rgb(207,137,11)" rx="2" ry="2" />
<text  x="318.03" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (26 samples, 0.03%)</title><rect x="170.6" y="917" width="0.3" height="15.0" fill="rgb(232,96,28)" rx="2" ry="2" />
<text  x="173.60" y="927.5" ></text>
</g>
<g >
<title>tinyvec::arrayvec::ArrayVec&lt;A&gt;::push (27 samples, 0.03%)</title><rect x="368.4" y="1013" width="0.4" height="15.0" fill="rgb(216,70,51)" rx="2" ry="2" />
<text  x="371.44" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (149 samples, 0.16%)</title><rect x="168.7" y="789" width="1.8" height="15.0" fill="rgb(237,126,41)" rx="2" ry="2" />
<text  x="171.66" y="799.5" ></text>
</g>
<g >
<title>core::cell::BorrowRefMut::new (11 samples, 0.01%)</title><rect x="377.0" y="757" width="0.1" height="15.0" fill="rgb(250,57,4)" rx="2" ry="2" />
<text  x="380.00" y="767.5" ></text>
</g>
<g >
<title>validate_xmit_skb (43 samples, 0.05%)</title><rect x="326.1" y="677" width="0.5" height="15.0" fill="rgb(222,227,47)" rx="2" ry="2" />
<text  x="329.10" y="687.5" ></text>
</g>
<g >
<title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (23 samples, 0.02%)</title><rect x="435.9" y="949" width="0.3" height="15.0" fill="rgb(233,71,29)" rx="2" ry="2" />
<text  x="438.92" y="959.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::select_as_str (2,560 samples, 2.75%)</title><rect x="402.8" y="901" width="32.4" height="15.0" fill="rgb(248,139,29)" rx="2" ry="2" />
<text  x="405.83" y="911.5" >js..</text>
</g>
<g >
<title>tokio::runtime::task::state::State::new (12 samples, 0.01%)</title><rect x="503.0" y="1077" width="0.2" height="15.0" fill="rgb(208,161,39)" rx="2" ry="2" />
<text  x="506.02" y="1087.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (8 samples, 0.01%)</title><rect x="1164.7" y="757" width="0.1" height="15.0" fill="rgb(218,228,51)" rx="2" ry="2" />
<text  x="1167.67" y="767.5" ></text>
</g>
<g >
<title>_rust_dealloc (13 samples, 0.01%)</title><rect x="388.1" y="549" width="0.1" height="15.0" fill="rgb(226,208,17)" rx="2" ry="2" />
<text  x="391.06" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::time::driver::entry::Entry&gt;&gt;&gt; (14 samples, 0.02%)</title><rect x="1004.7" y="773" width="0.1" height="15.0" fill="rgb(249,6,2)" rx="2" ry="2" />
<text  x="1007.67" y="783.5" ></text>
</g>
<g >
<title>map_id_range_down (9 samples, 0.01%)</title><rect x="1131.8" y="725" width="0.1" height="15.0" fill="rgb(242,103,17)" rx="2" ry="2" />
<text  x="1134.83" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (158 samples, 0.17%)</title><rect x="189.5" y="613" width="2.0" height="15.0" fill="rgb(237,93,25)" rx="2" ry="2" />
<text  x="192.54" y="623.5" ></text>
</g>
<g >
<title>http::header::name::parse_hdr (199 samples, 0.21%)</title><rect x="33.5" y="1141" width="2.5" height="15.0" fill="rgb(245,221,40)" rx="2" ry="2" />
<text  x="36.48" y="1151.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (81 samples, 0.09%)</title><rect x="54.6" y="773" width="1.1" height="15.0" fill="rgb(226,164,2)" rx="2" ry="2" />
<text  x="57.65" y="783.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (11 samples, 0.01%)</title><rect x="217.1" y="549" width="0.2" height="15.0" fill="rgb(214,42,43)" rx="2" ry="2" />
<text  x="220.13" y="559.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (114 samples, 0.12%)</title><rect x="161.3" y="677" width="1.4" height="15.0" fill="rgb(205,165,20)" rx="2" ry="2" />
<text  x="164.28" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::filter_next_with_str::{{closure}}::{{closure}} (133 samples, 0.14%)</title><rect x="187.4" y="693" width="1.7" height="15.0" fill="rgb(225,152,12)" rx="2" ry="2" />
<text  x="190.41" y="703.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::register (1,467 samples, 1.57%)</title><rect x="245.1" y="677" width="18.6" height="15.0" fill="rgb(224,224,32)" rx="2" ry="2" />
<text  x="248.14" y="687.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::as_usize (33 samples, 0.04%)</title><rect x="233.9" y="1077" width="0.4" height="15.0" fill="rgb(248,194,23)" rx="2" ry="2" />
<text  x="236.87" y="1087.5" ></text>
</g>
<g >
<title>sock_poll (178 samples, 0.19%)</title><rect x="851.9" y="645" width="2.3" height="15.0" fill="rgb(237,164,15)" rx="2" ry="2" />
<text  x="854.90" y="655.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueue::poll (78 samples, 0.08%)</title><rect x="1032.8" y="517" width="1.0" height="15.0" fill="rgb(229,106,45)" rx="2" ry="2" />
<text  x="1035.77" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (59 samples, 0.06%)</title><rect x="341.1" y="917" width="0.8" height="15.0" fill="rgb(225,225,22)" rx="2" ry="2" />
<text  x="344.11" y="927.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::poll_read_priv (55 samples, 0.06%)</title><rect x="243.4" y="1109" width="0.7" height="15.0" fill="rgb(207,124,2)" rx="2" ry="2" />
<text  x="246.37" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::time::driver::entry::Entry&gt; (38 samples, 0.04%)</title><rect x="997.3" y="789" width="0.5" height="15.0" fill="rgb(237,105,15)" rx="2" ry="2" />
<text  x="1000.27" y="799.5" ></text>
</g>
<g >
<title>futures_util::future::future::FutureExt::boxed_local (21 samples, 0.02%)</title><rect x="352.1" y="917" width="0.3" height="15.0" fill="rgb(234,26,12)" rx="2" ry="2" />
<text  x="355.11" y="927.5" ></text>
</g>
<g >
<title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,006 samples, 1.08%)</title><rect x="53.0" y="1173" width="12.7" height="15.0" fill="rgb(216,222,34)" rx="2" ry="2" />
<text  x="56.01" y="1183.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 0.03%)</title><rect x="36.7" y="1061" width="0.4" height="15.0" fill="rgb(235,175,5)" rx="2" ry="2" />
<text  x="39.70" y="1071.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::tick::{{closure}} (1,071 samples, 1.15%)</title><rect x="472.8" y="757" width="13.5" height="15.0" fill="rgb(213,166,24)" rx="2" ry="2" />
<text  x="475.77" y="767.5" ></text>
</g>
<g >
<title>_cgroup_bpf_run_filter_skb (93 samples, 0.10%)</title><rect x="609.6" y="325" width="1.1" height="15.0" fill="rgb(214,197,18)" rx="2" ry="2" />
<text  x="612.57" y="335.5" ></text>
</g>
<g >
<title>destroy_inode (284 samples, 0.30%)</title><rect x="750.0" y="533" width="3.6" height="15.0" fill="rgb(221,32,54)" rx="2" ry="2" />
<text  x="753.03" y="543.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::extend_from_slice (29 samples, 0.03%)</title><rect x="441.5" y="965" width="0.3" height="15.0" fill="rgb(247,210,27)" rx="2" ry="2" />
<text  x="444.46" y="975.5" ></text>
</g>
<g >
<title>core::mem::drop (11 samples, 0.01%)</title><rect x="1044.0" y="117" width="0.2" height="15.0" fill="rgb(223,125,3)" rx="2" ry="2" />
<text  x="1047.02" y="127.5" ></text>
</g>
<g >
<title>&lt;actix_http::request::Request as actix_http::h1::decoder::MessageType&gt;::decode (3,324 samples, 3.57%)</title><rect x="10.9" y="1189" width="42.1" height="15.0" fill="rgb(254,88,37)" rx="2" ry="2" />
<text  x="13.94" y="1199.5" >&lt;ac..</text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (33 samples, 0.04%)</title><rect x="1115.9" y="901" width="0.5" height="15.0" fill="rgb(223,0,18)" rx="2" ry="2" />
<text  x="1118.95" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.02%)</title><rect x="435.1" y="725" width="0.1" height="15.0" fill="rgb(210,26,18)" rx="2" ry="2" />
<text  x="438.06" y="735.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (14 samples, 0.02%)</title><rect x="218.1" y="581" width="0.2" height="15.0" fill="rgb(237,30,11)" rx="2" ry="2" />
<text  x="221.12" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::{{closure}}::{{closure}} (770 samples, 0.83%)</title><rect x="515.4" y="1125" width="9.7" height="15.0" fill="rgb(206,154,13)" rx="2" ry="2" />
<text  x="518.39" y="1135.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="154.3" y="581" width="0.2" height="15.0" fill="rgb(249,160,11)" rx="2" ry="2" />
<text  x="157.34" y="591.5" ></text>
</g>
<g >
<title>&lt;actix_service::and_then::AndThenService&lt;A,B&gt; as actix_service::Service&gt;::call (680 samples, 0.73%)</title><rect x="504.4" y="853" width="8.6" height="15.0" fill="rgb(216,68,54)" rx="2" ry="2" />
<text  x="507.38" y="863.5" ></text>
</g>
<g >
<title>actix_http::extensions::Extensions::get::{{closure}} (51 samples, 0.05%)</title><rect x="350.0" y="821" width="0.7" height="15.0" fill="rgb(213,131,2)" rx="2" ry="2" />
<text  x="353.01" y="831.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (12 samples, 0.01%)</title><rect x="1122.5" y="805" width="0.1" height="15.0" fill="rgb(225,90,9)" rx="2" ry="2" />
<text  x="1125.49" y="815.5" ></text>
</g>
<g >
<title>tokio::util::slab::page::Shared&lt;T&gt;::alloc (29 samples, 0.03%)</title><rect x="515.0" y="725" width="0.4" height="15.0" fill="rgb(251,148,39)" rx="2" ry="2" />
<text  x="518.02" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;&lt;actix_server::service::StreamService&lt;actix_service::and_then::AndThenService&lt;actix_service::fn_service::FnService&lt;actix_http::service::HttpService&lt;tokio::net::tcp::stream::TcpStream,actix_service::map_config::MapConfig&lt;actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::server::HttpServer&lt;rust_actix_jsonpath_bench::main::{{closure}}::{{closure}},actix_web::app::App&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_http::body::Body&gt;::listen::{{closure}}::{{closure}}, (56 samples, 0.06%)</title><rect x="1043.5" y="261" width="0.8" height="15.0" fill="rgb(247,167,37)" rx="2" ry="2" />
<text  x="1046.54" y="271.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::read (14 samples, 0.02%)</title><rect x="239.2" y="869" width="0.2" height="15.0" fill="rgb(207,103,48)" rx="2" ry="2" />
<text  x="242.25" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;&lt;actix_server::service::StreamService&lt;actix_service::and_then::AndThenService&lt;actix_service::fn_service::FnService&lt;actix_http::service::HttpService&lt;tokio::net::tcp::stream::TcpStream,actix_service::map_config::MapConfig&lt;actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::server::HttpServer&lt;rust_actix_jsonpath_bench::main::{{closure}}::{{closure}},actix_web::app::App&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_http::body::Body&gt;::listen::{{closure}}::{{closure}}, (54 samples, 0.06%)</title><rect x="1043.6" y="245" width="0.7" height="15.0" fill="rgb(221,19,36)" rx="2" ry="2" />
<text  x="1046.57" y="255.5" ></text>
</g>
<g >
<title>&lt;actix_server::service::StreamService&lt;T&gt; as actix_service::Service&gt;::call (770 samples, 0.83%)</title><rect x="515.4" y="661" width="9.7" height="15.0" fill="rgb(232,44,44)" rx="2" ry="2" />
<text  x="518.39" y="671.5" ></text>
</g>
<g >
<title>tcp_established_options (25 samples, 0.03%)</title><rect x="658.1" y="693" width="0.3" height="15.0" fill="rgb(246,165,10)" rx="2" ry="2" />
<text  x="661.10" y="703.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (408 samples, 0.44%)</title><rect x="968.4" y="725" width="5.2" height="15.0" fill="rgb(251,36,51)" rx="2" ry="2" />
<text  x="971.41" y="735.5" ></text>
</g>
<g >
<title>actix_utils::counter::CounterInner::available (21 samples, 0.02%)</title><rect x="1068.0" y="309" width="0.3" height="15.0" fill="rgb(237,144,25)" rx="2" ry="2" />
<text  x="1071.01" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (46 samples, 0.05%)</title><rect x="217.4" y="501" width="0.6" height="15.0" fill="rgb(247,167,50)" rx="2" ry="2" />
<text  x="220.40" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (37 samples, 0.04%)</title><rect x="229.3" y="869" width="0.5" height="15.0" fill="rgb(247,204,44)" rx="2" ry="2" />
<text  x="232.32" y="879.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (17 samples, 0.02%)</title><rect x="412.1" y="725" width="0.2" height="15.0" fill="rgb(254,66,7)" rx="2" ry="2" />
<text  x="415.06" y="735.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (156 samples, 0.17%)</title><rect x="278.4" y="965" width="2.0" height="15.0" fill="rgb(240,64,15)" rx="2" ry="2" />
<text  x="281.40" y="975.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (18 samples, 0.02%)</title><rect x="867.9" y="533" width="0.3" height="15.0" fill="rgb(242,96,42)" rx="2" ry="2" />
<text  x="870.94" y="543.5" ></text>
</g>
<g >
<title>psi_task_change (823 samples, 0.88%)</title><rect x="929.6" y="581" width="10.4" height="15.0" fill="rgb(217,85,41)" rx="2" ry="2" />
<text  x="932.56" y="591.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="1078.9" y="613" width="0.2" height="15.0" fill="rgb(210,62,14)" rx="2" ry="2" />
<text  x="1081.86" y="623.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::read (2,504 samples, 2.69%)</title><rect x="681.6" y="997" width="31.7" height="15.0" fill="rgb(254,51,35)" rx="2" ry="2" />
<text  x="684.61" y="1007.5" >ac..</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::filter (3,409 samples, 3.66%)</title><rect x="69.4" y="933" width="43.2" height="15.0" fill="rgb(231,213,26)" rx="2" ry="2" />
<text  x="72.43" y="943.5" >json..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParserNode&gt; (820 samples, 0.88%)</title><rect x="384.8" y="693" width="10.4" height="15.0" fill="rgb(239,138,47)" rx="2" ry="2" />
<text  x="387.84" y="703.5" ></text>
</g>
<g >
<title>delay_halt_mwaitx (418 samples, 0.45%)</title><rect x="1165.8" y="709" width="5.3" height="15.0" fill="rgb(238,116,18)" rx="2" ry="2" />
<text  x="1168.81" y="719.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (12 samples, 0.01%)</title><rect x="146.7" y="661" width="0.1" height="15.0" fill="rgb(217,167,53)" rx="2" ry="2" />
<text  x="149.67" y="671.5" ></text>
</g>
<g >
<title>do_softirq (4,275 samples, 4.59%)</title><rect x="591.2" y="565" width="54.1" height="15.0" fill="rgb(240,138,1)" rx="2" ry="2" />
<text  x="594.15" y="575.5" >do_so..</text>
</g>
<g >
<title>process_backlog (3,955 samples, 4.24%)</title><rect x="594.7" y="485" width="50.0" height="15.0" fill="rgb(208,119,0)" rx="2" ry="2" />
<text  x="597.68" y="495.5" >proce..</text>
</g>
<g >
<title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (24 samples, 0.03%)</title><rect x="180.6" y="613" width="0.3" height="15.0" fill="rgb(252,55,32)" rx="2" ry="2" />
<text  x="183.62" y="623.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (25 samples, 0.03%)</title><rect x="462.4" y="933" width="0.4" height="15.0" fill="rgb(243,76,21)" rx="2" ry="2" />
<text  x="465.44" y="943.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::is_bound (19 samples, 0.02%)</title><rect x="1071.0" y="533" width="0.3" height="15.0" fill="rgb(207,211,37)" rx="2" ry="2" />
<text  x="1074.02" y="543.5" ></text>
</g>
<g >
<title>core::cmp::PartialOrd::lt (24 samples, 0.03%)</title><rect x="272.6" y="981" width="0.3" height="15.0" fill="rgb(224,223,29)" rx="2" ry="2" />
<text  x="275.63" y="991.5" ></text>
</g>
<g >
<title>do_epoll_ctl (1,297 samples, 1.39%)</title><rect x="246.5" y="597" width="16.4" height="15.0" fill="rgb(220,70,39)" rx="2" ry="2" />
<text  x="249.51" y="607.5" ></text>
</g>
<g >
<title>import_single_range (19 samples, 0.02%)</title><rect x="706.1" y="773" width="0.2" height="15.0" fill="rgb(237,100,0)" rx="2" ry="2" />
<text  x="709.09" y="783.5" ></text>
</g>
<g >
<title>_default_send_IPI_dest_field (19 samples, 0.02%)</title><rect x="1109.3" y="165" width="0.3" height="15.0" fill="rgb(217,23,4)" rx="2" ry="2" />
<text  x="1112.31" y="175.5" ></text>
</g>
<g >
<title>int_realloc (173 samples, 0.19%)</title><rect x="156.7" y="629" width="2.2" height="15.0" fill="rgb(230,8,25)" rx="2" ry="2" />
<text  x="159.67" y="639.5" ></text>
</g>
<g >
<title>raw_spin_lock_irqsave (11 samples, 0.01%)</title><rect x="331.2" y="757" width="0.1" height="15.0" fill="rgb(254,30,39)" rx="2" ry="2" />
<text  x="334.17" y="767.5" ></text>
</g>
<g >
<title>&lt;actix_service::and_then::AndThenService&lt;A,B&gt; as actix_service::Service&gt;::call (101 samples, 0.11%)</title><rect x="515.4" y="645" width="1.3" height="15.0" fill="rgb(216,93,18)" rx="2" ry="2" />
<text  x="518.39" y="655.5" ></text>
</g>
<g >
<title>release_sock (28 samples, 0.03%)</title><rect x="690.1" y="709" width="0.4" height="15.0" fill="rgb(206,100,1)" rx="2" ry="2" />
<text  x="693.10" y="719.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_ready (165 samples, 0.18%)</title><rect x="336.9" y="1029" width="2.1" height="15.0" fill="rgb(236,140,2)" rx="2" ry="2" />
<text  x="339.88" y="1039.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.01%)</title><rect x="121.6" y="933" width="0.1" height="15.0" fill="rgb(208,169,31)" rx="2" ry="2" />
<text  x="124.58" y="943.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::and_then (22 samples, 0.02%)</title><rect x="983.1" y="773" width="0.3" height="15.0" fill="rgb(211,118,25)" rx="2" ry="2" />
<text  x="986.12" y="783.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (11 samples, 0.01%)</title><rect x="523.0" y="549" width="0.2" height="15.0" fill="rgb(251,168,49)" rx="2" ry="2" />
<text  x="526.01" y="559.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (45 samples, 0.05%)</title><rect x="99.6" y="789" width="0.6" height="15.0" fill="rgb(209,166,18)" rx="2" ry="2" />
<text  x="102.60" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (32 samples, 0.03%)</title><rect x="132.6" y="885" width="0.4" height="15.0" fill="rgb(227,9,23)" rx="2" ry="2" />
<text  x="135.60" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (78 samples, 0.08%)</title><rect x="242.4" y="581" width="1.0" height="15.0" fill="rgb(222,20,4)" rx="2" ry="2" />
<text  x="245.37" y="591.5" ></text>
</g>
<g >
<title>x86_pmu_disable (62 samples, 0.07%)</title><rect x="913.2" y="581" width="0.8" height="15.0" fill="rgb(211,155,50)" rx="2" ry="2" />
<text  x="916.22" y="591.5" ></text>
</g>
<g >
<title>int_malloc (72 samples, 0.08%)</title><rect x="470.4" y="725" width="0.9" height="15.0" fill="rgb(216,55,22)" rx="2" ry="2" />
<text  x="473.43" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="137.2" y="853" width="0.2" height="15.0" fill="rgb(228,2,15)" rx="2" ry="2" />
<text  x="140.15" y="863.5" ></text>
</g>
<g >
<title>security_file_permission (53 samples, 0.06%)</title><rect x="1113.0" y="437" width="0.7" height="15.0" fill="rgb(224,110,34)" rx="2" ry="2" />
<text  x="1116.02" y="447.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.01%)</title><rect x="517.0" y="613" width="0.1" height="15.0" fill="rgb(210,15,2)" rx="2" ry="2" />
<text  x="519.97" y="623.5" ></text>
</g>
<g >
<title>std::net::tcp::TcpListener::accept (3,422 samples, 3.67%)</title><rect x="1116.9" y="981" width="43.3" height="15.0" fill="rgb(252,12,23)" rx="2" ry="2" />
<text  x="1119.90" y="991.5" >std:..</text>
</g>
<g >
<title>tokio::task::local::Shared::schedule::{{closure}} (58 samples, 0.06%)</title><rect x="1114.9" y="805" width="0.7" height="15.0" fill="rgb(247,84,35)" rx="2" ry="2" />
<text  x="1117.90" y="815.5" ></text>
</g>
<g >
<title>ep_poll_callback (118 samples, 0.13%)</title><rect x="635.3" y="213" width="1.4" height="15.0" fill="rgb(231,6,4)" rx="2" ry="2" />
<text  x="638.25" y="223.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (11 samples, 0.01%)</title><rect x="110.1" y="693" width="0.1" height="15.0" fill="rgb(239,150,48)" rx="2" ry="2" />
<text  x="113.08" y="703.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (28 samples, 0.03%)</title><rect x="150.2" y="901" width="0.4" height="15.0" fill="rgb(222,146,34)" rx="2" ry="2" />
<text  x="153.22" y="911.5" ></text>
</g>
<g >
<title>log::max_level (9 samples, 0.01%)</title><rect x="787.4" y="789" width="0.1" height="15.0" fill="rgb(225,69,28)" rx="2" ry="2" />
<text  x="790.41" y="799.5" ></text>
</g>
<g >
<title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,441 samples, 5.84%)</title><rect x="370.0" y="1045" width="68.9" height="15.0" fill="rgb(242,16,44)" rx="2" ry="2" />
<text  x="373.03" y="1055.5" >&lt;core::..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (23 samples, 0.02%)</title><rect x="344.0" y="1013" width="0.3" height="15.0" fill="rgb(235,73,6)" rx="2" ry="2" />
<text  x="346.99" y="1023.5" ></text>
</g>
<g >
<title>mio::net::tcp::TcpStream::from_stream (482 samples, 0.52%)</title><rect x="517.1" y="613" width="6.1" height="15.0" fill="rgb(233,138,0)" rx="2" ry="2" />
<text  x="520.12" y="623.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::codec::Codec as tokio_util::codec::decoder::Decoder&gt;::decode (31 samples, 0.03%)</title><rect x="679.7" y="997" width="0.4" height="15.0" fill="rgb(212,91,7)" rx="2" ry="2" />
<text  x="682.70" y="1007.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3,058 samples, 3.28%)</title><rect x="603.4" y="357" width="38.7" height="15.0" fill="rgb(248,221,4)" rx="2" ry="2" />
<text  x="606.38" y="367.5" >tcp..</text>
</g>
<g >
<title>_fdget (11 samples, 0.01%)</title><rect x="841.7" y="693" width="0.2" height="15.0" fill="rgb(216,28,13)" rx="2" ry="2" />
<text  x="844.71" y="703.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (30 samples, 0.03%)</title><rect x="431.1" y="597" width="0.4" height="15.0" fill="rgb(226,172,4)" rx="2" ry="2" />
<text  x="434.10" y="607.5" ></text>
</g>
<g >
<title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (40 samples, 0.04%)</title><rect x="30.4" y="1125" width="0.5" height="15.0" fill="rgb(205,9,20)" rx="2" ry="2" />
<text  x="33.37" y="1135.5" ></text>
</g>
<g >
<title>&lt;tokio::time::delay::Delay as core::future::future::Future&gt;::poll (196 samples, 0.21%)</title><rect x="339.5" y="1045" width="2.5" height="15.0" fill="rgb(251,83,4)" rx="2" ry="2" />
<text  x="342.48" y="1055.5" ></text>
</g>
<g >
<title>set_next_task_idle (99 samples, 0.11%)</title><rect x="943.2" y="581" width="1.3" height="15.0" fill="rgb(211,54,1)" rx="2" ry="2" />
<text  x="946.20" y="591.5" ></text>
</g>
<g >
<title>_destroy_inode (184 samples, 0.20%)</title><rect x="750.1" y="517" width="2.3" height="15.0" fill="rgb(222,127,11)" rx="2" ry="2" />
<text  x="753.09" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.02%)</title><rect x="209.8" y="565" width="0.2" height="15.0" fill="rgb(238,43,10)" rx="2" ry="2" />
<text  x="212.78" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::make_insert_hash (28 samples, 0.03%)</title><rect x="29.2" y="1109" width="0.4" height="15.0" fill="rgb(218,195,20)" rx="2" ry="2" />
<text  x="32.22" y="1119.5" ></text>
</g>
<g >
<title>tcache_get (18 samples, 0.02%)</title><rect x="274.9" y="917" width="0.2" height="15.0" fill="rgb(232,81,34)" rx="2" ry="2" />
<text  x="277.88" y="927.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (16 samples, 0.02%)</title><rect x="356.2" y="933" width="0.2" height="15.0" fill="rgb(208,52,1)" rx="2" ry="2" />
<text  x="359.22" y="943.5" ></text>
</g>
<g >
<title>tcp_push (46 samples, 0.05%)</title><rect x="560.1" y="773" width="0.5" height="15.0" fill="rgb(254,36,10)" rx="2" ry="2" />
<text  x="563.06" y="783.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (25 samples, 0.03%)</title><rect x="153.9" y="629" width="0.3" height="15.0" fill="rgb(240,44,24)" rx="2" ry="2" />
<text  x="156.88" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_empty (10 samples, 0.01%)</title><rect x="205.8" y="565" width="0.1" height="15.0" fill="rgb(206,125,26)" rx="2" ry="2" />
<text  x="208.79" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (57 samples, 0.06%)</title><rect x="225.9" y="645" width="0.7" height="15.0" fill="rgb(225,128,19)" rx="2" ry="2" />
<text  x="228.92" y="655.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (40 samples, 0.04%)</title><rect x="1032.0" y="549" width="0.5" height="15.0" fill="rgb(225,22,51)" rx="2" ry="2" />
<text  x="1035.03" y="559.5" ></text>
</g>
<g >
<title>_alloc_skb (247 samples, 0.26%)</title><rect x="615.6" y="261" width="3.1" height="15.0" fill="rgb(253,226,20)" rx="2" ry="2" />
<text  x="618.62" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (43 samples, 0.05%)</title><rect x="124.5" y="853" width="0.5" height="15.0" fill="rgb(211,192,5)" rx="2" ry="2" />
<text  x="127.50" y="863.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::{{closure}} (253 samples, 0.27%)</title><rect x="1020.9" y="629" width="3.2" height="15.0" fill="rgb(235,172,16)" rx="2" ry="2" />
<text  x="1023.88" y="639.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (74 samples, 0.08%)</title><rect x="206.1" y="501" width="1.0" height="15.0" fill="rgb(251,26,20)" rx="2" ry="2" />
<text  x="209.13" y="511.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::&lt;impl core::convert::From&lt;mio::sys::unix::ready::UnixReady&gt; for mio::event_imp::Ready&gt;::from (20 samples, 0.02%)</title><rect x="675.3" y="949" width="0.2" height="15.0" fill="rgb(224,212,4)" rx="2" ry="2" />
<text  x="678.29" y="959.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (78 samples, 0.08%)</title><rect x="242.4" y="757" width="1.0" height="15.0" fill="rgb(238,199,4)" rx="2" ry="2" />
<text  x="245.37" y="767.5" ></text>
</g>
<g >
<title>tcp_poll (24 samples, 0.03%)</title><rect x="1162.9" y="853" width="0.3" height="15.0" fill="rgb(233,188,24)" rx="2" ry="2" />
<text  x="1165.86" y="863.5" ></text>
</g>
<g >
<title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (11 samples, 0.01%)</title><rect x="44.3" y="1125" width="0.2" height="15.0" fill="rgb(222,50,5)" rx="2" ry="2" />
<text  x="47.32" y="1135.5" ></text>
</g>
<g >
<title>&lt;http::uri::Uri as core::str::traits::FromStr&gt;::from_str (320 samples, 0.34%)</title><rect x="12.1" y="1141" width="4.0" height="15.0" fill="rgb(220,67,31)" rx="2" ry="2" />
<text  x="15.09" y="1151.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (20 samples, 0.02%)</title><rect x="111.6" y="821" width="0.3" height="15.0" fill="rgb(238,77,9)" rx="2" ry="2" />
<text  x="114.60" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::poll (72 samples, 0.08%)</title><rect x="1075.4" y="549" width="0.9" height="15.0" fill="rgb(232,86,0)" rx="2" ry="2" />
<text  x="1078.40" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,007 samples, 1.08%)</title><rect x="152.2" y="821" width="12.7" height="15.0" fill="rgb(229,83,48)" rx="2" ry="2" />
<text  x="155.18" y="831.5" ></text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as actix_server::socket::FromStream&gt;::from_stdstream (65 samples, 0.07%)</title><rect x="525.8" y="613" width="0.9" height="15.0" fill="rgb(236,155,29)" rx="2" ry="2" />
<text  x="528.85" y="623.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (97 samples, 0.10%)</title><rect x="704.6" y="757" width="1.3" height="15.0" fill="rgb(243,196,27)" rx="2" ry="2" />
<text  x="707.64" y="767.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (23 samples, 0.02%)</title><rect x="540.6" y="805" width="0.3" height="15.0" fill="rgb(222,158,28)" rx="2" ry="2" />
<text  x="543.64" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.01%)</title><rect x="420.6" y="661" width="0.1" height="15.0" fill="rgb(240,130,6)" rx="2" ry="2" />
<text  x="423.55" y="671.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (49 samples, 0.05%)</title><rect x="557.0" y="709" width="0.7" height="15.0" fill="rgb(247,10,48)" rx="2" ry="2" />
<text  x="560.04" y="719.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (279 samples, 0.30%)</title><rect x="425.8" y="709" width="3.6" height="15.0" fill="rgb(225,32,16)" rx="2" ry="2" />
<text  x="428.83" y="719.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (113 samples, 0.12%)</title><rect x="385.2" y="629" width="1.4" height="15.0" fill="rgb(213,159,21)" rx="2" ry="2" />
<text  x="388.16" y="639.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="214.6" y="517" width="0.2" height="15.0" fill="rgb(224,85,46)" rx="2" ry="2" />
<text  x="217.65" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.01%)</title><rect x="1027.5" y="533" width="0.2" height="15.0" fill="rgb(223,45,13)" rx="2" ry="2" />
<text  x="1030.54" y="543.5" ></text>
</g>
<g >
<title>nf_hook_slow (31 samples, 0.03%)</title><rect x="655.5" y="645" width="0.4" height="15.0" fill="rgb(236,93,6)" rx="2" ry="2" />
<text  x="658.48" y="655.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_key (77 samples, 0.08%)</title><rect x="241.0" y="917" width="0.9" height="15.0" fill="rgb(212,223,44)" rx="2" ry="2" />
<text  x="243.97" y="927.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="181.7" y="741" width="0.3" height="15.0" fill="rgb(230,209,45)" rx="2" ry="2" />
<text  x="184.71" y="751.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (571 samples, 0.61%)</title><rect x="473.0" y="597" width="7.2" height="15.0" fill="rgb(242,128,43)" rx="2" ry="2" />
<text  x="476.01" y="607.5" ></text>
</g>
<g >
<title>lock_sock_nested (13 samples, 0.01%)</title><rect x="689.6" y="709" width="0.2" height="15.0" fill="rgb(227,120,33)" rx="2" ry="2" />
<text  x="692.60" y="719.5" ></text>
</g>
<g >
<title>copy_page_from_iter (33 samples, 0.04%)</title><rect x="1111.7" y="421" width="0.5" height="15.0" fill="rgb(252,198,49)" rx="2" ry="2" />
<text  x="1114.73" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::io::driver::Inner&gt;&gt; (19 samples, 0.02%)</title><rect x="523.5" y="565" width="0.3" height="15.0" fill="rgb(232,58,20)" rx="2" ry="2" />
<text  x="526.54" y="575.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::all_with_str (804 samples, 0.86%)</title><rect x="173.2" y="917" width="10.2" height="15.0" fill="rgb(248,107,51)" rx="2" ry="2" />
<text  x="176.21" y="927.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (28 samples, 0.03%)</title><rect x="1023.0" y="549" width="0.3" height="15.0" fill="rgb(222,60,49)" rx="2" ry="2" />
<text  x="1025.98" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (209 samples, 0.22%)</title><rect x="59.9" y="757" width="2.6" height="15.0" fill="rgb(212,25,10)" rx="2" ry="2" />
<text  x="62.89" y="767.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (35 samples, 0.04%)</title><rect x="677.7" y="837" width="0.5" height="15.0" fill="rgb(243,200,0)" rx="2" ry="2" />
<text  x="680.74" y="847.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (15 samples, 0.02%)</title><rect x="450.6" y="965" width="0.2" height="15.0" fill="rgb(227,78,39)" rx="2" ry="2" />
<text  x="453.58" y="975.5" ></text>
</g>
<g >
<title>sock_recvmsg (1,316 samples, 1.41%)</title><rect x="688.0" y="757" width="16.6" height="15.0" fill="rgb(246,84,24)" rx="2" ry="2" />
<text  x="690.98" y="767.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="51.8" y="1109" width="0.3" height="15.0" fill="rgb(254,146,14)" rx="2" ry="2" />
<text  x="54.85" y="1119.5" ></text>
</g>
<g >
<title>_put_user_nocheck_4 (25 samples, 0.03%)</title><rect x="506.4" y="613" width="0.3" height="15.0" fill="rgb(236,220,39)" rx="2" ry="2" />
<text  x="509.35" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (132 samples, 0.14%)</title><rect x="1089.7" y="901" width="1.7" height="15.0" fill="rgb(220,43,5)" rx="2" ry="2" />
<text  x="1092.71" y="911.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (31 samples, 0.03%)</title><rect x="1058.3" y="277" width="0.3" height="15.0" fill="rgb(208,48,5)" rx="2" ry="2" />
<text  x="1061.25" y="287.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget (1,573 samples, 1.69%)</title><rect x="244.1" y="1125" width="19.9" height="15.0" fill="rgb(210,150,17)" rx="2" ry="2" />
<text  x="247.07" y="1135.5" ></text>
</g>
<g >
<title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="376.5" y="709" width="0.2" height="15.0" fill="rgb(251,59,41)" rx="2" ry="2" />
<text  x="379.46" y="719.5" ></text>
</g>
<g >
<title>int_free (13 samples, 0.01%)</title><rect x="52.8" y="1173" width="0.2" height="15.0" fill="rgb(233,107,12)" rx="2" ry="2" />
<text  x="55.85" y="1183.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (34 samples, 0.04%)</title><rect x="108.7" y="789" width="0.4" height="15.0" fill="rgb(231,195,45)" rx="2" ry="2" />
<text  x="111.71" y="799.5" ></text>
</g>
<g >
<title>_slab_free (21 samples, 0.02%)</title><rect x="1125.2" y="757" width="0.3" height="15.0" fill="rgb(218,31,1)" rx="2" ry="2" />
<text  x="1128.23" y="767.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (30 samples, 0.03%)</title><rect x="530.9" y="1013" width="0.4" height="15.0" fill="rgb(253,181,3)" rx="2" ry="2" />
<text  x="533.90" y="1023.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (38 samples, 0.04%)</title><rect x="211.6" y="597" width="0.5" height="15.0" fill="rgb(212,44,27)" rx="2" ry="2" />
<text  x="214.64" y="607.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::Snapshot::has_join_waker (8 samples, 0.01%)</title><rect x="1041.7" y="277" width="0.1" height="15.0" fill="rgb(250,11,47)" rx="2" ry="2" />
<text  x="1044.66" y="287.5" ></text>
</g>
<g >
<title>httparse::simd::runtime::match_header_value_vectored (78 samples, 0.08%)</title><rect x="49.5" y="1141" width="1.0" height="15.0" fill="rgb(249,206,33)" rx="2" ry="2" />
<text  x="52.53" y="1151.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (17 samples, 0.02%)</title><rect x="1041.4" y="181" width="0.3" height="15.0" fill="rgb(250,106,26)" rx="2" ry="2" />
<text  x="1044.44" y="191.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output::{{closure}} (81 samples, 0.09%)</title><rect x="482.6" y="645" width="1.0" height="15.0" fill="rgb(223,156,4)" rx="2" ry="2" />
<text  x="485.57" y="655.5" ></text>
</g>
<g >
<title>actix_http::header::map::HeaderMap::new (31 samples, 0.03%)</title><rect x="447.4" y="981" width="0.4" height="15.0" fill="rgb(221,174,49)" rx="2" ry="2" />
<text  x="450.38" y="991.5" ></text>
</g>
<g >
<title>&lt;mio::sys::unix::eventedfd::EventedFd as mio::event_imp::Evented&gt;::deregister (30 samples, 0.03%)</title><rect x="770.4" y="661" width="0.4" height="15.0" fill="rgb(231,152,31)" rx="2" ry="2" />
<text  x="773.45" y="671.5" ></text>
</g>
<g >
<title>native_sched_clock (29 samples, 0.03%)</title><rect x="1108.1" y="181" width="0.4" height="15.0" fill="rgb(219,68,38)" rx="2" ry="2" />
<text  x="1111.12" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (344 samples, 0.37%)</title><rect x="127.0" y="869" width="4.4" height="15.0" fill="rgb(217,164,2)" rx="2" ry="2" />
<text  x="130.04" y="879.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (350 samples, 0.38%)</title><rect x="267.4" y="981" width="4.4" height="15.0" fill="rgb(228,65,54)" rx="2" ry="2" />
<text  x="270.37" y="991.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (141 samples, 0.15%)</title><rect x="720.9" y="853" width="1.8" height="15.0" fill="rgb(252,54,18)" rx="2" ry="2" />
<text  x="723.91" y="863.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (44 samples, 0.05%)</title><rect x="611.3" y="325" width="0.5" height="15.0" fill="rgb(227,53,17)" rx="2" ry="2" />
<text  x="614.28" y="335.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (21 samples, 0.02%)</title><rect x="1082.7" y="629" width="0.3" height="15.0" fill="rgb(245,31,5)" rx="2" ry="2" />
<text  x="1085.72" y="639.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (25 samples, 0.03%)</title><rect x="340.4" y="997" width="0.3" height="15.0" fill="rgb(226,127,13)" rx="2" ry="2" />
<text  x="343.36" y="1007.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (29 samples, 0.03%)</title><rect x="165.2" y="837" width="0.3" height="15.0" fill="rgb(207,219,26)" rx="2" ry="2" />
<text  x="168.18" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;pin_project_lite::_private::UnsafeDropInPlaceGuard&lt;actix_web::handler::ExtractResponse&lt; (147 samples, 0.16%)</title><rect x="436.7" y="933" width="1.8" height="15.0" fill="rgb(246,144,16)" rx="2" ry="2" />
<text  x="439.65" y="943.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_array_value (20 samples, 0.02%)</title><rect x="435.0" y="789" width="0.2" height="15.0" fill="rgb(230,75,34)" rx="2" ry="2" />
<text  x="437.98" y="799.5" ></text>
</g>
<g >
<title>actix_rt::runtime::Runtime::block_on (1,071 samples, 1.15%)</title><rect x="472.8" y="1221" width="13.5" height="15.0" fill="rgb(238,17,20)" rx="2" ry="2" />
<text  x="475.77" y="1231.5" ></text>
</g>
<g >
<title>drain_obj_stoc.sr. (48 samples, 0.05%)</title><rect x="746.6" y="517" width="0.6" height="15.0" fill="rgb(249,160,25)" rx="2" ry="2" />
<text  x="749.62" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (43 samples, 0.05%)</title><rect x="124.5" y="869" width="0.5" height="15.0" fill="rgb(248,60,43)" rx="2" ry="2" />
<text  x="127.50" y="879.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (22 samples, 0.02%)</title><rect x="1073.0" y="485" width="0.3" height="15.0" fill="rgb(205,63,18)" rx="2" ry="2" />
<text  x="1075.98" y="495.5" ></text>
</g>
<g >
<title>psi_flags_change (28 samples, 0.03%)</title><rect x="931.9" y="565" width="0.4" height="15.0" fill="rgb(214,153,9)" rx="2" ry="2" />
<text  x="934.94" y="575.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (19 samples, 0.02%)</title><rect x="36.7" y="965" width="0.3" height="15.0" fill="rgb(207,32,11)" rx="2" ry="2" />
<text  x="39.73" y="975.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (149 samples, 0.16%)</title><rect x="168.7" y="805" width="1.8" height="15.0" fill="rgb(209,152,52)" rx="2" ry="2" />
<text  x="171.66" y="815.5" ></text>
</g>
<g >
<title>&lt;tokio::time::driver::atomic_stack::AtomicStackEntries as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.08%)</title><rect x="995.8" y="837" width="1.0" height="15.0" fill="rgb(245,58,42)" rx="2" ry="2" />
<text  x="998.82" y="847.5" ></text>
</g>
<g >
<title>actix_http::config::ServiceConfig::keep_alive_timer (775 samples, 0.83%)</title><rect x="264.9" y="1061" width="9.8" height="15.0" fill="rgb(242,70,20)" rx="2" ry="2" />
<text  x="267.90" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::drop (168 samples, 0.18%)</title><rect x="39.0" y="1029" width="2.1" height="15.0" fill="rgb(214,39,22)" rx="2" ry="2" />
<text  x="42.01" y="1039.5" ></text>
</g>
<g >
<title>std::sys::unix::os::errno (43 samples, 0.05%)</title><rect x="1033.2" y="389" width="0.6" height="15.0" fill="rgb(245,161,19)" rx="2" ry="2" />
<text  x="1036.21" y="399.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::run_until::{{closure}} (1,573 samples, 1.69%)</title><rect x="244.1" y="1237" width="19.9" height="15.0" fill="rgb(237,137,38)" rx="2" ry="2" />
<text  x="247.07" y="1247.5" ></text>
</g>
<g >
<title>epoll_wait (37 samples, 0.04%)</title><rect x="808.9" y="773" width="0.5" height="15.0" fill="rgb(240,184,20)" rx="2" ry="2" />
<text  x="811.93" y="783.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (74 samples, 0.08%)</title><rect x="356.5" y="933" width="0.9" height="15.0" fill="rgb(238,77,50)" rx="2" ry="2" />
<text  x="359.45" y="943.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (11 samples, 0.01%)</title><rect x="110.1" y="645" width="0.1" height="15.0" fill="rgb(236,166,10)" rx="2" ry="2" />
<text  x="113.08" y="655.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="717.6" y="837" width="0.2" height="15.0" fill="rgb(227,110,46)" rx="2" ry="2" />
<text  x="720.56" y="847.5" ></text>
</g>
<g >
<title>sched_clock_cpu (50 samples, 0.05%)</title><rect x="946.9" y="581" width="0.6" height="15.0" fill="rgb(226,43,44)" rx="2" ry="2" />
<text  x="949.87" y="591.5" ></text>
</g>
<g >
<title>httparse::simd::avx2::match_header_value_batch_32 (30 samples, 0.03%)</title><rect x="49.7" y="1125" width="0.4" height="15.0" fill="rgb(218,71,7)" rx="2" ry="2" />
<text  x="52.68" y="1135.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (25 samples, 0.03%)</title><rect x="558.3" y="709" width="0.4" height="15.0" fill="rgb(209,211,48)" rx="2" ry="2" />
<text  x="561.34" y="719.5" ></text>
</g>
<g >
<title>put_prev_entity (8 samples, 0.01%)</title><rect x="1186.2" y="805" width="0.1" height="15.0" fill="rgb(247,187,37)" rx="2" ry="2" />
<text  x="1189.20" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::collect_all_with_str (862 samples, 0.92%)</title><rect x="172.5" y="933" width="10.9" height="15.0" fill="rgb(244,16,19)" rx="2" ry="2" />
<text  x="175.47" y="943.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="133.4" y="901" width="0.3" height="15.0" fill="rgb(219,4,0)" rx="2" ry="2" />
<text  x="136.42" y="911.5" ></text>
</g>
<g >
<title>_errno_location (37 samples, 0.04%)</title><rect x="833.4" y="645" width="0.5" height="15.0" fill="rgb(223,0,3)" rx="2" ry="2" />
<text  x="836.45" y="655.5" ></text>
</g>
<g >
<title>http::header::name::HeaderName::from_bytes (279 samples, 0.30%)</title><rect x="32.5" y="1157" width="3.5" height="15.0" fill="rgb(224,213,32)" rx="2" ry="2" />
<text  x="35.47" y="1167.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (38 samples, 0.04%)</title><rect x="1082.5" y="677" width="0.5" height="15.0" fill="rgb(213,125,32)" rx="2" ry="2" />
<text  x="1085.50" y="687.5" ></text>
</g>
<g >
<title>&lt;tokio::time::instant::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (11 samples, 0.01%)</title><rect x="983.4" y="837" width="0.1" height="15.0" fill="rgb(245,101,9)" rx="2" ry="2" />
<text  x="986.40" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.04%)</title><rect x="167.2" y="741" width="0.4" height="15.0" fill="rgb(226,186,38)" rx="2" ry="2" />
<text  x="170.18" y="751.5" ></text>
</g>
<g >
<title>_pthread_enable_asynccancel (12 samples, 0.01%)</title><rect x="818.2" y="677" width="0.1" height="15.0" fill="rgb(218,195,2)" rx="2" ry="2" />
<text  x="821.19" y="687.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::slot_for (19 samples, 0.02%)</title><rect x="1005.3" y="789" width="0.2" height="15.0" fill="rgb(210,158,4)" rx="2" ry="2" />
<text  x="1008.29" y="799.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.04%)</title><rect x="37.6" y="1125" width="0.4" height="15.0" fill="rgb(212,117,9)" rx="2" ry="2" />
<text  x="40.58" y="1135.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (18 samples, 0.02%)</title><rect x="1160.3" y="997" width="0.2" height="15.0" fill="rgb(210,96,37)" rx="2" ry="2" />
<text  x="1163.30" y="1007.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (20,985 samples, 22.51%)</title><rect x="529.3" y="1253" width="265.7" height="15.0" fill="rgb(243,160,50)" rx="2" ry="2" />
<text  x="532.33" y="1263.5" >tokio::runtime::task::harness::Harn..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (125 samples, 0.13%)</title><rect x="168.8" y="709" width="1.6" height="15.0" fill="rgb(232,82,0)" rx="2" ry="2" />
<text  x="171.83" y="719.5" ></text>
</g>
<g >
<title>rb_erase (10 samples, 0.01%)</title><rect x="784.9" y="645" width="0.1" height="15.0" fill="rgb(218,185,18)" rx="2" ry="2" />
<text  x="787.90" y="655.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (331 samples, 0.36%)</title><rect x="525.1" y="1141" width="4.2" height="15.0" fill="rgb(234,78,0)" rx="2" ry="2" />
<text  x="528.14" y="1151.5" ></text>
</g>
<g >
<title>tokio::util::slab::shard::Shard&lt;T&gt;::get (9 samples, 0.01%)</title><rect x="466.6" y="933" width="0.1" height="15.0" fill="rgb(225,218,8)" rx="2" ry="2" />
<text  x="469.57" y="943.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="147.2" y="741" width="0.2" height="15.0" fill="rgb(226,169,39)" rx="2" ry="2" />
<text  x="150.15" y="751.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (31 samples, 0.03%)</title><rect x="194.9" y="501" width="0.4" height="15.0" fill="rgb(211,106,23)" rx="2" ry="2" />
<text  x="197.90" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_web::extract::m::TupleFromRequest2::FutWrapper&lt;actix_web::data::Data&lt;&amp;str&gt;,actix_web::data::Data&lt;serde_json::value::Value&gt;&gt;&gt; (49 samples, 0.05%)</title><rect x="436.8" y="869" width="0.7" height="15.0" fill="rgb(208,49,25)" rx="2" ry="2" />
<text  x="439.84" y="879.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (235 samples, 0.25%)</title><rect x="78.7" y="869" width="2.9" height="15.0" fill="rgb(242,14,30)" rx="2" ry="2" />
<text  x="81.66" y="879.5" ></text>
</g>
<g >
<title>ksize (30 samples, 0.03%)</title><rect x="294.5" y="853" width="0.4" height="15.0" fill="rgb(242,109,2)" rx="2" ry="2" />
<text  x="297.53" y="863.5" ></text>
</g>
<g >
<title>dst_release (36 samples, 0.04%)</title><rect x="633.4" y="293" width="0.4" height="15.0" fill="rgb(237,63,3)" rx="2" ry="2" />
<text  x="636.36" y="303.5" ></text>
</g>
<g >
<title>_GI___pthread_mutex_lock (42 samples, 0.05%)</title><rect x="514.4" y="693" width="0.6" height="15.0" fill="rgb(221,8,3)" rx="2" ry="2" />
<text  x="517.44" y="703.5" ></text>
</g>
<g >
<title>_perf_event_task_sched_out (3,877 samples, 4.16%)</title><rect x="864.9" y="597" width="49.1" height="15.0" fill="rgb(227,20,17)" rx="2" ry="2" />
<text  x="867.93" y="607.5" >_per..</text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (140 samples, 0.15%)</title><rect x="480.8" y="661" width="1.8" height="15.0" fill="rgb(226,34,34)" rx="2" ry="2" />
<text  x="483.79" y="671.5" ></text>
</g>
<g >
<title>dput (367 samples, 0.39%)</title><rect x="1152.6" y="773" width="4.7" height="15.0" fill="rgb(240,209,49)" rx="2" ry="2" />
<text  x="1155.61" y="783.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="717.1" y="869" width="0.4" height="15.0" fill="rgb(221,104,43)" rx="2" ry="2" />
<text  x="720.13" y="879.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (43 samples, 0.05%)</title><rect x="91.8" y="741" width="0.6" height="15.0" fill="rgb(247,154,31)" rx="2" ry="2" />
<text  x="94.84" y="751.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (770 samples, 0.83%)</title><rect x="515.4" y="1173" width="9.7" height="15.0" fill="rgb(252,122,9)" rx="2" ry="2" />
<text  x="518.39" y="1183.5" ></text>
</g>
<g >
<title>raw_spin_lock (16 samples, 0.02%)</title><rect x="945.8" y="597" width="0.2" height="15.0" fill="rgb(239,223,10)" rx="2" ry="2" />
<text  x="948.83" y="607.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (8 samples, 0.01%)</title><rect x="213.6" y="597" width="0.1" height="15.0" fill="rgb(232,208,4)" rx="2" ry="2" />
<text  x="216.62" y="607.5" ></text>
</g>
<g >
<title>core::mem::take (13 samples, 0.01%)</title><rect x="165.8" y="885" width="0.1" height="15.0" fill="rgb(225,115,8)" rx="2" ry="2" />
<text  x="168.75" y="895.5" ></text>
</g>
<g >
<title>netif_skb_features (27 samples, 0.03%)</title><rect x="653.1" y="533" width="0.3" height="15.0" fill="rgb(243,107,35)" rx="2" ry="2" />
<text  x="656.05" y="543.5" ></text>
</g>
<g >
<title>_rust_alloc (18 samples, 0.02%)</title><rect x="502.8" y="981" width="0.2" height="15.0" fill="rgb(251,114,34)" rx="2" ry="2" />
<text  x="505.80" y="991.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (56 samples, 0.06%)</title><rect x="976.3" y="773" width="0.7" height="15.0" fill="rgb(206,48,3)" rx="2" ry="2" />
<text  x="979.30" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::result::Result&lt; (9 samples, 0.01%)</title><rect x="794.9" y="901" width="0.1" height="15.0" fill="rgb(236,210,37)" rx="2" ry="2" />
<text  x="797.85" y="911.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (39 samples, 0.04%)</title><rect x="706.6" y="789" width="0.5" height="15.0" fill="rgb(249,39,53)" rx="2" ry="2" />
<text  x="709.60" y="799.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::drop_join_handle_fast (9 samples, 0.01%)</title><rect x="1045.5" y="293" width="0.1" height="15.0" fill="rgb(228,145,54)" rx="2" ry="2" />
<text  x="1048.49" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (9 samples, 0.01%)</title><rect x="219.7" y="549" width="0.1" height="15.0" fill="rgb(238,92,35)" rx="2" ry="2" />
<text  x="222.69" y="559.5" ></text>
</g>
<g >
<title>actix_server::accept::Accept::accept_one (2,252 samples, 2.42%)</title><rect x="1087.4" y="1029" width="28.5" height="15.0" fill="rgb(229,17,2)" rx="2" ry="2" />
<text  x="1090.39" y="1039.5" >ac..</text>
</g>
<g >
<title>sk_page_frag_refill (15 samples, 0.02%)</title><rect x="559.4" y="773" width="0.2" height="15.0" fill="rgb(239,60,0)" rx="2" ry="2" />
<text  x="562.42" y="783.5" ></text>
</g>
<g >
<title>update_curr (13 samples, 0.01%)</title><rect x="929.0" y="565" width="0.1" height="15.0" fill="rgb(212,100,6)" rx="2" ry="2" />
<text  x="931.98" y="575.5" ></text>
</g>
<g >
<title>tokio::task::local::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;::schedule (33 samples, 0.04%)</title><rect x="1115.9" y="885" width="0.5" height="15.0" fill="rgb(214,73,15)" rx="2" ry="2" />
<text  x="1118.95" y="895.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (14,374 samples, 15.42%)</title><rect x="531.4" y="1029" width="181.9" height="15.0" fill="rgb(236,53,4)" rx="2" ry="2" />
<text  x="534.39" y="1039.5" >&lt;actix_http::h1::dispat..</text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (26 samples, 0.03%)</title><rect x="426.0" y="677" width="0.3" height="15.0" fill="rgb(220,93,27)" rx="2" ry="2" />
<text  x="429.01" y="687.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::send_response (904 samples, 0.97%)</title><rect x="439.1" y="1045" width="11.4" height="15.0" fill="rgb(211,45,5)" rx="2" ry="2" />
<text  x="442.06" y="1055.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (11 samples, 0.01%)</title><rect x="446.5" y="933" width="0.1" height="15.0" fill="rgb(226,204,51)" rx="2" ry="2" />
<text  x="449.48" y="943.5" ></text>
</g>
<g >
<title>&lt;tokio::time::instant::Instant as core::cmp::PartialOrd&gt;::partial_cmp (59 samples, 0.06%)</title><rect x="976.3" y="837" width="0.7" height="15.0" fill="rgb(222,0,34)" rx="2" ry="2" />
<text  x="979.26" y="847.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,255 samples, 2.42%)</title><rect x="298.9" y="821" width="28.5" height="15.0" fill="rgb(213,51,29)" rx="2" ry="2" />
<text  x="301.88" y="831.5" >ip..</text>
</g>
<g >
<title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (331 samples, 0.36%)</title><rect x="525.1" y="1045" width="4.2" height="15.0" fill="rgb(216,115,6)" rx="2" ry="2" />
<text  x="528.14" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (581 samples, 0.62%)</title><rect x="505.4" y="661" width="7.4" height="15.0" fill="rgb(237,116,40)" rx="2" ry="2" />
<text  x="508.42" y="671.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (17 samples, 0.02%)</title><rect x="450.6" y="1029" width="0.2" height="15.0" fill="rgb(249,120,8)" rx="2" ry="2" />
<text  x="453.57" y="1039.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (9 samples, 0.01%)</title><rect x="655.9" y="645" width="0.1" height="15.0" fill="rgb(232,188,41)" rx="2" ry="2" />
<text  x="658.87" y="655.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::transition_to_terminal (52 samples, 0.06%)</title><rect x="485.7" y="677" width="0.6" height="15.0" fill="rgb(216,1,48)" rx="2" ry="2" />
<text  x="488.67" y="687.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (354 samples, 0.38%)</title><rect x="193.5" y="645" width="4.5" height="15.0" fill="rgb(235,140,5)" rx="2" ry="2" />
<text  x="196.54" y="655.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (8 samples, 0.01%)</title><rect x="421.7" y="661" width="0.1" height="15.0" fill="rgb(232,180,23)" rx="2" ry="2" />
<text  x="424.72" y="671.5" ></text>
</g>
<g >
<title>core::mem::replace (8 samples, 0.01%)</title><rect x="345.2" y="1029" width="0.1" height="15.0" fill="rgb(208,214,16)" rx="2" ry="2" />
<text  x="348.18" y="1039.5" ></text>
</g>
<g >
<title>skb_clone (14 samples, 0.02%)</title><rect x="661.0" y="709" width="0.1" height="15.0" fill="rgb(244,104,51)" rx="2" ry="2" />
<text  x="663.95" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::read_value (14 samples, 0.02%)</title><rect x="239.2" y="901" width="0.2" height="15.0" fill="rgb(234,180,2)" rx="2" ry="2" />
<text  x="242.25" y="911.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (13 samples, 0.01%)</title><rect x="191.6" y="613" width="0.2" height="15.0" fill="rgb(235,133,1)" rx="2" ry="2" />
<text  x="194.65" y="623.5" ></text>
</g>
<g >
<title>core::ptr::read (11 samples, 0.01%)</title><rect x="172.3" y="885" width="0.1" height="15.0" fill="rgb(218,129,9)" rx="2" ry="2" />
<text  x="175.28" y="895.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::PathParser&gt; (997 samples, 1.07%)</title><rect x="382.6" y="837" width="12.6" height="15.0" fill="rgb(253,229,6)" rx="2" ry="2" />
<text  x="385.62" y="847.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (16 samples, 0.02%)</title><rect x="194.7" y="533" width="0.2" height="15.0" fill="rgb(219,2,32)" rx="2" ry="2" />
<text  x="197.69" y="543.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (13 samples, 0.01%)</title><rect x="273.0" y="933" width="0.2" height="15.0" fill="rgb(224,87,34)" rx="2" ry="2" />
<text  x="276.03" y="943.5" ></text>
</g>
<g >
<title>&lt;core::pin::Pin&lt;P&gt; as tokio::io::async_read::AsyncRead&gt;::prepare_uninitialized_buffer (29 samples, 0.03%)</title><rect x="460.2" y="1029" width="0.4" height="15.0" fill="rgb(251,31,21)" rx="2" ry="2" />
<text  x="463.22" y="1039.5" ></text>
</g>
<g >
<title>aa_sock_perm (29 samples, 0.03%)</title><rect x="511.2" y="581" width="0.3" height="15.0" fill="rgb(236,157,3)" rx="2" ry="2" />
<text  x="514.18" y="591.5" ></text>
</g>
<g >
<title>ep_item_pol.sr. (255 samples, 0.27%)</title><rect x="851.1" y="661" width="3.2" height="15.0" fill="rgb(241,56,42)" rx="2" ry="2" />
<text  x="854.06" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (141 samples, 0.15%)</title><rect x="720.9" y="837" width="1.8" height="15.0" fill="rgb(231,185,42)" rx="2" ry="2" />
<text  x="723.91" y="847.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1,169 samples, 1.25%)</title><rect x="543.9" y="741" width="14.8" height="15.0" fill="rgb(243,204,31)" rx="2" ry="2" />
<text  x="546.91" y="751.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="813.7" y="709" width="0.1" height="15.0" fill="rgb(250,146,21)" rx="2" ry="2" />
<text  x="816.65" y="719.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (24 samples, 0.03%)</title><rect x="1083.5" y="645" width="0.3" height="15.0" fill="rgb(219,10,32)" rx="2" ry="2" />
<text  x="1086.52" y="655.5" ></text>
</g>
<g >
<title>tokio::io::async_read::AsyncRead::poll_read_buf (532 samples, 0.57%)</title><rect x="459.9" y="1045" width="6.8" height="15.0" fill="rgb(245,209,41)" rx="2" ry="2" />
<text  x="462.95" y="1055.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Events::get::{{closure}} (9 samples, 0.01%)</title><rect x="803.3" y="773" width="0.1" height="15.0" fill="rgb(233,13,33)" rx="2" ry="2" />
<text  x="806.33" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (9 samples, 0.01%)</title><rect x="461.0" y="949" width="0.1" height="15.0" fill="rgb(251,77,30)" rx="2" ry="2" />
<text  x="464.03" y="959.5" ></text>
</g>
<g >
<title>raw_spin_lock_irq (14 samples, 0.02%)</title><rect x="769.6" y="645" width="0.2" height="15.0" fill="rgb(238,158,50)" rx="2" ry="2" />
<text  x="772.57" y="655.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::wake_by_val (33 samples, 0.04%)</title><rect x="1115.9" y="933" width="0.5" height="15.0" fill="rgb(229,27,19)" rx="2" ry="2" />
<text  x="1118.95" y="943.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::tick (4,158 samples, 4.46%)</title><rect x="1028.9" y="693" width="52.6" height="15.0" fill="rgb(226,149,20)" rx="2" ry="2" />
<text  x="1031.91" y="703.5" >tokio..</text>
</g>
<g >
<title>read_tsc (78 samples, 0.08%)</title><rect x="954.1" y="677" width="1.0" height="15.0" fill="rgb(212,204,40)" rx="2" ry="2" />
<text  x="957.08" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::try_lock (102 samples, 0.11%)</title><rect x="789.4" y="741" width="1.3" height="15.0" fill="rgb(224,47,11)" rx="2" ry="2" />
<text  x="792.38" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (37 samples, 0.04%)</title><rect x="56.5" y="837" width="0.5" height="15.0" fill="rgb(214,212,44)" rx="2" ry="2" />
<text  x="59.52" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt; (11 samples, 0.01%)</title><rect x="514.3" y="741" width="0.1" height="15.0" fill="rgb(251,158,8)" rx="2" ry="2" />
<text  x="517.28" y="751.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (59 samples, 0.06%)</title><rect x="969.4" y="565" width="0.8" height="15.0" fill="rgb(232,210,35)" rx="2" ry="2" />
<text  x="972.44" y="575.5" ></text>
</g>
<g >
<title>fput_many (9 samples, 0.01%)</title><rect x="687.8" y="757" width="0.1" height="15.0" fill="rgb(222,182,38)" rx="2" ry="2" />
<text  x="690.79" y="767.5" ></text>
</g>
<g >
<title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (31 samples, 0.03%)</title><rect x="180.9" y="629" width="0.4" height="15.0" fill="rgb(228,78,45)" rx="2" ry="2" />
<text  x="183.93" y="639.5" ></text>
</g>
<g >
<title>tcp_established_options (10 samples, 0.01%)</title><rect x="327.8" y="821" width="0.1" height="15.0" fill="rgb(235,191,16)" rx="2" ry="2" />
<text  x="330.80" y="831.5" ></text>
</g>
<g >
<title>file_update_time (31 samples, 0.03%)</title><rect x="1112.3" y="421" width="0.3" height="15.0" fill="rgb(242,39,12)" rx="2" ry="2" />
<text  x="1115.25" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (18 samples, 0.02%)</title><rect x="179.2" y="549" width="0.2" height="15.0" fill="rgb(223,200,11)" rx="2" ry="2" />
<text  x="182.19" y="559.5" ></text>
</g>
<g >
<title>_virt_addr_valid (73 samples, 0.08%)</title><rect x="699.5" y="629" width="0.9" height="15.0" fill="rgb(247,198,22)" rx="2" ry="2" />
<text  x="702.46" y="639.5" ></text>
</g>
<g >
<title>&lt;tinyvec::arrayvec::ArrayVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.01%)</title><rect x="349.9" y="837" width="0.1" height="15.0" fill="rgb(225,130,5)" rx="2" ry="2" />
<text  x="352.91" y="847.5" ></text>
</g>
<g >
<title>tokio::coop::poll_proceed (25 samples, 0.03%)</title><rect x="340.4" y="1013" width="0.3" height="15.0" fill="rgb(236,112,16)" rx="2" ry="2" />
<text  x="343.36" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (1,000 samples, 1.07%)</title><rect x="720.0" y="901" width="12.7" height="15.0" fill="rgb(207,49,4)" rx="2" ry="2" />
<text  x="723.04" y="911.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="972.0" y="581" width="0.2" height="15.0" fill="rgb(223,187,6)" rx="2" ry="2" />
<text  x="974.96" y="591.5" ></text>
</g>
<g >
<title>init_once (13 samples, 0.01%)</title><rect x="1135.0" y="677" width="0.2" height="15.0" fill="rgb(226,132,23)" rx="2" ry="2" />
<text  x="1138.01" y="687.5" ></text>
</g>
<g >
<title>new_sync_read (14 samples, 0.02%)</title><rect x="821.1" y="613" width="0.2" height="15.0" fill="rgb(220,62,6)" rx="2" ry="2" />
<text  x="824.11" y="623.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (16 samples, 0.02%)</title><rect x="576.3" y="725" width="0.2" height="15.0" fill="rgb(226,215,20)" rx="2" ry="2" />
<text  x="579.30" y="735.5" ></text>
</g>
<g >
<title>record_times (69 samples, 0.07%)</title><rect x="1184.1" y="773" width="0.8" height="15.0" fill="rgb(219,188,12)" rx="2" ry="2" />
<text  x="1187.08" y="783.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59 samples, 0.06%)</title><rect x="167.2" y="805" width="0.7" height="15.0" fill="rgb(230,116,50)" rx="2" ry="2" />
<text  x="170.17" y="815.5" ></text>
</g>
<g >
<title>_vdso_clock_gettime (42 samples, 0.05%)</title><rect x="1187.8" y="933" width="0.5" height="15.0" fill="rgb(224,120,22)" rx="2" ry="2" />
<text  x="1190.76" y="943.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (54 samples, 0.06%)</title><rect x="214.8" y="517" width="0.7" height="15.0" fill="rgb(234,75,45)" rx="2" ry="2" />
<text  x="217.81" y="527.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (10 samples, 0.01%)</title><rect x="93.1" y="805" width="0.1" height="15.0" fill="rgb(244,94,4)" rx="2" ry="2" />
<text  x="96.08" y="815.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="178.8" y="565" width="0.2" height="15.0" fill="rgb(246,73,18)" rx="2" ry="2" />
<text  x="181.84" y="575.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (19 samples, 0.02%)</title><rect x="108.7" y="725" width="0.3" height="15.0" fill="rgb(253,76,50)" rx="2" ry="2" />
<text  x="111.74" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.02%)</title><rect x="182.0" y="709" width="0.3" height="15.0" fill="rgb(229,166,6)" rx="2" ry="2" />
<text  x="185.04" y="719.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::is_empty (14 samples, 0.02%)</title><rect x="712.2" y="917" width="0.2" height="15.0" fill="rgb(215,61,0)" rx="2" ry="2" />
<text  x="715.18" y="927.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::sse2::Group::match_byte (19 samples, 0.02%)</title><rect x="183.1" y="677" width="0.3" height="15.0" fill="rgb(233,223,24)" rx="2" ry="2" />
<text  x="186.14" y="687.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::tick::{{closure}} (331 samples, 0.36%)</title><rect x="525.1" y="885" width="4.2" height="15.0" fill="rgb(227,36,14)" rx="2" ry="2" />
<text  x="528.14" y="895.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (16 samples, 0.02%)</title><rect x="609.1" y="341" width="0.2" height="15.0" fill="rgb(246,51,49)" rx="2" ry="2" />
<text  x="612.13" y="351.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (304 samples, 0.33%)</title><rect x="93.7" y="885" width="3.9" height="15.0" fill="rgb(227,101,44)" rx="2" ry="2" />
<text  x="96.72" y="895.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::clone_waker (12 samples, 0.01%)</title><rect x="461.4" y="917" width="0.1" height="15.0" fill="rgb(229,211,49)" rx="2" ry="2" />
<text  x="464.38" y="927.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (77 samples, 0.08%)</title><rect x="428.0" y="485" width="1.0" height="15.0" fill="rgb(240,111,11)" rx="2" ry="2" />
<text  x="430.98" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::Body&gt;&gt;&gt;&gt; (32 samples, 0.03%)</title><rect x="717.1" y="885" width="0.4" height="15.0" fill="rgb(205,158,35)" rx="2" ry="2" />
<text  x="720.13" y="895.5" ></text>
</g>
<g >
<title>alloc::alloc::box_free (125 samples, 0.13%)</title><rect x="1056.6" y="245" width="1.6" height="15.0" fill="rgb(247,203,16)" rx="2" ry="2" />
<text  x="1059.63" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (85 samples, 0.09%)</title><rect x="12.5" y="981" width="1.0" height="15.0" fill="rgb(232,144,52)" rx="2" ry="2" />
<text  x="15.46" y="991.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (18 samples, 0.02%)</title><rect x="267.1" y="981" width="0.3" height="15.0" fill="rgb(215,220,8)" rx="2" ry="2" />
<text  x="270.14" y="991.5" ></text>
</g>
<g >
<title>_memcg_kmem_charge (39 samples, 0.04%)</title><rect x="260.5" y="533" width="0.5" height="15.0" fill="rgb(223,31,33)" rx="2" ry="2" />
<text  x="263.47" y="543.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.01%)</title><rect x="419.5" y="757" width="0.1" height="15.0" fill="rgb(215,72,40)" rx="2" ry="2" />
<text  x="422.49" y="767.5" ></text>
</g>
<g >
<title>alloc::rc::Rc&lt;T&gt;::get_mut (20 samples, 0.02%)</title><rect x="365.7" y="1013" width="0.2" height="15.0" fill="rgb(245,96,12)" rx="2" ry="2" />
<text  x="368.65" y="1023.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,550 samples, 2.74%)</title><rect x="738.0" y="693" width="32.3" height="15.0" fill="rgb(214,41,50)" rx="2" ry="2" />
<text  x="740.99" y="703.5" >sy..</text>
</g>
<g >
<title>&lt;actix_service::fn_service::FnService&lt;F,Fut,Req,Res,Err&gt; as actix_service::Service&gt;::call (101 samples, 0.11%)</title><rect x="515.4" y="629" width="1.3" height="15.0" fill="rgb(212,167,50)" rx="2" ry="2" />
<text  x="518.39" y="639.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (57 samples, 0.06%)</title><rect x="182.7" y="773" width="0.7" height="15.0" fill="rgb(208,26,49)" rx="2" ry="2" />
<text  x="185.66" y="783.5" ></text>
</g>
<g >
<title>&lt;tokio::time::instant::Instant as core::ops::arith::Sub&gt;::sub (46 samples, 0.05%)</title><rect x="272.0" y="981" width="0.6" height="15.0" fill="rgb(210,67,6)" rx="2" ry="2" />
<text  x="275.04" y="991.5" ></text>
</g>
<g >
<title>_cgroup_bpf_run_filter_sock_addr (25 samples, 0.03%)</title><rect x="1127.8" y="789" width="0.3" height="15.0" fill="rgb(226,102,2)" rx="2" ry="2" />
<text  x="1130.76" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="402.7" y="885" width="0.1" height="15.0" fill="rgb(254,108,45)" rx="2" ry="2" />
<text  x="405.70" y="895.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::shared_v_drop (22 samples, 0.02%)</title><rect x="37.3" y="1109" width="0.3" height="15.0" fill="rgb(251,45,5)" rx="2" ry="2" />
<text  x="40.28" y="1119.5" ></text>
</g>
<g >
<title>enqueue_entity (222 samples, 0.24%)</title><rect x="1102.2" y="229" width="2.8" height="15.0" fill="rgb(206,229,39)" rx="2" ry="2" />
<text  x="1105.16" y="239.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (214 samples, 0.23%)</title><rect x="78.9" y="853" width="2.7" height="15.0" fill="rgb(209,68,22)" rx="2" ry="2" />
<text  x="81.93" y="863.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::release (140 samples, 0.15%)</title><rect x="480.8" y="677" width="1.8" height="15.0" fill="rgb(214,116,43)" rx="2" ry="2" />
<text  x="483.79" y="687.5" ></text>
</g>
<g >
<title>&lt;rust_actix_jsonpath_bench::new as actix_web::service::HttpServiceFactory&gt;::register::new::{{closure}} (13,045 samples, 13.99%)</title><rect x="67.1" y="1045" width="165.1" height="15.0" fill="rgb(220,72,53)" rx="2" ry="2" />
<text  x="70.06" y="1055.5" >&lt;rust_actix_jsonpath_..</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::compile (364 samples, 0.39%)</title><rect x="397.3" y="885" width="4.6" height="15.0" fill="rgb(241,38,37)" rx="2" ry="2" />
<text  x="400.31" y="895.5" ></text>
</g>
<g >
<title>atime_needs_update (47 samples, 0.05%)</title><rect x="828.4" y="549" width="0.6" height="15.0" fill="rgb(208,86,3)" rx="2" ry="2" />
<text  x="831.37" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (68 samples, 0.07%)</title><rect x="812.3" y="725" width="0.9" height="15.0" fill="rgb(230,111,30)" rx="2" ry="2" />
<text  x="815.31" y="735.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (121 samples, 0.13%)</title><rect x="39.0" y="933" width="1.6" height="15.0" fill="rgb(237,229,24)" rx="2" ry="2" />
<text  x="42.03" y="943.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (23 samples, 0.02%)</title><rect x="434.7" y="661" width="0.3" height="15.0" fill="rgb(231,52,17)" rx="2" ry="2" />
<text  x="437.69" y="671.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (9 samples, 0.01%)</title><rect x="559.6" y="773" width="0.1" height="15.0" fill="rgb(252,218,33)" rx="2" ry="2" />
<text  x="562.61" y="783.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths (304 samples, 0.33%)</title><rect x="468.9" y="885" width="3.8" height="15.0" fill="rgb(220,185,13)" rx="2" ry="2" />
<text  x="471.90" y="895.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap (35 samples, 0.04%)</title><rect x="395.9" y="901" width="0.4" height="15.0" fill="rgb(227,29,36)" rx="2" ry="2" />
<text  x="398.86" y="911.5" ></text>
</g>
<g >
<title>_fput (550 samples, 0.59%)</title><rect x="1151.9" y="789" width="7.0" height="15.0" fill="rgb(207,128,43)" rx="2" ry="2" />
<text  x="1154.94" y="799.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (10 samples, 0.01%)</title><rect x="223.8" y="613" width="0.2" height="15.0" fill="rgb(231,81,18)" rx="2" ry="2" />
<text  x="226.84" y="623.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::{{closure}} (22,837 samples, 24.50%)</title><rect x="795.0" y="1189" width="289.0" height="15.0" fill="rgb(218,157,0)" rx="2" ry="2" />
<text  x="797.97" y="1199.5" >std::thread::Builder::spawn_unchecked:..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (63 samples, 0.07%)</title><rect x="44.5" y="1173" width="0.8" height="15.0" fill="rgb(226,114,16)" rx="2" ry="2" />
<text  x="47.48" y="1183.5" ></text>
</g>
<g >
<title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (37 samples, 0.04%)</title><rect x="457.6" y="997" width="0.5" height="15.0" fill="rgb(223,60,20)" rx="2" ry="2" />
<text  x="460.63" y="1007.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (324 samples, 0.35%)</title><rect x="420.7" y="741" width="4.1" height="15.0" fill="rgb(224,87,37)" rx="2" ry="2" />
<text  x="423.65" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::json_path (14 samples, 0.02%)</title><rect x="90.6" y="837" width="0.1" height="15.0" fill="rgb(254,144,51)" rx="2" ry="2" />
<text  x="93.57" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;cookie::jar::CookieJar&gt;&gt; (15 samples, 0.02%)</title><rect x="380.6" y="885" width="0.2" height="15.0" fill="rgb(251,125,22)" rx="2" ry="2" />
<text  x="383.58" y="895.5" ></text>
</g>
<g >
<title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (111 samples, 0.12%)</title><rect x="677.0" y="997" width="1.4" height="15.0" fill="rgb(253,158,16)" rx="2" ry="2" />
<text  x="679.96" y="1007.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll::{{closure}} (1,573 samples, 1.69%)</title><rect x="244.1" y="917" width="19.9" height="15.0" fill="rgb(229,143,52)" rx="2" ry="2" />
<text  x="247.07" y="927.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (29 samples, 0.03%)</title><rect x="471.7" y="741" width="0.4" height="15.0" fill="rgb(207,56,12)" rx="2" ry="2" />
<text  x="474.71" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (20 samples, 0.02%)</title><rect x="97.1" y="789" width="0.2" height="15.0" fill="rgb(216,109,42)" rx="2" ry="2" />
<text  x="100.09" y="799.5" ></text>
</g>
<g >
<title>security_file_free (134 samples, 0.14%)</title><rect x="759.0" y="613" width="1.7" height="15.0" fill="rgb(234,185,22)" rx="2" ry="2" />
<text  x="761.97" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (76 samples, 0.08%)</title><rect x="99.6" y="853" width="0.9" height="15.0" fill="rgb(229,147,13)" rx="2" ry="2" />
<text  x="102.57" y="863.5" ></text>
</g>
<g >
<title>put_prev_entity (10 samples, 0.01%)</title><rect x="944.9" y="597" width="0.1" height="15.0" fill="rgb(235,120,30)" rx="2" ry="2" />
<text  x="947.87" y="607.5" ></text>
</g>
<g >
<title>httparse::iter::Bytes::peek (28 samples, 0.03%)</title><rect x="52.5" y="1141" width="0.3" height="15.0" fill="rgb(229,225,39)" rx="2" ry="2" />
<text  x="55.47" y="1151.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,115 samples, 1.20%)</title><rect x="819.0" y="661" width="14.1" height="15.0" fill="rgb(253,40,35)" rx="2" ry="2" />
<text  x="822.02" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (10 samples, 0.01%)</title><rect x="514.3" y="693" width="0.1" height="15.0" fill="rgb(215,186,30)" rx="2" ry="2" />
<text  x="517.29" y="703.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (43 samples, 0.05%)</title><rect x="110.6" y="805" width="0.5" height="15.0" fill="rgb(235,193,36)" rx="2" ry="2" />
<text  x="113.57" y="815.5" ></text>
</g>
<g >
<title>&lt;mio::net::tcp::TcpStream as mio::event_imp::Evented&gt;::deregister (1,214 samples, 1.30%)</title><rect x="772.0" y="789" width="15.4" height="15.0" fill="rgb(248,215,5)" rx="2" ry="2" />
<text  x="775.04" y="799.5" ></text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (11,291 samples, 12.11%)</title><rect x="533.7" y="997" width="142.9" height="15.0" fill="rgb(235,10,41)" rx="2" ry="2" />
<text  x="536.67" y="1007.5" >&lt;tokio::net::tcp::..</text>
</g>
<g >
<title>actix_http::body::::&lt;impl actix_http::body::Body&gt;::project (15 samples, 0.02%)</title><rect x="455.7" y="1029" width="0.2" height="15.0" fill="rgb(251,144,6)" rx="2" ry="2" />
<text  x="458.72" y="1039.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::expr (1,143 samples, 1.23%)</title><rect x="97.6" y="901" width="14.4" height="15.0" fill="rgb(231,152,41)" rx="2" ry="2" />
<text  x="100.57" y="911.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.01%)</title><rect x="100.4" y="773" width="0.1" height="15.0" fill="rgb(215,129,35)" rx="2" ry="2" />
<text  x="103.36" y="783.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node (59 samples, 0.06%)</title><rect x="813.3" y="741" width="0.7" height="15.0" fill="rgb(215,181,44)" rx="2" ry="2" />
<text  x="816.30" y="751.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (200 samples, 0.21%)</title><rect x="207.4" y="597" width="2.6" height="15.0" fill="rgb(241,27,54)" rx="2" ry="2" />
<text  x="210.42" y="607.5" ></text>
</g>
<g >
<title>_mod_memcg_lruvec_state (25 samples, 0.03%)</title><rect x="1134.3" y="725" width="0.3" height="15.0" fill="rgb(219,164,48)" rx="2" ry="2" />
<text  x="1137.25" y="735.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="130.2" y="677" width="0.1" height="15.0" fill="rgb(213,158,31)" rx="2" ry="2" />
<text  x="133.18" y="687.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.01%)</title><rect x="1081.4" y="661" width="0.1" height="15.0" fill="rgb(242,111,23)" rx="2" ry="2" />
<text  x="1084.39" y="671.5" ></text>
</g>
<g >
<title>sock_rfree (21 samples, 0.02%)</title><rect x="697.1" y="661" width="0.3" height="15.0" fill="rgb(218,186,0)" rx="2" ry="2" />
<text  x="700.14" y="671.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::{{closure}}::{{closure}} (1,071 samples, 1.15%)</title><rect x="472.8" y="965" width="13.5" height="15.0" fill="rgb(249,216,44)" rx="2" ry="2" />
<text  x="475.77" y="975.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="64.2" y="661" width="0.3" height="15.0" fill="rgb(226,78,52)" rx="2" ry="2" />
<text  x="67.19" y="671.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (220 samples, 0.24%)</title><rect x="477.1" y="533" width="2.8" height="15.0" fill="rgb(237,207,11)" rx="2" ry="2" />
<text  x="480.12" y="543.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::clone_waker (33 samples, 0.04%)</title><rect x="237.5" y="997" width="0.4" height="15.0" fill="rgb(245,209,46)" rx="2" ry="2" />
<text  x="240.50" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt; (38 samples, 0.04%)</title><rect x="344.4" y="949" width="0.5" height="15.0" fill="rgb(211,43,0)" rx="2" ry="2" />
<text  x="347.37" y="959.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="971.9" y="613" width="0.3" height="15.0" fill="rgb(208,163,0)" rx="2" ry="2" />
<text  x="974.88" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParserNode&gt; (11 samples, 0.01%)</title><rect x="393.3" y="453" width="0.1" height="15.0" fill="rgb(211,175,17)" rx="2" ry="2" />
<text  x="396.26" y="463.5" ></text>
</g>
<g >
<title>core::ptr::write (9 samples, 0.01%)</title><rect x="373.8" y="885" width="0.1" height="15.0" fill="rgb(232,72,30)" rx="2" ry="2" />
<text  x="376.81" y="895.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (12 samples, 0.01%)</title><rect x="922.9" y="517" width="0.2" height="15.0" fill="rgb(205,181,16)" rx="2" ry="2" />
<text  x="925.93" y="527.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (39 samples, 0.04%)</title><rect x="448.6" y="949" width="0.5" height="15.0" fill="rgb(209,62,11)" rx="2" ry="2" />
<text  x="451.57" y="959.5" ></text>
</g>
<g >
<title>&lt;actix_http::request::Request as actix_http::h1::decoder::MessageType&gt;::decode (26 samples, 0.03%)</title><rect x="342.7" y="1029" width="0.3" height="15.0" fill="rgb(249,144,20)" rx="2" ry="2" />
<text  x="345.65" y="1039.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::compute_absolute_path_filter (82 samples, 0.09%)</title><rect x="239.4" y="917" width="1.1" height="15.0" fill="rgb(210,139,7)" rx="2" ry="2" />
<text  x="242.42" y="927.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Read&gt;::read (43 samples, 0.05%)</title><rect x="1033.2" y="485" width="0.6" height="15.0" fill="rgb(211,64,22)" rx="2" ry="2" />
<text  x="1036.21" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (16 samples, 0.02%)</title><rect x="210.0" y="629" width="0.2" height="15.0" fill="rgb(223,148,22)" rx="2" ry="2" />
<text  x="212.95" y="639.5" ></text>
</g>
<g >
<title>_alloc_file (494 samples, 0.53%)</title><rect x="1138.7" y="741" width="6.2" height="15.0" fill="rgb(210,201,28)" rx="2" ry="2" />
<text  x="1141.67" y="751.5" ></text>
</g>
<g >
<title>_ip_local_out (28 samples, 0.03%)</title><rect x="300.0" y="773" width="0.4" height="15.0" fill="rgb(213,42,1)" rx="2" ry="2" />
<text  x="303.03" y="783.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next (8 samples, 0.01%)</title><rect x="120.5" y="853" width="0.1" height="15.0" fill="rgb(228,42,8)" rx="2" ry="2" />
<text  x="123.47" y="863.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_response (442 samples, 0.47%)</title><rect x="454.0" y="1077" width="5.6" height="15.0" fill="rgb(240,0,54)" rx="2" ry="2" />
<text  x="457.05" y="1087.5" ></text>
</g>
<g >
<title>aa_sock_perm (37 samples, 0.04%)</title><rect x="333.2" y="885" width="0.5" height="15.0" fill="rgb(224,50,23)" rx="2" ry="2" />
<text  x="336.25" y="895.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::clone_waker (9 samples, 0.01%)</title><rect x="462.6" y="837" width="0.1" height="15.0" fill="rgb(213,214,41)" rx="2" ry="2" />
<text  x="465.57" y="847.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::cmp::CmpOr as jsonpath_lib::selector::cmp::Cmp&gt;::cmp_json::{{closure}} (186 samples, 0.20%)</title><rect x="168.2" y="837" width="2.4" height="15.0" fill="rgb(235,180,43)" rx="2" ry="2" />
<text  x="171.21" y="847.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (15 samples, 0.02%)</title><rect x="1150.3" y="821" width="0.2" height="15.0" fill="rgb(222,17,3)" rx="2" ry="2" />
<text  x="1153.33" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (20,985 samples, 22.51%)</title><rect x="529.3" y="1109" width="265.7" height="15.0" fill="rgb(225,28,29)" rx="2" ry="2" />
<text  x="532.33" y="1119.5" >tokio::runtime::task::core::Core&lt;T,..</text>
</g>
<g >
<title>raw_spin_lock_irqsave (17 samples, 0.02%)</title><rect x="252.0" y="485" width="0.2" height="15.0" fill="rgb(241,100,32)" rx="2" ry="2" />
<text  x="255.02" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="167.6" y="773" width="0.3" height="15.0" fill="rgb(235,226,53)" rx="2" ry="2" />
<text  x="170.65" y="783.5" ></text>
</g>
<g >
<title>do_epoll_ctl (18 samples, 0.02%)</title><rect x="785.3" y="677" width="0.2" height="15.0" fill="rgb(249,168,21)" rx="2" ry="2" />
<text  x="788.30" y="687.5" ></text>
</g>
<g >
<title>_GI___pthread_mutex_unlock (71 samples, 0.08%)</title><rect x="1077.9" y="565" width="0.9" height="15.0" fill="rgb(216,109,15)" rx="2" ry="2" />
<text  x="1080.95" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (50 samples, 0.05%)</title><rect x="10.0" y="1237" width="0.6" height="15.0" fill="rgb(249,190,8)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (20,985 samples, 22.51%)</title><rect x="529.3" y="1205" width="265.7" height="15.0" fill="rgb(232,189,39)" rx="2" ry="2" />
<text  x="532.33" y="1215.5" >std::panicking::try::do_call</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (354 samples, 0.38%)</title><rect x="141.5" y="789" width="4.5" height="15.0" fill="rgb(234,13,44)" rx="2" ry="2" />
<text  x="144.47" y="799.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (39 samples, 0.04%)</title><rect x="341.4" y="869" width="0.5" height="15.0" fill="rgb(228,34,15)" rx="2" ry="2" />
<text  x="344.36" y="879.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,495 samples, 2.68%)</title><rect x="738.2" y="677" width="31.6" height="15.0" fill="rgb(210,27,34)" rx="2" ry="2" />
<text  x="741.18" y="687.5" >ex..</text>
</g>
<g >
<title>get_nohz_timer_target (34 samples, 0.04%)</title><rect x="860.5" y="613" width="0.4" height="15.0" fill="rgb(219,180,52)" rx="2" ry="2" />
<text  x="863.50" y="623.5" ></text>
</g>
<g >
<title>_ip_local_out (15 samples, 0.02%)</title><rect x="583.7" y="661" width="0.2" height="15.0" fill="rgb(208,116,38)" rx="2" ry="2" />
<text  x="586.75" y="671.5" ></text>
</g>
<g >
<title>sock_zerocopy_put (14 samples, 0.02%)</title><rect x="559.9" y="773" width="0.1" height="15.0" fill="rgb(248,75,29)" rx="2" ry="2" />
<text  x="562.87" y="783.5" ></text>
</g>
<g >
<title>_ip_local_out (37 samples, 0.04%)</title><rect x="621.8" y="197" width="0.4" height="15.0" fill="rgb(225,185,53)" rx="2" ry="2" />
<text  x="624.76" y="207.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (770 samples, 0.83%)</title><rect x="515.4" y="1109" width="9.7" height="15.0" fill="rgb(225,136,25)" rx="2" ry="2" />
<text  x="518.39" y="1119.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (24 samples, 0.03%)</title><rect x="31.7" y="1093" width="0.3" height="15.0" fill="rgb(233,116,10)" rx="2" ry="2" />
<text  x="34.73" y="1103.5" ></text>
</g>
<g >
<title>_check_object_size (19 samples, 0.02%)</title><rect x="509.8" y="597" width="0.3" height="15.0" fill="rgb(207,214,47)" rx="2" ry="2" />
<text  x="512.82" y="607.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_span (14 samples, 0.02%)</title><rect x="239.2" y="885" width="0.2" height="15.0" fill="rgb(239,184,18)" rx="2" ry="2" />
<text  x="242.25" y="895.5" ></text>
</g>
<g >
<title>ep_insert (1,108 samples, 1.19%)</title><rect x="248.3" y="581" width="14.1" height="15.0" fill="rgb(218,53,0)" rx="2" ry="2" />
<text  x="251.35" y="591.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (28 samples, 0.03%)</title><rect x="64.2" y="693" width="0.3" height="15.0" fill="rgb(245,85,52)" rx="2" ry="2" />
<text  x="67.18" y="703.5" ></text>
</g>
<g >
<title>kfree_skbmem (111 samples, 0.12%)</title><rect x="692.9" y="677" width="1.4" height="15.0" fill="rgb(243,107,15)" rx="2" ry="2" />
<text  x="695.89" y="687.5" ></text>
</g>
<g >
<title>tokio::time::ms (17 samples, 0.02%)</title><rect x="991.7" y="837" width="0.2" height="15.0" fill="rgb(217,123,3)" rx="2" ry="2" />
<text  x="994.73" y="847.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (10 samples, 0.01%)</title><rect x="194.6" y="549" width="0.1" height="15.0" fill="rgb(232,23,52)" rx="2" ry="2" />
<text  x="197.56" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (189 samples, 0.20%)</title><rect x="275.3" y="949" width="2.4" height="15.0" fill="rgb(232,201,0)" rx="2" ry="2" />
<text  x="278.33" y="959.5" ></text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::upgrade (21 samples, 0.02%)</title><rect x="793.7" y="757" width="0.3" height="15.0" fill="rgb(251,94,30)" rx="2" ry="2" />
<text  x="796.69" y="767.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (31 samples, 0.03%)</title><rect x="132.6" y="837" width="0.4" height="15.0" fill="rgb(238,3,11)" rx="2" ry="2" />
<text  x="135.61" y="847.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (51 samples, 0.05%)</title><rect x="192.8" y="597" width="0.6" height="15.0" fill="rgb(218,213,1)" rx="2" ry="2" />
<text  x="195.76" y="607.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (142 samples, 0.15%)</title><rect x="196.2" y="533" width="1.8" height="15.0" fill="rgb(236,7,48)" rx="2" ry="2" />
<text  x="199.22" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (80 samples, 0.09%)</title><rect x="470.3" y="789" width="1.1" height="15.0" fill="rgb(234,16,15)" rx="2" ry="2" />
<text  x="473.34" y="799.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (8 samples, 0.01%)</title><rect x="176.8" y="501" width="0.1" height="15.0" fill="rgb(240,9,25)" rx="2" ry="2" />
<text  x="179.80" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (80 samples, 0.09%)</title><rect x="470.3" y="773" width="1.1" height="15.0" fill="rgb(223,102,24)" rx="2" ry="2" />
<text  x="473.34" y="783.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (25 samples, 0.03%)</title><rect x="462.4" y="917" width="0.4" height="15.0" fill="rgb(249,164,34)" rx="2" ry="2" />
<text  x="465.44" y="927.5" ></text>
</g>
<g >
<title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (26 samples, 0.03%)</title><rect x="273.5" y="965" width="0.3" height="15.0" fill="rgb(210,126,40)" rx="2" ry="2" />
<text  x="276.46" y="975.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (10 samples, 0.01%)</title><rect x="116.4" y="933" width="0.1" height="15.0" fill="rgb(210,153,24)" rx="2" ry="2" />
<text  x="119.42" y="943.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::new (26 samples, 0.03%)</title><rect x="344.9" y="981" width="0.3" height="15.0" fill="rgb(238,45,22)" rx="2" ry="2" />
<text  x="347.86" y="991.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::new (11 samples, 0.01%)</title><rect x="503.6" y="1141" width="0.1" height="15.0" fill="rgb(214,114,13)" rx="2" ry="2" />
<text  x="506.57" y="1151.5" ></text>
</g>
<g >
<title>tcp_data_ready (24 samples, 0.03%)</title><rect x="638.8" y="309" width="0.3" height="15.0" fill="rgb(254,27,44)" rx="2" ry="2" />
<text  x="641.76" y="319.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path_in_key (42 samples, 0.05%)</title><rect x="108.7" y="821" width="0.5" height="15.0" fill="rgb(250,105,17)" rx="2" ry="2" />
<text  x="111.70" y="831.5" ></text>
</g>
<g >
<title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (9 samples, 0.01%)</title><rect x="1067.1" y="277" width="0.1" height="15.0" fill="rgb(235,99,0)" rx="2" ry="2" />
<text  x="1070.06" y="287.5" ></text>
</g>
<g >
<title>std::io::error::Error::last_os_error (8 samples, 0.01%)</title><rect x="1117.4" y="901" width="0.1" height="15.0" fill="rgb(224,70,24)" rx="2" ry="2" />
<text  x="1120.39" y="911.5" ></text>
</g>
<g >
<title>unlink_chunk (8 samples, 0.01%)</title><rect x="55.5" y="677" width="0.1" height="15.0" fill="rgb(253,55,21)" rx="2" ry="2" />
<text  x="58.52" y="687.5" ></text>
</g>
<g >
<title>tcp_wfree (8 samples, 0.01%)</title><rect x="325.9" y="661" width="0.1" height="15.0" fill="rgb(210,41,46)" rx="2" ry="2" />
<text  x="328.87" y="671.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (11 samples, 0.01%)</title><rect x="413.9" y="709" width="0.2" height="15.0" fill="rgb(246,33,32)" rx="2" ry="2" />
<text  x="416.95" y="719.5" ></text>
</g>
<g >
<title>&lt;std::process::ChildStdin as std::sys_common::AsInner&lt;std::sys::unix::pipe::AnonPipe&gt;&gt;::as_inner (57 samples, 0.06%)</title><rect x="513.5" y="677" width="0.7" height="15.0" fill="rgb(223,102,5)" rx="2" ry="2" />
<text  x="516.47" y="687.5" ></text>
</g>
<g >
<title>anon_pipe_buf_release (33 samples, 0.04%)</title><rect x="823.5" y="581" width="0.5" height="15.0" fill="rgb(222,113,39)" rx="2" ry="2" />
<text  x="826.55" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,433 samples, 1.54%)</title><rect x="207.1" y="661" width="18.1" height="15.0" fill="rgb(251,98,2)" rx="2" ry="2" />
<text  x="210.09" y="671.5" ></text>
</g>
<g >
<title>alloc::rc::RcInnerPtr::inc_strong (14 samples, 0.02%)</title><rect x="1068.4" y="309" width="0.1" height="15.0" fill="rgb(231,95,18)" rx="2" ry="2" />
<text  x="1071.36" y="319.5" ></text>
</g>
<g >
<title>actix_http::message::BoxedResponsePool::release (26 samples, 0.03%)</title><rect x="449.7" y="917" width="0.3" height="15.0" fill="rgb(205,164,23)" rx="2" ry="2" />
<text  x="452.67" y="927.5" ></text>
</g>
<g >
<title>aa_sk_perm (54 samples, 0.06%)</title><rect x="703.9" y="709" width="0.7" height="15.0" fill="rgb(223,25,7)" rx="2" ry="2" />
<text  x="706.88" y="719.5" ></text>
</g>
<g >
<title>core::ptr::read (8 samples, 0.01%)</title><rect x="140.9" y="853" width="0.1" height="15.0" fill="rgb(245,215,20)" rx="2" ry="2" />
<text  x="143.88" y="863.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::PathParser::compile (4,291 samples, 4.60%)</title><rect x="67.1" y="1029" width="54.3" height="15.0" fill="rgb(208,204,51)" rx="2" ry="2" />
<text  x="70.06" y="1039.5" >jsonp..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.02%)</title><rect x="143.8" y="549" width="0.2" height="15.0" fill="rgb(206,171,8)" rx="2" ry="2" />
<text  x="146.78" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="240.5" y="853" width="0.1" height="15.0" fill="rgb(246,90,2)" rx="2" ry="2" />
<text  x="243.46" y="863.5" ></text>
</g>
<g >
<title>tokio::coop::budget (770 samples, 0.83%)</title><rect x="515.4" y="997" width="9.7" height="15.0" fill="rgb(227,8,1)" rx="2" ry="2" />
<text  x="518.39" y="1007.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (22 samples, 0.02%)</title><rect x="246.2" y="597" width="0.3" height="15.0" fill="rgb(246,102,2)" rx="2" ry="2" />
<text  x="249.23" y="607.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (18 samples, 0.02%)</title><rect x="826.4" y="549" width="0.3" height="15.0" fill="rgb(224,68,13)" rx="2" ry="2" />
<text  x="829.45" y="559.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (55 samples, 0.06%)</title><rect x="700.7" y="629" width="0.7" height="15.0" fill="rgb(246,169,9)" rx="2" ry="2" />
<text  x="703.69" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (316 samples, 0.34%)</title><rect x="155.2" y="693" width="4.0" height="15.0" fill="rgb(229,169,11)" rx="2" ry="2" />
<text  x="158.22" y="703.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.02%)</title><rect x="349.6" y="837" width="0.2" height="15.0" fill="rgb(249,40,18)" rx="2" ry="2" />
<text  x="352.59" y="847.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (44 samples, 0.05%)</title><rect x="142.2" y="629" width="0.6" height="15.0" fill="rgb(226,188,33)" rx="2" ry="2" />
<text  x="145.21" y="639.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::all_with_strs::{{closure}} (21 samples, 0.02%)</title><rect x="126.1" y="725" width="0.3" height="15.0" fill="rgb(214,196,5)" rx="2" ry="2" />
<text  x="129.10" y="735.5" ></text>
</g>
<g >
<title>ip_queue_xmit (15 samples, 0.02%)</title><rect x="328.6" y="837" width="0.2" height="15.0" fill="rgb(208,205,23)" rx="2" ry="2" />
<text  x="331.64" y="847.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (31 samples, 0.03%)</title><rect x="180.9" y="581" width="0.4" height="15.0" fill="rgb(227,87,34)" rx="2" ry="2" />
<text  x="183.93" y="591.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::Level&lt;T&gt;::next_occupied_slot (51 samples, 0.05%)</title><rect x="1008.2" y="805" width="0.7" height="15.0" fill="rgb(220,113,17)" rx="2" ry="2" />
<text  x="1011.22" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (101 samples, 0.11%)</title><rect x="87.1" y="821" width="1.3" height="15.0" fill="rgb(253,6,47)" rx="2" ry="2" />
<text  x="90.09" y="831.5" ></text>
</g>
<g >
<title>_rust_alloc (13 samples, 0.01%)</title><rect x="222.7" y="469" width="0.2" height="15.0" fill="rgb(238,77,6)" rx="2" ry="2" />
<text  x="225.71" y="479.5" ></text>
</g>
<g >
<title>tokio::io::driver::Inner::add_source (47 samples, 0.05%)</title><rect x="524.5" y="565" width="0.6" height="15.0" fill="rgb(242,44,50)" rx="2" ry="2" />
<text  x="527.53" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (39 samples, 0.04%)</title><rect x="128.7" y="725" width="0.5" height="15.0" fill="rgb(224,49,15)" rx="2" ry="2" />
<text  x="131.71" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.03%)</title><rect x="424.4" y="661" width="0.4" height="15.0" fill="rgb(232,49,32)" rx="2" ry="2" />
<text  x="427.43" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.03%)</title><rect x="153.4" y="581" width="0.4" height="15.0" fill="rgb(229,32,3)" rx="2" ry="2" />
<text  x="156.40" y="591.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.01%)</title><rect x="226.2" y="597" width="0.1" height="15.0" fill="rgb(252,165,19)" rx="2" ry="2" />
<text  x="229.16" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (27 samples, 0.03%)</title><rect x="353.0" y="965" width="0.3" height="15.0" fill="rgb(232,141,27)" rx="2" ry="2" />
<text  x="355.98" y="975.5" ></text>
</g>
<g >
<title>tokio::coop::budget (331 samples, 0.36%)</title><rect x="525.1" y="965" width="4.2" height="15.0" fill="rgb(232,147,30)" rx="2" ry="2" />
<text  x="528.14" y="975.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3,283 samples, 3.52%)</title><rect x="600.8" y="389" width="41.6" height="15.0" fill="rgb(207,148,22)" rx="2" ry="2" />
<text  x="603.85" y="399.5" >ip_..</text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (57 samples, 0.06%)</title><rect x="972.3" y="613" width="0.7" height="15.0" fill="rgb(248,221,48)" rx="2" ry="2" />
<text  x="975.31" y="623.5" ></text>
</g>
<g >
<title>hashbrown::raw::is_full (35 samples, 0.04%)</title><rect x="224.3" y="613" width="0.4" height="15.0" fill="rgb(210,175,15)" rx="2" ry="2" />
<text  x="227.26" y="623.5" ></text>
</g>
<g >
<title>kmem_cache_free (64 samples, 0.07%)</title><rect x="1153.0" y="725" width="0.8" height="15.0" fill="rgb(253,69,6)" rx="2" ry="2" />
<text  x="1156.04" y="735.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3,051 samples, 3.27%)</title><rect x="186.6" y="741" width="38.6" height="15.0" fill="rgb(252,87,49)" rx="2" ry="2" />
<text  x="189.61" y="751.5" >&lt;co..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (11 samples, 0.01%)</title><rect x="426.3" y="661" width="0.2" height="15.0" fill="rgb(254,191,39)" rx="2" ry="2" />
<text  x="429.34" y="671.5" ></text>
</g>
<g >
<title>netif_rx_internal (103 samples, 0.11%)</title><rect x="649.7" y="501" width="1.3" height="15.0" fill="rgb(246,8,10)" rx="2" ry="2" />
<text  x="652.72" y="511.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::State::is_closed (71 samples, 0.08%)</title><rect x="1052.8" y="309" width="0.9" height="15.0" fill="rgb(221,94,42)" rx="2" ry="2" />
<text  x="1055.76" y="319.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (11 samples, 0.01%)</title><rect x="218.0" y="565" width="0.1" height="15.0" fill="rgb(228,2,27)" rx="2" ry="2" />
<text  x="220.98" y="575.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::as_mut_slices (10 samples, 0.01%)</title><rect x="718.7" y="869" width="0.2" height="15.0" fill="rgb(213,91,48)" rx="2" ry="2" />
<text  x="721.72" y="879.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (41 samples, 0.04%)</title><rect x="1028.2" y="549" width="0.5" height="15.0" fill="rgb(229,114,10)" rx="2" ry="2" />
<text  x="1031.21" y="559.5" ></text>
</g>
<g >
<title>int_free (14 samples, 0.02%)</title><rect x="379.7" y="677" width="0.2" height="15.0" fill="rgb(218,201,34)" rx="2" ry="2" />
<text  x="382.72" y="687.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_request (8,854 samples, 9.50%)</title><rect x="342.0" y="1077" width="112.0" height="15.0" fill="rgb(218,16,47)" rx="2" ry="2" />
<text  x="344.97" y="1087.5" >actix_http::h..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_or (14 samples, 0.02%)</title><rect x="484.2" y="549" width="0.1" height="15.0" fill="rgb(208,129,36)" rx="2" ry="2" />
<text  x="487.16" y="559.5" ></text>
</g>
<g >
<title>_GI___clone (22,837 samples, 24.50%)</title><rect x="795.0" y="1269" width="289.0" height="15.0" fill="rgb(250,196,49)" rx="2" ry="2" />
<text  x="797.97" y="1279.5" >_GI___clone</text>
</g>
<g >
<title>set_normalized_timespec64 (17 samples, 0.02%)</title><rect x="951.1" y="645" width="0.2" height="15.0" fill="rgb(212,69,10)" rx="2" ry="2" />
<text  x="954.07" y="655.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (9 samples, 0.01%)</title><rect x="972.2" y="597" width="0.1" height="15.0" fill="rgb(207,200,1)" rx="2" ry="2" />
<text  x="975.20" y="607.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::transition_to_notified (46 samples, 0.05%)</title><rect x="973.8" y="741" width="0.6" height="15.0" fill="rgb(254,6,12)" rx="2" ry="2" />
<text  x="976.79" y="751.5" ></text>
</g>
<g >
<title>_libc_enable_asynccancel (35 samples, 0.04%)</title><rect x="836.9" y="741" width="0.4" height="15.0" fill="rgb(242,96,10)" rx="2" ry="2" />
<text  x="839.89" y="751.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (36 samples, 0.04%)</title><rect x="237.5" y="1045" width="0.4" height="15.0" fill="rgb(222,124,11)" rx="2" ry="2" />
<text  x="240.46" y="1055.5" ></text>
</g>
<g >
<title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (80 samples, 0.09%)</title><rect x="969.4" y="597" width="1.0" height="15.0" fill="rgb(240,145,28)" rx="2" ry="2" />
<text  x="972.38" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="91.5" y="709" width="0.2" height="15.0" fill="rgb(246,44,44)" rx="2" ry="2" />
<text  x="94.48" y="719.5" ></text>
</g>
<g >
<title>ip_rcv_finish_cor.sr. (24 samples, 0.03%)</title><rect x="643.8" y="421" width="0.3" height="15.0" fill="rgb(227,191,32)" rx="2" ry="2" />
<text  x="646.81" y="431.5" ></text>
</g>
<g >
<title>_slab_free (20 samples, 0.02%)</title><rect x="694.0" y="645" width="0.3" height="15.0" fill="rgb(251,95,11)" rx="2" ry="2" />
<text  x="697.04" y="655.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (24 samples, 0.03%)</title><rect x="777.6" y="613" width="0.3" height="15.0" fill="rgb(239,96,7)" rx="2" ry="2" />
<text  x="780.56" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt; (12 samples, 0.01%)</title><rect x="715.6" y="997" width="0.1" height="15.0" fill="rgb(206,10,7)" rx="2" ry="2" />
<text  x="718.60" y="1007.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (55 samples, 0.06%)</title><rect x="228.0" y="757" width="0.7" height="15.0" fill="rgb(208,192,46)" rx="2" ry="2" />
<text  x="230.95" y="767.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (9 samples, 0.01%)</title><rect x="783.9" y="613" width="0.1" height="15.0" fill="rgb(247,148,47)" rx="2" ry="2" />
<text  x="786.85" y="623.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="423.4" y="629" width="0.2" height="15.0" fill="rgb(218,109,13)" rx="2" ry="2" />
<text  x="426.43" y="639.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (363 samples, 0.39%)</title><rect x="73.5" y="837" width="4.6" height="15.0" fill="rgb(248,70,21)" rx="2" ry="2" />
<text  x="76.48" y="847.5" ></text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::prepare_uninitialized_buffer (21 samples, 0.02%)</title><rect x="682.1" y="949" width="0.3" height="15.0" fill="rgb(224,36,0)" rx="2" ry="2" />
<text  x="685.10" y="959.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (76 samples, 0.08%)</title><rect x="109.4" y="789" width="0.9" height="15.0" fill="rgb(246,159,11)" rx="2" ry="2" />
<text  x="112.36" y="799.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::drop_join_handle_slow (92 samples, 0.10%)</title><rect x="1044.3" y="293" width="1.2" height="15.0" fill="rgb(237,55,13)" rx="2" ry="2" />
<text  x="1047.33" y="303.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (156 samples, 0.17%)</title><rect x="117.6" y="901" width="2.0" height="15.0" fill="rgb(226,159,54)" rx="2" ry="2" />
<text  x="120.61" y="911.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.01%)</title><rect x="677.3" y="885" width="0.1" height="15.0" fill="rgb(231,222,24)" rx="2" ry="2" />
<text  x="680.25" y="895.5" ></text>
</g>
<g >
<title>tcp_send_ack (1,014 samples, 1.09%)</title><rect x="615.4" y="293" width="12.8" height="15.0" fill="rgb(237,36,38)" rx="2" ry="2" />
<text  x="618.41" y="303.5" ></text>
</g>
<g >
<title>timestamp_truncate (9 samples, 0.01%)</title><rect x="828.8" y="517" width="0.1" height="15.0" fill="rgb(251,54,15)" rx="2" ry="2" />
<text  x="831.76" y="527.5" ></text>
</g>
<g >
<title>tcp_established_options (24 samples, 0.03%)</title><rect x="669.8" y="725" width="0.3" height="15.0" fill="rgb(229,58,22)" rx="2" ry="2" />
<text  x="672.80" y="735.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (17 samples, 0.02%)</title><rect x="37.1" y="1061" width="0.2" height="15.0" fill="rgb(248,222,48)" rx="2" ry="2" />
<text  x="40.06" y="1071.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::{{closure}} (8,015 samples, 8.60%)</title><rect x="1086.8" y="1189" width="101.5" height="15.0" fill="rgb(239,157,28)" rx="2" ry="2" />
<text  x="1089.83" y="1199.5" >std::thread:..</text>
</g>
<g >
<title>&lt;actix_web::request::HttpRequest as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="437.5" y="869" width="0.4" height="15.0" fill="rgb(207,129,19)" rx="2" ry="2" />
<text  x="440.46" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::net::tcp::stream::TcpStream&gt; (4,740 samples, 5.08%)</title><rect x="732.8" y="885" width="60.0" height="15.0" fill="rgb(215,159,2)" rx="2" ry="2" />
<text  x="735.83" y="895.5" >core::..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (19 samples, 0.02%)</title><rect x="413.8" y="741" width="0.3" height="15.0" fill="rgb(249,8,25)" rx="2" ry="2" />
<text  x="416.84" y="751.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::Flags::contains (13 samples, 0.01%)</title><rect x="533.1" y="1013" width="0.2" height="15.0" fill="rgb(226,117,54)" rx="2" ry="2" />
<text  x="536.13" y="1023.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk (763 samples, 0.82%)</title><rect x="173.7" y="853" width="9.7" height="15.0" fill="rgb(247,21,35)" rx="2" ry="2" />
<text  x="176.73" y="863.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::try_read_output (25 samples, 0.03%)</title><rect x="1042.5" y="309" width="0.3" height="15.0" fill="rgb(231,177,48)" rx="2" ry="2" />
<text  x="1045.47" y="319.5" ></text>
</g>
<g >
<title>_x64_sys_write (1,561 samples, 1.67%)</title><rect x="1094.0" y="501" width="19.7" height="15.0" fill="rgb(230,97,38)" rx="2" ry="2" />
<text  x="1096.96" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (40 samples, 0.04%)</title><rect x="418.9" y="837" width="0.5" height="15.0" fill="rgb(215,144,44)" rx="2" ry="2" />
<text  x="421.87" y="847.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (21 samples, 0.02%)</title><rect x="110.9" y="789" width="0.2" height="15.0" fill="rgb(228,148,4)" rx="2" ry="2" />
<text  x="113.85" y="799.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (94 samples, 0.10%)</title><rect x="1011.7" y="805" width="1.2" height="15.0" fill="rgb(252,209,52)" rx="2" ry="2" />
<text  x="1014.72" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (173 samples, 0.19%)</title><rect x="278.2" y="1061" width="2.2" height="15.0" fill="rgb(252,213,9)" rx="2" ry="2" />
<text  x="281.18" y="1071.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::wakeup (33 samples, 0.04%)</title><rect x="1115.9" y="773" width="0.5" height="15.0" fill="rgb(222,110,14)" rx="2" ry="2" />
<text  x="1118.95" y="783.5" ></text>
</g>
<g >
<title>fput (18 samples, 0.02%)</title><rect x="705.9" y="773" width="0.2" height="15.0" fill="rgb(230,73,35)" rx="2" ry="2" />
<text  x="708.86" y="783.5" ></text>
</g>
<g >
<title>_const_udelay (21 samples, 0.02%)</title><rect x="1164.4" y="757" width="0.3" height="15.0" fill="rgb(215,98,11)" rx="2" ry="2" />
<text  x="1167.40" y="767.5" ></text>
</g>
<g >
<title>raw_spin_lock (26 samples, 0.03%)</title><rect x="948.2" y="613" width="0.3" height="15.0" fill="rgb(224,114,19)" rx="2" ry="2" />
<text  x="951.17" y="623.5" ></text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (33 samples, 0.04%)</title><rect x="1115.9" y="709" width="0.5" height="15.0" fill="rgb(217,71,35)" rx="2" ry="2" />
<text  x="1118.95" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk::{{closure}} (766 samples, 0.82%)</title><rect x="173.7" y="869" width="9.7" height="15.0" fill="rgb(243,199,45)" rx="2" ry="2" />
<text  x="176.69" y="879.5" ></text>
</g>
<g >
<title>iov_iter_advance (26 samples, 0.03%)</title><rect x="566.6" y="741" width="0.3" height="15.0" fill="rgb(244,122,19)" rx="2" ry="2" />
<text  x="569.58" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (29 samples, 0.03%)</title><rect x="36.7" y="1029" width="0.4" height="15.0" fill="rgb(236,8,15)" rx="2" ry="2" />
<text  x="39.70" y="1039.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::read_available (55 samples, 0.06%)</title><rect x="243.4" y="1173" width="0.7" height="15.0" fill="rgb(222,218,1)" rx="2" ry="2" />
<text  x="246.37" y="1183.5" ></text>
</g>
<g >
<title>aa_sk_perm (37 samples, 0.04%)</title><rect x="333.2" y="869" width="0.5" height="15.0" fill="rgb(220,90,23)" rx="2" ry="2" />
<text  x="336.25" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt;&gt; (928 samples, 1.00%)</title><rect x="383.5" y="725" width="11.7" height="15.0" fill="rgb(237,199,27)" rx="2" ry="2" />
<text  x="386.48" y="735.5" ></text>
</g>
<g >
<title>&lt;tokio::time::instant::Instant as core::ops::arith::Sub&gt;::sub (20 samples, 0.02%)</title><rect x="976.0" y="853" width="0.3" height="15.0" fill="rgb(238,53,46)" rx="2" ry="2" />
<text  x="979.01" y="863.5" ></text>
</g>
<g >
<title>core::tuple::&lt;impl core::cmp::Ord for  (15 samples, 0.02%)</title><rect x="272.7" y="885" width="0.2" height="15.0" fill="rgb(244,213,26)" rx="2" ry="2" />
<text  x="275.74" y="895.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read_ready (55 samples, 0.06%)</title><rect x="243.4" y="1093" width="0.7" height="15.0" fill="rgb(212,106,48)" rx="2" ry="2" />
<text  x="246.37" y="1103.5" ></text>
</g>
<g >
<title>int_free (18 samples, 0.02%)</title><rect x="719.8" y="821" width="0.2" height="15.0" fill="rgb(250,136,29)" rx="2" ry="2" />
<text  x="722.76" y="831.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (17 samples, 0.02%)</title><rect x="146.9" y="661" width="0.2" height="15.0" fill="rgb(244,161,47)" rx="2" ry="2" />
<text  x="149.91" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (11 samples, 0.01%)</title><rect x="449.7" y="837" width="0.1" height="15.0" fill="rgb(249,23,30)" rx="2" ry="2" />
<text  x="452.71" y="847.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::from_raw (17 samples, 0.02%)</title><rect x="973.6" y="709" width="0.2" height="15.0" fill="rgb(237,166,30)" rx="2" ry="2" />
<text  x="976.58" y="719.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (25 samples, 0.03%)</title><rect x="14.5" y="1093" width="0.3" height="15.0" fill="rgb(207,219,38)" rx="2" ry="2" />
<text  x="17.49" y="1103.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (1,293 samples, 1.39%)</title><rect x="418.9" y="885" width="16.3" height="15.0" fill="rgb(224,179,2)" rx="2" ry="2" />
<text  x="421.87" y="895.5" ></text>
</g>
<g >
<title>raw_spin_lock (9 samples, 0.01%)</title><rect x="766.0" y="549" width="0.1" height="15.0" fill="rgb(237,15,47)" rx="2" ry="2" />
<text  x="769.00" y="559.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp_json_number::{{closure}} (316 samples, 0.34%)</title><rect x="160.3" y="741" width="4.0" height="15.0" fill="rgb(233,56,41)" rx="2" ry="2" />
<text  x="163.33" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (78 samples, 0.08%)</title><rect x="81.8" y="853" width="1.0" height="15.0" fill="rgb(248,191,5)" rx="2" ry="2" />
<text  x="84.85" y="863.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::borrow_mut (18 samples, 0.02%)</title><rect x="1066.8" y="261" width="0.2" height="15.0" fill="rgb(235,19,8)" rx="2" ry="2" />
<text  x="1069.76" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (193 samples, 0.21%)</title><rect x="141.5" y="757" width="2.5" height="15.0" fill="rgb(226,16,11)" rx="2" ry="2" />
<text  x="144.55" y="767.5" ></text>
</g>
<g >
<title>actix_http::request::Request::new (353 samples, 0.38%)</title><rect x="37.6" y="1173" width="4.4" height="15.0" fill="rgb(218,117,18)" rx="2" ry="2" />
<text  x="40.56" y="1183.5" ></text>
</g>
<g >
<title>_wake_up (125 samples, 0.13%)</title><rect x="288.8" y="885" width="1.6" height="15.0" fill="rgb(246,105,53)" rx="2" ry="2" />
<text  x="291.80" y="895.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next_char (19 samples, 0.02%)</title><rect x="96.3" y="821" width="0.2" height="15.0" fill="rgb(208,196,41)" rx="2" ry="2" />
<text  x="99.26" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::collect_next_with_str (613 samples, 0.66%)</title><rect x="124.2" y="901" width="7.8" height="15.0" fill="rgb(222,47,0)" rx="2" ry="2" />
<text  x="127.20" y="911.5" ></text>
</g>
<g >
<title>int_malloc (69 samples, 0.07%)</title><rect x="1090.3" y="821" width="0.9" height="15.0" fill="rgb(246,116,38)" rx="2" ry="2" />
<text  x="1093.33" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (108 samples, 0.12%)</title><rect x="63.3" y="725" width="1.4" height="15.0" fill="rgb(252,192,38)" rx="2" ry="2" />
<text  x="66.32" y="735.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (21 samples, 0.02%)</title><rect x="1076.9" y="645" width="0.3" height="15.0" fill="rgb(230,11,18)" rx="2" ry="2" />
<text  x="1079.91" y="655.5" ></text>
</g>
<g >
<title>tokio::time::clock::Clock::now (22 samples, 0.02%)</title><rect x="982.7" y="853" width="0.3" height="15.0" fill="rgb(246,113,18)" rx="2" ry="2" />
<text  x="985.70" y="863.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::read_value (12 samples, 0.01%)</title><rect x="123.3" y="901" width="0.2" height="15.0" fill="rgb(226,141,35)" rx="2" ry="2" />
<text  x="126.33" y="911.5" ></text>
</g>
<g >
<title>&lt;tokio::time::delay::Delay as core::future::future::Future&gt;::poll (111 samples, 0.12%)</title><rect x="677.0" y="981" width="1.4" height="15.0" fill="rgb(217,66,50)" rx="2" ry="2" />
<text  x="679.96" y="991.5" ></text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (28 samples, 0.03%)</title><rect x="143.6" y="597" width="0.4" height="15.0" fill="rgb(215,193,15)" rx="2" ry="2" />
<text  x="146.64" y="607.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (45 samples, 0.05%)</title><rect x="1022.2" y="533" width="0.6" height="15.0" fill="rgb(248,197,18)" rx="2" ry="2" />
<text  x="1025.21" y="543.5" ></text>
</g>
<g >
<title>_update_idle_core (92 samples, 0.10%)</title><rect x="943.2" y="565" width="1.2" height="15.0" fill="rgb(245,50,41)" rx="2" ry="2" />
<text  x="946.22" y="575.5" ></text>
</g>
<g >
<title>tokio::time::driver::handle::Handle::current (48 samples, 0.05%)</title><rect x="274.1" y="1013" width="0.6" height="15.0" fill="rgb(205,157,42)" rx="2" ry="2" />
<text  x="277.11" y="1023.5" ></text>
</g>
<g >
<title>tokio::runtime::handle::Handle::enter (1,071 samples, 1.15%)</title><rect x="472.8" y="1173" width="13.5" height="15.0" fill="rgb(254,6,46)" rx="2" ry="2" />
<text  x="475.77" y="1183.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (12 samples, 0.01%)</title><rect x="1002.6" y="789" width="0.1" height="15.0" fill="rgb(252,129,44)" rx="2" ry="2" />
<text  x="1005.58" y="799.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt;::with_timeout (1,058 samples, 1.13%)</title><rect x="264.8" y="1077" width="13.4" height="15.0" fill="rgb(207,19,1)" rx="2" ry="2" />
<text  x="267.79" y="1087.5" ></text>
</g>
<g >
<title>httparse::parse_headers_iter (288 samples, 0.31%)</title><rect x="46.9" y="1157" width="3.6" height="15.0" fill="rgb(250,210,26)" rx="2" ry="2" />
<text  x="49.87" y="1167.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (132 samples, 0.14%)</title><rect x="1089.7" y="869" width="1.7" height="15.0" fill="rgb(224,7,50)" rx="2" ry="2" />
<text  x="1092.71" y="879.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (9 samples, 0.01%)</title><rect x="676.4" y="837" width="0.1" height="15.0" fill="rgb(254,108,48)" rx="2" ry="2" />
<text  x="679.38" y="847.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (32 samples, 0.03%)</title><rect x="194.9" y="581" width="0.4" height="15.0" fill="rgb(218,180,12)" rx="2" ry="2" />
<text  x="197.89" y="591.5" ></text>
</g>
<g >
<title>actix_http::message::BoxedResponseHead::new (132 samples, 0.14%)</title><rect x="376.0" y="869" width="1.6" height="15.0" fill="rgb(241,75,22)" rx="2" ry="2" />
<text  x="378.97" y="879.5" ></text>
</g>
<g >
<title>_usecs_to_jiffies (8 samples, 0.01%)</title><rect x="328.4" y="837" width="0.1" height="15.0" fill="rgb(226,120,20)" rx="2" ry="2" />
<text  x="331.44" y="847.5" ></text>
</g>
<g >
<title>core::mem::take (19 samples, 0.02%)</title><rect x="241.5" y="885" width="0.3" height="15.0" fill="rgb(210,60,19)" rx="2" ry="2" />
<text  x="244.52" y="895.5" ></text>
</g>
<g >
<title>std::sys_common::net::sockname (675 samples, 0.72%)</title><rect x="504.4" y="725" width="8.6" height="15.0" fill="rgb(254,182,19)" rx="2" ry="2" />
<text  x="507.44" y="735.5" ></text>
</g>
<g >
<title>alloc::rc::RcInnerPtr::inc_strong (12 samples, 0.01%)</title><rect x="435.5" y="917" width="0.1" height="15.0" fill="rgb(231,58,46)" rx="2" ry="2" />
<text  x="438.48" y="927.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next_char (12 samples, 0.01%)</title><rect x="120.4" y="869" width="0.2" height="15.0" fill="rgb(236,3,10)" rx="2" ry="2" />
<text  x="123.42" y="879.5" ></text>
</g>
<g >
<title>_netif_receive_skb_core (55 samples, 0.06%)</title><rect x="304.7" y="565" width="0.7" height="15.0" fill="rgb(220,115,45)" rx="2" ry="2" />
<text  x="307.72" y="575.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::PathParser::parse::{{closure}} (30 samples, 0.03%)</title><rect x="413.7" y="821" width="0.4" height="15.0" fill="rgb(238,13,41)" rx="2" ry="2" />
<text  x="416.70" y="831.5" ></text>
</g>
<g >
<title>&lt;actix_web::handler::ExtractResponse&lt;T,S&gt; as core::future::future::Future&gt;::poll (13,045 samples, 13.99%)</title><rect x="67.1" y="1093" width="165.1" height="15.0" fill="rgb(213,137,34)" rx="2" ry="2" />
<text  x="70.06" y="1103.5" >&lt;actix_web::handler::..</text>
</g>
<g >
<title>wake_up_bit (28 samples, 0.03%)</title><rect x="755.1" y="533" width="0.4" height="15.0" fill="rgb(224,39,31)" rx="2" ry="2" />
<text  x="758.14" y="543.5" ></text>
</g>
<g >
<title>_fsnotify_inode_delete (82 samples, 0.09%)</title><rect x="750.5" y="501" width="1.0" height="15.0" fill="rgb(233,68,27)" rx="2" ry="2" />
<text  x="753.48" y="511.5" ></text>
</g>
<g >
<title>&lt;actix_web::handler::HandlerServiceResponse&lt;T,R&gt; as core::future::future::Future&gt;::poll (13,045 samples, 13.99%)</title><rect x="67.1" y="1077" width="165.1" height="15.0" fill="rgb(245,209,33)" rx="2" ry="2" />
<text  x="70.06" y="1087.5" >&lt;actix_web::handler::..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;jsonpath_lib::selector::terms::ExprTerm&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="133.0" y="885" width="0.2" height="15.0" fill="rgb(244,11,20)" rx="2" ry="2" />
<text  x="136.04" y="895.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="38.9" y="1029" width="0.1" height="15.0" fill="rgb(215,87,46)" rx="2" ry="2" />
<text  x="41.86" y="1039.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="227.6" y="629" width="0.2" height="15.0" fill="rgb(248,180,41)" rx="2" ry="2" />
<text  x="230.64" y="639.5" ></text>
</g>
<g >
<title>_skb_datagram_iter (18 samples, 0.02%)</title><rect x="697.5" y="693" width="0.2" height="15.0" fill="rgb(231,204,22)" rx="2" ry="2" />
<text  x="700.50" y="703.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="132.6" y="869" width="0.4" height="15.0" fill="rgb(229,185,17)" rx="2" ry="2" />
<text  x="135.60" y="879.5" ></text>
</g>
<g >
<title>memset_erms (39 samples, 0.04%)</title><rect x="293.4" y="837" width="0.5" height="15.0" fill="rgb(225,228,19)" rx="2" ry="2" />
<text  x="296.41" y="847.5" ></text>
</g>
<g >
<title>int_free (12 samples, 0.01%)</title><rect x="368.3" y="997" width="0.1" height="15.0" fill="rgb(220,14,34)" rx="2" ry="2" />
<text  x="371.29" y="1007.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (296 samples, 0.32%)</title><rect x="420.7" y="725" width="3.7" height="15.0" fill="rgb(214,37,3)" rx="2" ry="2" />
<text  x="423.67" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (155 samples, 0.17%)</title><rect x="144.0" y="757" width="2.0" height="15.0" fill="rgb(248,161,36)" rx="2" ry="2" />
<text  x="146.99" y="767.5" ></text>
</g>
<g >
<title>alloc::alloc::box_free (113 samples, 0.12%)</title><rect x="385.2" y="645" width="1.4" height="15.0" fill="rgb(217,95,31)" rx="2" ry="2" />
<text  x="388.16" y="655.5" ></text>
</g>
<g >
<title>tokio::sync::oneshot::State::is_tx_task_set (8 samples, 0.01%)</title><rect x="1041.8" y="277" width="0.1" height="15.0" fill="rgb(223,95,7)" rx="2" ry="2" />
<text  x="1044.83" y="287.5" ></text>
</g>
<g >
<title>fsnotify (55 samples, 0.06%)</title><rect x="756.7" y="613" width="0.7" height="15.0" fill="rgb(246,80,37)" rx="2" ry="2" />
<text  x="759.66" y="623.5" ></text>
</g>
<g >
<title>std::time::Instant::checked_add (31 samples, 0.03%)</title><rect x="343.3" y="1029" width="0.4" height="15.0" fill="rgb(246,182,41)" rx="2" ry="2" />
<text  x="346.29" y="1039.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::parser_node_visitor::ParserNodeVisitor::visit (1,223 samples, 1.31%)</title><rect x="403.4" y="853" width="15.5" height="15.0" fill="rgb(212,139,2)" rx="2" ry="2" />
<text  x="406.39" y="863.5" ></text>
</g>
<g >
<title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (150 samples, 0.16%)</title><rect x="196.1" y="581" width="1.9" height="15.0" fill="rgb(220,117,50)" rx="2" ry="2" />
<text  x="199.12" y="591.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll (12,748 samples, 13.68%)</title><rect x="805.1" y="821" width="161.4" height="15.0" fill="rgb(250,104,14)" rx="2" ry="2" />
<text  x="808.08" y="831.5" >mio::poll::Poll::poll</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (770 samples, 0.83%)</title><rect x="173.6" y="885" width="9.8" height="15.0" fill="rgb(227,69,28)" rx="2" ry="2" />
<text  x="176.64" y="895.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_key (33 samples, 0.04%)</title><rect x="417.8" y="821" width="0.5" height="15.0" fill="rgb(241,138,10)" rx="2" ry="2" />
<text  x="420.84" y="831.5" ></text>
</g>
<g >
<title>tokio::time::driver::atomic_stack::AtomicStack::push (19 samples, 0.02%)</title><rect x="794.4" y="821" width="0.3" height="15.0" fill="rgb(247,138,34)" rx="2" ry="2" />
<text  x="797.42" y="831.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (275 samples, 0.30%)</title><rect x="1025.4" y="677" width="3.5" height="15.0" fill="rgb(245,193,51)" rx="2" ry="2" />
<text  x="1028.43" y="687.5" ></text>
</g>
<g >
<title>int_malloc (227 samples, 0.24%)</title><rect x="74.6" y="789" width="2.9" height="15.0" fill="rgb(216,116,27)" rx="2" ry="2" />
<text  x="77.61" y="799.5" ></text>
</g>
<g >
<title>bytes::bytes::shallow_clone_vec (48 samples, 0.05%)</title><rect x="360.7" y="917" width="0.6" height="15.0" fill="rgb(228,185,41)" rx="2" ry="2" />
<text  x="363.68" y="927.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new (190 samples, 0.20%)</title><rect x="513.0" y="821" width="2.4" height="15.0" fill="rgb(242,37,10)" rx="2" ry="2" />
<text  x="515.99" y="831.5" ></text>
</g>
<g >
<title>_ip_queue_xmit (5,808 samples, 6.23%)</title><rect x="582.9" y="677" width="73.5" height="15.0" fill="rgb(222,40,36)" rx="2" ry="2" />
<text  x="585.92" y="687.5" >_ip_queu..</text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_whitespace (11 samples, 0.01%)</title><rect x="119.4" y="789" width="0.1" height="15.0" fill="rgb(212,185,43)" rx="2" ry="2" />
<text  x="122.39" y="799.5" ></text>
</g>
<g >
<title>tokio::util::slab::Slab&lt;T&gt;::get (9 samples, 0.01%)</title><rect x="466.6" y="949" width="0.1" height="15.0" fill="rgb(230,0,48)" rx="2" ry="2" />
<text  x="469.57" y="959.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (22 samples, 0.02%)</title><rect x="719.4" y="805" width="0.3" height="15.0" fill="rgb(226,189,43)" rx="2" ry="2" />
<text  x="722.38" y="815.5" ></text>
</g>
<g >
<title>_GI___libc_free (28 samples, 0.03%)</title><rect x="996.8" y="805" width="0.4" height="15.0" fill="rgb(220,107,38)" rx="2" ry="2" />
<text  x="999.83" y="815.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_and_swap (21 samples, 0.02%)</title><rect x="234.6" y="1029" width="0.3" height="15.0" fill="rgb(223,78,53)" rx="2" ry="2" />
<text  x="237.64" y="1039.5" ></text>
</g>
<g >
<title>page_counter_try_charge (8 samples, 0.01%)</title><rect x="1148.0" y="693" width="0.2" height="15.0" fill="rgb(232,22,54)" rx="2" ry="2" />
<text  x="1151.05" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParserNode&gt; (667 samples, 0.72%)</title><rect x="386.6" y="645" width="8.4" height="15.0" fill="rgb(208,207,25)" rx="2" ry="2" />
<text  x="389.59" y="655.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget (770 samples, 0.83%)</title><rect x="515.4" y="1189" width="9.7" height="15.0" fill="rgb(246,149,29)" rx="2" ry="2" />
<text  x="518.39" y="1199.5" ></text>
</g>
<g >
<title>tcache_get (25 samples, 0.03%)</title><rect x="231.5" y="805" width="0.3" height="15.0" fill="rgb(237,90,33)" rx="2" ry="2" />
<text  x="234.46" y="815.5" ></text>
</g>
<g >
<title>tcache_get (9 samples, 0.01%)</title><rect x="352.2" y="805" width="0.1" height="15.0" fill="rgb(241,212,20)" rx="2" ry="2" />
<text  x="355.22" y="815.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::{{closure}} (5,464 samples, 5.86%)</title><rect x="1014.7" y="821" width="69.1" height="15.0" fill="rgb(243,132,11)" rx="2" ry="2" />
<text  x="1017.65" y="831.5" >tokio::..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (59 samples, 0.06%)</title><rect x="341.1" y="933" width="0.8" height="15.0" fill="rgb(214,156,50)" rx="2" ry="2" />
<text  x="344.11" y="943.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::all_with_str::{{closure}} (150 samples, 0.16%)</title><rect x="179.4" y="757" width="1.9" height="15.0" fill="rgb(254,185,34)" rx="2" ry="2" />
<text  x="182.42" y="767.5" ></text>
</g>
<g >
<title>tcp_set_state (8 samples, 0.01%)</title><rect x="320.3" y="421" width="0.1" height="15.0" fill="rgb(250,51,13)" rx="2" ry="2" />
<text  x="323.31" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (31 samples, 0.03%)</title><rect x="447.4" y="901" width="0.4" height="15.0" fill="rgb(225,34,15)" rx="2" ry="2" />
<text  x="450.38" y="911.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1,870 samples, 2.01%)</title><rect x="1163.3" y="869" width="23.7" height="15.0" fill="rgb(223,34,51)" rx="2" ry="2" />
<text  x="1166.29" y="879.5" >s..</text>
</g>
<g >
<title>_alloc_pages_nodemask (19 samples, 0.02%)</title><rect x="1134.8" y="661" width="0.2" height="15.0" fill="rgb(222,39,22)" rx="2" ry="2" />
<text  x="1137.77" y="671.5" ></text>
</g>
<g >
<title>_pthread_mutex_unlock_usercnt (27 samples, 0.03%)</title><rect x="1011.2" y="757" width="0.3" height="15.0" fill="rgb(207,63,27)" rx="2" ry="2" />
<text  x="1014.19" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (17 samples, 0.02%)</title><rect x="110.9" y="757" width="0.2" height="15.0" fill="rgb(252,101,1)" rx="2" ry="2" />
<text  x="113.90" y="767.5" ></text>
</g>
<g >
<title>core::mem::replace (19 samples, 0.02%)</title><rect x="140.7" y="869" width="0.3" height="15.0" fill="rgb(221,187,10)" rx="2" ry="2" />
<text  x="143.74" y="879.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (10 samples, 0.01%)</title><rect x="1128.7" y="789" width="0.2" height="15.0" fill="rgb(217,105,28)" rx="2" ry="2" />
<text  x="1131.73" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::other (46 samples, 0.05%)</title><rect x="109.7" y="741" width="0.6" height="15.0" fill="rgb(249,199,10)" rx="2" ry="2" />
<text  x="112.74" y="751.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (32 samples, 0.03%)</title><rect x="180.0" y="693" width="0.4" height="15.0" fill="rgb(227,22,42)" rx="2" ry="2" />
<text  x="183.04" y="703.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (52 samples, 0.06%)</title><rect x="177.8" y="501" width="0.6" height="15.0" fill="rgb(219,145,48)" rx="2" ry="2" />
<text  x="180.75" y="511.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,095 samples, 17.27%)</title><rect x="264.0" y="1157" width="203.7" height="15.0" fill="rgb(217,198,1)" rx="2" ry="2" />
<text  x="266.98" y="1167.5" >&lt;core::future::from_genera..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (140 samples, 0.15%)</title><rect x="358.3" y="949" width="1.8" height="15.0" fill="rgb(232,86,39)" rx="2" ry="2" />
<text  x="361.31" y="959.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (46 samples, 0.05%)</title><rect x="36.7" y="1093" width="0.6" height="15.0" fill="rgb(254,221,53)" rx="2" ry="2" />
<text  x="39.70" y="1103.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (209 samples, 0.22%)</title><rect x="59.9" y="773" width="2.6" height="15.0" fill="rgb(232,24,6)" rx="2" ry="2" />
<text  x="62.89" y="783.5" ></text>
</g>
<g >
<title>alloc::alloc::box_free (29 samples, 0.03%)</title><rect x="451.1" y="981" width="0.4" height="15.0" fill="rgb(222,133,25)" rx="2" ry="2" />
<text  x="454.09" y="991.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::checked_sub_instant (70 samples, 0.08%)</title><rect x="984.9" y="805" width="0.9" height="15.0" fill="rgb(237,42,35)" rx="2" ry="2" />
<text  x="987.93" y="815.5" ></text>
</g>
<g >
<title>actix_http::config::ServiceConfig::keep_alive_expire (18 samples, 0.02%)</title><rect x="680.2" y="997" width="0.2" height="15.0" fill="rgb(207,88,20)" rx="2" ry="2" />
<text  x="683.22" y="1007.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (16 samples, 0.02%)</title><rect x="833.2" y="677" width="0.2" height="15.0" fill="rgb(220,187,44)" rx="2" ry="2" />
<text  x="836.18" y="687.5" ></text>
</g>
<g >
<title>_libc_read (1,319 samples, 1.41%)</title><rect x="816.7" y="693" width="16.7" height="15.0" fill="rgb(231,96,41)" rx="2" ry="2" />
<text  x="819.69" y="703.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (78 samples, 0.08%)</title><rect x="242.4" y="805" width="1.0" height="15.0" fill="rgb(244,201,9)" rx="2" ry="2" />
<text  x="245.37" y="815.5" ></text>
</g>
<g >
<title>core::mem::take (34 samples, 0.04%)</title><rect x="344.9" y="1045" width="0.4" height="15.0" fill="rgb(244,204,19)" rx="2" ry="2" />
<text  x="347.86" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::h1::dispatcher::Dispatcher&lt;tokio::net::tcp::stream::TcpStream,actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::Body&gt;,actix_http::body::Body,actix_http::h1::expect::ExpectHandler,actix_http::h1::upgrade::UpgradeHandler&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt; (6,166 samples, 6.61%)</title><rect x="716.9" y="949" width="78.1" height="15.0" fill="rgb(230,199,49)" rx="2" ry="2" />
<text  x="719.91" y="959.5" >core::ptr..</text>
</g>
<g >
<title>int_free (20 samples, 0.02%)</title><rect x="367.9" y="901" width="0.3" height="15.0" fill="rgb(209,135,29)" rx="2" ry="2" />
<text  x="370.94" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;actix_web::service::ServiceResponse,actix_http::error::Error&gt;&gt;&gt;&gt; (105 samples, 0.11%)</title><rect x="452.4" y="933" width="1.3" height="15.0" fill="rgb(209,190,8)" rx="2" ry="2" />
<text  x="455.35" y="943.5" ></text>
</g>
<g >
<title>core::pin::Pin&lt;P&gt;::set (6,194 samples, 6.64%)</title><rect x="716.6" y="1013" width="78.4" height="15.0" fill="rgb(246,68,4)" rx="2" ry="2" />
<text  x="719.56" y="1023.5" >core::pin..</text>
</g>
<g >
<title>tokio::io::driver::scheduled_io::ScheduledIo::set_readiness (27 samples, 0.03%)</title><rect x="462.1" y="933" width="0.3" height="15.0" fill="rgb(245,40,28)" rx="2" ry="2" />
<text  x="465.10" y="943.5" ></text>
</g>
<g >
<title>actix_http::h1::decoder::MessageType::set_headers (808 samples, 0.87%)</title><rect x="27.3" y="1173" width="10.3" height="15.0" fill="rgb(218,19,52)" rx="2" ry="2" />
<text  x="30.33" y="1183.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (729 samples, 0.78%)</title><rect x="213.7" y="597" width="9.3" height="15.0" fill="rgb(222,188,8)" rx="2" ry="2" />
<text  x="216.73" y="607.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (808 samples, 0.87%)</title><rect x="424.8" y="741" width="10.2" height="15.0" fill="rgb(222,197,49)" rx="2" ry="2" />
<text  x="427.76" y="751.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (68 samples, 0.07%)</title><rect x="180.5" y="661" width="0.8" height="15.0" fill="rgb(227,226,45)" rx="2" ry="2" />
<text  x="183.46" y="671.5" ></text>
</g>
<g >
<title>_wake_up_common_lock (124 samples, 0.13%)</title><rect x="288.8" y="869" width="1.6" height="15.0" fill="rgb(254,224,47)" rx="2" ry="2" />
<text  x="291.82" y="879.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (16 samples, 0.02%)</title><rect x="376.5" y="645" width="0.2" height="15.0" fill="rgb(208,117,4)" rx="2" ry="2" />
<text  x="379.49" y="655.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="381.9" y="837" width="0.3" height="15.0" fill="rgb(225,15,52)" rx="2" ry="2" />
<text  x="384.94" y="847.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths (290 samples, 0.31%)</title><rect x="107.4" y="869" width="3.7" height="15.0" fill="rgb(225,116,17)" rx="2" ry="2" />
<text  x="110.45" y="879.5" ></text>
</g>
<g >
<title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (37 samples, 0.04%)</title><rect x="794.0" y="805" width="0.4" height="15.0" fill="rgb(236,217,33)" rx="2" ry="2" />
<text  x="796.95" y="815.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (9 samples, 0.01%)</title><rect x="626.8" y="85" width="0.1" height="15.0" fill="rgb(240,138,24)" rx="2" ry="2" />
<text  x="629.82" y="95.5" ></text>
</g>
<g >
<title>reweight_entity (17 samples, 0.02%)</title><rect x="919.8" y="533" width="0.2" height="15.0" fill="rgb(234,48,2)" rx="2" ry="2" />
<text  x="922.75" y="543.5" ></text>
</g>
<g >
<title>_fget_files (106 samples, 0.11%)</title><rect x="843.1" y="645" width="1.3" height="15.0" fill="rgb(226,73,42)" rx="2" ry="2" />
<text  x="846.09" y="655.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (16 samples, 0.02%)</title><rect x="335.6" y="949" width="0.2" height="15.0" fill="rgb(207,30,30)" rx="2" ry="2" />
<text  x="338.63" y="959.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (44 samples, 0.05%)</title><rect x="142.2" y="613" width="0.6" height="15.0" fill="rgb(218,39,17)" rx="2" ry="2" />
<text  x="145.21" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::all_with_strs (547 samples, 0.59%)</title><rect x="125.0" y="885" width="7.0" height="15.0" fill="rgb(253,15,37)" rx="2" ry="2" />
<text  x="128.04" y="895.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (50 samples, 0.05%)</title><rect x="178.8" y="661" width="0.6" height="15.0" fill="rgb(229,15,39)" rx="2" ry="2" />
<text  x="181.79" y="671.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokens::Token::reset_span (10 samples, 0.01%)</title><rect x="401.8" y="837" width="0.1" height="15.0" fill="rgb(211,185,49)" rx="2" ry="2" />
<text  x="404.79" y="847.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (67 samples, 0.07%)</title><rect x="1044.4" y="213" width="0.9" height="15.0" fill="rgb(219,212,37)" rx="2" ry="2" />
<text  x="1047.41" y="223.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (19 samples, 0.02%)</title><rect x="140.7" y="901" width="0.3" height="15.0" fill="rgb(238,219,44)" rx="2" ry="2" />
<text  x="143.74" y="911.5" ></text>
</g>
<g >
<title>tokio::time::driver::Inner::queue (110 samples, 0.12%)</title><rect x="793.3" y="837" width="1.4" height="15.0" fill="rgb(207,127,37)" rx="2" ry="2" />
<text  x="796.27" y="847.5" ></text>
</g>
<g >
<title>core::mem::drop (125 samples, 0.13%)</title><rect x="1056.6" y="277" width="1.6" height="15.0" fill="rgb(231,139,31)" rx="2" ry="2" />
<text  x="1059.63" y="287.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll::{{closure}} (606 samples, 0.65%)</title><rect x="472.9" y="613" width="7.7" height="15.0" fill="rgb(218,25,12)" rx="2" ry="2" />
<text  x="475.88" y="623.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (57 samples, 0.06%)</title><rect x="225.9" y="629" width="0.7" height="15.0" fill="rgb(241,17,28)" rx="2" ry="2" />
<text  x="228.92" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::sync::task::atomic_waker::AtomicWaker&gt; (21 samples, 0.02%)</title><rect x="997.5" y="773" width="0.3" height="15.0" fill="rgb(250,174,44)" rx="2" ry="2" />
<text  x="1000.49" y="783.5" ></text>
</g>
<g >
<title>_cgroup_account_cputime (25 samples, 0.03%)</title><rect x="922.8" y="533" width="0.3" height="15.0" fill="rgb(239,218,44)" rx="2" ry="2" />
<text  x="925.77" y="543.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_absolute (94 samples, 0.10%)</title><rect x="133.3" y="949" width="1.2" height="15.0" fill="rgb(223,147,28)" rx="2" ry="2" />
<text  x="136.27" y="959.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (33 samples, 0.04%)</title><rect x="101.6" y="789" width="0.4" height="15.0" fill="rgb(247,54,22)" rx="2" ry="2" />
<text  x="104.62" y="799.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll2 (78 samples, 0.08%)</title><rect x="1032.8" y="533" width="1.0" height="15.0" fill="rgb(244,211,27)" rx="2" ry="2" />
<text  x="1035.77" y="543.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (46 samples, 0.05%)</title><rect x="677.6" y="885" width="0.6" height="15.0" fill="rgb(210,206,27)" rx="2" ry="2" />
<text  x="680.60" y="895.5" ></text>
</g>
<g >
<title>tokio::time::wheel::Wheel&lt;T&gt;::next_expiration (159 samples, 0.17%)</title><rect x="1007.3" y="837" width="2.0" height="15.0" fill="rgb(227,80,8)" rx="2" ry="2" />
<text  x="1010.27" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (25 samples, 0.03%)</title><rect x="417.5" y="789" width="0.3" height="15.0" fill="rgb(230,128,54)" rx="2" ry="2" />
<text  x="420.53" y="799.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (185 samples, 0.20%)</title><rect x="152.6" y="773" width="2.3" height="15.0" fill="rgb(253,162,54)" rx="2" ry="2" />
<text  x="155.56" y="783.5" ></text>
</g>
<g >
<title>kfree (75 samples, 0.08%)</title><rect x="555.9" y="629" width="0.9" height="15.0" fill="rgb(233,56,0)" rx="2" ry="2" />
<text  x="558.90" y="639.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (77 samples, 0.08%)</title><rect x="428.0" y="469" width="1.0" height="15.0" fill="rgb(222,95,44)" rx="2" ry="2" />
<text  x="430.98" y="479.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (177 samples, 0.19%)</title><rect x="399.6" y="837" width="2.2" height="15.0" fill="rgb(232,118,46)" rx="2" ry="2" />
<text  x="402.55" y="847.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Events::push_event (12 samples, 0.01%)</title><rect x="814.7" y="757" width="0.1" height="15.0" fill="rgb(224,131,53)" rx="2" ry="2" />
<text  x="817.66" y="767.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (62 samples, 0.07%)</title><rect x="12.5" y="933" width="0.7" height="15.0" fill="rgb(216,85,30)" rx="2" ry="2" />
<text  x="15.46" y="943.5" ></text>
</g>
<g >
<title>tokio::runtime::task::Notified&lt;S&gt;::run (870 samples, 0.93%)</title><rect x="504.4" y="1109" width="11.0" height="15.0" fill="rgb(242,191,10)" rx="2" ry="2" />
<text  x="507.38" y="1119.5" ></text>
</g>
<g >
<title>&lt;mio::net::tcp::TcpStream as mio::event_imp::Evented&gt;::deregister (30 samples, 0.03%)</title><rect x="770.4" y="693" width="0.4" height="15.0" fill="rgb(230,224,23)" rx="2" ry="2" />
<text  x="773.45" y="703.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget (1,071 samples, 1.15%)</title><rect x="472.8" y="1029" width="13.5" height="15.0" fill="rgb(214,78,47)" rx="2" ry="2" />
<text  x="475.77" y="1039.5" ></text>
</g>
<g >
<title>tinyvec::array::generated_impl::&lt;impl tinyvec::array::Array for [T: 4]&gt;::default (171 samples, 0.18%)</title><rect x="357.9" y="997" width="2.2" height="15.0" fill="rgb(221,4,17)" rx="2" ry="2" />
<text  x="360.92" y="1007.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (18 samples, 0.02%)</title><rect x="154.7" y="533" width="0.2" height="15.0" fill="rgb(247,12,42)" rx="2" ry="2" />
<text  x="157.67" y="543.5" ></text>
</g>
<g >
<title>actix_router::url::Quoter::requote (82 samples, 0.09%)</title><rect x="363.2" y="949" width="1.0" height="15.0" fill="rgb(225,179,28)" rx="2" ry="2" />
<text  x="366.20" y="959.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.04%)</title><rect x="126.4" y="741" width="0.5" height="15.0" fill="rgb(225,179,42)" rx="2" ry="2" />
<text  x="129.43" y="751.5" ></text>
</g>
<g >
<title>flush_tlb_func_remote (8 samples, 0.01%)</title><rect x="975.9" y="533" width="0.1" height="15.0" fill="rgb(247,152,44)" rx="2" ry="2" />
<text  x="978.88" y="543.5" ></text>
</g>
<g >
<title>_cgroup_bpf_run_filter_sk (42 samples, 0.05%)</title><rect x="762.2" y="565" width="0.5" height="15.0" fill="rgb(222,182,25)" rx="2" ry="2" />
<text  x="765.19" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.01%)</title><rect x="359.9" y="869" width="0.1" height="15.0" fill="rgb(222,162,4)" rx="2" ry="2" />
<text  x="362.89" y="879.5" ></text>
</g>
<g >
<title>sched_clock_cpu (18 samples, 0.02%)</title><rect x="1186.5" y="805" width="0.3" height="15.0" fill="rgb(245,140,50)" rx="2" ry="2" />
<text  x="1189.53" y="815.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::static_empty (11 samples, 0.01%)</title><rect x="229.1" y="757" width="0.1" height="15.0" fill="rgb(222,59,26)" rx="2" ry="2" />
<text  x="232.11" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (54 samples, 0.06%)</title><rect x="105.6" y="837" width="0.7" height="15.0" fill="rgb(226,71,31)" rx="2" ry="2" />
<text  x="108.58" y="847.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (35 samples, 0.04%)</title><rect x="161.7" y="613" width="0.4" height="15.0" fill="rgb(215,176,22)" rx="2" ry="2" />
<text  x="164.69" y="623.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T&gt;::new (103 samples, 0.11%)</title><rect x="227.9" y="869" width="1.3" height="15.0" fill="rgb(228,186,53)" rx="2" ry="2" />
<text  x="230.94" y="879.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.02%)</title><rect x="226.4" y="613" width="0.2" height="15.0" fill="rgb(235,95,35)" rx="2" ry="2" />
<text  x="229.36" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths_dot (234 samples, 0.25%)</title><rect x="469.2" y="869" width="2.9" height="15.0" fill="rgb(208,223,31)" rx="2" ry="2" />
<text  x="472.17" y="879.5" ></text>
</g>
<g >
<title>skb_release_data (96 samples, 0.10%)</title><rect x="555.6" y="661" width="1.2" height="15.0" fill="rgb(211,183,31)" rx="2" ry="2" />
<text  x="558.63" y="671.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set1_epi8 (18 samples, 0.02%)</title><rect x="179.2" y="501" width="0.2" height="15.0" fill="rgb(219,216,37)" rx="2" ry="2" />
<text  x="182.19" y="511.5" ></text>
</g>
<g >
<title>_netif_receive_skb_one_core (8 samples, 0.01%)</title><rect x="644.6" y="469" width="0.1" height="15.0" fill="rgb(225,177,27)" rx="2" ry="2" />
<text  x="647.65" y="479.5" ></text>
</g>
<g >
<title>ip_send_check (23 samples, 0.02%)</title><rect x="300.1" y="757" width="0.3" height="15.0" fill="rgb(208,168,54)" rx="2" ry="2" />
<text  x="303.09" y="767.5" ></text>
</g>
<g >
<title>&lt;actix_web::app_service::AppInitService&lt;T,B&gt; as actix_service::Service&gt;::poll_ready (16 samples, 0.02%)</title><rect x="1066.6" y="261" width="0.2" height="15.0" fill="rgb(253,174,7)" rx="2" ry="2" />
<text  x="1069.55" y="271.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="141.6" y="725" width="0.2" height="15.0" fill="rgb(243,54,44)" rx="2" ry="2" />
<text  x="144.64" y="735.5" ></text>
</g>
<g >
<title>core::intrinsics::write_bytes (65 samples, 0.07%)</title><rect x="220.6" y="533" width="0.8" height="15.0" fill="rgb(217,103,52)" rx="2" ry="2" />
<text  x="223.59" y="543.5" ></text>
</g>
<g >
<title>&lt;indexmap::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="420.4" y="741" width="0.2" height="15.0" fill="rgb(207,0,10)" rx="2" ry="2" />
<text  x="423.38" y="751.5" ></text>
</g>
<g >
<title>int_malloc (78 samples, 0.08%)</title><rect x="242.4" y="501" width="1.0" height="15.0" fill="rgb(227,18,31)" rx="2" ry="2" />
<text  x="245.37" y="511.5" ></text>
</g>
<g >
<title>actix_web::route::RouteService::check (23 samples, 0.02%)</title><rect x="352.7" y="965" width="0.3" height="15.0" fill="rgb(243,151,25)" rx="2" ry="2" />
<text  x="355.69" y="975.5" ></text>
</g>
<g >
<title>_GI___pthread_mutex_lock (40 samples, 0.04%)</title><rect x="972.5" y="581" width="0.5" height="15.0" fill="rgb(241,52,7)" rx="2" ry="2" />
<text  x="975.53" y="591.5" ></text>
</g>
<g >
<title>_GI___libc_free (8 samples, 0.01%)</title><rect x="381.7" y="805" width="0.1" height="15.0" fill="rgb(241,11,9)" rx="2" ry="2" />
<text  x="384.67" y="815.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (23 samples, 0.02%)</title><rect x="183.1" y="709" width="0.3" height="15.0" fill="rgb(213,218,37)" rx="2" ry="2" />
<text  x="186.09" y="719.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="91.5" y="757" width="0.2" height="15.0" fill="rgb(252,135,40)" rx="2" ry="2" />
<text  x="94.48" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::stack_overflow::Handler::new (10 samples, 0.01%)</title><rect x="1189.8" y="1221" width="0.2" height="15.0" fill="rgb(223,206,30)" rx="2" ry="2" />
<text  x="1192.84" y="1231.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (103 samples, 0.11%)</title><rect x="702.0" y="693" width="1.3" height="15.0" fill="rgb(226,140,44)" rx="2" ry="2" />
<text  x="705.03" y="703.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (23 samples, 0.02%)</title><rect x="344.0" y="981" width="0.3" height="15.0" fill="rgb(224,114,49)" rx="2" ry="2" />
<text  x="346.99" y="991.5" ></text>
</g>
<g >
<title>tokio::util::slab::Slab&lt;T&gt;::get (17 samples, 0.02%)</title><rect x="975.1" y="805" width="0.2" height="15.0" fill="rgb(230,227,12)" rx="2" ry="2" />
<text  x="978.08" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (22 samples, 0.02%)</title><rect x="179.7" y="661" width="0.3" height="15.0" fill="rgb(207,100,43)" rx="2" ry="2" />
<text  x="182.69" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="133.4" y="917" width="0.3" height="15.0" fill="rgb(213,98,53)" rx="2" ry="2" />
<text  x="136.42" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (9 samples, 0.01%)</title><rect x="172.2" y="933" width="0.1" height="15.0" fill="rgb(219,181,34)" rx="2" ry="2" />
<text  x="175.17" y="943.5" ></text>
</g>
<g >
<title>memset_erms (27 samples, 0.03%)</title><rect x="253.6" y="501" width="0.4" height="15.0" fill="rgb(215,122,31)" rx="2" ry="2" />
<text  x="256.63" y="511.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (26 samples, 0.03%)</title><rect x="481.8" y="533" width="0.3" height="15.0" fill="rgb(215,76,23)" rx="2" ry="2" />
<text  x="484.81" y="543.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.02%)</title><rect x="11.8" y="1173" width="0.3" height="15.0" fill="rgb(237,178,9)" rx="2" ry="2" />
<text  x="14.84" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::write (8 samples, 0.01%)</title><rect x="189.0" y="661" width="0.1" height="15.0" fill="rgb(249,109,16)" rx="2" ry="2" />
<text  x="191.99" y="671.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (57 samples, 0.06%)</title><rect x="129.2" y="741" width="0.8" height="15.0" fill="rgb(233,47,6)" rx="2" ry="2" />
<text  x="132.24" y="751.5" ></text>
</g>
<g >
<title>actix_utils::counter::Counter::get (21 samples, 0.02%)</title><rect x="1068.3" y="341" width="0.2" height="15.0" fill="rgb(253,120,6)" rx="2" ry="2" />
<text  x="1071.28" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.05%)</title><rect x="131.4" y="837" width="0.6" height="15.0" fill="rgb(205,134,5)" rx="2" ry="2" />
<text  x="134.43" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::uri::path::PathAndQuery&gt; (46 samples, 0.05%)</title><rect x="361.7" y="981" width="0.6" height="15.0" fill="rgb(231,136,29)" rx="2" ry="2" />
<text  x="364.69" y="991.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::tick (1,071 samples, 1.15%)</title><rect x="472.8" y="853" width="13.5" height="15.0" fill="rgb(228,67,2)" rx="2" ry="2" />
<text  x="475.77" y="863.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next (25 samples, 0.03%)</title><rect x="400.3" y="805" width="0.3" height="15.0" fill="rgb(237,146,50)" rx="2" ry="2" />
<text  x="403.31" y="815.5" ></text>
</g>
<g >
<title>tcache_get (13 samples, 0.01%)</title><rect x="117.2" y="805" width="0.2" height="15.0" fill="rgb(250,70,41)" rx="2" ry="2" />
<text  x="120.20" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (48 samples, 0.05%)</title><rect x="122.3" y="901" width="0.6" height="15.0" fill="rgb(234,53,16)" rx="2" ry="2" />
<text  x="125.33" y="911.5" ></text>
</g>
<g >
<title>_tcp_ack_snd_check (1,040 samples, 1.12%)</title><rect x="615.1" y="309" width="13.1" height="15.0" fill="rgb(251,97,10)" rx="2" ry="2" />
<text  x="618.08" y="319.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::read (288 samples, 0.31%)</title><rect x="233.3" y="1189" width="3.6" height="15.0" fill="rgb(242,70,22)" rx="2" ry="2" />
<text  x="236.26" y="1199.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (72 samples, 0.08%)</title><rect x="130.5" y="661" width="0.9" height="15.0" fill="rgb(227,138,49)" rx="2" ry="2" />
<text  x="133.48" y="671.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::with (331 samples, 0.36%)</title><rect x="525.1" y="1029" width="4.2" height="15.0" fill="rgb(250,214,14)" rx="2" ry="2" />
<text  x="528.14" y="1039.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::clear_read_ready (133 samples, 0.14%)</title><rect x="709.1" y="933" width="1.7" height="15.0" fill="rgb(224,217,42)" rx="2" ry="2" />
<text  x="712.10" y="943.5" ></text>
</g>
<g >
<title>pick_next_task_idle (132 samples, 0.14%)</title><rect x="942.8" y="597" width="1.7" height="15.0" fill="rgb(205,214,29)" rx="2" ry="2" />
<text  x="945.78" y="607.5" ></text>
</g>
<g >
<title>futures_channel::lock::Lock&lt;T&gt;::try_lock (16 samples, 0.02%)</title><rect x="1023.4" y="565" width="0.2" height="15.0" fill="rgb(232,172,32)" rx="2" ry="2" />
<text  x="1026.35" y="575.5" ></text>
</g>
<g >
<title>core::mem::take (9 samples, 0.01%)</title><rect x="373.8" y="917" width="0.1" height="15.0" fill="rgb(253,112,12)" rx="2" ry="2" />
<text  x="376.81" y="927.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk_dedup (3,306 samples, 3.55%)</title><rect x="186.1" y="757" width="41.8" height="15.0" fill="rgb(219,100,13)" rx="2" ry="2" />
<text  x="189.05" y="767.5" >jso..</text>
</g>
<g >
<title>tokio::runtime::task::state::Snapshot::ref_count (19 samples, 0.02%)</title><rect x="485.4" y="677" width="0.3" height="15.0" fill="rgb(252,183,49)" rx="2" ry="2" />
<text  x="488.43" y="687.5" ></text>
</g>
<g >
<title>_memcmp_avx2_movbe (23 samples, 0.02%)</title><rect x="181.0" y="549" width="0.3" height="15.0" fill="rgb(216,222,11)" rx="2" ry="2" />
<text  x="184.03" y="559.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (24 samples, 0.03%)</title><rect x="1014.4" y="773" width="0.3" height="15.0" fill="rgb(246,216,33)" rx="2" ry="2" />
<text  x="1017.35" y="783.5" ></text>
</g>
<g >
<title>httparse::simd::runtime::detect (9 samples, 0.01%)</title><rect x="50.1" y="1125" width="0.1" height="15.0" fill="rgb(248,3,39)" rx="2" ry="2" />
<text  x="53.06" y="1135.5" ></text>
</g>
<g >
<title>ip_rcv_cor.sr. (94 samples, 0.10%)</title><rect x="599.3" y="421" width="1.2" height="15.0" fill="rgb(242,185,30)" rx="2" ry="2" />
<text  x="602.27" y="431.5" ></text>
</g>
<g >
<title>actix_http::config::ServiceConfig::set_date::{{closure}} (11 samples, 0.01%)</title><rect x="446.5" y="949" width="0.1" height="15.0" fill="rgb(223,176,9)" rx="2" ry="2" />
<text  x="449.48" y="959.5" ></text>
</g>
<g >
<title>_GI___libc_free (17 samples, 0.02%)</title><rect x="450.8" y="981" width="0.2" height="15.0" fill="rgb(227,198,23)" rx="2" ry="2" />
<text  x="453.82" y="991.5" ></text>
</g>
<g >
<title>ryu::d2s_intrinsics::div10 (29 samples, 0.03%)</title><rect x="432.7" y="597" width="0.4" height="15.0" fill="rgb(251,66,28)" rx="2" ry="2" />
<text  x="435.72" y="607.5" ></text>
</g>
<g >
<title>hashbrown::raw::alloc::inner::do_alloc (81 samples, 0.09%)</title><rect x="221.9" y="533" width="1.0" height="15.0" fill="rgb(216,100,11)" rx="2" ry="2" />
<text  x="224.85" y="543.5" ></text>
</g>
<g >
<title>destroy_inode (111 samples, 0.12%)</title><rect x="1154.7" y="693" width="1.4" height="15.0" fill="rgb(230,16,50)" rx="2" ry="2" />
<text  x="1157.67" y="703.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (57 samples, 0.06%)</title><rect x="91.7" y="789" width="0.7" height="15.0" fill="rgb(233,111,13)" rx="2" ry="2" />
<text  x="94.69" y="799.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (956 samples, 1.03%)</title><rect x="491.1" y="1141" width="12.1" height="15.0" fill="rgb(218,26,38)" rx="2" ry="2" />
<text  x="494.07" y="1151.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="1064.5" y="309" width="0.1" height="15.0" fill="rgb(207,211,12)" rx="2" ry="2" />
<text  x="1067.48" y="319.5" ></text>
</g>
<g >
<title>netif_rx (33 samples, 0.04%)</title><rect x="325.2" y="645" width="0.4" height="15.0" fill="rgb(246,115,20)" rx="2" ry="2" />
<text  x="328.17" y="655.5" ></text>
</g>
<g >
<title>process_backlog (1,489 samples, 1.60%)</title><rect x="304.2" y="613" width="18.9" height="15.0" fill="rgb(244,126,17)" rx="2" ry="2" />
<text  x="307.25" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::message::Message&lt;actix_http::message::RequestHead&gt;&gt; (61 samples, 0.07%)</title><rect x="365.9" y="1013" width="0.8" height="15.0" fill="rgb(228,139,12)" rx="2" ry="2" />
<text  x="368.91" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;futures_util::future::either::Either&lt;futures_util::future::ready::Ready&lt;core::result::Result&lt;actix_web::service::ServiceResponse,actix_http::error::Error&gt;&gt;,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;actix_web::service::ServiceResponse,actix_http::error::Error&gt;&gt;&gt;&gt;&gt; (186 samples, 0.20%)</title><rect x="451.5" y="981" width="2.3" height="15.0" fill="rgb(214,114,23)" rx="2" ry="2" />
<text  x="454.45" y="991.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::static_empty (28 samples, 0.03%)</title><rect x="447.4" y="885" width="0.4" height="15.0" fill="rgb(208,218,23)" rx="2" ry="2" />
<text  x="450.41" y="895.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (64 samples, 0.07%)</title><rect x="82.0" y="837" width="0.8" height="15.0" fill="rgb(246,107,26)" rx="2" ry="2" />
<text  x="85.03" y="847.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="16.0" y="1061" width="0.1" height="15.0" fill="rgb(205,192,14)" rx="2" ry="2" />
<text  x="18.97" y="1071.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="163.2" y="613" width="0.3" height="15.0" fill="rgb(250,28,10)" rx="2" ry="2" />
<text  x="166.19" y="623.5" ></text>
</g>
<g >
<title>delay_halt_mwaitx (58 samples, 0.06%)</title><rect x="887.4" y="501" width="0.8" height="15.0" fill="rgb(223,134,26)" rx="2" ry="2" />
<text  x="890.45" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.01%)</title><rect x="449.8" y="901" width="0.1" height="15.0" fill="rgb(254,52,27)" rx="2" ry="2" />
<text  x="452.84" y="911.5" ></text>
</g>
<g >
<title>int_new_arena (10 samples, 0.01%)</title><rect x="1083.9" y="1093" width="0.1" height="15.0" fill="rgb(207,127,20)" rx="2" ry="2" />
<text  x="1086.91" y="1103.5" ></text>
</g>
<g >
<title>tokio::coop::CURRENT::_getit (9 samples, 0.01%)</title><rect x="676.4" y="885" width="0.1" height="15.0" fill="rgb(249,26,38)" rx="2" ry="2" />
<text  x="679.38" y="895.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp_json (367 samples, 0.39%)</title><rect x="165.9" y="901" width="4.7" height="15.0" fill="rgb(216,193,43)" rx="2" ry="2" />
<text  x="168.91" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt;&gt; (33 samples, 0.04%)</title><rect x="132.6" y="917" width="0.4" height="15.0" fill="rgb(205,20,12)" rx="2" ry="2" />
<text  x="135.58" y="927.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (262 samples, 0.28%)</title><rect x="1020.8" y="661" width="3.3" height="15.0" fill="rgb(216,144,8)" rx="2" ry="2" />
<text  x="1023.77" y="671.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="168.3" y="821" width="0.2" height="15.0" fill="rgb(217,34,16)" rx="2" ry="2" />
<text  x="171.33" y="831.5" ></text>
</g>
<g >
<title>dequeue_task (2,038 samples, 2.19%)</title><rect x="914.2" y="597" width="25.8" height="15.0" fill="rgb(246,207,32)" rx="2" ry="2" />
<text  x="917.18" y="607.5" >d..</text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_shutdown (4,239 samples, 4.55%)</title><rect x="283.1" y="1077" width="53.6" height="15.0" fill="rgb(236,57,28)" rx="2" ry="2" />
<text  x="286.08" y="1087.5" >&lt;toki..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="177.0" y="485" width="0.2" height="15.0" fill="rgb(229,223,34)" rx="2" ry="2" />
<text  x="180.04" y="495.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::ref_dec (16 samples, 0.02%)</title><rect x="1045.3" y="245" width="0.2" height="15.0" fill="rgb(251,47,53)" rx="2" ry="2" />
<text  x="1048.26" y="255.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.02%)</title><rect x="83.0" y="837" width="0.3" height="15.0" fill="rgb(246,137,44)" rx="2" ry="2" />
<text  x="86.01" y="847.5" ></text>
</g>
<g >
<title>current_time (15 samples, 0.02%)</title><rect x="1112.4" y="405" width="0.2" height="15.0" fill="rgb(247,206,27)" rx="2" ry="2" />
<text  x="1115.38" y="415.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (26 samples, 0.03%)</title><rect x="89.7" y="773" width="0.3" height="15.0" fill="rgb(233,77,31)" rx="2" ry="2" />
<text  x="92.67" y="783.5" ></text>
</g>
<g >
<title>tcp_grow_windo.sr. (26 samples, 0.03%)</title><rect x="638.1" y="293" width="0.3" height="15.0" fill="rgb(238,90,35)" rx="2" ry="2" />
<text  x="641.08" y="303.5" ></text>
</g>
<g >
<title>migrate_enable (9 samples, 0.01%)</title><rect x="654.8" y="613" width="0.1" height="15.0" fill="rgb(236,26,1)" rx="2" ry="2" />
<text  x="657.82" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (121 samples, 0.13%)</title><rect x="39.0" y="949" width="1.6" height="15.0" fill="rgb(220,52,54)" rx="2" ry="2" />
<text  x="42.03" y="959.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set_epi8 (31 samples, 0.03%)</title><rect x="211.7" y="533" width="0.4" height="15.0" fill="rgb(242,114,20)" rx="2" ry="2" />
<text  x="214.73" y="543.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (24 samples, 0.03%)</title><rect x="1187.1" y="933" width="0.3" height="15.0" fill="rgb(227,198,41)" rx="2" ry="2" />
<text  x="1190.09" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::io::driver::Inner&gt;&gt; (9 samples, 0.01%)</title><rect x="787.7" y="805" width="0.1" height="15.0" fill="rgb(222,125,13)" rx="2" ry="2" />
<text  x="790.67" y="815.5" ></text>
</g>
<g >
<title>ep_timeout_to_timespe.ar. (18 samples, 0.02%)</title><rect x="956.0" y="709" width="0.2" height="15.0" fill="rgb(211,132,14)" rx="2" ry="2" />
<text  x="959.01" y="719.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_or (8 samples, 0.01%)</title><rect x="1115.5" y="741" width="0.1" height="15.0" fill="rgb(219,48,19)" rx="2" ry="2" />
<text  x="1118.47" y="751.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (55 samples, 0.06%)</title><rect x="228.0" y="805" width="0.7" height="15.0" fill="rgb(212,60,49)" rx="2" ry="2" />
<text  x="230.95" y="815.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (156 samples, 0.17%)</title><rect x="427.4" y="645" width="2.0" height="15.0" fill="rgb(208,105,31)" rx="2" ry="2" />
<text  x="430.39" y="655.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="176.3" y="501" width="0.1" height="15.0" fill="rgb(249,202,2)" rx="2" ry="2" />
<text  x="179.28" y="511.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (1,252 samples, 1.34%)</title><rect x="419.4" y="821" width="15.8" height="15.0" fill="rgb(244,146,11)" rx="2" ry="2" />
<text  x="422.39" y="831.5" ></text>
</g>
<g >
<title>inet_accept (354 samples, 0.38%)</title><rect x="1123.1" y="805" width="4.5" height="15.0" fill="rgb(222,191,49)" rx="2" ry="2" />
<text  x="1126.10" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::read_value (25 samples, 0.03%)</title><rect x="413.8" y="805" width="0.3" height="15.0" fill="rgb(208,9,5)" rx="2" ry="2" />
<text  x="416.77" y="815.5" ></text>
</g>
<g >
<title>_fget_light (37 samples, 0.04%)</title><rect x="334.1" y="901" width="0.5" height="15.0" fill="rgb(212,68,37)" rx="2" ry="2" />
<text  x="337.12" y="911.5" ></text>
</g>
<g >
<title>_check_object_size (72 samples, 0.08%)</title><rect x="564.3" y="757" width="0.9" height="15.0" fill="rgb(220,74,26)" rx="2" ry="2" />
<text  x="567.27" y="767.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="233.7" y="1077" width="0.1" height="15.0" fill="rgb(250,51,38)" rx="2" ry="2" />
<text  x="236.68" y="1087.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (24 samples, 0.03%)</title><rect x="839.9" y="725" width="0.3" height="15.0" fill="rgb(253,21,36)" rx="2" ry="2" />
<text  x="842.94" y="735.5" ></text>
</g>
<g >
<title>timerqueue_add (20 samples, 0.02%)</title><rect x="861.9" y="613" width="0.3" height="15.0" fill="rgb(235,159,48)" rx="2" ry="2" />
<text  x="864.93" y="623.5" ></text>
</g>
<g >
<title>ip_finish_output2 (5,192 samples, 5.57%)</title><rect x="588.4" y="597" width="65.7" height="15.0" fill="rgb(250,122,36)" rx="2" ry="2" />
<text  x="591.39" y="607.5" >ip_fini..</text>
</g>
<g >
<title>&lt;actix_rt::arbiter::CleanupPending as core::future::future::Future&gt;::poll (690 samples, 0.74%)</title><rect x="1037.2" y="389" width="8.7" height="15.0" fill="rgb(254,15,38)" rx="2" ry="2" />
<text  x="1040.19" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt; (15 samples, 0.02%)</title><rect x="715.7" y="1045" width="0.2" height="15.0" fill="rgb(243,70,42)" rx="2" ry="2" />
<text  x="718.75" y="1055.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (32 samples, 0.03%)</title><rect x="343.3" y="1045" width="0.4" height="15.0" fill="rgb(232,47,27)" rx="2" ry="2" />
<text  x="346.27" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (359 samples, 0.39%)</title><rect x="154.9" y="773" width="4.5" height="15.0" fill="rgb(234,15,32)" rx="2" ry="2" />
<text  x="157.90" y="783.5" ></text>
</g>
<g >
<title>call_rcu (21 samples, 0.02%)</title><rect x="1152.3" y="773" width="0.3" height="15.0" fill="rgb(238,204,14)" rx="2" ry="2" />
<text  x="1155.32" y="783.5" ></text>
</g>
<g >
<title>int_free (29 samples, 0.03%)</title><rect x="383.1" y="693" width="0.4" height="15.0" fill="rgb(241,188,27)" rx="2" ry="2" />
<text  x="386.11" y="703.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (77 samples, 0.08%)</title><rect x="64.8" y="853" width="0.9" height="15.0" fill="rgb(243,120,26)" rx="2" ry="2" />
<text  x="67.77" y="863.5" ></text>
</g>
<g >
<title>bytes::bytes::promotable_even_drop (50 samples, 0.05%)</title><rect x="42.2" y="1173" width="0.6" height="15.0" fill="rgb(211,132,35)" rx="2" ry="2" />
<text  x="45.18" y="1183.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::from_vec (10 samples, 0.01%)</title><rect x="277.7" y="1045" width="0.2" height="15.0" fill="rgb(238,168,25)" rx="2" ry="2" />
<text  x="280.73" y="1055.5" ></text>
</g>
<g >
<title>_GI___clone (8,015 samples, 8.60%)</title><rect x="1086.8" y="1269" width="101.5" height="15.0" fill="rgb(206,166,13)" rx="2" ry="2" />
<text  x="1089.83" y="1279.5" >_GI___clone</text>
</g>
<g >
<title>&lt;actix_web::guard::MethodGuard as actix_web::guard::Guard&gt;::check (58 samples, 0.06%)</title><rect x="355.0" y="949" width="0.7" height="15.0" fill="rgb(248,1,41)" rx="2" ry="2" />
<text  x="357.99" y="959.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (37 samples, 0.04%)</title><rect x="208.5" y="581" width="0.5" height="15.0" fill="rgb(240,224,1)" rx="2" ry="2" />
<text  x="211.55" y="591.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::{{closure}} (3,500 samples, 3.75%)</title><rect x="1032.0" y="613" width="44.3" height="15.0" fill="rgb(238,64,27)" rx="2" ry="2" />
<text  x="1035.01" y="623.5" >toki..</text>
</g>
<g >
<title>_sys_accept4_file (2,414 samples, 2.59%)</title><rect x="1119.8" y="821" width="30.5" height="15.0" fill="rgb(231,136,32)" rx="2" ry="2" />
<text  x="1122.77" y="831.5" >_s..</text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (31 samples, 0.03%)</title><rect x="183.0" y="741" width="0.4" height="15.0" fill="rgb(215,125,43)" rx="2" ry="2" />
<text  x="185.99" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (83 samples, 0.09%)</title><rect x="187.9" y="661" width="1.1" height="15.0" fill="rgb(219,89,17)" rx="2" ry="2" />
<text  x="190.94" y="671.5" ></text>
</g>
<g >
<title>_GI___libc_realloc (71 samples, 0.08%)</title><rect x="379.0" y="709" width="0.9" height="15.0" fill="rgb(221,104,37)" rx="2" ry="2" />
<text  x="382.00" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (17 samples, 0.02%)</title><rect x="147.2" y="805" width="0.2" height="15.0" fill="rgb(213,21,44)" rx="2" ry="2" />
<text  x="150.15" y="815.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::with (770 samples, 0.83%)</title><rect x="515.4" y="1061" width="9.7" height="15.0" fill="rgb(222,81,52)" rx="2" ry="2" />
<text  x="518.39" y="1071.5" ></text>
</g>
<g >
<title>_kmalloc_node_track_caller (8 samples, 0.01%)</title><rect x="569.2" y="725" width="0.1" height="15.0" fill="rgb(224,34,33)" rx="2" ry="2" />
<text  x="572.24" y="735.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (61 samples, 0.07%)</title><rect x="120.6" y="965" width="0.8" height="15.0" fill="rgb(248,183,42)" rx="2" ry="2" />
<text  x="123.61" y="975.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::whitespace (25 samples, 0.03%)</title><rect x="97.0" y="805" width="0.3" height="15.0" fill="rgb(246,168,18)" rx="2" ry="2" />
<text  x="100.03" y="815.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (96 samples, 0.10%)</title><rect x="671.6" y="821" width="1.2" height="15.0" fill="rgb(228,45,33)" rx="2" ry="2" />
<text  x="674.63" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (16 samples, 0.02%)</title><rect x="994.0" y="805" width="0.2" height="15.0" fill="rgb(245,121,18)" rx="2" ry="2" />
<text  x="996.98" y="815.5" ></text>
</g>
<g >
<title>_fget_light (22 samples, 0.02%)</title><rect x="1161.8" y="885" width="0.3" height="15.0" fill="rgb(206,53,28)" rx="2" ry="2" />
<text  x="1164.81" y="895.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (13 samples, 0.01%)</title><rect x="417.2" y="789" width="0.2" height="15.0" fill="rgb(210,203,13)" rx="2" ry="2" />
<text  x="420.22" y="799.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (331 samples, 0.36%)</title><rect x="525.1" y="757" width="4.2" height="15.0" fill="rgb(218,128,5)" rx="2" ry="2" />
<text  x="528.14" y="767.5" ></text>
</g>
<g >
<title>_libc_disable_asynccancel (12 samples, 0.01%)</title><rect x="1118.4" y="885" width="0.1" height="15.0" fill="rgb(243,176,37)" rx="2" ry="2" />
<text  x="1121.37" y="895.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (63 samples, 0.07%)</title><rect x="191.9" y="613" width="0.8" height="15.0" fill="rgb(218,107,18)" rx="2" ry="2" />
<text  x="194.88" y="623.5" ></text>
</g>
<g >
<title>core::mem::replace (40 samples, 0.04%)</title><rect x="1032.0" y="533" width="0.5" height="15.0" fill="rgb(243,87,21)" rx="2" ry="2" />
<text  x="1035.03" y="543.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.01%)</title><rect x="421.7" y="645" width="0.1" height="15.0" fill="rgb(219,193,25)" rx="2" ry="2" />
<text  x="424.72" y="655.5" ></text>
</g>
<g >
<title>_GI___libc_free (14 samples, 0.02%)</title><rect x="452.1" y="933" width="0.2" height="15.0" fill="rgb(208,213,43)" rx="2" ry="2" />
<text  x="455.15" y="943.5" ></text>
</g>
<g >
<title>tokio::coop::Budget::initial (11 samples, 0.01%)</title><rect x="1020.6" y="677" width="0.2" height="15.0" fill="rgb(235,15,22)" rx="2" ry="2" />
<text  x="1023.63" y="687.5" ></text>
</g>
<g >
<title>tokio::task::local::CURRENT::FOO::_getit (54 samples, 0.06%)</title><rect x="1083.1" y="677" width="0.7" height="15.0" fill="rgb(209,174,23)" rx="2" ry="2" />
<text  x="1086.14" y="687.5" ></text>
</g>
<g >
<title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,963 samples, 5.32%)</title><rect x="1018.7" y="709" width="62.8" height="15.0" fill="rgb(245,165,2)" rx="2" ry="2" />
<text  x="1021.72" y="719.5" >&lt;tokio..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (9 samples, 0.01%)</title><rect x="1111.9" y="405" width="0.1" height="15.0" fill="rgb(233,101,25)" rx="2" ry="2" />
<text  x="1114.87" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.03%)</title><rect x="353.0" y="949" width="0.3" height="15.0" fill="rgb(221,127,9)" rx="2" ry="2" />
<text  x="355.98" y="959.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.05%)</title><rect x="172.6" y="869" width="0.6" height="15.0" fill="rgb(232,13,40)" rx="2" ry="2" />
<text  x="175.60" y="879.5" ></text>
</g>
<g >
<title>inet_sk_rx_dst_set (52 samples, 0.06%)</title><rect x="628.6" y="309" width="0.7" height="15.0" fill="rgb(205,167,43)" rx="2" ry="2" />
<text  x="631.65" y="319.5" ></text>
</g>
<g >
<title>update_rq_clock (30 samples, 0.03%)</title><rect x="1186.4" y="821" width="0.4" height="15.0" fill="rgb(239,140,16)" rx="2" ry="2" />
<text  x="1189.38" y="831.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set_epi8 (31 samples, 0.03%)</title><rect x="194.9" y="517" width="0.4" height="15.0" fill="rgb(215,41,31)" rx="2" ry="2" />
<text  x="197.90" y="527.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (9 samples, 0.01%)</title><rect x="93.1" y="789" width="0.1" height="15.0" fill="rgb(243,18,30)" rx="2" ry="2" />
<text  x="96.09" y="799.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,029 samples, 1.10%)</title><rect x="382.2" y="853" width="13.0" height="15.0" fill="rgb(223,191,13)" rx="2" ry="2" />
<text  x="385.21" y="863.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (34 samples, 0.04%)</title><rect x="424.8" y="693" width="0.4" height="15.0" fill="rgb(235,217,13)" rx="2" ry="2" />
<text  x="427.78" y="703.5" ></text>
</g>
<g >
<title>sk_reset_timer (17 samples, 0.02%)</title><rect x="667.5" y="693" width="0.2" height="15.0" fill="rgb(222,191,30)" rx="2" ry="2" />
<text  x="670.50" y="703.5" ></text>
</g>
<g >
<title>tokio::util::slab::shard::Shard&lt;T&gt;::remove_local (167 samples, 0.18%)</title><rect x="790.7" y="773" width="2.1" height="15.0" fill="rgb(248,187,52)" rx="2" ry="2" />
<text  x="793.67" y="783.5" ></text>
</g>
<g >
<title>pick_next_task_fair (12 samples, 0.01%)</title><rect x="947.7" y="613" width="0.2" height="15.0" fill="rgb(227,126,54)" rx="2" ry="2" />
<text  x="950.70" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (75 samples, 0.08%)</title><rect x="428.0" y="453" width="1.0" height="15.0" fill="rgb(216,16,39)" rx="2" ry="2" />
<text  x="431.01" y="463.5" ></text>
</g>
<g >
<title>_lock_text_start (16 samples, 0.02%)</title><rect x="663.6" y="645" width="0.2" height="15.0" fill="rgb(234,92,53)" rx="2" ry="2" />
<text  x="666.57" y="655.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::read (532 samples, 0.57%)</title><rect x="459.9" y="1061" width="6.8" height="15.0" fill="rgb(205,84,20)" rx="2" ry="2" />
<text  x="462.95" y="1071.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::parser_node_visitor::ParserNodeVisitor::visit (8,754 samples, 9.39%)</title><rect x="121.4" y="981" width="110.8" height="15.0" fill="rgb(235,140,5)" rx="2" ry="2" />
<text  x="124.38" y="991.5" >jsonpath_lib:..</text>
</g>
<g >
<title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (18 samples, 0.02%)</title><rect x="143.8" y="581" width="0.2" height="15.0" fill="rgb(208,130,4)" rx="2" ry="2" />
<text  x="146.76" y="591.5" ></text>
</g>
<g >
<title>&lt;actix_http::message::BoxedResponseHead as core::ops::deref::Deref&gt;::deref (21 samples, 0.02%)</title><rect x="444.4" y="965" width="0.2" height="15.0" fill="rgb(249,147,18)" rx="2" ry="2" />
<text  x="447.35" y="975.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (16 samples, 0.02%)</title><rect x="575.4" y="757" width="0.2" height="15.0" fill="rgb(216,159,8)" rx="2" ry="2" />
<text  x="578.38" y="767.5" ></text>
</g>
<g >
<title>tokio::task::local::CURRENT::FOO::_getit (45 samples, 0.05%)</title><rect x="481.6" y="565" width="0.5" height="15.0" fill="rgb(241,118,15)" rx="2" ry="2" />
<text  x="484.57" y="575.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="137.2" y="837" width="0.2" height="15.0" fill="rgb(216,177,34)" rx="2" ry="2" />
<text  x="140.15" y="847.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.01%)</title><rect x="677.3" y="869" width="0.1" height="15.0" fill="rgb(240,111,31)" rx="2" ry="2" />
<text  x="680.25" y="879.5" ></text>
</g>
<g >
<title>std::panicking::try (8,015 samples, 8.60%)</title><rect x="1086.8" y="1157" width="101.5" height="15.0" fill="rgb(213,225,31)" rx="2" ry="2" />
<text  x="1089.83" y="1167.5" >std::panicki..</text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="152.6" y="725" width="0.1" height="15.0" fill="rgb(219,25,16)" rx="2" ry="2" />
<text  x="155.62" y="735.5" ></text>
</g>
<g >
<title>_close (2,931 samples, 3.14%)</title><rect x="733.7" y="741" width="37.1" height="15.0" fill="rgb(247,95,2)" rx="2" ry="2" />
<text  x="736.72" y="751.5" >_cl..</text>
</g>
<g >
<title>tcp_validate_incoming (73 samples, 0.08%)</title><rect x="640.6" y="309" width="0.9" height="15.0" fill="rgb(250,25,39)" rx="2" ry="2" />
<text  x="643.60" y="319.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next_char (8 samples, 0.01%)</title><rect x="121.2" y="901" width="0.1" height="15.0" fill="rgb(212,183,48)" rx="2" ry="2" />
<text  x="124.15" y="911.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (18 samples, 0.02%)</title><rect x="666.4" y="709" width="0.2" height="15.0" fill="rgb(237,66,44)" rx="2" ry="2" />
<text  x="669.42" y="719.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::pow (9 samples, 0.01%)</title><rect x="1008.8" y="773" width="0.1" height="15.0" fill="rgb(232,140,6)" rx="2" ry="2" />
<text  x="1011.76" y="783.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (59 samples, 0.06%)</title><rect x="87.6" y="773" width="0.7" height="15.0" fill="rgb(249,197,3)" rx="2" ry="2" />
<text  x="90.60" y="783.5" ></text>
</g>
<g >
<title>tokio::io::driver::Driver::dispatch (611 samples, 0.66%)</title><rect x="967.6" y="821" width="7.7" height="15.0" fill="rgb(247,124,38)" rx="2" ry="2" />
<text  x="970.56" y="831.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (79 samples, 0.08%)</title><rect x="319.3" y="421" width="1.0" height="15.0" fill="rgb(220,211,43)" rx="2" ry="2" />
<text  x="322.31" y="431.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="487.6" y="1189" width="0.1" height="15.0" fill="rgb(251,67,41)" rx="2" ry="2" />
<text  x="490.59" y="1199.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::json_path (304 samples, 0.33%)</title><rect x="468.9" y="1045" width="3.8" height="15.0" fill="rgb(250,6,45)" rx="2" ry="2" />
<text  x="471.90" y="1055.5" ></text>
</g>
<g >
<title>unlink_chunk (18 samples, 0.02%)</title><rect x="77.3" y="773" width="0.2" height="15.0" fill="rgb(217,106,3)" rx="2" ry="2" />
<text  x="80.25" y="783.5" ></text>
</g>
<g >
<title>ip_rcv (22 samples, 0.02%)</title><rect x="644.4" y="453" width="0.2" height="15.0" fill="rgb(208,71,7)" rx="2" ry="2" />
<text  x="647.37" y="463.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (50 samples, 0.05%)</title><rect x="398.8" y="789" width="0.6" height="15.0" fill="rgb(207,102,26)" rx="2" ry="2" />
<text  x="401.77" y="799.5" ></text>
</g>
<g >
<title>ktime_get_seconds (10 samples, 0.01%)</title><rect x="631.5" y="293" width="0.1" height="15.0" fill="rgb(237,179,28)" rx="2" ry="2" />
<text  x="634.49" y="303.5" ></text>
</g>
<g >
<title>&lt;tokio::io::driver::Driver as tokio::park::Park&gt;::park (54 samples, 0.06%)</title><rect x="975.3" y="837" width="0.7" height="15.0" fill="rgb(214,183,23)" rx="2" ry="2" />
<text  x="978.30" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (31 samples, 0.03%)</title><rect x="179.6" y="677" width="0.4" height="15.0" fill="rgb(244,176,14)" rx="2" ry="2" />
<text  x="182.62" y="687.5" ></text>
</g>
<g >
<title>fsnotify (15 samples, 0.02%)</title><rect x="768.4" y="629" width="0.2" height="15.0" fill="rgb(219,60,17)" rx="2" ry="2" />
<text  x="771.45" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,232 samples, 3.47%)</title><rect x="1118.9" y="869" width="40.9" height="15.0" fill="rgb(222,49,39)" rx="2" ry="2" />
<text  x="1121.90" y="879.5" >do_..</text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (46 samples, 0.05%)</title><rect x="677.6" y="901" width="0.6" height="15.0" fill="rgb(235,107,2)" rx="2" ry="2" />
<text  x="680.60" y="911.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (24 samples, 0.03%)</title><rect x="272.6" y="933" width="0.3" height="15.0" fill="rgb(242,73,45)" rx="2" ry="2" />
<text  x="275.63" y="943.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (16 samples, 0.02%)</title><rect x="756.0" y="549" width="0.2" height="15.0" fill="rgb(221,204,45)" rx="2" ry="2" />
<text  x="758.95" y="559.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (715 samples, 0.77%)</title><rect x="198.0" y="677" width="9.1" height="15.0" fill="rgb(207,171,48)" rx="2" ry="2" />
<text  x="201.02" y="687.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::wakeup (1,671 samples, 1.79%)</title><rect x="1093.0" y="645" width="21.1" height="15.0" fill="rgb(247,203,18)" rx="2" ry="2" />
<text  x="1095.99" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (25 samples, 0.03%)</title><rect x="137.2" y="885" width="0.3" height="15.0" fill="rgb(238,190,0)" rx="2" ry="2" />
<text  x="140.15" y="895.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (24 samples, 0.03%)</title><rect x="180.6" y="549" width="0.3" height="15.0" fill="rgb(243,152,24)" rx="2" ry="2" />
<text  x="183.62" y="559.5" ></text>
</g>
<g >
<title>dev_queue_xmit (238 samples, 0.26%)</title><rect x="323.7" y="709" width="3.0" height="15.0" fill="rgb(219,149,19)" rx="2" ry="2" />
<text  x="326.70" y="719.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (14 samples, 0.02%)</title><rect x="491.3" y="1077" width="0.2" height="15.0" fill="rgb(237,86,25)" rx="2" ry="2" />
<text  x="494.28" y="1087.5" ></text>
</g>
<g >
<title>raw_read_lock_irqsave (23 samples, 0.02%)</title><rect x="1111.0" y="357" width="0.3" height="15.0" fill="rgb(222,135,10)" rx="2" ry="2" />
<text  x="1113.96" y="367.5" ></text>
</g>
<g >
<title>int_free (13 samples, 0.01%)</title><rect x="395.6" y="789" width="0.1" height="15.0" fill="rgb(243,13,40)" rx="2" ry="2" />
<text  x="398.58" y="799.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::inner (21 samples, 0.02%)</title><rect x="793.7" y="773" width="0.3" height="15.0" fill="rgb(232,149,27)" rx="2" ry="2" />
<text  x="796.69" y="783.5" ></text>
</g>
<g >
<title>_inode_wait_for_writeback (24 samples, 0.03%)</title><rect x="753.7" y="517" width="0.3" height="15.0" fill="rgb(216,2,31)" rx="2" ry="2" />
<text  x="756.67" y="527.5" ></text>
</g>
<g >
<title>enqueue_timer (23 samples, 0.02%)</title><rect x="664.4" y="629" width="0.2" height="15.0" fill="rgb(243,165,14)" rx="2" ry="2" />
<text  x="667.36" y="639.5" ></text>
</g>
<g >
<title>_kmalloc_node_track_caller (131 samples, 0.14%)</title><rect x="569.4" y="709" width="1.7" height="15.0" fill="rgb(209,77,23)" rx="2" ry="2" />
<text  x="572.39" y="719.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.10%)</title><rect x="1077.6" y="613" width="1.3" height="15.0" fill="rgb(209,15,29)" rx="2" ry="2" />
<text  x="1080.63" y="623.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (8 samples, 0.01%)</title><rect x="338.7" y="885" width="0.1" height="15.0" fill="rgb(209,141,49)" rx="2" ry="2" />
<text  x="341.65" y="895.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (67 samples, 0.07%)</title><rect x="350.7" y="821" width="0.8" height="15.0" fill="rgb(250,111,39)" rx="2" ry="2" />
<text  x="353.65" y="831.5" ></text>
</g>
<g >
<title>&lt;http::uri::path::PathAndQuery as core::clone::Clone&gt;::clone (68 samples, 0.07%)</title><rect x="360.4" y="981" width="0.9" height="15.0" fill="rgb(211,135,47)" rx="2" ry="2" />
<text  x="363.43" y="991.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="180.1" y="645" width="0.3" height="15.0" fill="rgb(228,85,33)" rx="2" ry="2" />
<text  x="183.09" y="655.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.01%)</title><rect x="994.0" y="789" width="0.1" height="15.0" fill="rgb(254,172,36)" rx="2" ry="2" />
<text  x="996.98" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (22 samples, 0.02%)</title><rect x="37.3" y="1141" width="0.3" height="15.0" fill="rgb(239,76,6)" rx="2" ry="2" />
<text  x="40.28" y="1151.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::UnboundedSenderInner&lt;T&gt;::inc_num_messages (18 samples, 0.02%)</title><rect x="1089.2" y="965" width="0.3" height="15.0" fill="rgb(206,216,28)" rx="2" ry="2" />
<text  x="1092.24" y="975.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::and_then (19 samples, 0.02%)</title><rect x="1039.0" y="293" width="0.3" height="15.0" fill="rgb(206,74,39)" rx="2" ry="2" />
<text  x="1042.05" y="303.5" ></text>
</g>
<g >
<title>_srcu_read_lock (9 samples, 0.01%)</title><rect x="1155.0" y="613" width="0.1" height="15.0" fill="rgb(223,171,36)" rx="2" ry="2" />
<text  x="1157.96" y="623.5" ></text>
</g>
<g >
<title>_tcp_select_window (11 samples, 0.01%)</title><rect x="620.7" y="245" width="0.1" height="15.0" fill="rgb(228,65,23)" rx="2" ry="2" />
<text  x="623.67" y="255.5" ></text>
</g>
<g >
<title>_rdl_alloc (15 samples, 0.02%)</title><rect x="43.9" y="1045" width="0.2" height="15.0" fill="rgb(205,49,5)" rx="2" ry="2" />
<text  x="46.86" y="1055.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (8 samples, 0.01%)</title><rect x="1081.4" y="629" width="0.1" height="15.0" fill="rgb(205,15,2)" rx="2" ry="2" />
<text  x="1084.44" y="639.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::expr (1,006 samples, 1.08%)</title><rect x="53.0" y="901" width="12.7" height="15.0" fill="rgb(236,65,8)" rx="2" ry="2" />
<text  x="56.01" y="911.5" ></text>
</g>
<g >
<title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (19 samples, 0.02%)</title><rect x="154.7" y="581" width="0.2" height="15.0" fill="rgb(247,220,8)" rx="2" ry="2" />
<text  x="157.66" y="591.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (36 samples, 0.04%)</title><rect x="237.5" y="1061" width="0.4" height="15.0" fill="rgb(230,131,50)" rx="2" ry="2" />
<text  x="240.46" y="1071.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (66 samples, 0.07%)</title><rect x="161.3" y="629" width="0.8" height="15.0" fill="rgb(234,133,10)" rx="2" ry="2" />
<text  x="164.29" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (86 samples, 0.09%)</title><rect x="379.0" y="773" width="1.1" height="15.0" fill="rgb(221,5,36)" rx="2" ry="2" />
<text  x="381.98" y="783.5" ></text>
</g>
<g >
<title>_rdl_alloc (15 samples, 0.02%)</title><rect x="69.2" y="853" width="0.2" height="15.0" fill="rgb(242,223,15)" rx="2" ry="2" />
<text  x="72.22" y="863.5" ></text>
</g>
<g >
<title>tcp_mtu_probe (8 samples, 0.01%)</title><rect x="576.5" y="725" width="0.1" height="15.0" fill="rgb(214,24,36)" rx="2" ry="2" />
<text  x="579.51" y="735.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (31 samples, 0.03%)</title><rect x="211.7" y="517" width="0.4" height="15.0" fill="rgb(232,17,3)" rx="2" ry="2" />
<text  x="214.73" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::vec_deque::VecDeque&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt;&gt;&gt;&gt; (42 samples, 0.05%)</title><rect x="1011.0" y="837" width="0.5" height="15.0" fill="rgb(218,191,35)" rx="2" ry="2" />
<text  x="1014.00" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (33 samples, 0.04%)</title><rect x="417.8" y="805" width="0.5" height="15.0" fill="rgb(233,36,9)" rx="2" ry="2" />
<text  x="420.84" y="815.5" ></text>
</g>
<g >
<title>_calc_delta (8 samples, 0.01%)</title><rect x="918.3" y="549" width="0.1" height="15.0" fill="rgb(210,127,14)" rx="2" ry="2" />
<text  x="921.27" y="559.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (75 samples, 0.08%)</title><rect x="1077.9" y="597" width="1.0" height="15.0" fill="rgb(238,0,47)" rx="2" ry="2" />
<text  x="1080.91" y="607.5" ></text>
</g>
<g >
<title>core::mem::take (11 samples, 0.01%)</title><rect x="137.7" y="885" width="0.1" height="15.0" fill="rgb(213,24,12)" rx="2" ry="2" />
<text  x="140.66" y="895.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="177.0" y="501" width="0.2" height="15.0" fill="rgb(244,193,43)" rx="2" ry="2" />
<text  x="180.04" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (38 samples, 0.04%)</title><rect x="133.8" y="853" width="0.5" height="15.0" fill="rgb(241,170,42)" rx="2" ry="2" />
<text  x="136.80" y="863.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (9 samples, 0.01%)</title><rect x="512.8" y="677" width="0.1" height="15.0" fill="rgb(242,224,47)" rx="2" ry="2" />
<text  x="515.80" y="687.5" ></text>
</g>
<g >
<title>std::io::error::Error::kind (93 samples, 0.10%)</title><rect x="707.9" y="933" width="1.2" height="15.0" fill="rgb(225,169,22)" rx="2" ry="2" />
<text  x="710.93" y="943.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (26 samples, 0.03%)</title><rect x="522.0" y="485" width="0.4" height="15.0" fill="rgb(224,163,45)" rx="2" ry="2" />
<text  x="525.05" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="153.9" y="613" width="0.1" height="15.0" fill="rgb(206,226,32)" rx="2" ry="2" />
<text  x="156.88" y="623.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (122 samples, 0.13%)</title><rect x="215.6" y="517" width="1.5" height="15.0" fill="rgb(228,163,32)" rx="2" ry="2" />
<text  x="218.59" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (32 samples, 0.03%)</title><rect x="194.9" y="565" width="0.4" height="15.0" fill="rgb(250,50,2)" rx="2" ry="2" />
<text  x="197.89" y="575.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::collect_all_with_str (12 samples, 0.01%)</title><rect x="241.8" y="901" width="0.1" height="15.0" fill="rgb(231,2,37)" rx="2" ry="2" />
<text  x="244.79" y="911.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (16 samples, 0.02%)</title><rect x="668.2" y="757" width="0.2" height="15.0" fill="rgb(220,74,47)" rx="2" ry="2" />
<text  x="671.22" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::time::driver::entry::Entry&gt;&gt; (10 samples, 0.01%)</title><rect x="1004.7" y="757" width="0.1" height="15.0" fill="rgb(213,36,14)" rx="2" ry="2" />
<text  x="1007.72" y="767.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (241 samples, 0.26%)</title><rect x="128.3" y="789" width="3.1" height="15.0" fill="rgb(226,108,10)" rx="2" ry="2" />
<text  x="131.34" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (422 samples, 0.45%)</title><rect x="174.1" y="741" width="5.3" height="15.0" fill="rgb(252,150,37)" rx="2" ry="2" />
<text  x="177.08" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::expr (916 samples, 0.98%)</title><rect x="81.6" y="869" width="11.6" height="15.0" fill="rgb(223,159,24)" rx="2" ry="2" />
<text  x="84.63" y="879.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (74 samples, 0.08%)</title><rect x="400.9" y="789" width="0.9" height="15.0" fill="rgb(224,105,14)" rx="2" ry="2" />
<text  x="403.86" y="799.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (13 samples, 0.01%)</title><rect x="208.9" y="565" width="0.1" height="15.0" fill="rgb(245,225,33)" rx="2" ry="2" />
<text  x="211.85" y="575.5" ></text>
</g>
<g >
<title>tcp_set_state (27 samples, 0.03%)</title><rect x="332.7" y="885" width="0.4" height="15.0" fill="rgb(240,215,10)" rx="2" ry="2" />
<text  x="335.72" y="895.5" ></text>
</g>
<g >
<title>std::sys::unix::decode_error_kind (9 samples, 0.01%)</title><rect x="1117.2" y="901" width="0.2" height="15.0" fill="rgb(234,202,13)" rx="2" ry="2" />
<text  x="1120.24" y="911.5" ></text>
</g>
<g >
<title>inode_init_once (13 samples, 0.01%)</title><rect x="1135.0" y="661" width="0.2" height="15.0" fill="rgb(231,41,2)" rx="2" ry="2" />
<text  x="1138.01" y="671.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (10 samples, 0.01%)</title><rect x="1083.9" y="1141" width="0.1" height="15.0" fill="rgb(252,224,53)" rx="2" ry="2" />
<text  x="1086.91" y="1151.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::read_available (2,534 samples, 2.72%)</title><rect x="681.2" y="1013" width="32.1" height="15.0" fill="rgb(215,20,19)" rx="2" ry="2" />
<text  x="684.23" y="1023.5" >ac..</text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (151 samples, 0.16%)</title><rect x="713.6" y="1029" width="1.9" height="15.0" fill="rgb(218,121,21)" rx="2" ry="2" />
<text  x="716.62" y="1039.5" ></text>
</g>
<g >
<title>_softirqentry_text_start (4,198 samples, 4.50%)</title><rect x="592.0" y="517" width="53.2" height="15.0" fill="rgb(251,197,41)" rx="2" ry="2" />
<text  x="595.01" y="527.5" >_soft..</text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="423.4" y="645" width="0.2" height="15.0" fill="rgb(210,71,29)" rx="2" ry="2" />
<text  x="426.43" y="655.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker::{{closure}} (16 samples, 0.02%)</title><rect x="973.2" y="581" width="0.2" height="15.0" fill="rgb(221,214,43)" rx="2" ry="2" />
<text  x="976.16" y="591.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::pin (27 samples, 0.03%)</title><rect x="353.0" y="981" width="0.3" height="15.0" fill="rgb(223,158,46)" rx="2" ry="2" />
<text  x="355.98" y="991.5" ></text>
</g>
<g >
<title>_rust_probestack (10 samples, 0.01%)</title><rect x="65.7" y="1189" width="0.2" height="15.0" fill="rgb(249,17,30)" rx="2" ry="2" />
<text  x="68.75" y="1199.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (44 samples, 0.05%)</title><rect x="185.0" y="773" width="0.6" height="15.0" fill="rgb(208,129,41)" rx="2" ry="2" />
<text  x="188.04" y="783.5" ></text>
</g>
<g >
<title>_GI___pthread_mutex_unlock (10 samples, 0.01%)</title><rect x="514.3" y="677" width="0.1" height="15.0" fill="rgb(221,158,4)" rx="2" ry="2" />
<text  x="517.29" y="687.5" ></text>
</g>
<g >
<title>raw_read_lock_irqsave (37 samples, 0.04%)</title><rect x="636.2" y="197" width="0.4" height="15.0" fill="rgb(236,63,34)" rx="2" ry="2" />
<text  x="639.15" y="207.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (870 samples, 0.93%)</title><rect x="504.4" y="949" width="11.0" height="15.0" fill="rgb(227,174,29)" rx="2" ry="2" />
<text  x="507.38" y="959.5" ></text>
</g>
<g >
<title>_GI___libc_free (10 samples, 0.01%)</title><rect x="148.1" y="821" width="0.1" height="15.0" fill="rgb(212,181,34)" rx="2" ry="2" />
<text  x="151.07" y="831.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (10 samples, 0.01%)</title><rect x="30.5" y="1077" width="0.1" height="15.0" fill="rgb(234,63,11)" rx="2" ry="2" />
<text  x="33.48" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (83 samples, 0.09%)</title><rect x="411.7" y="789" width="1.1" height="15.0" fill="rgb(243,82,49)" rx="2" ry="2" />
<text  x="414.72" y="799.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (26 samples, 0.03%)</title><rect x="265.0" y="1045" width="0.4" height="15.0" fill="rgb(207,222,28)" rx="2" ry="2" />
<text  x="268.03" y="1055.5" ></text>
</g>
<g >
<title>_GI___libc_free (12 samples, 0.01%)</title><rect x="416.2" y="709" width="0.2" height="15.0" fill="rgb(246,118,16)" rx="2" ry="2" />
<text  x="419.20" y="719.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::dispatcher::PollResponse as core::cmp::PartialEq&gt;::eq (28 samples, 0.03%)</title><rect x="282.4" y="1077" width="0.4" height="15.0" fill="rgb(214,64,51)" rx="2" ry="2" />
<text  x="285.42" y="1087.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (15 samples, 0.02%)</title><rect x="689.4" y="709" width="0.2" height="15.0" fill="rgb(216,57,26)" rx="2" ry="2" />
<text  x="692.37" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (36 samples, 0.04%)</title><rect x="89.5" y="805" width="0.5" height="15.0" fill="rgb(220,13,16)" rx="2" ry="2" />
<text  x="92.55" y="815.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="1028.7" y="533" width="0.2" height="15.0" fill="rgb(205,210,26)" rx="2" ry="2" />
<text  x="1031.73" y="543.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (70 samples, 0.08%)</title><rect x="1143.2" y="709" width="0.8" height="15.0" fill="rgb(231,45,52)" rx="2" ry="2" />
<text  x="1146.16" y="719.5" ></text>
</g>
<g >
<title>tokio::time::driver::entry::Entry::poll_elapsed (101 samples, 0.11%)</title><rect x="340.7" y="1013" width="1.3" height="15.0" fill="rgb(234,210,3)" rx="2" ry="2" />
<text  x="343.68" y="1023.5" ></text>
</g>
<g >
<title>actix_router::path::Path&lt;T&gt;::path (47 samples, 0.05%)</title><rect x="355.8" y="965" width="0.6" height="15.0" fill="rgb(216,91,50)" rx="2" ry="2" />
<text  x="358.83" y="975.5" ></text>
</g>
<g >
<title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (37 samples, 0.04%)</title><rect x="273.0" y="965" width="0.5" height="15.0" fill="rgb(216,109,22)" rx="2" ry="2" />
<text  x="275.99" y="975.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,147 samples, 1.23%)</title><rect x="488.8" y="1189" width="14.6" height="15.0" fill="rgb(213,167,51)" rx="2" ry="2" />
<text  x="491.85" y="1199.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::::&lt;impl actix_http::h1::dispatcher::State&lt;S,B,X&gt;&gt;::project (25 samples, 0.03%)</title><rect x="232.8" y="1189" width="0.3" height="15.0" fill="rgb(224,105,2)" rx="2" ry="2" />
<text  x="235.79" y="1199.5" ></text>
</g>
<g >
<title>ryu::d2s_intrinsics::mul_shift_64 (42 samples, 0.05%)</title><rect x="433.2" y="581" width="0.5" height="15.0" fill="rgb(251,23,10)" rx="2" ry="2" />
<text  x="436.21" y="591.5" ></text>
</g>
<g >
<title>actix_utils::counter::CounterInner::dec (47 samples, 0.05%)</title><rect x="475.9" y="453" width="0.6" height="15.0" fill="rgb(211,138,5)" rx="2" ry="2" />
<text  x="478.93" y="463.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (12 samples, 0.01%)</title><rect x="1158.0" y="757" width="0.2" height="15.0" fill="rgb(211,70,45)" rx="2" ry="2" />
<text  x="1161.00" y="767.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::slot_range (21 samples, 0.02%)</title><rect x="1008.6" y="789" width="0.3" height="15.0" fill="rgb(222,21,19)" rx="2" ry="2" />
<text  x="1011.60" y="799.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (39 samples, 0.04%)</title><rect x="1011.0" y="805" width="0.5" height="15.0" fill="rgb(240,24,37)" rx="2" ry="2" />
<text  x="1014.03" y="815.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (56 samples, 0.06%)</title><rect x="1009.3" y="869" width="0.7" height="15.0" fill="rgb(246,115,28)" rx="2" ry="2" />
<text  x="1012.29" y="879.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (8,646 samples, 9.28%)</title><rect x="560.9" y="773" width="109.5" height="15.0" fill="rgb(226,138,48)" rx="2" ry="2" />
<text  x="563.95" y="783.5" >tcp_sendmsg_l..</text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (54 samples, 0.06%)</title><rect x="146.4" y="725" width="0.7" height="15.0" fill="rgb(226,93,45)" rx="2" ry="2" />
<text  x="149.45" y="735.5" ></text>
</g>
<g >
<title>core::mem::replace (13 samples, 0.01%)</title><rect x="72.5" y="837" width="0.1" height="15.0" fill="rgb(252,163,15)" rx="2" ry="2" />
<text  x="75.47" y="847.5" ></text>
</g>
<g >
<title>_pthread_enable_asynccancel (9 samples, 0.01%)</title><rect x="734.8" y="725" width="0.1" height="15.0" fill="rgb(216,87,10)" rx="2" ry="2" />
<text  x="737.78" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;*const serde_json::value::Value, (47 samples, 0.05%)</title><rect x="185.0" y="837" width="0.6" height="15.0" fill="rgb(215,67,44)" rx="2" ry="2" />
<text  x="188.03" y="847.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (52 samples, 0.06%)</title><rect x="236.2" y="1077" width="0.6" height="15.0" fill="rgb(232,179,13)" rx="2" ry="2" />
<text  x="239.18" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (4,741 samples, 5.09%)</title><rect x="732.8" y="901" width="60.0" height="15.0" fill="rgb(246,78,22)" rx="2" ry="2" />
<text  x="735.81" y="911.5" >core::..</text>
</g>
<g >
<title>skb_release_data (199 samples, 0.21%)</title><rect x="694.5" y="661" width="2.5" height="15.0" fill="rgb(249,93,48)" rx="2" ry="2" />
<text  x="697.51" y="671.5" ></text>
</g>
<g >
<title>skb_release_all (23 samples, 0.02%)</title><rect x="314.3" y="405" width="0.3" height="15.0" fill="rgb(218,116,27)" rx="2" ry="2" />
<text  x="317.31" y="415.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (33 samples, 0.04%)</title><rect x="72.8" y="885" width="0.4" height="15.0" fill="rgb(224,198,14)" rx="2" ry="2" />
<text  x="75.82" y="895.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (377 samples, 0.40%)</title><rect x="956.6" y="709" width="4.8" height="15.0" fill="rgb(224,218,52)" rx="2" ry="2" />
<text  x="959.59" y="719.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (8 samples, 0.01%)</title><rect x="798.3" y="789" width="0.1" height="15.0" fill="rgb(236,99,7)" rx="2" ry="2" />
<text  x="801.28" y="799.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (31 samples, 0.03%)</title><rect x="30.5" y="1109" width="0.4" height="15.0" fill="rgb(221,194,8)" rx="2" ry="2" />
<text  x="33.48" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (42 samples, 0.05%)</title><rect x="1043.7" y="181" width="0.6" height="15.0" fill="rgb(234,167,39)" rx="2" ry="2" />
<text  x="1046.72" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;&lt;actix_server::service::StreamService&lt;actix_service::and_then::AndThenService&lt;actix_service::fn_service::FnService&lt;actix_http::service::HttpService&lt;tokio::net::tcp::stream::TcpStream,actix_service::map_config::MapConfig&lt;actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::server::HttpServer&lt;rust_actix_jsonpath_bench::main::{{closure}}::{{closure}},actix_web::app::App&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_http::body::Body&gt;::listen::{{closure}}::{{closure}}, (12 samples, 0.01%)</title><rect x="1043.6" y="229" width="0.1" height="15.0" fill="rgb(245,40,43)" rx="2" ry="2" />
<text  x="1046.57" y="239.5" ></text>
</g>
<g >
<title>tokio::coop::budget (277 samples, 0.30%)</title><rect x="1020.6" y="693" width="3.5" height="15.0" fill="rgb(239,216,18)" rx="2" ry="2" />
<text  x="1023.58" y="703.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="91.4" y="773" width="0.3" height="15.0" fill="rgb(231,229,25)" rx="2" ry="2" />
<text  x="94.43" y="783.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="180.1" y="677" width="0.3" height="15.0" fill="rgb(219,118,21)" rx="2" ry="2" />
<text  x="183.09" y="687.5" ></text>
</g>
<g >
<title>int_malloc (31 samples, 0.03%)</title><rect x="68.7" y="837" width="0.4" height="15.0" fill="rgb(240,194,49)" rx="2" ry="2" />
<text  x="71.74" y="847.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (97 samples, 0.10%)</title><rect x="1059.1" y="261" width="1.2" height="15.0" fill="rgb(226,173,42)" rx="2" ry="2" />
<text  x="1062.11" y="271.5" ></text>
</g>
<g >
<title>core::mem::replace (18 samples, 0.02%)</title><rect x="974.9" y="725" width="0.2" height="15.0" fill="rgb(237,143,11)" rx="2" ry="2" />
<text  x="977.86" y="735.5" ></text>
</g>
<g >
<title>tcp_options_write (13 samples, 0.01%)</title><rect x="658.4" y="693" width="0.2" height="15.0" fill="rgb(219,170,30)" rx="2" ry="2" />
<text  x="661.42" y="703.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (59 samples, 0.06%)</title><rect x="341.1" y="901" width="0.8" height="15.0" fill="rgb(232,215,43)" rx="2" ry="2" />
<text  x="344.11" y="911.5" ></text>
</g>
<g >
<title>tokio::coop::poll_proceed (11 samples, 0.01%)</title><rect x="676.4" y="933" width="0.1" height="15.0" fill="rgb(247,228,11)" rx="2" ry="2" />
<text  x="679.38" y="943.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.02%)</title><rect x="99.4" y="869" width="0.2" height="15.0" fill="rgb(233,13,8)" rx="2" ry="2" />
<text  x="102.37" y="879.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (14 samples, 0.02%)</title><rect x="985.4" y="741" width="0.2" height="15.0" fill="rgb(244,49,50)" rx="2" ry="2" />
<text  x="988.44" y="751.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 0.03%)</title><rect x="340.4" y="981" width="0.3" height="15.0" fill="rgb(239,106,39)" rx="2" ry="2" />
<text  x="343.36" y="991.5" ></text>
</g>
<g >
<title>enqueue_timer (11 samples, 0.01%)</title><rect x="330.8" y="773" width="0.2" height="15.0" fill="rgb(247,73,51)" rx="2" ry="2" />
<text  x="333.84" y="783.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (10 samples, 0.01%)</title><rect x="191.7" y="597" width="0.1" height="15.0" fill="rgb(225,194,0)" rx="2" ry="2" />
<text  x="194.69" y="607.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (51 samples, 0.05%)</title><rect x="1144.1" y="709" width="0.6" height="15.0" fill="rgb(216,81,15)" rx="2" ry="2" />
<text  x="1147.06" y="719.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (54 samples, 0.06%)</title><rect x="528.5" y="581" width="0.7" height="15.0" fill="rgb(242,85,50)" rx="2" ry="2" />
<text  x="531.48" y="591.5" ></text>
</g>
<g >
<title>security_inode_alloc (22 samples, 0.02%)</title><rect x="1132.0" y="741" width="0.3" height="15.0" fill="rgb(223,164,40)" rx="2" ry="2" />
<text  x="1135.00" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::next_token (20 samples, 0.02%)</title><rect x="116.8" y="901" width="0.3" height="15.0" fill="rgb(221,188,11)" rx="2" ry="2" />
<text  x="119.80" y="911.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::drop_waker (31 samples, 0.03%)</title><rect x="677.8" y="821" width="0.4" height="15.0" fill="rgb(242,107,30)" rx="2" ry="2" />
<text  x="680.79" y="831.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::decode_state (61 samples, 0.07%)</title><rect x="1053.7" y="309" width="0.7" height="15.0" fill="rgb(211,22,27)" rx="2" ry="2" />
<text  x="1056.67" y="319.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (22 samples, 0.02%)</title><rect x="1077.6" y="597" width="0.3" height="15.0" fill="rgb(218,53,44)" rx="2" ry="2" />
<text  x="1080.63" y="607.5" ></text>
</g>
<g >
<title>bytes::bytes::release_shared (20 samples, 0.02%)</title><rect x="362.0" y="869" width="0.3" height="15.0" fill="rgb(216,183,15)" rx="2" ry="2" />
<text  x="365.02" y="879.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths_dot (24 samples, 0.03%)</title><rect x="398.1" y="837" width="0.4" height="15.0" fill="rgb(209,90,40)" rx="2" ry="2" />
<text  x="401.15" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;actix_server::service::StreamService&lt;actix_service::and_then::AndThenService&lt;actix_service::fn_service::FnService&lt;actix_http::service::HttpService&lt;tokio::net::tcp::stream::TcpStream,actix_service::map_config::MapConfig&lt;actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::server::HttpServer&lt;rust_actix_jsonpath_bench::main::{{closure}}::{{closure}},actix_web::app::App&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_http::body::Body&gt;::listen::{{closure}}::{{closure}}, (17 samples, 0.02%)</title><rect x="480.0" y="517" width="0.2" height="15.0" fill="rgb(243,12,8)" rx="2" ry="2" />
<text  x="483.02" y="527.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (26 samples, 0.03%)</title><rect x="424.4" y="693" width="0.4" height="15.0" fill="rgb(254,54,7)" rx="2" ry="2" />
<text  x="427.43" y="703.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::next_token (196 samples, 0.21%)</title><rect x="399.4" y="853" width="2.5" height="15.0" fill="rgb(210,2,51)" rx="2" ry="2" />
<text  x="402.44" y="863.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (14 samples, 0.02%)</title><rect x="449.7" y="853" width="0.1" height="15.0" fill="rgb(209,16,19)" rx="2" ry="2" />
<text  x="452.67" y="863.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::deregister (30 samples, 0.03%)</title><rect x="770.4" y="645" width="0.4" height="15.0" fill="rgb(215,153,26)" rx="2" ry="2" />
<text  x="773.45" y="655.5" ></text>
</g>
<g >
<title>migrate_disable (9 samples, 0.01%)</title><rect x="587.3" y="597" width="0.1" height="15.0" fill="rgb(249,86,52)" rx="2" ry="2" />
<text  x="590.29" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (10 samples, 0.01%)</title><rect x="1115.0" y="741" width="0.1" height="15.0" fill="rgb(244,192,45)" rx="2" ry="2" />
<text  x="1118.00" y="751.5" ></text>
</g>
<g >
<title>std::os::imp::unix::net::stream::UnixStream::shutdown (40 samples, 0.04%)</title><rect x="467.2" y="1013" width="0.5" height="15.0" fill="rgb(253,8,17)" rx="2" ry="2" />
<text  x="470.21" y="1023.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::split_to (87 samples, 0.09%)</title><rect x="43.0" y="1173" width="1.1" height="15.0" fill="rgb(211,41,41)" rx="2" ry="2" />
<text  x="46.00" y="1183.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (16,095 samples, 17.27%)</title><rect x="264.0" y="1173" width="203.7" height="15.0" fill="rgb(251,42,43)" rx="2" ry="2" />
<text  x="266.98" y="1183.5" >tokio::runtime::task::core..</text>
</g>
<g >
<title>resched_curr (19 samples, 0.02%)</title><rect x="1109.6" y="229" width="0.2" height="15.0" fill="rgb(215,214,51)" rx="2" ry="2" />
<text  x="1112.56" y="239.5" ></text>
</g>
<g >
<title>tcp_close (340 samples, 0.36%)</title><rect x="763.0" y="565" width="4.3" height="15.0" fill="rgb(248,44,17)" rx="2" ry="2" />
<text  x="765.98" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,085 samples, 1.16%)</title><rect x="151.2" y="853" width="13.7" height="15.0" fill="rgb(241,221,52)" rx="2" ry="2" />
<text  x="154.19" y="863.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::basic_scheduler::Shared as tokio::util::wake::Wake&gt;::wake (174 samples, 0.19%)</title><rect x="969.0" y="645" width="2.2" height="15.0" fill="rgb(227,5,47)" rx="2" ry="2" />
<text  x="971.97" y="655.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.05%)</title><rect x="194.1" y="581" width="0.6" height="15.0" fill="rgb(215,215,54)" rx="2" ry="2" />
<text  x="197.07" y="591.5" ></text>
</g>
<g >
<title>&lt;tokio::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (86 samples, 0.09%)</title><rect x="1015.3" y="789" width="1.1" height="15.0" fill="rgb(243,4,25)" rx="2" ry="2" />
<text  x="1018.31" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (30 samples, 0.03%)</title><rect x="361.3" y="949" width="0.4" height="15.0" fill="rgb(220,216,35)" rx="2" ry="2" />
<text  x="364.31" y="959.5" ></text>
</g>
<g >
<title>fput (15 samples, 0.02%)</title><rect x="955.1" y="693" width="0.2" height="15.0" fill="rgb(254,218,19)" rx="2" ry="2" />
<text  x="958.13" y="703.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::next_token (34 samples, 0.04%)</title><rect x="112.1" y="917" width="0.5" height="15.0" fill="rgb(214,77,7)" rx="2" ry="2" />
<text  x="115.14" y="927.5" ></text>
</g>
<g >
<title>_rust_dealloc (8 samples, 0.01%)</title><rect x="719.7" y="821" width="0.1" height="15.0" fill="rgb(208,191,35)" rx="2" ry="2" />
<text  x="722.66" y="831.5" ></text>
</g>
<g >
<title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (77 samples, 0.08%)</title><rect x="130.4" y="693" width="1.0" height="15.0" fill="rgb(249,216,40)" rx="2" ry="2" />
<text  x="133.42" y="703.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set1_epi8 (31 samples, 0.03%)</title><rect x="194.9" y="533" width="0.4" height="15.0" fill="rgb(218,120,0)" rx="2" ry="2" />
<text  x="197.90" y="543.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (13 samples, 0.01%)</title><rect x="1115.5" y="773" width="0.1" height="15.0" fill="rgb(238,191,2)" rx="2" ry="2" />
<text  x="1118.47" y="783.5" ></text>
</g>
<g >
<title>native_sched_clock (101 samples, 0.11%)</title><rect x="938.7" y="517" width="1.2" height="15.0" fill="rgb(233,227,43)" rx="2" ry="2" />
<text  x="941.67" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (78 samples, 0.08%)</title><rect x="242.4" y="629" width="1.0" height="15.0" fill="rgb(246,153,13)" rx="2" ry="2" />
<text  x="245.37" y="639.5" ></text>
</g>
<g >
<title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="38.4" y="1029" width="0.1" height="15.0" fill="rgb(250,33,41)" rx="2" ry="2" />
<text  x="41.37" y="1039.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (20,985 samples, 22.51%)</title><rect x="529.3" y="1237" width="265.7" height="15.0" fill="rgb(229,113,43)" rx="2" ry="2" />
<text  x="532.33" y="1247.5" >std::panic::catch_unwind</text>
</g>
<g >
<title>actix_router::url::DEFAULT_QUOTER::_getit (50 samples, 0.05%)</title><rect x="362.6" y="965" width="0.6" height="15.0" fill="rgb(206,122,36)" rx="2" ry="2" />
<text  x="365.55" y="975.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="1081.3" y="645" width="0.1" height="15.0" fill="rgb(218,221,10)" rx="2" ry="2" />
<text  x="1084.25" y="655.5" ></text>
</g>
<g >
<title>pipe_poll (8 samples, 0.01%)</title><rect x="975.8" y="629" width="0.1" height="15.0" fill="rgb(210,202,7)" rx="2" ry="2" />
<text  x="978.77" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::body::ResponseBody&lt;actix_http::body::Body&gt;&gt; (34 samples, 0.04%)</title><rect x="459.2" y="1029" width="0.4" height="15.0" fill="rgb(248,206,54)" rx="2" ry="2" />
<text  x="462.21" y="1039.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (221 samples, 0.24%)</title><rect x="38.6" y="1093" width="2.8" height="15.0" fill="rgb(234,163,33)" rx="2" ry="2" />
<text  x="41.57" y="1103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (30 samples, 0.03%)</title><rect x="770.4" y="613" width="0.4" height="15.0" fill="rgb(246,217,47)" rx="2" ry="2" />
<text  x="773.45" y="623.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (193 samples, 0.21%)</title><rect x="1026.5" y="661" width="2.4" height="15.0" fill="rgb(253,71,5)" rx="2" ry="2" />
<text  x="1029.46" y="671.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (180 samples, 0.19%)</title><rect x="251.8" y="517" width="2.3" height="15.0" fill="rgb(234,13,34)" rx="2" ry="2" />
<text  x="254.82" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::peer_addr (19 samples, 0.02%)</title><rect x="516.3" y="533" width="0.2" height="15.0" fill="rgb(244,44,44)" rx="2" ry="2" />
<text  x="519.30" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (358 samples, 0.38%)</title><rect x="154.9" y="741" width="4.5" height="15.0" fill="rgb(221,146,46)" rx="2" ry="2" />
<text  x="157.91" y="751.5" ></text>
</g>
<g >
<title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (50 samples, 0.05%)</title><rect x="42.2" y="1157" width="0.6" height="15.0" fill="rgb(244,161,39)" rx="2" ry="2" />
<text  x="45.18" y="1167.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::vptr (15 samples, 0.02%)</title><rect x="280.9" y="1045" width="0.2" height="15.0" fill="rgb(238,150,21)" rx="2" ry="2" />
<text  x="283.87" y="1055.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths (304 samples, 0.33%)</title><rect x="468.9" y="1029" width="3.8" height="15.0" fill="rgb(229,129,24)" rx="2" ry="2" />
<text  x="471.90" y="1039.5" ></text>
</g>
<g >
<title>actix_rt::system::System::is_set (54 samples, 0.06%)</title><rect x="528.5" y="597" width="0.7" height="15.0" fill="rgb(237,49,45)" rx="2" ry="2" />
<text  x="531.48" y="607.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (55 samples, 0.06%)</title><rect x="670.9" y="789" width="0.7" height="15.0" fill="rgb(215,95,5)" rx="2" ry="2" />
<text  x="673.91" y="799.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (15 samples, 0.02%)</title><rect x="486.0" y="629" width="0.1" height="15.0" fill="rgb(241,222,41)" rx="2" ry="2" />
<text  x="488.96" y="639.5" ></text>
</g>
<g >
<title>_const_udelay (53 samples, 0.06%)</title><rect x="867.3" y="533" width="0.6" height="15.0" fill="rgb(242,53,49)" rx="2" ry="2" />
<text  x="870.27" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_and (22 samples, 0.02%)</title><rect x="807.6" y="789" width="0.3" height="15.0" fill="rgb(239,179,41)" rx="2" ry="2" />
<text  x="810.57" y="799.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output::{{closure}} (8 samples, 0.01%)</title><rect x="1039.3" y="277" width="0.1" height="15.0" fill="rgb(239,170,15)" rx="2" ry="2" />
<text  x="1042.29" y="287.5" ></text>
</g>
<g >
<title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="1037.7" y="293" width="0.2" height="15.0" fill="rgb(245,122,31)" rx="2" ry="2" />
<text  x="1040.68" y="303.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::ref_dec (25 samples, 0.03%)</title><rect x="1063.1" y="229" width="0.3" height="15.0" fill="rgb(215,183,11)" rx="2" ry="2" />
<text  x="1066.10" y="239.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_movemask_epi8 (10 samples, 0.01%)</title><rect x="205.8" y="533" width="0.1" height="15.0" fill="rgb(239,132,27)" rx="2" ry="2" />
<text  x="208.79" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (8 samples, 0.01%)</title><rect x="213.6" y="581" width="0.1" height="15.0" fill="rgb(226,62,47)" rx="2" ry="2" />
<text  x="216.62" y="591.5" ></text>
</g>
<g >
<title>call_rcu (93 samples, 0.10%)</title><rect x="776.7" y="629" width="1.2" height="15.0" fill="rgb(243,121,21)" rx="2" ry="2" />
<text  x="779.69" y="639.5" ></text>
</g>
<g >
<title>&lt;http::uri::Uri as core::clone::Clone&gt;::clone (87 samples, 0.09%)</title><rect x="360.2" y="997" width="1.1" height="15.0" fill="rgb(240,175,38)" rx="2" ry="2" />
<text  x="363.20" y="1007.5" ></text>
</g>
<g >
<title>&lt;actix_web::handler::ExtractResponse&lt;T,S&gt; as core::future::future::Future&gt;::poll (1,006 samples, 1.08%)</title><rect x="53.0" y="1125" width="12.7" height="15.0" fill="rgb(231,5,45)" rx="2" ry="2" />
<text  x="56.01" y="1135.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.05%)</title><rect x="185.0" y="805" width="0.6" height="15.0" fill="rgb(209,141,49)" rx="2" ry="2" />
<text  x="188.03" y="815.5" ></text>
</g>
<g >
<title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (45 samples, 0.05%)</title><rect x="39.8" y="901" width="0.5" height="15.0" fill="rgb(212,226,15)" rx="2" ry="2" />
<text  x="42.77" y="911.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (13,045 samples, 13.99%)</title><rect x="67.1" y="1125" width="165.1" height="15.0" fill="rgb(237,91,29)" rx="2" ry="2" />
<text  x="70.06" y="1135.5" >&lt;futures_util::future..</text>
</g>
<g >
<title>mio::poll::Poll::poll (54 samples, 0.06%)</title><rect x="975.3" y="805" width="0.7" height="15.0" fill="rgb(242,212,52)" rx="2" ry="2" />
<text  x="978.30" y="815.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (66 samples, 0.07%)</title><rect x="750.5" y="485" width="0.8" height="15.0" fill="rgb(244,76,22)" rx="2" ry="2" />
<text  x="753.48" y="495.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::net::tcp::TcpStream as std::io::Read&gt;::read (1,941 samples, 2.08%)</title><rect x="683.3" y="933" width="24.6" height="15.0" fill="rgb(217,50,43)" rx="2" ry="2" />
<text  x="686.29" y="943.5" >&lt;..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.02%)</title><rect x="1070.2" y="501" width="0.3" height="15.0" fill="rgb(239,72,52)" rx="2" ry="2" />
<text  x="1073.24" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (78 samples, 0.08%)</title><rect x="242.4" y="693" width="1.0" height="15.0" fill="rgb(213,129,29)" rx="2" ry="2" />
<text  x="245.37" y="703.5" ></text>
</g>
<g >
<title>_libc_send (10,973 samples, 11.77%)</title><rect x="535.5" y="901" width="138.9" height="15.0" fill="rgb(210,46,0)" rx="2" ry="2" />
<text  x="538.50" y="911.5" >_libc_send</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (40 samples, 0.04%)</title><rect x="92.4" y="805" width="0.5" height="15.0" fill="rgb(238,95,47)" rx="2" ry="2" />
<text  x="95.41" y="815.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_ready (120 samples, 0.13%)</title><rect x="464.4" y="965" width="1.5" height="15.0" fill="rgb(251,143,6)" rx="2" ry="2" />
<text  x="467.39" y="975.5" ></text>
</g>
<g >
<title>ksize (36 samples, 0.04%)</title><rect x="618.1" y="245" width="0.4" height="15.0" fill="rgb(229,20,10)" rx="2" ry="2" />
<text  x="621.08" y="255.5" ></text>
</g>
<g >
<title>_cgroup_bpf_run_filter_skb (32 samples, 0.03%)</title><rect x="301.1" y="741" width="0.4" height="15.0" fill="rgb(237,201,10)" rx="2" ry="2" />
<text  x="304.11" y="751.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::release::{{closure}} (140 samples, 0.15%)</title><rect x="480.8" y="645" width="1.8" height="15.0" fill="rgb(207,79,33)" rx="2" ry="2" />
<text  x="483.79" y="655.5" ></text>
</g>
<g >
<title>tokio::runtime::enter::disallow_blocking (71 samples, 0.08%)</title><rect x="1024.1" y="693" width="0.9" height="15.0" fill="rgb(225,113,15)" rx="2" ry="2" />
<text  x="1027.09" y="703.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (32 samples, 0.03%)</title><rect x="92.0" y="725" width="0.4" height="15.0" fill="rgb(252,187,15)" rx="2" ry="2" />
<text  x="94.98" y="735.5" ></text>
</g>
<g >
<title>actix_http::config::DateService::check_date (31 samples, 0.03%)</title><rect x="446.1" y="949" width="0.4" height="15.0" fill="rgb(226,92,24)" rx="2" ry="2" />
<text  x="449.09" y="959.5" ></text>
</g>
<g >
<title>_GI___libc_free (8 samples, 0.01%)</title><rect x="1042.9" y="293" width="0.1" height="15.0" fill="rgb(227,147,24)" rx="2" ry="2" />
<text  x="1045.93" y="303.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::tick (1,573 samples, 1.69%)</title><rect x="244.1" y="1157" width="19.9" height="15.0" fill="rgb(247,81,51)" rx="2" ry="2" />
<text  x="247.07" y="1167.5" ></text>
</g>
<g >
<title>_wake_up_common (1,119 samples, 1.20%)</title><rect x="1097.3" y="389" width="14.1" height="15.0" fill="rgb(224,15,8)" rx="2" ry="2" />
<text  x="1100.25" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="416.2" y="757" width="0.3" height="15.0" fill="rgb(225,212,5)" rx="2" ry="2" />
<text  x="419.20" y="767.5" ></text>
</g>
<g >
<title>&lt;mio::net::tcp::TcpStream as mio::event_imp::Evented&gt;::register (24 samples, 0.03%)</title><rect x="244.7" y="677" width="0.3" height="15.0" fill="rgb(232,170,16)" rx="2" ry="2" />
<text  x="247.66" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::h1::dispatcher::State&lt;actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::Body&gt;,actix_http::body::Body,actix_http::h1::expect::ExpectHandler&gt;&gt; (39 samples, 0.04%)</title><rect x="459.1" y="1045" width="0.5" height="15.0" fill="rgb(250,33,45)" rx="2" ry="2" />
<text  x="462.15" y="1055.5" ></text>
</g>
<g >
<title>tcp_small_queue_chec.sr. (10 samples, 0.01%)</title><rect x="331.8" y="837" width="0.1" height="15.0" fill="rgb(229,196,47)" rx="2" ry="2" />
<text  x="334.79" y="847.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (20 samples, 0.02%)</title><rect x="553.8" y="709" width="0.2" height="15.0" fill="rgb(230,179,36)" rx="2" ry="2" />
<text  x="556.76" y="719.5" ></text>
</g>
<g >
<title>tokio::time::wheel::Wheel&lt;T&gt;::next_expiration (146 samples, 0.16%)</title><rect x="993.2" y="821" width="1.9" height="15.0" fill="rgb(232,134,41)" rx="2" ry="2" />
<text  x="996.21" y="831.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (9 samples, 0.01%)</title><rect x="153.8" y="629" width="0.1" height="15.0" fill="rgb(238,197,44)" rx="2" ry="2" />
<text  x="156.76" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (71 samples, 0.08%)</title><rect x="210.2" y="565" width="0.9" height="15.0" fill="rgb(250,60,48)" rx="2" ry="2" />
<text  x="213.24" y="575.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (10 samples, 0.01%)</title><rect x="402.5" y="805" width="0.2" height="15.0" fill="rgb(226,160,43)" rx="2" ry="2" />
<text  x="405.53" y="815.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::release_shared (162 samples, 0.17%)</title><rect x="720.6" y="869" width="2.1" height="15.0" fill="rgb(223,224,53)" rx="2" ry="2" />
<text  x="723.65" y="879.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::dolla (24 samples, 0.03%)</title><rect x="80.7" y="773" width="0.3" height="15.0" fill="rgb(230,23,1)" rx="2" ry="2" />
<text  x="83.69" y="783.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.01%)</title><rect x="180.3" y="629" width="0.1" height="15.0" fill="rgb(221,220,22)" rx="2" ry="2" />
<text  x="183.26" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.03%)</title><rect x="227.6" y="661" width="0.3" height="15.0" fill="rgb(252,186,21)" rx="2" ry="2" />
<text  x="230.57" y="671.5" ></text>
</g>
<g >
<title>ep_remove (8 samples, 0.01%)</title><rect x="785.1" y="661" width="0.1" height="15.0" fill="rgb(241,188,27)" rx="2" ry="2" />
<text  x="788.11" y="671.5" ></text>
</g>
<g >
<title>ipv4_dst_check (23 samples, 0.02%)</title><rect x="299.4" y="773" width="0.3" height="15.0" fill="rgb(219,27,32)" rx="2" ry="2" />
<text  x="302.42" y="783.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (76 samples, 0.08%)</title><rect x="649.9" y="485" width="0.9" height="15.0" fill="rgb(223,73,35)" rx="2" ry="2" />
<text  x="652.87" y="495.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (10 samples, 0.01%)</title><rect x="246.1" y="597" width="0.1" height="15.0" fill="rgb(234,130,30)" rx="2" ry="2" />
<text  x="249.11" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (708 samples, 0.76%)</title><rect x="494.1" y="1013" width="8.9" height="15.0" fill="rgb(251,74,31)" rx="2" ry="2" />
<text  x="497.06" y="1023.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (190 samples, 0.20%)</title><rect x="386.9" y="581" width="2.4" height="15.0" fill="rgb(229,1,49)" rx="2" ry="2" />
<text  x="389.89" y="591.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::shutdown (4,203 samples, 4.51%)</title><rect x="283.5" y="1061" width="53.2" height="15.0" fill="rgb(241,214,45)" rx="2" ry="2" />
<text  x="286.54" y="1071.5" >tokio..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.01%)</title><rect x="146.5" y="629" width="0.2" height="15.0" fill="rgb(225,42,19)" rx="2" ry="2" />
<text  x="149.51" y="639.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (18 samples, 0.02%)</title><rect x="974.9" y="757" width="0.2" height="15.0" fill="rgb(240,72,3)" rx="2" ry="2" />
<text  x="977.86" y="767.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (67 samples, 0.07%)</title><rect x="350.7" y="789" width="0.8" height="15.0" fill="rgb(210,207,42)" rx="2" ry="2" />
<text  x="353.65" y="799.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (28 samples, 0.03%)</title><rect x="52.5" y="1109" width="0.3" height="15.0" fill="rgb(229,3,46)" rx="2" ry="2" />
<text  x="55.47" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt; (147 samples, 0.16%)</title><rect x="436.7" y="949" width="1.8" height="15.0" fill="rgb(248,9,24)" rx="2" ry="2" />
<text  x="439.65" y="959.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::close_token (17 samples, 0.02%)</title><rect x="69.8" y="917" width="0.2" height="15.0" fill="rgb(223,145,20)" rx="2" ry="2" />
<text  x="72.79" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (40 samples, 0.04%)</title><rect x="418.9" y="853" width="0.5" height="15.0" fill="rgb(243,172,37)" rx="2" ry="2" />
<text  x="421.87" y="863.5" ></text>
</g>
<g >
<title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (304 samples, 0.33%)</title><rect x="468.9" y="1189" width="3.8" height="15.0" fill="rgb(206,114,29)" rx="2" ry="2" />
<text  x="471.90" y="1199.5" ></text>
</g>
<g >
<title>ip_send_check (27 samples, 0.03%)</title><rect x="621.9" y="181" width="0.3" height="15.0" fill="rgb(220,159,4)" rx="2" ry="2" />
<text  x="624.89" y="191.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (8 samples, 0.01%)</title><rect x="300.7" y="757" width="0.1" height="15.0" fill="rgb(249,80,54)" rx="2" ry="2" />
<text  x="303.73" y="767.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::clone_waker (26 samples, 0.03%)</title><rect x="337.0" y="965" width="0.3" height="15.0" fill="rgb(239,127,27)" rx="2" ry="2" />
<text  x="339.98" y="975.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping (13 samples, 0.01%)</title><rect x="214.6" y="549" width="0.2" height="15.0" fill="rgb(218,136,23)" rx="2" ry="2" />
<text  x="217.65" y="559.5" ></text>
</g>
<g >
<title>alloc_empty_file (515 samples, 0.55%)</title><rect x="1138.5" y="757" width="6.5" height="15.0" fill="rgb(222,79,53)" rx="2" ry="2" />
<text  x="1141.51" y="767.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.01%)</title><rect x="128.9" y="693" width="0.1" height="15.0" fill="rgb(223,183,31)" rx="2" ry="2" />
<text  x="131.86" y="703.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (81 samples, 0.09%)</title><rect x="340.8" y="949" width="1.1" height="15.0" fill="rgb(232,229,38)" rx="2" ry="2" />
<text  x="343.83" y="959.5" ></text>
</g>
<g >
<title>sock_alloc_inode (412 samples, 0.44%)</title><rect x="1132.4" y="757" width="5.2" height="15.0" fill="rgb(251,114,32)" rx="2" ry="2" />
<text  x="1135.39" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (48 samples, 0.05%)</title><rect x="122.3" y="885" width="0.6" height="15.0" fill="rgb(247,15,9)" rx="2" ry="2" />
<text  x="125.33" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (35 samples, 0.04%)</title><rect x="179.6" y="693" width="0.4" height="15.0" fill="rgb(223,209,0)" rx="2" ry="2" />
<text  x="182.57" y="703.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (770 samples, 0.83%)</title><rect x="515.4" y="789" width="9.7" height="15.0" fill="rgb(246,14,24)" rx="2" ry="2" />
<text  x="518.39" y="799.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (224 samples, 0.24%)</title><rect x="59.7" y="805" width="2.8" height="15.0" fill="rgb(225,6,22)" rx="2" ry="2" />
<text  x="62.70" y="815.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (49 samples, 0.05%)</title><rect x="29.7" y="1093" width="0.6" height="15.0" fill="rgb(215,130,20)" rx="2" ry="2" />
<text  x="32.66" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (820 samples, 0.88%)</title><rect x="212.6" y="629" width="10.4" height="15.0" fill="rgb(213,13,46)" rx="2" ry="2" />
<text  x="215.61" y="639.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::poll_write_priv (11,265 samples, 12.08%)</title><rect x="534.0" y="981" width="142.6" height="15.0" fill="rgb(227,116,41)" rx="2" ry="2" />
<text  x="537.00" y="991.5" >tokio::net::tcp::s..</text>
</g>
<g >
<title>alloc::alloc::dealloc (39 samples, 0.04%)</title><rect x="367.7" y="917" width="0.5" height="15.0" fill="rgb(213,147,24)" rx="2" ry="2" />
<text  x="370.70" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (60 samples, 0.06%)</title><rect x="133.7" y="933" width="0.8" height="15.0" fill="rgb(219,212,15)" rx="2" ry="2" />
<text  x="136.70" y="943.5" ></text>
</g>
<g >
<title>int_free (8 samples, 0.01%)</title><rect x="144.9" y="613" width="0.1" height="15.0" fill="rgb(242,47,18)" rx="2" ry="2" />
<text  x="147.86" y="623.5" ></text>
</g>
<g >
<title>ipv4_dst_check (12 samples, 0.01%)</title><rect x="309.0" y="453" width="0.1" height="15.0" fill="rgb(213,50,35)" rx="2" ry="2" />
<text  x="311.96" y="463.5" ></text>
</g>
<g >
<title>tokio::coop::budget (3,622 samples, 3.89%)</title><rect x="1030.5" y="677" width="45.8" height="15.0" fill="rgb(228,169,8)" rx="2" ry="2" />
<text  x="1033.46" y="687.5" >toki..</text>
</g>
<g >
<title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (37 samples, 0.04%)</title><rect x="441.4" y="981" width="0.4" height="15.0" fill="rgb(220,113,4)" rx="2" ry="2" />
<text  x="444.36" y="991.5" ></text>
</g>
<g >
<title>dput (11 samples, 0.01%)</title><rect x="768.3" y="629" width="0.1" height="15.0" fill="rgb(225,139,12)" rx="2" ry="2" />
<text  x="771.31" y="639.5" ></text>
</g>
<g >
<title>perf_pmu_disabl.ar. (1,141 samples, 1.22%)</title><rect x="1164.3" y="805" width="14.5" height="15.0" fill="rgb(236,127,5)" rx="2" ry="2" />
<text  x="1167.34" y="815.5" ></text>
</g>
<g >
<title>int_malloc (154 samples, 0.17%)</title><rect x="269.8" y="821" width="1.9" height="15.0" fill="rgb(210,218,35)" rx="2" ry="2" />
<text  x="272.77" y="831.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node (20 samples, 0.02%)</title><rect x="1092.7" y="645" width="0.3" height="15.0" fill="rgb(228,219,27)" rx="2" ry="2" />
<text  x="1095.73" y="655.5" ></text>
</g>
<g >
<title>core::cell::BorrowRefMut::new (22 samples, 0.02%)</title><rect x="364.8" y="965" width="0.3" height="15.0" fill="rgb(254,11,4)" rx="2" ry="2" />
<text  x="367.79" y="975.5" ></text>
</g>
<g >
<title>&lt;core::pin::Pin&lt;P&gt; as tokio::io::async_read::AsyncRead&gt;::prepare_uninitialized_buffer (27 samples, 0.03%)</title><rect x="682.0" y="965" width="0.4" height="15.0" fill="rgb(243,130,35)" rx="2" ry="2" />
<text  x="685.03" y="975.5" ></text>
</g>
<g >
<title>tokio::io::driver::Inner::register (16 samples, 0.02%)</title><rect x="461.8" y="933" width="0.2" height="15.0" fill="rgb(232,141,2)" rx="2" ry="2" />
<text  x="464.82" y="943.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (221 samples, 0.24%)</title><rect x="94.6" y="853" width="2.8" height="15.0" fill="rgb(227,100,12)" rx="2" ry="2" />
<text  x="97.61" y="863.5" ></text>
</g>
<g >
<title>common_file_perm (85 samples, 0.09%)</title><rect x="830.5" y="549" width="1.1" height="15.0" fill="rgb(252,42,36)" rx="2" ry="2" />
<text  x="833.49" y="559.5" ></text>
</g>
<g >
<title>&lt;actix_rt::arbiter::CleanupPending as core::future::future::Future&gt;::poll::{{closure}} (656 samples, 0.70%)</title><rect x="1037.4" y="341" width="8.3" height="15.0" fill="rgb(219,102,19)" rx="2" ry="2" />
<text  x="1040.44" y="351.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::run_until::{{closure}} (1,071 samples, 1.15%)</title><rect x="472.8" y="933" width="13.5" height="15.0" fill="rgb(237,89,19)" rx="2" ry="2" />
<text  x="475.77" y="943.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.01%)</title><rect x="770.3" y="725" width="0.1" height="15.0" fill="rgb(205,21,49)" rx="2" ry="2" />
<text  x="773.28" y="735.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (85 samples, 0.09%)</title><rect x="12.5" y="949" width="1.0" height="15.0" fill="rgb(237,179,22)" rx="2" ry="2" />
<text  x="15.46" y="959.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (124 samples, 0.13%)</title><rect x="218.3" y="581" width="1.6" height="15.0" fill="rgb(206,157,41)" rx="2" ry="2" />
<text  x="221.30" y="591.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (16 samples, 0.02%)</title><rect x="356.2" y="949" width="0.2" height="15.0" fill="rgb(232,105,29)" rx="2" ry="2" />
<text  x="359.22" y="959.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output::{{closure}} (19 samples, 0.02%)</title><rect x="1039.0" y="277" width="0.3" height="15.0" fill="rgb(222,126,31)" rx="2" ry="2" />
<text  x="1042.05" y="287.5" ></text>
</g>
<g >
<title>call_rcu (10 samples, 0.01%)</title><rect x="1154.4" y="693" width="0.1" height="15.0" fill="rgb(236,78,41)" rx="2" ry="2" />
<text  x="1157.39" y="703.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (43 samples, 0.05%)</title><rect x="124.5" y="805" width="0.5" height="15.0" fill="rgb(223,207,21)" rx="2" ry="2" />
<text  x="127.50" y="815.5" ></text>
</g>
<g >
<title>loopback_xmit (242 samples, 0.26%)</title><rect x="648.7" y="533" width="3.0" height="15.0" fill="rgb(205,171,41)" rx="2" ry="2" />
<text  x="651.68" y="543.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (18 samples, 0.02%)</title><rect x="510.4" y="597" width="0.2" height="15.0" fill="rgb(221,79,25)" rx="2" ry="2" />
<text  x="513.35" y="607.5" ></text>
</g>
<g >
<title>read_tsc (36 samples, 0.04%)</title><rect x="702.9" y="661" width="0.4" height="15.0" fill="rgb(244,45,29)" rx="2" ry="2" />
<text  x="705.88" y="671.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (304 samples, 0.33%)</title><rect x="468.9" y="1109" width="3.8" height="15.0" fill="rgb(252,139,54)" rx="2" ry="2" />
<text  x="471.90" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="717.5" y="885" width="0.3" height="15.0" fill="rgb(222,84,5)" rx="2" ry="2" />
<text  x="720.53" y="895.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (55 samples, 0.06%)</title><rect x="55.8" y="773" width="0.7" height="15.0" fill="rgb(253,48,36)" rx="2" ry="2" />
<text  x="58.80" y="783.5" ></text>
</g>
<g >
<title>&lt;actix_web::app_service::AppRouting as actix_service::Service&gt;::poll_ready (16 samples, 0.02%)</title><rect x="1066.6" y="245" width="0.2" height="15.0" fill="rgb(245,197,50)" rx="2" ry="2" />
<text  x="1069.55" y="255.5" ></text>
</g>
<g >
<title>&lt;actix_web::handler::ExtractResponse&lt;T,S&gt; as core::future::future::Future&gt;::poll (304 samples, 0.33%)</title><rect x="468.9" y="1141" width="3.8" height="15.0" fill="rgb(249,106,19)" rx="2" ry="2" />
<text  x="471.90" y="1151.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (28 samples, 0.03%)</title><rect x="1073.7" y="501" width="0.3" height="15.0" fill="rgb(245,66,29)" rx="2" ry="2" />
<text  x="1076.66" y="511.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (156 samples, 0.17%)</title><rect x="427.4" y="629" width="2.0" height="15.0" fill="rgb(231,127,3)" rx="2" ry="2" />
<text  x="430.39" y="639.5" ></text>
</g>
<g >
<title>core::task::poll::Poll&lt;T&gt;::map (6,242 samples, 6.70%)</title><rect x="716.0" y="1045" width="79.0" height="15.0" fill="rgb(245,156,42)" rx="2" ry="2" />
<text  x="718.95" y="1055.5" >core::tas..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (13 samples, 0.01%)</title><rect x="961.5" y="725" width="0.1" height="15.0" fill="rgb(205,99,27)" rx="2" ry="2" />
<text  x="964.46" y="735.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::selector_impl::JsonSelector as jsonpath_lib::paths::parser_token_handler::ParserTokenHandler&gt;::handle (8,754 samples, 9.39%)</title><rect x="121.4" y="965" width="110.8" height="15.0" fill="rgb(225,34,45)" rx="2" ry="2" />
<text  x="124.38" y="975.5" >&lt;jsonpath_lib..</text>
</g>
<g >
<title>tokio::util::slab::page::Shared&lt;T&gt;::get (14 samples, 0.02%)</title><rect x="975.1" y="773" width="0.2" height="15.0" fill="rgb(250,36,45)" rx="2" ry="2" />
<text  x="978.12" y="783.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::{{closure}} (331 samples, 0.36%)</title><rect x="525.1" y="1189" width="4.2" height="15.0" fill="rgb(252,120,2)" rx="2" ry="2" />
<text  x="528.14" y="1199.5" ></text>
</g>
<g >
<title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (770 samples, 0.83%)</title><rect x="515.4" y="1077" width="9.7" height="15.0" fill="rgb(252,54,33)" rx="2" ry="2" />
<text  x="518.39" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt; (10 samples, 0.01%)</title><rect x="1022.7" y="485" width="0.1" height="15.0" fill="rgb(223,128,49)" rx="2" ry="2" />
<text  x="1025.65" y="495.5" ></text>
</g>
<g >
<title>_wake_up_sync_key (200 samples, 0.21%)</title><rect x="634.6" y="261" width="2.5" height="15.0" fill="rgb(223,36,1)" rx="2" ry="2" />
<text  x="637.56" y="271.5" ></text>
</g>
<g >
<title>&lt;rust_actix_jsonpath_bench::new as actix_web::service::HttpServiceFactory&gt;::register::new::{{closure}} (304 samples, 0.33%)</title><rect x="468.9" y="1093" width="3.8" height="15.0" fill="rgb(254,8,32)" rx="2" ry="2" />
<text  x="471.90" y="1103.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (8 samples, 0.01%)</title><rect x="1155.9" y="661" width="0.1" height="15.0" fill="rgb(231,213,30)" rx="2" ry="2" />
<text  x="1158.89" y="671.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="465.4" y="933" width="0.1" height="15.0" fill="rgb(212,92,32)" rx="2" ry="2" />
<text  x="468.35" y="943.5" ></text>
</g>
<g >
<title>std::os::imp::unix::net::stream::UnixStream::set_nonblocking (24 samples, 0.03%)</title><rect x="10.6" y="1253" width="0.3" height="15.0" fill="rgb(217,25,13)" rx="2" ry="2" />
<text  x="13.63" y="1263.5" ></text>
</g>
<g >
<title>tcp_poll (257 samples, 0.28%)</title><rect x="250.9" y="533" width="3.3" height="15.0" fill="rgb(211,14,42)" rx="2" ry="2" />
<text  x="253.93" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::checked_add_duration (25 samples, 0.03%)</title><rect x="983.1" y="805" width="0.3" height="15.0" fill="rgb(223,2,42)" rx="2" ry="2" />
<text  x="986.08" y="815.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::sse2::Group::match_byte (52 samples, 0.06%)</title><rect x="177.8" y="469" width="0.6" height="15.0" fill="rgb(226,55,46)" rx="2" ry="2" />
<text  x="180.75" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_xor (44 samples, 0.05%)</title><rect x="484.8" y="645" width="0.6" height="15.0" fill="rgb(226,151,40)" rx="2" ry="2" />
<text  x="487.85" y="655.5" ></text>
</g>
<g >
<title>tokio::coop::CURRENT::_getit (62 samples, 0.07%)</title><rect x="1031.2" y="613" width="0.8" height="15.0" fill="rgb(232,20,1)" rx="2" ry="2" />
<text  x="1034.22" y="623.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::extend_from_slice (19 samples, 0.02%)</title><rect x="443.4" y="933" width="0.2" height="15.0" fill="rgb(224,130,32)" rx="2" ry="2" />
<text  x="446.35" y="943.5" ></text>
</g>
<g >
<title>cpuacct_charge (45 samples, 0.05%)</title><rect x="918.6" y="549" width="0.6" height="15.0" fill="rgb(212,131,34)" rx="2" ry="2" />
<text  x="921.64" y="559.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (20 samples, 0.02%)</title><rect x="421.5" y="661" width="0.2" height="15.0" fill="rgb(237,154,19)" rx="2" ry="2" />
<text  x="424.46" y="671.5" ></text>
</g>
<g >
<title>_x64_sys_epoll_wait (2,001 samples, 2.15%)</title><rect x="1161.7" y="933" width="25.3" height="15.0" fill="rgb(249,48,10)" rx="2" ry="2" />
<text  x="1164.70" y="943.5" >_..</text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::new_filter_context (69 samples, 0.07%)</title><rect x="231.3" y="933" width="0.9" height="15.0" fill="rgb(230,112,47)" rx="2" ry="2" />
<text  x="234.32" y="943.5" ></text>
</g>
<g >
<title>core::ptr::write (9 samples, 0.01%)</title><rect x="134.3" y="917" width="0.2" height="15.0" fill="rgb(228,45,9)" rx="2" ry="2" />
<text  x="137.34" y="927.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="503.6" y="1061" width="0.1" height="15.0" fill="rgb(248,9,27)" rx="2" ry="2" />
<text  x="506.59" y="1071.5" ></text>
</g>
<g >
<title>tcp_mtu_probe (17 samples, 0.02%)</title><rect x="666.0" y="709" width="0.2" height="15.0" fill="rgb(236,14,38)" rx="2" ry="2" />
<text  x="668.95" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (50 samples, 0.05%)</title><rect x="1062.8" y="293" width="0.6" height="15.0" fill="rgb(230,165,2)" rx="2" ry="2" />
<text  x="1065.78" y="303.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (18 samples, 0.02%)</title><rect x="154.7" y="565" width="0.2" height="15.0" fill="rgb(214,52,46)" rx="2" ry="2" />
<text  x="157.67" y="575.5" ></text>
</g>
<g >
<title>_kmalloc_node_track_caller (48 samples, 0.05%)</title><rect x="615.9" y="229" width="0.7" height="15.0" fill="rgb(250,64,15)" rx="2" ry="2" />
<text  x="618.95" y="239.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="162.2" y="645" width="0.3" height="15.0" fill="rgb(215,90,28)" rx="2" ry="2" />
<text  x="165.22" y="655.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk (419 samples, 0.45%)</title><rect x="174.1" y="693" width="5.3" height="15.0" fill="rgb(218,103,6)" rx="2" ry="2" />
<text  x="177.12" y="703.5" ></text>
</g>
<g >
<title>actix_http::message::RESPONSE_POOL::_getit (13 samples, 0.01%)</title><rect x="450.0" y="933" width="0.2" height="15.0" fill="rgb(215,84,28)" rx="2" ry="2" />
<text  x="453.00" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (9 samples, 0.01%)</title><rect x="240.5" y="885" width="0.1" height="15.0" fill="rgb(221,63,46)" rx="2" ry="2" />
<text  x="243.46" y="895.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2 (44 samples, 0.05%)</title><rect x="29.7" y="1045" width="0.5" height="15.0" fill="rgb(247,212,31)" rx="2" ry="2" />
<text  x="32.66" y="1055.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (8 samples, 0.01%)</title><rect x="649.6" y="501" width="0.1" height="15.0" fill="rgb(231,147,16)" rx="2" ry="2" />
<text  x="652.62" y="511.5" ></text>
</g>
<g >
<title>core::cell::BorrowRefMut::new (12 samples, 0.01%)</title><rect x="369.9" y="965" width="0.1" height="15.0" fill="rgb(210,109,9)" rx="2" ry="2" />
<text  x="372.88" y="975.5" ></text>
</g>
<g >
<title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.06%)</title><rect x="214.8" y="565" width="0.8" height="15.0" fill="rgb(245,209,52)" rx="2" ry="2" />
<text  x="217.81" y="575.5" ></text>
</g>
<g >
<title>_sys_sendto (10,569 samples, 11.34%)</title><rect x="539.1" y="837" width="133.7" height="15.0" fill="rgb(229,64,4)" rx="2" ry="2" />
<text  x="542.06" y="847.5" >_sys_sendto</text>
</g>
<g >
<title>tcache_get (15 samples, 0.02%)</title><rect x="353.0" y="885" width="0.2" height="15.0" fill="rgb(237,209,45)" rx="2" ry="2" />
<text  x="356.05" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (132 samples, 0.14%)</title><rect x="1089.7" y="885" width="1.7" height="15.0" fill="rgb(220,137,41)" rx="2" ry="2" />
<text  x="1092.71" y="895.5" ></text>
</g>
<g >
<title>aa_sk_perm (27 samples, 0.03%)</title><rect x="511.2" y="565" width="0.3" height="15.0" fill="rgb(237,42,3)" rx="2" ry="2" />
<text  x="514.19" y="575.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="97.8" y="885" width="0.1" height="15.0" fill="rgb(206,156,24)" rx="2" ry="2" />
<text  x="100.80" y="895.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (11 samples, 0.01%)</title><rect x="218.0" y="581" width="0.1" height="15.0" fill="rgb(243,180,7)" rx="2" ry="2" />
<text  x="220.98" y="591.5" ></text>
</g>
<g >
<title>_GI___libc_free (28 samples, 0.03%)</title><rect x="383.7" y="645" width="0.4" height="15.0" fill="rgb(214,126,40)" rx="2" ry="2" />
<text  x="386.70" y="655.5" ></text>
</g>
<g >
<title>select_idle_sibling (23 samples, 0.02%)</title><rect x="1100.7" y="245" width="0.3" height="15.0" fill="rgb(205,54,26)" rx="2" ry="2" />
<text  x="1103.72" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (189 samples, 0.20%)</title><rect x="275.3" y="1013" width="2.4" height="15.0" fill="rgb(223,149,51)" rx="2" ry="2" />
<text  x="278.33" y="1023.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (13 samples, 0.01%)</title><rect x="210.0" y="613" width="0.2" height="15.0" fill="rgb(224,166,52)" rx="2" ry="2" />
<text  x="212.99" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (19 samples, 0.02%)</title><rect x="112.3" y="901" width="0.2" height="15.0" fill="rgb(211,98,14)" rx="2" ry="2" />
<text  x="115.31" y="911.5" ></text>
</g>
<g >
<title>pthread_getattr_np (11 samples, 0.01%)</title><rect x="1083.9" y="1157" width="0.1" height="15.0" fill="rgb(221,219,3)" rx="2" ry="2" />
<text  x="1086.91" y="1167.5" ></text>
</g>
<g >
<title>ep_poll_callback (14 samples, 0.02%)</title><rect x="318.7" y="357" width="0.1" height="15.0" fill="rgb(254,67,35)" rx="2" ry="2" />
<text  x="321.66" y="367.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp_json_json (154 samples, 0.17%)</title><rect x="138.0" y="885" width="1.9" height="15.0" fill="rgb(218,51,41)" rx="2" ry="2" />
<text  x="140.98" y="895.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (14 samples, 0.02%)</title><rect x="591.7" y="549" width="0.2" height="15.0" fill="rgb(242,161,50)" rx="2" ry="2" />
<text  x="594.73" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_or (11 samples, 0.01%)</title><rect x="974.7" y="789" width="0.2" height="15.0" fill="rgb(245,183,35)" rx="2" ry="2" />
<text  x="977.72" y="799.5" ></text>
</g>
<g >
<title>fsnotify (20 samples, 0.02%)</title><rect x="1157.3" y="773" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1160.25" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (343 samples, 0.37%)</title><rect x="267.5" y="901" width="4.3" height="15.0" fill="rgb(244,199,22)" rx="2" ry="2" />
<text  x="270.46" y="911.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::write (10 samples, 0.01%)</title><rect x="30.5" y="1093" width="0.1" height="15.0" fill="rgb(205,52,26)" rx="2" ry="2" />
<text  x="33.48" y="1103.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.03%)</title><rect x="1037.9" y="293" width="0.4" height="15.0" fill="rgb(226,160,48)" rx="2" ry="2" />
<text  x="1040.92" y="303.5" ></text>
</g>
<g >
<title>ip_queue_xmit (534 samples, 0.57%)</title><rect x="620.9" y="245" width="6.8" height="15.0" fill="rgb(224,110,21)" rx="2" ry="2" />
<text  x="623.95" y="255.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 0.01%)</title><rect x="1063.3" y="213" width="0.1" height="15.0" fill="rgb(210,60,37)" rx="2" ry="2" />
<text  x="1066.29" y="223.5" ></text>
</g>
<g >
<title>_fdget_pos (52 samples, 0.06%)</title><rect x="819.8" y="613" width="0.6" height="15.0" fill="rgb(237,121,44)" rx="2" ry="2" />
<text  x="822.76" y="623.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::basic_scheduler::Shared as tokio::util::wake::Wake&gt;::wake_by_ref (1,786 samples, 1.92%)</title><rect x="1092.0" y="789" width="22.6" height="15.0" fill="rgb(249,147,50)" rx="2" ry="2" />
<text  x="1094.99" y="799.5" >&lt;..</text>
</g>
<g >
<title>std::sys::unix::net::Socket::accept (3,394 samples, 3.64%)</title><rect x="1117.2" y="949" width="43.0" height="15.0" fill="rgb(244,196,34)" rx="2" ry="2" />
<text  x="1120.24" y="959.5" >std:..</text>
</g>
<g >
<title>truncate_inode_pages_range (20 samples, 0.02%)</title><rect x="754.9" y="533" width="0.2" height="15.0" fill="rgb(254,101,54)" rx="2" ry="2" />
<text  x="757.89" y="543.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::exprs (1,006 samples, 1.08%)</title><rect x="53.0" y="949" width="12.7" height="15.0" fill="rgb(254,56,15)" rx="2" ry="2" />
<text  x="56.01" y="959.5" ></text>
</g>
<g >
<title>httparse::simd::avx2::parse_uri_batch_32 (35 samples, 0.04%)</title><rect x="51.0" y="1125" width="0.5" height="15.0" fill="rgb(215,60,5)" rx="2" ry="2" />
<text  x="54.01" y="1135.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.03%)</title><rect x="36.7" y="1045" width="0.4" height="15.0" fill="rgb(216,10,41)" rx="2" ry="2" />
<text  x="39.70" y="1055.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.02%)</title><rect x="381.7" y="837" width="0.1" height="15.0" fill="rgb(226,31,13)" rx="2" ry="2" />
<text  x="384.67" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt; (47 samples, 0.05%)</title><rect x="185.0" y="821" width="0.6" height="15.0" fill="rgb(253,75,48)" rx="2" ry="2" />
<text  x="188.03" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_service::and_then::State&lt;actix_service::fn_service::FnService&lt;actix_http::service::HttpService&lt;tokio::net::tcp::stream::TcpStream,actix_service::map_config::MapConfig&lt;actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::server::HttpServer&lt;rust_actix_jsonpath_bench::main::{{closure}}::{{closure}},actix_web::app::App&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_http::body::Body&gt;::listen::{{closure}}::{{closure}}, (6,193 samples, 6.64%)</title><rect x="716.6" y="997" width="78.4" height="15.0" fill="rgb(245,163,29)" rx="2" ry="2" />
<text  x="719.57" y="1007.5" >core::ptr..</text>
</g>
<g >
<title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (304 samples, 0.33%)</title><rect x="468.9" y="1221" width="3.8" height="15.0" fill="rgb(252,72,16)" rx="2" ry="2" />
<text  x="471.90" y="1231.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (9 samples, 0.01%)</title><rect x="235.8" y="1061" width="0.1" height="15.0" fill="rgb(252,129,19)" rx="2" ry="2" />
<text  x="238.81" y="1071.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once{{vtable-shim}} (8,015 samples, 8.60%)</title><rect x="1086.8" y="1205" width="101.5" height="15.0" fill="rgb(236,182,16)" rx="2" ry="2" />
<text  x="1089.83" y="1215.5" >core::ops::f..</text>
</g>
<g >
<title>ipv4_mtu (10 samples, 0.01%)</title><rect x="654.1" y="597" width="0.1" height="15.0" fill="rgb(251,156,48)" rx="2" ry="2" />
<text  x="657.12" y="607.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (11 samples, 0.01%)</title><rect x="665.5" y="613" width="0.1" height="15.0" fill="rgb(247,128,13)" rx="2" ry="2" />
<text  x="668.50" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (80 samples, 0.09%)</title><rect x="113.3" y="949" width="1.0" height="15.0" fill="rgb(230,78,47)" rx="2" ry="2" />
<text  x="116.27" y="959.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_or (11 samples, 0.01%)</title><rect x="974.7" y="773" width="0.2" height="15.0" fill="rgb(242,65,39)" rx="2" ry="2" />
<text  x="977.72" y="783.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (218 samples, 0.23%)</title><rect x="175.8" y="581" width="2.8" height="15.0" fill="rgb(236,10,27)" rx="2" ry="2" />
<text  x="178.83" y="591.5" ></text>
</g>
<g >
<title>cond_resched (10 samples, 0.01%)</title><rect x="850.1" y="661" width="0.1" height="15.0" fill="rgb(210,0,19)" rx="2" ry="2" />
<text  x="853.11" y="671.5" ></text>
</g>
<g >
<title>_fdget (14 samples, 0.02%)</title><rect x="773.4" y="661" width="0.2" height="15.0" fill="rgb(225,164,16)" rx="2" ry="2" />
<text  x="776.41" y="671.5" ></text>
</g>
<g >
<title>_lock_text_start (8 samples, 0.01%)</title><rect x="330.7" y="773" width="0.1" height="15.0" fill="rgb(222,20,43)" rx="2" ry="2" />
<text  x="333.68" y="783.5" ></text>
</g>
<g >
<title>raw_spin_unlock_bh (8 samples, 0.01%)</title><rect x="690.3" y="693" width="0.1" height="15.0" fill="rgb(234,54,42)" rx="2" ry="2" />
<text  x="693.31" y="703.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (129 samples, 0.14%)</title><rect x="187.5" y="677" width="1.6" height="15.0" fill="rgb(249,95,33)" rx="2" ry="2" />
<text  x="190.46" y="687.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::tick (770 samples, 0.83%)</title><rect x="515.4" y="1013" width="9.7" height="15.0" fill="rgb(228,85,39)" rx="2" ry="2" />
<text  x="518.39" y="1023.5" ></text>
</g>
<g >
<title>dev_queue_xmit (602 samples, 0.65%)</title><rect x="646.3" y="581" width="7.6" height="15.0" fill="rgb(241,183,3)" rx="2" ry="2" />
<text  x="649.25" y="591.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (40 samples, 0.04%)</title><rect x="162.2" y="661" width="0.5" height="15.0" fill="rgb(210,174,37)" rx="2" ry="2" />
<text  x="165.22" y="671.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (13 samples, 0.01%)</title><rect x="1189.4" y="1221" width="0.2" height="15.0" fill="rgb(246,19,36)" rx="2" ry="2" />
<text  x="1192.39" y="1231.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::whitespace (13 samples, 0.01%)</title><rect x="106.1" y="757" width="0.2" height="15.0" fill="rgb(250,135,24)" rx="2" ry="2" />
<text  x="109.09" y="767.5" ></text>
</g>
<g >
<title>kmem_cache_free (270 samples, 0.29%)</title><rect x="743.8" y="565" width="3.4" height="15.0" fill="rgb(254,19,45)" rx="2" ry="2" />
<text  x="746.83" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;jsonpath_lib::selector::selector_impl::JsonSelector&gt;&gt; (20 samples, 0.02%)</title><rect x="381.9" y="869" width="0.3" height="15.0" fill="rgb(226,113,3)" rx="2" ry="2" />
<text  x="384.94" y="879.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (37 samples, 0.04%)</title><rect x="472.3" y="821" width="0.4" height="15.0" fill="rgb(224,9,41)" rx="2" ry="2" />
<text  x="475.26" y="831.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2,148 samples, 2.30%)</title><rect x="614.3" y="325" width="27.2" height="15.0" fill="rgb(205,182,43)" rx="2" ry="2" />
<text  x="617.33" y="335.5" >t..</text>
</g>
<g >
<title>_x86_indirect_thunk_rax (13 samples, 0.01%)</title><rect x="947.5" y="613" width="0.2" height="15.0" fill="rgb(244,171,42)" rx="2" ry="2" />
<text  x="950.50" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next_char (12 samples, 0.01%)</title><rect x="87.8" y="757" width="0.2" height="15.0" fill="rgb(208,63,47)" rx="2" ry="2" />
<text  x="90.84" y="767.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (78 samples, 0.08%)</title><rect x="242.4" y="565" width="1.0" height="15.0" fill="rgb(210,93,27)" rx="2" ry="2" />
<text  x="245.37" y="575.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (705 samples, 0.76%)</title><rect x="189.1" y="693" width="8.9" height="15.0" fill="rgb(254,60,38)" rx="2" ry="2" />
<text  x="192.09" y="703.5" ></text>
</g>
<g >
<title>_GI_epoll_ctl (1,059 samples, 1.14%)</title><rect x="772.5" y="725" width="13.4" height="15.0" fill="rgb(233,28,17)" rx="2" ry="2" />
<text  x="775.52" y="735.5" ></text>
</g>
<g >
<title>core::num::dec2flt::number::Number::try_fast_path (124 samples, 0.13%)</title><rect x="102.7" y="773" width="1.6" height="15.0" fill="rgb(226,206,42)" rx="2" ry="2" />
<text  x="105.75" y="783.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,071 samples, 1.15%)</title><rect x="472.8" y="789" width="13.5" height="15.0" fill="rgb(206,0,12)" rx="2" ry="2" />
<text  x="475.77" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::other (96 samples, 0.10%)</title><rect x="118.3" y="837" width="1.2" height="15.0" fill="rgb(247,46,42)" rx="2" ry="2" />
<text  x="121.32" y="847.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (34 samples, 0.04%)</title><rect x="43.7" y="1109" width="0.4" height="15.0" fill="rgb(208,59,7)" rx="2" ry="2" />
<text  x="46.67" y="1119.5" ></text>
</g>
<g >
<title>_memcmp_avx2_movbe (21 samples, 0.02%)</title><rect x="164.1" y="533" width="0.2" height="15.0" fill="rgb(252,76,17)" rx="2" ry="2" />
<text  x="167.07" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (26 samples, 0.03%)</title><rect x="227.6" y="677" width="0.3" height="15.0" fill="rgb(221,162,10)" rx="2" ry="2" />
<text  x="230.57" y="687.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="351.2" y="741" width="0.2" height="15.0" fill="rgb(226,126,14)" rx="2" ry="2" />
<text  x="354.20" y="751.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (111 samples, 0.12%)</title><rect x="324.6" y="677" width="1.4" height="15.0" fill="rgb(217,74,52)" rx="2" ry="2" />
<text  x="327.56" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path_in_key (89 samples, 0.10%)</title><rect x="470.2" y="837" width="1.2" height="15.0" fill="rgb(251,218,11)" rx="2" ry="2" />
<text  x="473.24" y="847.5" ></text>
</g>
<g >
<title>fput (12 samples, 0.01%)</title><rect x="1122.9" y="805" width="0.1" height="15.0" fill="rgb(250,35,2)" rx="2" ry="2" />
<text  x="1125.87" y="815.5" ></text>
</g>
<g >
<title>&lt;mio::sys::unix::tcp::TcpStream as std::os::imp::unix::io::AsRawFd&gt;::as_raw_fd (89 samples, 0.10%)</title><rect x="513.1" y="709" width="1.1" height="15.0" fill="rgb(232,57,51)" rx="2" ry="2" />
<text  x="516.06" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9 samples, 0.01%)</title><rect x="1043.8" y="117" width="0.1" height="15.0" fill="rgb(236,11,8)" rx="2" ry="2" />
<text  x="1046.82" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20 samples, 0.02%)</title><rect x="940.3" y="581" width="0.2" height="15.0" fill="rgb(209,132,33)" rx="2" ry="2" />
<text  x="943.26" y="591.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (137 samples, 0.15%)</title><rect x="1039.4" y="277" width="1.7" height="15.0" fill="rgb(227,102,14)" rx="2" ry="2" />
<text  x="1042.41" y="287.5" ></text>
</g>
<g >
<title>current_time (22 samples, 0.02%)</title><rect x="828.6" y="533" width="0.3" height="15.0" fill="rgb(220,135,13)" rx="2" ry="2" />
<text  x="831.60" y="543.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (10 samples, 0.01%)</title><rect x="822.2" y="597" width="0.2" height="15.0" fill="rgb(233,48,36)" rx="2" ry="2" />
<text  x="825.23" y="607.5" ></text>
</g>
<g >
<title>tokio::util::wake::inc_ref_count (32 samples, 0.03%)</title><rect x="1021.8" y="533" width="0.4" height="15.0" fill="rgb(240,75,54)" rx="2" ry="2" />
<text  x="1024.81" y="543.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::terms::ExprTerm as core::convert::From&lt;&amp;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt;&gt;::from (15 samples, 0.02%)</title><rect x="239.5" y="885" width="0.2" height="15.0" fill="rgb(247,144,48)" rx="2" ry="2" />
<text  x="242.52" y="895.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_none (14 samples, 0.02%)</title><rect x="1003.9" y="773" width="0.2" height="15.0" fill="rgb(242,219,53)" rx="2" ry="2" />
<text  x="1006.92" y="783.5" ></text>
</g>
<g >
<title>locks_free_lock_context (24 samples, 0.03%)</title><rect x="753.2" y="517" width="0.3" height="15.0" fill="rgb(209,106,6)" rx="2" ry="2" />
<text  x="756.22" y="527.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget (3,622 samples, 3.89%)</title><rect x="1030.5" y="661" width="45.8" height="15.0" fill="rgb(239,142,46)" rx="2" ry="2" />
<text  x="1033.46" y="671.5" >toki..</text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::schedule::{{closure}} (408 samples, 0.44%)</title><rect x="968.4" y="709" width="5.2" height="15.0" fill="rgb(235,128,1)" rx="2" ry="2" />
<text  x="971.41" y="719.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (81 samples, 0.09%)</title><rect x="54.6" y="725" width="1.1" height="15.0" fill="rgb(233,20,42)" rx="2" ry="2" />
<text  x="57.65" y="735.5" ></text>
</g>
<g >
<title>ep_done_scan (8 samples, 0.01%)</title><rect x="975.6" y="645" width="0.1" height="15.0" fill="rgb(244,84,43)" rx="2" ry="2" />
<text  x="978.57" y="655.5" ></text>
</g>
<g >
<title>mio::poll::AtomicState::load (18 samples, 0.02%)</title><rect x="969.7" y="533" width="0.2" height="15.0" fill="rgb(215,81,3)" rx="2" ry="2" />
<text  x="972.70" y="543.5" ></text>
</g>
<g >
<title>tcp_ack (686 samples, 0.74%)</title><rect x="545.1" y="709" width="8.7" height="15.0" fill="rgb(239,128,48)" rx="2" ry="2" />
<text  x="548.07" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::push_json_term (3,597 samples, 3.86%)</title><rect x="184.3" y="901" width="45.5" height="15.0" fill="rgb(251,117,13)" rx="2" ry="2" />
<text  x="187.27" y="911.5" >json..</text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::lt (1,392 samples, 1.49%)</title><rect x="147.5" y="933" width="17.6" height="15.0" fill="rgb(222,20,29)" rx="2" ry="2" />
<text  x="150.46" y="943.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (45 samples, 0.05%)</title><rect x="344.3" y="1013" width="0.6" height="15.0" fill="rgb(213,163,7)" rx="2" ry="2" />
<text  x="347.29" y="1023.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (8 samples, 0.01%)</title><rect x="120.5" y="821" width="0.1" height="15.0" fill="rgb(206,0,5)" rx="2" ry="2" />
<text  x="123.47" y="831.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (23 samples, 0.02%)</title><rect x="447.0" y="933" width="0.3" height="15.0" fill="rgb(224,80,21)" rx="2" ry="2" />
<text  x="450.05" y="943.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_keepalive (70 samples, 0.08%)</title><rect x="237.0" y="1173" width="0.9" height="15.0" fill="rgb(234,168,21)" rx="2" ry="2" />
<text  x="240.04" y="1183.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (42 samples, 0.05%)</title><rect x="1086.3" y="1237" width="0.5" height="15.0" fill="rgb(252,178,8)" rx="2" ry="2" />
<text  x="1089.30" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;jsonpath_lib::paths::tokens::ParseToken&gt;&gt; (23 samples, 0.02%)</title><rect x="381.6" y="885" width="0.3" height="15.0" fill="rgb(224,185,4)" rx="2" ry="2" />
<text  x="384.63" y="895.5" ></text>
</g>
<g >
<title>tcp_fin (11 samples, 0.01%)</title><rect x="320.6" y="437" width="0.2" height="15.0" fill="rgb(210,107,19)" rx="2" ry="2" />
<text  x="323.61" y="447.5" ></text>
</g>
<g >
<title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1,212 samples, 1.30%)</title><rect x="419.6" y="773" width="15.4" height="15.0" fill="rgb(214,209,25)" rx="2" ry="2" />
<text  x="422.64" y="783.5" ></text>
</g>
<g >
<title>core::ptr::read (14 samples, 0.02%)</title><rect x="1058.7" y="229" width="0.2" height="15.0" fill="rgb(243,223,45)" rx="2" ry="2" />
<text  x="1061.69" y="239.5" ></text>
</g>
<g >
<title>core::mem::drop (10 samples, 0.01%)</title><rect x="1022.7" y="501" width="0.1" height="15.0" fill="rgb(235,228,49)" rx="2" ry="2" />
<text  x="1025.65" y="511.5" ></text>
</g>
<g >
<title>tokio::util::slab::slot::Slot&lt;T&gt;::reset (108 samples, 0.12%)</title><rect x="791.2" y="709" width="1.4" height="15.0" fill="rgb(217,25,23)" rx="2" ry="2" />
<text  x="794.22" y="719.5" ></text>
</g>
<g >
<title>sk_reset_timer (80 samples, 0.09%)</title><rect x="330.3" y="805" width="1.0" height="15.0" fill="rgb(215,134,47)" rx="2" ry="2" />
<text  x="333.31" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (51 samples, 0.05%)</title><rect x="55.8" y="757" width="0.7" height="15.0" fill="rgb(217,150,35)" rx="2" ry="2" />
<text  x="58.85" y="767.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::with (1,071 samples, 1.15%)</title><rect x="472.8" y="901" width="13.5" height="15.0" fill="rgb(207,162,45)" rx="2" ry="2" />
<text  x="475.77" y="911.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::{{closure}} (770 samples, 0.83%)</title><rect x="515.4" y="933" width="9.7" height="15.0" fill="rgb(240,84,6)" rx="2" ry="2" />
<text  x="518.39" y="943.5" ></text>
</g>
<g >
<title>select_task_rq_fair (89 samples, 0.10%)</title><rect x="1099.9" y="261" width="1.1" height="15.0" fill="rgb(212,4,0)" rx="2" ry="2" />
<text  x="1102.88" y="271.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk::{{closure}} (575 samples, 0.62%)</title><rect x="174.0" y="789" width="7.3" height="15.0" fill="rgb(249,147,25)" rx="2" ry="2" />
<text  x="177.04" y="799.5" ></text>
</g>
<g >
<title>tokio::runtime::Runtime::block_on (1,071 samples, 1.15%)</title><rect x="472.8" y="1189" width="13.5" height="15.0" fill="rgb(220,0,32)" rx="2" ry="2" />
<text  x="475.77" y="1199.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::transition_to_running (119 samples, 0.13%)</title><rect x="1073.4" y="533" width="1.5" height="15.0" fill="rgb(252,33,16)" rx="2" ry="2" />
<text  x="1076.36" y="543.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::basic_scheduler::Shared as tokio::util::wake::Wake&gt;::wake_by_ref (151 samples, 0.16%)</title><rect x="969.2" y="629" width="1.9" height="15.0" fill="rgb(209,61,12)" rx="2" ry="2" />
<text  x="972.22" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterRange&lt;T&gt;::new (14 samples, 0.02%)</title><rect x="218.1" y="565" width="0.2" height="15.0" fill="rgb(208,159,24)" rx="2" ry="2" />
<text  x="221.12" y="575.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (159 samples, 0.17%)</title><rect x="309.8" y="421" width="2.0" height="15.0" fill="rgb(205,196,34)" rx="2" ry="2" />
<text  x="312.77" y="431.5" ></text>
</g>
<g >
<title>mio::sys::unix::tcp::TcpListener::accept (3,422 samples, 3.67%)</title><rect x="1116.9" y="997" width="43.3" height="15.0" fill="rgb(222,49,20)" rx="2" ry="2" />
<text  x="1119.90" y="1007.5" >mio:..</text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::schedule (1,875 samples, 2.01%)</title><rect x="1091.9" y="901" width="23.8" height="15.0" fill="rgb(254,42,7)" rx="2" ry="2" />
<text  x="1094.93" y="911.5" >t..</text>
</g>
<g >
<title>_update_load_avg_se (8 samples, 0.01%)</title><rect x="918.5" y="549" width="0.1" height="15.0" fill="rgb(246,63,36)" rx="2" ry="2" />
<text  x="921.46" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (15 samples, 0.02%)</title><rect x="395.6" y="869" width="0.1" height="15.0" fill="rgb(254,68,29)" rx="2" ry="2" />
<text  x="398.55" y="879.5" ></text>
</g>
<g >
<title>_update_idle_core (25 samples, 0.03%)</title><rect x="942.9" y="581" width="0.3" height="15.0" fill="rgb(241,20,13)" rx="2" ry="2" />
<text  x="945.88" y="591.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_request (430 samples, 0.46%)</title><rect x="237.9" y="1173" width="5.5" height="15.0" fill="rgb(223,85,3)" rx="2" ry="2" />
<text  x="240.93" y="1183.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (59 samples, 0.06%)</title><rect x="976.3" y="805" width="0.7" height="15.0" fill="rgb(208,30,1)" rx="2" ry="2" />
<text  x="979.26" y="815.5" ></text>
</g>
<g >
<title>mntput (24 samples, 0.03%)</title><rect x="758.0" y="613" width="0.3" height="15.0" fill="rgb(244,121,39)" rx="2" ry="2" />
<text  x="760.95" y="623.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (142 samples, 0.15%)</title><rect x="791.0" y="741" width="1.8" height="15.0" fill="rgb(231,153,25)" rx="2" ry="2" />
<text  x="793.99" y="751.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (8 samples, 0.01%)</title><rect x="491.4" y="1061" width="0.1" height="15.0" fill="rgb(219,162,19)" rx="2" ry="2" />
<text  x="494.35" y="1071.5" ></text>
</g>
<g >
<title>kfree_skb_partial (50 samples, 0.05%)</title><rect x="314.0" y="421" width="0.7" height="15.0" fill="rgb(238,102,48)" rx="2" ry="2" />
<text  x="317.02" y="431.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (38 samples, 0.04%)</title><rect x="472.3" y="837" width="0.4" height="15.0" fill="rgb(212,171,44)" rx="2" ry="2" />
<text  x="475.26" y="847.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (870 samples, 0.93%)</title><rect x="504.4" y="997" width="11.0" height="15.0" fill="rgb(244,76,18)" rx="2" ry="2" />
<text  x="507.38" y="1007.5" ></text>
</g>
<g >
<title>aa_sk_perm (8 samples, 0.01%)</title><rect x="703.8" y="725" width="0.1" height="15.0" fill="rgb(239,54,46)" rx="2" ry="2" />
<text  x="706.76" y="735.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5,295 samples, 5.68%)</title><rect x="371.8" y="981" width="67.1" height="15.0" fill="rgb(244,174,7)" rx="2" ry="2" />
<text  x="374.83" y="991.5" >&lt;future..</text>
</g>
<g >
<title>int_free (27 samples, 0.03%)</title><rect x="393.4" y="469" width="0.4" height="15.0" fill="rgb(212,210,22)" rx="2" ry="2" />
<text  x="396.44" y="479.5" ></text>
</g>
<g >
<title>delay_halt (440 samples, 0.47%)</title><rect x="1165.5" y="725" width="5.6" height="15.0" fill="rgb(248,134,42)" rx="2" ry="2" />
<text  x="1168.53" y="735.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (16 samples, 0.02%)</title><rect x="553.1" y="693" width="0.2" height="15.0" fill="rgb(219,140,34)" rx="2" ry="2" />
<text  x="556.14" y="703.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rdx (44 samples, 0.05%)</title><rect x="868.2" y="533" width="0.5" height="15.0" fill="rgb(233,169,40)" rx="2" ry="2" />
<text  x="871.17" y="543.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (770 samples, 0.83%)</title><rect x="515.4" y="709" width="9.7" height="15.0" fill="rgb(221,207,32)" rx="2" ry="2" />
<text  x="518.39" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::coop::with_budget::ResetGuard&gt; (40 samples, 0.04%)</title><rect x="1032.0" y="597" width="0.5" height="15.0" fill="rgb(248,135,12)" rx="2" ry="2" />
<text  x="1035.03" y="607.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::borrow_mut (22 samples, 0.02%)</title><rect x="364.8" y="997" width="0.3" height="15.0" fill="rgb(228,116,45)" rx="2" ry="2" />
<text  x="367.79" y="1007.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="338.3" y="901" width="0.3" height="15.0" fill="rgb(237,81,46)" rx="2" ry="2" />
<text  x="341.32" y="911.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::block_on (1,071 samples, 1.15%)</title><rect x="472.8" y="1205" width="13.5" height="15.0" fill="rgb(246,150,54)" rx="2" ry="2" />
<text  x="475.77" y="1215.5" ></text>
</g>
<g >
<title>_sys_getpeername (509 samples, 0.55%)</title><rect x="505.6" y="629" width="6.5" height="15.0" fill="rgb(229,153,26)" rx="2" ry="2" />
<text  x="508.64" y="639.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (22 samples, 0.02%)</title><rect x="1187.1" y="917" width="0.3" height="15.0" fill="rgb(234,100,25)" rx="2" ry="2" />
<text  x="1190.09" y="927.5" ></text>
</g>
<g >
<title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (73 samples, 0.08%)</title><rect x="88.6" y="773" width="0.9" height="15.0" fill="rgb(252,140,24)" rx="2" ry="2" />
<text  x="91.62" y="783.5" ></text>
</g>
<g >
<title>std::time::Instant::now (428 samples, 0.46%)</title><rect x="985.9" y="837" width="5.4" height="15.0" fill="rgb(227,12,37)" rx="2" ry="2" />
<text  x="988.92" y="847.5" ></text>
</g>
<g >
<title>_d_instantiate (22 samples, 0.02%)</title><rect x="1149.0" y="757" width="0.3" height="15.0" fill="rgb(232,162,45)" rx="2" ry="2" />
<text  x="1152.01" y="767.5" ></text>
</g>
<g >
<title>tokio::io::driver::Inner::add_source (1,573 samples, 1.69%)</title><rect x="244.1" y="709" width="19.9" height="15.0" fill="rgb(224,192,29)" rx="2" ry="2" />
<text  x="247.07" y="719.5" ></text>
</g>
<g >
<title>core::cell::BorrowRefMut::new (23 samples, 0.02%)</title><rect x="41.7" y="1093" width="0.3" height="15.0" fill="rgb(223,57,46)" rx="2" ry="2" />
<text  x="44.73" y="1103.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="214.4" y="581" width="0.2" height="15.0" fill="rgb(246,82,46)" rx="2" ry="2" />
<text  x="217.43" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;futures_util::future::future::map::Map&lt;actix_web::handler::ExtractResponse&lt; (49 samples, 0.05%)</title><rect x="453.1" y="885" width="0.6" height="15.0" fill="rgb(239,194,53)" rx="2" ry="2" />
<text  x="456.06" y="895.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (79 samples, 0.08%)</title><rect x="470.3" y="741" width="1.0" height="15.0" fill="rgb(225,157,26)" rx="2" ry="2" />
<text  x="473.34" y="751.5" ></text>
</g>
<g >
<title>_GI___libc_free (12 samples, 0.01%)</title><rect x="393.0" y="469" width="0.1" height="15.0" fill="rgb(251,164,7)" rx="2" ry="2" />
<text  x="395.98" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (47 samples, 0.05%)</title><rect x="227.0" y="613" width="0.6" height="15.0" fill="rgb(241,219,48)" rx="2" ry="2" />
<text  x="229.98" y="623.5" ></text>
</g>
<g >
<title>futures_util::future::future::FutureExt::boxed_local (10 samples, 0.01%)</title><rect x="352.4" y="949" width="0.1" height="15.0" fill="rgb(246,126,51)" rx="2" ry="2" />
<text  x="355.37" y="959.5" ></text>
</g>
<g >
<title>page_counter_uncharge (26 samples, 0.03%)</title><rect x="746.9" y="485" width="0.3" height="15.0" fill="rgb(248,192,31)" rx="2" ry="2" />
<text  x="749.85" y="495.5" ></text>
</g>
<g >
<title>log::max_level (13 samples, 0.01%)</title><rect x="229.8" y="917" width="0.2" height="15.0" fill="rgb(236,85,20)" rx="2" ry="2" />
<text  x="232.80" y="927.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (26 samples, 0.03%)</title><rect x="414.8" y="773" width="0.3" height="15.0" fill="rgb(253,218,4)" rx="2" ry="2" />
<text  x="417.78" y="783.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (23 samples, 0.02%)</title><rect x="956.3" y="709" width="0.3" height="15.0" fill="rgb(213,198,51)" rx="2" ry="2" />
<text  x="959.30" y="719.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (10 samples, 0.01%)</title><rect x="514.3" y="709" width="0.1" height="15.0" fill="rgb(236,111,6)" rx="2" ry="2" />
<text  x="517.29" y="719.5" ></text>
</g>
<g >
<title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}}::{{closure}} (204 samples, 0.22%)</title><rect x="1021.0" y="613" width="2.6" height="15.0" fill="rgb(236,211,14)" rx="2" ry="2" />
<text  x="1023.97" y="623.5" ></text>
</g>
<g >
<title>&lt;tokio::time::delay::Delay as core::future::future::Future&gt;::poll (70 samples, 0.08%)</title><rect x="237.0" y="1141" width="0.9" height="15.0" fill="rgb(253,64,5)" rx="2" ry="2" />
<text  x="240.04" y="1151.5" ></text>
</g>
<g >
<title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (12 samples, 0.01%)</title><rect x="97.9" y="885" width="0.2" height="15.0" fill="rgb(245,229,18)" rx="2" ry="2" />
<text  x="100.93" y="895.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (84 samples, 0.09%)</title><rect x="114.7" y="901" width="1.1" height="15.0" fill="rgb(247,216,12)" rx="2" ry="2" />
<text  x="117.75" y="911.5" ></text>
</g>
<g >
<title>tokio::util::slab::page::Shared&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="235.0" y="1029" width="0.1" height="15.0" fill="rgb(232,87,10)" rx="2" ry="2" />
<text  x="237.98" y="1039.5" ></text>
</g>
<g >
<title>core::mem::drop (14 samples, 0.02%)</title><rect x="1028.7" y="565" width="0.2" height="15.0" fill="rgb(220,86,36)" rx="2" ry="2" />
<text  x="1031.73" y="575.5" ></text>
</g>
<g >
<title>_pthread_mutex_unlock_usercnt (63 samples, 0.07%)</title><rect x="1078.0" y="549" width="0.8" height="15.0" fill="rgb(223,164,53)" rx="2" ry="2" />
<text  x="1081.05" y="559.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (38 samples, 0.04%)</title><rect x="481.7" y="549" width="0.4" height="15.0" fill="rgb(238,212,19)" rx="2" ry="2" />
<text  x="484.66" y="559.5" ></text>
</g>
<g >
<title>mutex_lock (14 samples, 0.02%)</title><rect x="262.6" y="581" width="0.2" height="15.0" fill="rgb(251,122,21)" rx="2" ry="2" />
<text  x="265.59" y="591.5" ></text>
</g>
<g >
<title>_rdl_alloc (16 samples, 0.02%)</title><rect x="126.7" y="693" width="0.2" height="15.0" fill="rgb(222,110,32)" rx="2" ry="2" />
<text  x="129.70" y="703.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (51 samples, 0.05%)</title><rect x="125.7" y="773" width="0.7" height="15.0" fill="rgb(252,208,17)" rx="2" ry="2" />
<text  x="128.72" y="783.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (32 samples, 0.03%)</title><rect x="1067.3" y="277" width="0.4" height="15.0" fill="rgb(220,16,17)" rx="2" ry="2" />
<text  x="1070.28" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (31 samples, 0.03%)</title><rect x="167.2" y="709" width="0.4" height="15.0" fill="rgb(210,81,48)" rx="2" ry="2" />
<text  x="170.23" y="719.5" ></text>
</g>
<g >
<title>&lt;actix_service::and_then::AndThenServiceResponse&lt;A,B&gt; as core::future::future::Future&gt;::poll::{{closure}} (40 samples, 0.04%)</title><rect x="467.2" y="1093" width="0.5" height="15.0" fill="rgb(208,40,30)" rx="2" ry="2" />
<text  x="470.21" y="1103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (20 samples, 0.02%)</title><rect x="818.4" y="677" width="0.2" height="15.0" fill="rgb(241,191,0)" rx="2" ry="2" />
<text  x="821.36" y="687.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::is_empty (9 samples, 0.01%)</title><rect x="466.1" y="949" width="0.1" height="15.0" fill="rgb(249,52,22)" rx="2" ry="2" />
<text  x="469.10" y="959.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (471 samples, 0.51%)</title><rect x="968.4" y="757" width="6.0" height="15.0" fill="rgb(217,102,29)" rx="2" ry="2" />
<text  x="971.41" y="767.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (14 samples, 0.02%)</title><rect x="263.4" y="645" width="0.2" height="15.0" fill="rgb(207,191,35)" rx="2" ry="2" />
<text  x="266.40" y="655.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (17 samples, 0.02%)</title><rect x="375.3" y="901" width="0.2" height="15.0" fill="rgb(207,140,19)" rx="2" ry="2" />
<text  x="378.31" y="911.5" ></text>
</g>
<g >
<title>raw_spin_unlock_bh (13 samples, 0.01%)</title><rect x="559.1" y="757" width="0.2" height="15.0" fill="rgb(225,167,36)" rx="2" ry="2" />
<text  x="562.14" y="767.5" ></text>
</g>
<g >
<title>_GI___libc_free (9 samples, 0.01%)</title><rect x="438.9" y="1045" width="0.1" height="15.0" fill="rgb(252,81,52)" rx="2" ry="2" />
<text  x="441.91" y="1055.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (15 samples, 0.02%)</title><rect x="365.1" y="933" width="0.2" height="15.0" fill="rgb(237,177,31)" rx="2" ry="2" />
<text  x="368.07" y="943.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="419.5" y="693" width="0.1" height="15.0" fill="rgb(213,151,2)" rx="2" ry="2" />
<text  x="422.53" y="703.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk_dedup_all (3,323 samples, 3.56%)</title><rect x="185.9" y="869" width="42.0" height="15.0" fill="rgb(226,7,25)" rx="2" ry="2" />
<text  x="188.88" y="879.5" >jso..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.02%)</title><rect x="395.6" y="821" width="0.1" height="15.0" fill="rgb(239,90,38)" rx="2" ry="2" />
<text  x="398.55" y="831.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_or (46 samples, 0.05%)</title><rect x="973.8" y="725" width="0.6" height="15.0" fill="rgb(250,190,36)" rx="2" ry="2" />
<text  x="976.79" y="735.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (67 samples, 0.07%)</title><rect x="1044.4" y="245" width="0.9" height="15.0" fill="rgb(254,127,48)" rx="2" ry="2" />
<text  x="1047.41" y="255.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.01%)</title><rect x="337.7" y="949" width="0.1" height="15.0" fill="rgb(217,127,12)" rx="2" ry="2" />
<text  x="340.73" y="959.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (8 samples, 0.01%)</title><rect x="1045.6" y="293" width="0.1" height="15.0" fill="rgb(230,35,38)" rx="2" ry="2" />
<text  x="1048.62" y="303.5" ></text>
</g>
<g >
<title>_GI___libc_free (14 samples, 0.02%)</title><rect x="214.8" y="485" width="0.2" height="15.0" fill="rgb(232,219,53)" rx="2" ry="2" />
<text  x="217.84" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (92 samples, 0.10%)</title><rect x="177.4" y="533" width="1.2" height="15.0" fill="rgb(213,186,7)" rx="2" ry="2" />
<text  x="180.42" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,701 samples, 10.41%)</title><rect x="838.8" y="741" width="122.8" height="15.0" fill="rgb(221,212,48)" rx="2" ry="2" />
<text  x="841.83" y="751.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="395.6" y="837" width="0.1" height="15.0" fill="rgb(237,115,30)" rx="2" ry="2" />
<text  x="398.55" y="847.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (135 samples, 0.14%)</title><rect x="225.9" y="677" width="1.7" height="15.0" fill="rgb(211,164,20)" rx="2" ry="2" />
<text  x="228.87" y="687.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::wakeup (36 samples, 0.04%)</title><rect x="273.0" y="949" width="0.5" height="15.0" fill="rgb(211,24,4)" rx="2" ry="2" />
<text  x="276.01" y="959.5" ></text>
</g>
<g >
<title>mutex_lock (8 samples, 0.01%)</title><rect x="784.7" y="645" width="0.1" height="15.0" fill="rgb(205,54,25)" rx="2" ry="2" />
<text  x="787.70" y="655.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="462.6" y="853" width="0.1" height="15.0" fill="rgb(217,73,45)" rx="2" ry="2" />
<text  x="465.57" y="863.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::{{closure}}::{{closure}} (331 samples, 0.36%)</title><rect x="525.1" y="1093" width="4.2" height="15.0" fill="rgb(206,36,18)" rx="2" ry="2" />
<text  x="528.14" y="1103.5" ></text>
</g>
<g >
<title>_x64_sys_epoll_ctl (1,351 samples, 1.45%)</title><rect x="245.9" y="613" width="17.1" height="15.0" fill="rgb(225,61,26)" rx="2" ry="2" />
<text  x="248.94" y="623.5" ></text>
</g>
<g >
<title>int_realloc (87 samples, 0.09%)</title><rect x="169.2" y="661" width="1.1" height="15.0" fill="rgb(237,145,48)" rx="2" ry="2" />
<text  x="172.21" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="193.7" y="629" width="0.2" height="15.0" fill="rgb(222,191,37)" rx="2" ry="2" />
<text  x="196.74" y="639.5" ></text>
</g>
<g >
<title>mio::poll::Poll::register (1,544 samples, 1.66%)</title><rect x="244.2" y="693" width="19.5" height="15.0" fill="rgb(249,31,36)" rx="2" ry="2" />
<text  x="247.17" y="703.5" ></text>
</g>
<g >
<title>core::pin::Pin&lt;P&gt;::set (51 samples, 0.05%)</title><rect x="459.0" y="1061" width="0.6" height="15.0" fill="rgb(236,182,44)" rx="2" ry="2" />
<text  x="462.00" y="1071.5" ></text>
</g>
<g >
<title>int_free (22 samples, 0.02%)</title><rect x="185.3" y="725" width="0.3" height="15.0" fill="rgb(247,93,3)" rx="2" ry="2" />
<text  x="188.31" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="129.3" y="693" width="0.2" height="15.0" fill="rgb(219,104,10)" rx="2" ry="2" />
<text  x="132.29" y="703.5" ></text>
</g>
<g >
<title>int_free (44 samples, 0.05%)</title><rect x="136.4" y="837" width="0.5" height="15.0" fill="rgb(220,79,26)" rx="2" ry="2" />
<text  x="139.36" y="847.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::read_value (9 samples, 0.01%)</title><rect x="106.3" y="837" width="0.1" height="15.0" fill="rgb(231,5,12)" rx="2" ry="2" />
<text  x="109.27" y="847.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (188 samples, 0.20%)</title><rect x="1078.9" y="629" width="2.3" height="15.0" fill="rgb(210,106,42)" rx="2" ry="2" />
<text  x="1081.86" y="639.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::shutdown (40 samples, 0.04%)</title><rect x="467.2" y="1029" width="0.5" height="15.0" fill="rgb(245,112,0)" rx="2" ry="2" />
<text  x="470.21" y="1039.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1,056 samples, 1.13%)</title><rect x="308.9" y="469" width="13.4" height="15.0" fill="rgb(213,41,41)" rx="2" ry="2" />
<text  x="311.92" y="479.5" ></text>
</g>
<g >
<title>_kmalloc_reserv.sr. (100 samples, 0.11%)</title><rect x="615.9" y="245" width="1.2" height="15.0" fill="rgb(251,53,29)" rx="2" ry="2" />
<text  x="618.86" y="255.5" ></text>
</g>
<g >
<title>psi_flags_change (11 samples, 0.01%)</title><rect x="1182.5" y="789" width="0.1" height="15.0" fill="rgb(216,26,38)" rx="2" ry="2" />
<text  x="1185.51" y="799.5" ></text>
</g>
<g >
<title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.05%)</title><rect x="718.3" y="885" width="0.6" height="15.0" fill="rgb(210,118,35)" rx="2" ry="2" />
<text  x="721.32" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (50 samples, 0.05%)</title><rect x="133.7" y="885" width="0.6" height="15.0" fill="rgb(224,33,49)" rx="2" ry="2" />
<text  x="136.71" y="895.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (1,071 samples, 1.15%)</title><rect x="472.8" y="1125" width="13.5" height="15.0" fill="rgb(208,75,22)" rx="2" ry="2" />
<text  x="475.77" y="1135.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (493 samples, 0.53%)</title><rect x="968.1" y="773" width="6.3" height="15.0" fill="rgb(227,201,1)" rx="2" ry="2" />
<text  x="971.13" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::selector::terms::FilterTerms&gt; (12 samples, 0.01%)</title><rect x="133.0" y="917" width="0.2" height="15.0" fill="rgb(250,69,28)" rx="2" ry="2" />
<text  x="136.00" y="927.5" ></text>
</g>
<g >
<title>core::mem::replace (18 samples, 0.02%)</title><rect x="1058.6" y="245" width="0.3" height="15.0" fill="rgb(254,210,34)" rx="2" ry="2" />
<text  x="1061.64" y="255.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (12 samples, 0.01%)</title><rect x="204.5" y="517" width="0.1" height="15.0" fill="rgb(222,163,0)" rx="2" ry="2" />
<text  x="207.47" y="527.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (21 samples, 0.02%)</title><rect x="235.3" y="1061" width="0.2" height="15.0" fill="rgb(246,78,9)" rx="2" ry="2" />
<text  x="238.28" y="1071.5" ></text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (215 samples, 0.23%)</title><rect x="195.3" y="597" width="2.7" height="15.0" fill="rgb(221,126,18)" rx="2" ry="2" />
<text  x="198.30" y="607.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_key (4,612 samples, 4.95%)</title><rect x="171.6" y="949" width="58.4" height="15.0" fill="rgb(237,189,41)" rx="2" ry="2" />
<text  x="174.61" y="959.5" >jsonpa..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt; (997 samples, 1.07%)</title><rect x="382.6" y="805" width="12.6" height="15.0" fill="rgb(234,228,16)" rx="2" ry="2" />
<text  x="385.62" y="815.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (14 samples, 0.02%)</title><rect x="219.7" y="565" width="0.2" height="15.0" fill="rgb(237,123,3)" rx="2" ry="2" />
<text  x="222.69" y="575.5" ></text>
</g>
<g >
<title>&lt;actix_server::service::StreamService&lt;T&gt; as actix_service::Service&gt;::call::{{closure}} (271 samples, 0.29%)</title><rect x="473.5" y="533" width="3.4" height="15.0" fill="rgb(212,224,43)" rx="2" ry="2" />
<text  x="476.48" y="543.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (14 samples, 0.02%)</title><rect x="435.1" y="757" width="0.1" height="15.0" fill="rgb(228,137,44)" rx="2" ry="2" />
<text  x="438.06" y="767.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::shared_v_clone (50 samples, 0.05%)</title><rect x="31.4" y="1125" width="0.6" height="15.0" fill="rgb(244,137,16)" rx="2" ry="2" />
<text  x="34.41" y="1135.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (26 samples, 0.03%)</title><rect x="1091.6" y="917" width="0.3" height="15.0" fill="rgb(211,62,10)" rx="2" ry="2" />
<text  x="1094.61" y="927.5" ></text>
</g>
<g >
<title>httparse::simd::sse42::match_header_value_char_16_sse (19 samples, 0.02%)</title><rect x="50.3" y="1109" width="0.2" height="15.0" fill="rgb(216,50,31)" rx="2" ry="2" />
<text  x="53.28" y="1119.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::transition_to_complete (108 samples, 0.12%)</title><rect x="484.1" y="677" width="1.3" height="15.0" fill="rgb(223,53,31)" rx="2" ry="2" />
<text  x="487.06" y="687.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (33 samples, 0.04%)</title><rect x="1115.9" y="853" width="0.5" height="15.0" fill="rgb(218,115,10)" rx="2" ry="2" />
<text  x="1118.95" y="863.5" ></text>
</g>
<g >
<title>tcp_chrono_start (9 samples, 0.01%)</title><rect x="575.3" y="741" width="0.1" height="15.0" fill="rgb(206,153,23)" rx="2" ry="2" />
<text  x="578.27" y="751.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="110.1" y="661" width="0.1" height="15.0" fill="rgb(215,201,4)" rx="2" ry="2" />
<text  x="113.08" y="671.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (17 samples, 0.02%)</title><rect x="143.8" y="517" width="0.2" height="15.0" fill="rgb(205,24,1)" rx="2" ry="2" />
<text  x="146.78" y="527.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::parse (320 samples, 0.34%)</title><rect x="12.1" y="1157" width="4.0" height="15.0" fill="rgb(245,47,24)" rx="2" ry="2" />
<text  x="15.09" y="1167.5" ></text>
</g>
<g >
<title>_alloc_skb (8 samples, 0.01%)</title><rect x="291.2" y="885" width="0.1" height="15.0" fill="rgb(252,8,30)" rx="2" ry="2" />
<text  x="294.25" y="895.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterRange&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="41.1" y="1013" width="0.3" height="15.0" fill="rgb(246,214,50)" rx="2" ry="2" />
<text  x="44.14" y="1023.5" ></text>
</g>
<g >
<title>release_sock (16 samples, 0.02%)</title><rect x="288.4" y="901" width="0.2" height="15.0" fill="rgb(221,81,35)" rx="2" ry="2" />
<text  x="291.39" y="911.5" ></text>
</g>
<g >
<title>ip_output (416 samples, 0.45%)</title><rect x="622.2" y="197" width="5.3" height="15.0" fill="rgb(228,76,28)" rx="2" ry="2" />
<text  x="625.23" y="207.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (9 samples, 0.01%)</title><rect x="266.1" y="997" width="0.2" height="15.0" fill="rgb(206,32,22)" rx="2" ry="2" />
<text  x="269.14" y="1007.5" ></text>
</g>
<g >
<title>delay_halt_mwaitx (21 samples, 0.02%)</title><rect x="1171.1" y="725" width="0.3" height="15.0" fill="rgb(224,123,26)" rx="2" ry="2" />
<text  x="1174.10" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (87 samples, 0.09%)</title><rect x="379.0" y="789" width="1.1" height="15.0" fill="rgb(236,16,20)" rx="2" ry="2" />
<text  x="381.97" y="799.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (348 samples, 0.37%)</title><rect x="174.2" y="677" width="4.4" height="15.0" fill="rgb(240,49,34)" rx="2" ry="2" />
<text  x="177.18" y="687.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (86 samples, 0.09%)</title><rect x="718.9" y="853" width="1.1" height="15.0" fill="rgb(238,36,23)" rx="2" ry="2" />
<text  x="721.90" y="863.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (770 samples, 0.83%)</title><rect x="515.4" y="805" width="9.7" height="15.0" fill="rgb(225,70,26)" rx="2" ry="2" />
<text  x="518.39" y="815.5" ></text>
</g>
<g >
<title>ep_done_scan (8 samples, 0.01%)</title><rect x="847.5" y="677" width="0.1" height="15.0" fill="rgb(245,99,44)" rx="2" ry="2" />
<text  x="850.52" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::json_path (359 samples, 0.39%)</title><rect x="397.4" y="869" width="4.5" height="15.0" fill="rgb(220,154,1)" rx="2" ry="2" />
<text  x="400.38" y="879.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.02%)</title><rect x="239.5" y="901" width="0.2" height="15.0" fill="rgb(218,97,31)" rx="2" ry="2" />
<text  x="242.52" y="911.5" ></text>
</g>
<g >
<title>release_sock (25 samples, 0.03%)</title><rect x="1126.2" y="773" width="0.3" height="15.0" fill="rgb(231,32,27)" rx="2" ry="2" />
<text  x="1129.16" y="783.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (24 samples, 0.03%)</title><rect x="180.6" y="629" width="0.3" height="15.0" fill="rgb(236,30,21)" rx="2" ry="2" />
<text  x="183.62" y="639.5" ></text>
</g>
<g >
<title>kfree_skbmem (91 samples, 0.10%)</title><rect x="554.3" y="677" width="1.1" height="15.0" fill="rgb(220,121,54)" rx="2" ry="2" />
<text  x="557.26" y="687.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (89 samples, 0.10%)</title><rect x="487.7" y="1189" width="1.1" height="15.0" fill="rgb(209,215,34)" rx="2" ry="2" />
<text  x="490.72" y="1199.5" ></text>
</g>
<g >
<title>malloc_consolidate (661 samples, 0.71%)</title><rect x="724.2" y="869" width="8.3" height="15.0" fill="rgb(219,24,33)" rx="2" ry="2" />
<text  x="727.18" y="879.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::load (22 samples, 0.02%)</title><rect x="1073.0" y="501" width="0.3" height="15.0" fill="rgb(212,195,41)" rx="2" ry="2" />
<text  x="1075.98" y="511.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::release (16 samples, 0.02%)</title><rect x="1071.8" y="517" width="0.2" height="15.0" fill="rgb(223,176,40)" rx="2" ry="2" />
<text  x="1074.76" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_full (12 samples, 0.01%)</title><rect x="218.1" y="549" width="0.2" height="15.0" fill="rgb(229,80,46)" rx="2" ry="2" />
<text  x="221.14" y="559.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::first (20 samples, 0.02%)</title><rect x="105.3" y="773" width="0.2" height="15.0" fill="rgb(254,15,37)" rx="2" ry="2" />
<text  x="108.27" y="783.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (8 samples, 0.01%)</title><rect x="320.8" y="421" width="0.1" height="15.0" fill="rgb(214,92,21)" rx="2" ry="2" />
<text  x="323.80" y="431.5" ></text>
</g>
<g >
<title>common_file_perm (17 samples, 0.02%)</title><rect x="831.6" y="565" width="0.2" height="15.0" fill="rgb(210,144,43)" rx="2" ry="2" />
<text  x="834.56" y="575.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::net::tcp::TcpStream as std::io::Write&gt;::write (11,047 samples, 11.85%)</title><rect x="534.6" y="965" width="139.8" height="15.0" fill="rgb(241,211,50)" rx="2" ry="2" />
<text  x="537.58" y="975.5" >&lt;&amp;mio::net::tcp::..</text>
</g>
<g >
<title>strlen (18 samples, 0.02%)</title><rect x="1150.0" y="789" width="0.2" height="15.0" fill="rgb(228,128,35)" rx="2" ry="2" />
<text  x="1153.00" y="799.5" ></text>
</g>
<g >
<title>inet_ehashfn (48 samples, 0.05%)</title><rect x="608.2" y="325" width="0.6" height="15.0" fill="rgb(225,201,43)" rx="2" ry="2" />
<text  x="611.22" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.09%)</title><rect x="136.0" y="885" width="1.1" height="15.0" fill="rgb(213,89,51)" rx="2" ry="2" />
<text  x="139.02" y="895.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::or_else (202 samples, 0.22%)</title><rect x="1010.4" y="885" width="2.5" height="15.0" fill="rgb(244,107,23)" rx="2" ry="2" />
<text  x="1013.35" y="895.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (422 samples, 0.45%)</title><rect x="174.1" y="757" width="5.3" height="15.0" fill="rgb(236,168,5)" rx="2" ry="2" />
<text  x="177.08" y="767.5" ></text>
</g>
<g >
<title>_pthread_mutex_unlock_usercnt (16 samples, 0.02%)</title><rect x="972.0" y="549" width="0.2" height="15.0" fill="rgb(217,188,33)" rx="2" ry="2" />
<text  x="975.00" y="559.5" ></text>
</g>
<g >
<title>kfree_skbmem (11 samples, 0.01%)</title><rect x="551.1" y="677" width="0.1" height="15.0" fill="rgb(211,128,12)" rx="2" ry="2" />
<text  x="554.10" y="687.5" ></text>
</g>
<g >
<title>make_kuid (9 samples, 0.01%)</title><rect x="1131.8" y="741" width="0.1" height="15.0" fill="rgb(214,174,15)" rx="2" ry="2" />
<text  x="1134.83" y="751.5" ></text>
</g>
<g >
<title>ktime_get (12 samples, 0.01%)</title><rect x="639.4" y="293" width="0.1" height="15.0" fill="rgb(205,102,43)" rx="2" ry="2" />
<text  x="642.37" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (76 samples, 0.08%)</title><rect x="361.3" y="997" width="1.0" height="15.0" fill="rgb(235,79,49)" rx="2" ry="2" />
<text  x="364.31" y="1007.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (19 samples, 0.02%)</title><rect x="1086.0" y="1269" width="0.2" height="15.0" fill="rgb(250,90,36)" rx="2" ry="2" />
<text  x="1088.97" y="1279.5" ></text>
</g>
<g >
<title>&lt;serde_json::map::Iter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="420.4" y="757" width="0.2" height="15.0" fill="rgb(233,172,0)" rx="2" ry="2" />
<text  x="423.38" y="767.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (29 samples, 0.03%)</title><rect x="36.7" y="997" width="0.4" height="15.0" fill="rgb(238,160,46)" rx="2" ry="2" />
<text  x="39.70" y="1007.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::compile (1,006 samples, 1.08%)</title><rect x="53.0" y="1045" width="12.7" height="15.0" fill="rgb(247,106,7)" rx="2" ry="2" />
<text  x="56.01" y="1055.5" ></text>
</g>
<g >
<title>tokio::task::local::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;::bind (25 samples, 0.03%)</title><rect x="1070.7" y="517" width="0.3" height="15.0" fill="rgb(212,51,36)" rx="2" ry="2" />
<text  x="1073.71" y="527.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (18 samples, 0.02%)</title><rect x="667.8" y="709" width="0.2" height="15.0" fill="rgb(217,151,31)" rx="2" ry="2" />
<text  x="670.81" y="719.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (71 samples, 0.08%)</title><rect x="136.0" y="853" width="0.9" height="15.0" fill="rgb(208,229,28)" rx="2" ry="2" />
<text  x="139.02" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (137 samples, 0.15%)</title><rect x="144.1" y="709" width="1.8" height="15.0" fill="rgb(250,219,43)" rx="2" ry="2" />
<text  x="147.13" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (8 samples, 0.01%)</title><rect x="89.9" y="709" width="0.1" height="15.0" fill="rgb(240,228,52)" rx="2" ry="2" />
<text  x="92.90" y="719.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="159.5" y="757" width="0.3" height="15.0" fill="rgb(206,134,43)" rx="2" ry="2" />
<text  x="162.55" y="767.5" ></text>
</g>
<g >
<title>int_free (17 samples, 0.02%)</title><rect x="40.3" y="917" width="0.3" height="15.0" fill="rgb(215,34,36)" rx="2" ry="2" />
<text  x="43.34" y="927.5" ></text>
</g>
<g >
<title>actix_web::request::HttpRequestPool::get_request (37 samples, 0.04%)</title><rect x="364.8" y="1013" width="0.5" height="15.0" fill="rgb(254,48,51)" rx="2" ry="2" />
<text  x="367.79" y="1023.5" ></text>
</g>
<g >
<title>bytes::bytes::promotable_even_drop (37 samples, 0.04%)</title><rect x="457.6" y="1013" width="0.5" height="15.0" fill="rgb(247,66,4)" rx="2" ry="2" />
<text  x="460.63" y="1023.5" ></text>
</g>
<g >
<title>&lt;actix_http::cloneable::CloneableService&lt;T&gt; as actix_service::Service&gt;::poll_ready (78 samples, 0.08%)</title><rect x="1066.1" y="277" width="1.0" height="15.0" fill="rgb(219,51,8)" rx="2" ry="2" />
<text  x="1069.07" y="287.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (78 samples, 0.08%)</title><rect x="242.4" y="949" width="1.0" height="15.0" fill="rgb(245,219,42)" rx="2" ry="2" />
<text  x="245.37" y="959.5" ></text>
</g>
<g >
<title>int_free (63 samples, 0.07%)</title><rect x="391.3" y="501" width="0.8" height="15.0" fill="rgb(243,115,44)" rx="2" ry="2" />
<text  x="394.31" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;futures_util::future::ready::Ready&lt;core::result::Result&lt;actix_web::data::Data&lt;serde_json::value::Value&gt;,actix_http::error::Error&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="437.3" y="853" width="0.2" height="15.0" fill="rgb(206,87,47)" rx="2" ry="2" />
<text  x="440.33" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (21 samples, 0.02%)</title><rect x="44.2" y="1173" width="0.3" height="15.0" fill="rgb(211,223,20)" rx="2" ry="2" />
<text  x="47.19" y="1183.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (331 samples, 0.36%)</title><rect x="525.1" y="917" width="4.2" height="15.0" fill="rgb(222,111,54)" rx="2" ry="2" />
<text  x="528.14" y="927.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (21 samples, 0.02%)</title><rect x="45.0" y="1141" width="0.3" height="15.0" fill="rgb(239,15,44)" rx="2" ry="2" />
<text  x="47.99" y="1151.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (110 samples, 0.12%)</title><rect x="218.3" y="565" width="1.4" height="15.0" fill="rgb(237,227,10)" rx="2" ry="2" />
<text  x="221.30" y="575.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (14 samples, 0.02%)</title><rect x="949.8" y="645" width="0.2" height="15.0" fill="rgb(240,111,9)" rx="2" ry="2" />
<text  x="952.84" y="655.5" ></text>
</g>
<g >
<title>sk_reset_timer (123 samples, 0.13%)</title><rect x="310.2" y="405" width="1.6" height="15.0" fill="rgb(210,210,7)" rx="2" ry="2" />
<text  x="313.22" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_swap (28 samples, 0.03%)</title><rect x="1006.0" y="805" width="0.4" height="15.0" fill="rgb(222,156,14)" rx="2" ry="2" />
<text  x="1009.03" y="815.5" ></text>
</g>
<g >
<title>&lt;pin_project_lite::_private::UnsafeOverwriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="438.5" y="933" width="0.4" height="15.0" fill="rgb(206,67,20)" rx="2" ry="2" />
<text  x="441.52" y="943.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (16 samples, 0.02%)</title><rect x="1071.8" y="501" width="0.2" height="15.0" fill="rgb(248,66,39)" rx="2" ry="2" />
<text  x="1074.76" y="511.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (65 samples, 0.07%)</title><rect x="666.9" y="709" width="0.8" height="15.0" fill="rgb(249,174,40)" rx="2" ry="2" />
<text  x="669.89" y="719.5" ></text>
</g>
<g >
<title>validate_xmit_skb (86 samples, 0.09%)</title><rect x="652.5" y="549" width="1.1" height="15.0" fill="rgb(241,152,50)" rx="2" ry="2" />
<text  x="655.48" y="559.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (16 samples, 0.02%)</title><rect x="434.8" y="565" width="0.2" height="15.0" fill="rgb(241,25,4)" rx="2" ry="2" />
<text  x="437.77" y="575.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::select_as_str (8,754 samples, 9.39%)</title><rect x="121.4" y="1029" width="110.8" height="15.0" fill="rgb(233,145,51)" rx="2" ry="2" />
<text  x="124.38" y="1039.5" >jsonpath_lib:..</text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::upgrade (62 samples, 0.07%)</title><rect x="787.8" y="789" width="0.8" height="15.0" fill="rgb(220,50,11)" rx="2" ry="2" />
<text  x="790.79" y="799.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (22 samples, 0.02%)</title><rect x="387.8" y="533" width="0.3" height="15.0" fill="rgb(248,83,52)" rx="2" ry="2" />
<text  x="390.78" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1,232 samples, 1.32%)</title><rect x="419.6" y="805" width="15.6" height="15.0" fill="rgb(234,155,1)" rx="2" ry="2" />
<text  x="422.64" y="815.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (81 samples, 0.09%)</title><rect x="482.6" y="677" width="1.0" height="15.0" fill="rgb(220,47,25)" rx="2" ry="2" />
<text  x="485.57" y="687.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (9 samples, 0.01%)</title><rect x="602.8" y="357" width="0.1" height="15.0" fill="rgb(248,112,38)" rx="2" ry="2" />
<text  x="605.77" y="367.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_ready (166 samples, 0.18%)</title><rect x="674.5" y="965" width="2.1" height="15.0" fill="rgb(213,206,27)" rx="2" ry="2" />
<text  x="677.50" y="975.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (14 samples, 0.02%)</title><rect x="381.7" y="821" width="0.1" height="15.0" fill="rgb(207,201,5)" rx="2" ry="2" />
<text  x="384.67" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (51 samples, 0.05%)</title><rect x="125.7" y="805" width="0.7" height="15.0" fill="rgb(214,44,54)" rx="2" ry="2" />
<text  x="128.72" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::push_term (43 samples, 0.05%)</title><rect x="229.2" y="885" width="0.6" height="15.0" fill="rgb(212,82,25)" rx="2" ry="2" />
<text  x="232.25" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (466 samples, 0.50%)</title><rect x="141.5" y="821" width="5.9" height="15.0" fill="rgb(254,82,1)" rx="2" ry="2" />
<text  x="144.47" y="831.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (157 samples, 0.17%)</title><rect x="390.1" y="517" width="2.0" height="15.0" fill="rgb(248,220,21)" rx="2" ry="2" />
<text  x="393.12" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (26 samples, 0.03%)</title><rect x="36.7" y="981" width="0.4" height="15.0" fill="rgb(249,188,44)" rx="2" ry="2" />
<text  x="39.73" y="991.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::tick (870 samples, 0.93%)</title><rect x="504.4" y="1221" width="11.0" height="15.0" fill="rgb(222,21,3)" rx="2" ry="2" />
<text  x="507.38" y="1231.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (10 samples, 0.01%)</title><rect x="1063.3" y="197" width="0.1" height="15.0" fill="rgb(236,166,50)" rx="2" ry="2" />
<text  x="1066.29" y="207.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_movemask_epi8 (16 samples, 0.02%)</title><rect x="41.2" y="965" width="0.2" height="15.0" fill="rgb(247,210,45)" rx="2" ry="2" />
<text  x="44.17" y="975.5" ></text>
</g>
<g >
<title>actix_server::accept::Accept::poll (8,015 samples, 8.60%)</title><rect x="1086.8" y="1061" width="101.5" height="15.0" fill="rgb(220,88,39)" rx="2" ry="2" />
<text  x="1089.83" y="1071.5" >actix_server..</text>
</g>
<g >
<title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="402.5" y="821" width="0.2" height="15.0" fill="rgb(242,226,42)" rx="2" ry="2" />
<text  x="405.53" y="831.5" ></text>
</g>
<g >
<title>native_sched_clock (16 samples, 0.02%)</title><rect x="1110.5" y="229" width="0.2" height="15.0" fill="rgb(234,114,7)" rx="2" ry="2" />
<text  x="1113.47" y="239.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (8 samples, 0.01%)</title><rect x="106.3" y="757" width="0.1" height="15.0" fill="rgb(244,93,45)" rx="2" ry="2" />
<text  x="109.28" y="767.5" ></text>
</g>
<g >
<title>_memcg_kmem_charge (57 samples, 0.06%)</title><rect x="1136.7" y="709" width="0.7" height="15.0" fill="rgb(207,160,12)" rx="2" ry="2" />
<text  x="1139.71" y="719.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::next_task::{{closure}} (293 samples, 0.31%)</title><rect x="1077.5" y="645" width="3.7" height="15.0" fill="rgb(250,222,10)" rx="2" ry="2" />
<text  x="1080.53" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_or (13 samples, 0.01%)</title><rect x="1091.4" y="901" width="0.2" height="15.0" fill="rgb(241,16,44)" rx="2" ry="2" />
<text  x="1094.44" y="911.5" ></text>
</g>
<g >
<title>actix_http::response::ResponseBuilder::body (213 samples, 0.23%)</title><rect x="377.6" y="901" width="2.7" height="15.0" fill="rgb(205,89,48)" rx="2" ry="2" />
<text  x="380.64" y="911.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (14 samples, 0.02%)</title><rect x="974.5" y="773" width="0.2" height="15.0" fill="rgb(242,148,25)" rx="2" ry="2" />
<text  x="977.49" y="783.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="163.2" y="629" width="0.3" height="15.0" fill="rgb(210,50,35)" rx="2" ry="2" />
<text  x="166.19" y="639.5" ></text>
</g>
<g >
<title>memset_erms (13 samples, 0.01%)</title><rect x="1144.7" y="709" width="0.2" height="15.0" fill="rgb(252,181,49)" rx="2" ry="2" />
<text  x="1147.72" y="719.5" ></text>
</g>
<g >
<title>update_load_avg (223 samples, 0.24%)</title><rect x="925.0" y="549" width="2.8" height="15.0" fill="rgb(235,214,29)" rx="2" ry="2" />
<text  x="927.97" y="559.5" ></text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::upgrade (15 samples, 0.02%)</title><rect x="794.7" y="821" width="0.2" height="15.0" fill="rgb(208,222,36)" rx="2" ry="2" />
<text  x="797.66" y="831.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (20 samples, 0.02%)</title><rect x="336.0" y="997" width="0.3" height="15.0" fill="rgb(231,221,27)" rx="2" ry="2" />
<text  x="339.03" y="1007.5" ></text>
</g>
<g >
<title>tcache_get (11 samples, 0.01%)</title><rect x="179.8" y="629" width="0.2" height="15.0" fill="rgb(228,157,11)" rx="2" ry="2" />
<text  x="182.81" y="639.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="352.2" y="885" width="0.2" height="15.0" fill="rgb(241,35,49)" rx="2" ry="2" />
<text  x="355.16" y="895.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek (13 samples, 0.01%)</title><rect x="96.7" y="773" width="0.2" height="15.0" fill="rgb(249,139,7)" rx="2" ry="2" />
<text  x="99.72" y="783.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term (314 samples, 0.34%)</title><rect x="53.0" y="869" width="4.0" height="15.0" fill="rgb(218,16,1)" rx="2" ry="2" />
<text  x="56.01" y="879.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (74 samples, 0.08%)</title><rect x="356.5" y="917" width="0.9" height="15.0" fill="rgb(226,200,10)" rx="2" ry="2" />
<text  x="359.45" y="927.5" ></text>
</g>
<g >
<title>int_free (11 samples, 0.01%)</title><rect x="453.8" y="981" width="0.1" height="15.0" fill="rgb(224,224,41)" rx="2" ry="2" />
<text  x="456.81" y="991.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (59 samples, 0.06%)</title><rect x="423.7" y="597" width="0.7" height="15.0" fill="rgb(249,122,8)" rx="2" ry="2" />
<text  x="426.67" y="607.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (20 samples, 0.02%)</title><rect x="191.3" y="565" width="0.2" height="15.0" fill="rgb(218,165,25)" rx="2" ry="2" />
<text  x="194.27" y="575.5" ></text>
</g>
<g >
<title>_wake_up_common (95 samples, 0.10%)</title><rect x="289.0" y="853" width="1.2" height="15.0" fill="rgb(211,94,28)" rx="2" ry="2" />
<text  x="292.01" y="863.5" ></text>
</g>
<g >
<title>_fget_light (8 samples, 0.01%)</title><rect x="1094.6" y="469" width="0.1" height="15.0" fill="rgb(238,57,13)" rx="2" ry="2" />
<text  x="1097.64" y="479.5" ></text>
</g>
<g >
<title>security_file_permission (204 samples, 0.22%)</title><rect x="829.7" y="581" width="2.6" height="15.0" fill="rgb(238,59,7)" rx="2" ry="2" />
<text  x="832.68" y="591.5" ></text>
</g>
<g >
<title>alloc_file (533 samples, 0.57%)</title><rect x="1138.3" y="773" width="6.7" height="15.0" fill="rgb(251,52,4)" rx="2" ry="2" />
<text  x="1141.29" y="783.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (47 samples, 0.05%)</title><rect x="227.0" y="629" width="0.6" height="15.0" fill="rgb(246,117,41)" rx="2" ry="2" />
<text  x="229.98" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::header::map::Value&gt; (122 samples, 0.13%)</title><rect x="39.0" y="981" width="1.6" height="15.0" fill="rgb(233,125,20)" rx="2" ry="2" />
<text  x="42.01" y="991.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (50 samples, 0.05%)</title><rect x="127.6" y="805" width="0.7" height="15.0" fill="rgb(240,39,14)" rx="2" ry="2" />
<text  x="130.65" y="815.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (29 samples, 0.03%)</title><rect x="983.0" y="837" width="0.4" height="15.0" fill="rgb(227,199,8)" rx="2" ry="2" />
<text  x="986.03" y="847.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (304 samples, 0.33%)</title><rect x="468.9" y="1205" width="3.8" height="15.0" fill="rgb(249,187,26)" rx="2" ry="2" />
<text  x="471.90" y="1215.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (59 samples, 0.06%)</title><rect x="167.2" y="853" width="0.7" height="15.0" fill="rgb(228,69,54)" rx="2" ry="2" />
<text  x="170.17" y="863.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (870 samples, 0.93%)</title><rect x="504.4" y="965" width="11.0" height="15.0" fill="rgb(220,87,2)" rx="2" ry="2" />
<text  x="507.38" y="975.5" ></text>
</g>
<g >
<title>_rust_realloc (15 samples, 0.02%)</title><rect x="159.0" y="645" width="0.2" height="15.0" fill="rgb(252,140,19)" rx="2" ry="2" />
<text  x="162.03" y="655.5" ></text>
</g>
<g >
<title>_hrtimer_init (8 samples, 0.01%)</title><rect x="855.8" y="629" width="0.1" height="15.0" fill="rgb(242,40,4)" rx="2" ry="2" />
<text  x="858.76" y="639.5" ></text>
</g>
<g >
<title>_memset_avx2_unaligned_erms (79 samples, 0.08%)</title><rect x="25.9" y="1173" width="1.0" height="15.0" fill="rgb(205,34,52)" rx="2" ry="2" />
<text  x="28.86" y="1183.5" ></text>
</g>
<g >
<title>_inode_wait_for_writeback (8 samples, 0.01%)</title><rect x="1156.1" y="677" width="0.1" height="15.0" fill="rgb(211,50,27)" rx="2" ry="2" />
<text  x="1159.11" y="687.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (44 samples, 0.05%)</title><rect x="231.3" y="885" width="0.6" height="15.0" fill="rgb(224,201,33)" rx="2" ry="2" />
<text  x="234.32" y="895.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="352.4" y="885" width="0.1" height="15.0" fill="rgb(212,119,9)" rx="2" ry="2" />
<text  x="355.37" y="895.5" ></text>
</g>
<g >
<title>raw_spin_unlock_bh (9 samples, 0.01%)</title><rect x="766.6" y="533" width="0.1" height="15.0" fill="rgb(233,19,15)" rx="2" ry="2" />
<text  x="769.62" y="543.5" ></text>
</g>
<g >
<title>tokio::util::slab::Slab&lt;T&gt;::alloc (21 samples, 0.02%)</title><rect x="263.7" y="693" width="0.3" height="15.0" fill="rgb(251,38,19)" rx="2" ry="2" />
<text  x="266.71" y="703.5" ></text>
</g>
<g >
<title>d_flags_for_inode (8 samples, 0.01%)</title><rect x="1149.2" y="741" width="0.1" height="15.0" fill="rgb(217,107,41)" rx="2" ry="2" />
<text  x="1152.19" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (53 samples, 0.06%)</title><rect x="1062.7" y="309" width="0.7" height="15.0" fill="rgb(241,201,45)" rx="2" ry="2" />
<text  x="1065.74" y="319.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::select (1,237 samples, 1.33%)</title><rect x="403.2" y="885" width="15.7" height="15.0" fill="rgb(241,39,48)" rx="2" ry="2" />
<text  x="406.21" y="895.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_or (14 samples, 0.02%)</title><rect x="1115.7" y="885" width="0.2" height="15.0" fill="rgb(249,135,47)" rx="2" ry="2" />
<text  x="1118.72" y="895.5" ></text>
</g>
<g >
<title>ipv4_dst_check (9 samples, 0.01%)</title><rect x="543.5" y="741" width="0.1" height="15.0" fill="rgb(217,177,18)" rx="2" ry="2" />
<text  x="546.47" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt;&gt; (49 samples, 0.05%)</title><rect x="172.6" y="917" width="0.6" height="15.0" fill="rgb(209,155,16)" rx="2" ry="2" />
<text  x="175.59" y="927.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::whitespace (12 samples, 0.01%)</title><rect x="101.9" y="773" width="0.1" height="15.0" fill="rgb(235,94,33)" rx="2" ry="2" />
<text  x="104.89" y="783.5" ></text>
</g>
<g >
<title>tcp_current_mss (9 samples, 0.01%)</title><rect x="575.7" y="757" width="0.1" height="15.0" fill="rgb(254,69,10)" rx="2" ry="2" />
<text  x="578.66" y="767.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="352.4" y="901" width="0.1" height="15.0" fill="rgb(221,181,36)" rx="2" ry="2" />
<text  x="355.37" y="911.5" ></text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_shutdown (40 samples, 0.04%)</title><rect x="467.2" y="1045" width="0.5" height="15.0" fill="rgb(253,88,10)" rx="2" ry="2" />
<text  x="470.21" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (36 samples, 0.04%)</title><rect x="274.7" y="997" width="0.5" height="15.0" fill="rgb(218,126,50)" rx="2" ry="2" />
<text  x="277.71" y="1007.5" ></text>
</g>
<g >
<title>tcache_get (15 samples, 0.02%)</title><rect x="122.6" y="805" width="0.2" height="15.0" fill="rgb(230,213,48)" rx="2" ry="2" />
<text  x="125.57" y="815.5" ></text>
</g>
<g >
<title>core::ptr::read (19 samples, 0.02%)</title><rect x="150.3" y="853" width="0.3" height="15.0" fill="rgb(242,148,54)" rx="2" ry="2" />
<text  x="153.33" y="863.5" ></text>
</g>
<g >
<title>tokio::io::driver::Driver::turn (13,894 samples, 14.90%)</title><rect x="799.4" y="837" width="175.9" height="15.0" fill="rgb(254,45,9)" rx="2" ry="2" />
<text  x="802.42" y="847.5" >tokio::io::driver::Dri..</text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (46 samples, 0.05%)</title><rect x="503.8" y="1205" width="0.6" height="15.0" fill="rgb(247,125,2)" rx="2" ry="2" />
<text  x="506.80" y="1215.5" ></text>
</g>
<g >
<title>available_idle_cpu (20 samples, 0.02%)</title><rect x="1100.4" y="245" width="0.3" height="15.0" fill="rgb(207,212,34)" rx="2" ry="2" />
<text  x="1103.43" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (85 samples, 0.09%)</title><rect x="12.5" y="1013" width="1.0" height="15.0" fill="rgb(211,53,5)" rx="2" ry="2" />
<text  x="15.46" y="1023.5" ></text>
</g>
<g >
<title>_GI___libc_free (14 samples, 0.02%)</title><rect x="124.5" y="789" width="0.2" height="15.0" fill="rgb(227,209,47)" rx="2" ry="2" />
<text  x="127.50" y="799.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (40 samples, 0.04%)</title><rect x="467.2" y="1061" width="0.5" height="15.0" fill="rgb(244,123,15)" rx="2" ry="2" />
<text  x="470.21" y="1071.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (241 samples, 0.26%)</title><rect x="128.3" y="805" width="3.1" height="15.0" fill="rgb(227,224,33)" rx="2" ry="2" />
<text  x="131.34" y="815.5" ></text>
</g>
<g >
<title>rw_verify_area (220 samples, 0.24%)</title><rect x="829.5" y="597" width="2.8" height="15.0" fill="rgb(251,63,44)" rx="2" ry="2" />
<text  x="832.47" y="607.5" ></text>
</g>
<g >
<title>_sys_accept4 (2,526 samples, 2.71%)</title><rect x="1119.0" y="837" width="32.0" height="15.0" fill="rgb(206,8,53)" rx="2" ry="2" />
<text  x="1122.02" y="847.5" >_s..</text>
</g>
<g >
<title>tokio::runtime::task::waker::clone_waker (78 samples, 0.08%)</title><rect x="1061.8" y="293" width="0.9" height="15.0" fill="rgb(226,153,2)" rx="2" ry="2" />
<text  x="1064.76" y="303.5" ></text>
</g>
<g >
<title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="243.7" y="1045" width="0.1" height="15.0" fill="rgb(241,82,38)" rx="2" ry="2" />
<text  x="246.69" y="1055.5" ></text>
</g>
<g >
<title>skb_free_head (75 samples, 0.08%)</title><rect x="555.9" y="645" width="0.9" height="15.0" fill="rgb(207,139,19)" rx="2" ry="2" />
<text  x="558.90" y="655.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (100 samples, 0.11%)</title><rect x="87.1" y="805" width="1.3" height="15.0" fill="rgb(216,176,22)" rx="2" ry="2" />
<text  x="90.10" y="815.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (9 samples, 0.01%)</title><rect x="1045.8" y="309" width="0.1" height="15.0" fill="rgb(225,92,34)" rx="2" ry="2" />
<text  x="1048.81" y="319.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (41 samples, 0.04%)</title><rect x="449.6" y="949" width="0.6" height="15.0" fill="rgb(251,84,11)" rx="2" ry="2" />
<text  x="452.64" y="959.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read_ready (288 samples, 0.31%)</title><rect x="233.3" y="1125" width="3.6" height="15.0" fill="rgb(219,181,43)" rx="2" ry="2" />
<text  x="236.26" y="1135.5" ></text>
</g>
<g >
<title>unlink_chunk (10 samples, 0.01%)</title><rect x="280.1" y="917" width="0.2" height="15.0" fill="rgb(243,184,9)" rx="2" ry="2" />
<text  x="283.15" y="927.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="130.1" y="693" width="0.2" height="15.0" fill="rgb(207,89,26)" rx="2" ry="2" />
<text  x="133.12" y="703.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (50 samples, 0.05%)</title><rect x="178.8" y="645" width="0.6" height="15.0" fill="rgb(251,200,15)" rx="2" ry="2" />
<text  x="181.79" y="655.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (66 samples, 0.07%)</title><rect x="161.3" y="645" width="0.8" height="15.0" fill="rgb(224,80,38)" rx="2" ry="2" />
<text  x="164.29" y="655.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="352.2" y="853" width="0.2" height="15.0" fill="rgb(242,73,9)" rx="2" ry="2" />
<text  x="355.16" y="863.5" ></text>
</g>
<g >
<title>&lt;i32 as std::sys::unix::IsMinusOne&gt;::is_minus_one (13 samples, 0.01%)</title><rect x="336.4" y="997" width="0.1" height="15.0" fill="rgb(218,22,49)" rx="2" ry="2" />
<text  x="339.37" y="1007.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::cmp::CmpEq as jsonpath_lib::selector::cmp::Cmp&gt;::cmp_json::{{closure}}::{{closure}} (39 samples, 0.04%)</title><rect x="139.4" y="789" width="0.5" height="15.0" fill="rgb(243,147,3)" rx="2" ry="2" />
<text  x="142.43" y="799.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (262 samples, 0.28%)</title><rect x="476.9" y="581" width="3.3" height="15.0" fill="rgb(221,152,9)" rx="2" ry="2" />
<text  x="479.92" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (45 samples, 0.05%)</title><rect x="1022.2" y="565" width="0.6" height="15.0" fill="rgb(244,45,37)" rx="2" ry="2" />
<text  x="1025.21" y="575.5" ></text>
</g>
<g >
<title>_update_load_avg_cfs_rq (42 samples, 0.05%)</title><rect x="926.4" y="533" width="0.6" height="15.0" fill="rgb(213,39,40)" rx="2" ry="2" />
<text  x="929.44" y="543.5" ></text>
</g>
<g >
<title>_ip_finish_output (5,257 samples, 5.64%)</title><rect x="587.7" y="613" width="66.5" height="15.0" fill="rgb(251,84,31)" rx="2" ry="2" />
<text  x="590.70" y="623.5" >_ip_fin..</text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::from_std (190 samples, 0.20%)</title><rect x="513.0" y="837" width="2.4" height="15.0" fill="rgb(246,70,35)" rx="2" ry="2" />
<text  x="515.99" y="847.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (383 samples, 0.41%)</title><rect x="159.5" y="805" width="4.8" height="15.0" fill="rgb(243,160,29)" rx="2" ry="2" />
<text  x="162.50" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::time::delay::Delay&gt; (160 samples, 0.17%)</title><rect x="792.8" y="885" width="2.1" height="15.0" fill="rgb(233,99,27)" rx="2" ry="2" />
<text  x="795.83" y="895.5" ></text>
</g>
<g >
<title>_mod_memcg_lruvec_state (44 samples, 0.05%)</title><rect x="780.6" y="597" width="0.6" height="15.0" fill="rgb(213,140,32)" rx="2" ry="2" />
<text  x="783.62" y="607.5" ></text>
</g>
<g >
<title>_fget_files (57 samples, 0.06%)</title><rect x="671.7" y="773" width="0.7" height="15.0" fill="rgb(226,202,5)" rx="2" ry="2" />
<text  x="674.71" y="783.5" ></text>
</g>
<g >
<title>_const_udelay (1,374 samples, 1.47%)</title><rect x="870.8" y="517" width="17.4" height="15.0" fill="rgb(230,138,38)" rx="2" ry="2" />
<text  x="873.79" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (83 samples, 0.09%)</title><rect x="411.7" y="805" width="1.1" height="15.0" fill="rgb(242,68,40)" rx="2" ry="2" />
<text  x="414.72" y="815.5" ></text>
</g>
<g >
<title>tcp_poll (10 samples, 0.01%)</title><rect x="854.2" y="645" width="0.1" height="15.0" fill="rgb(232,111,8)" rx="2" ry="2" />
<text  x="857.16" y="655.5" ></text>
</g>
<g >
<title>_slab_alloc (37 samples, 0.04%)</title><rect x="1140.8" y="709" width="0.5" height="15.0" fill="rgb(214,56,7)" rx="2" ry="2" />
<text  x="1143.83" y="719.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::poll_write_priv (165 samples, 0.18%)</title><rect x="336.9" y="1045" width="2.1" height="15.0" fill="rgb(210,5,45)" rx="2" ry="2" />
<text  x="339.88" y="1055.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (8 samples, 0.01%)</title><rect x="975.9" y="549" width="0.1" height="15.0" fill="rgb(219,10,1)" rx="2" ry="2" />
<text  x="978.88" y="559.5" ></text>
</g>
<g >
<title>_copy_skb_header (8 samples, 0.01%)</title><rect x="327.7" y="789" width="0.1" height="15.0" fill="rgb(231,184,21)" rx="2" ry="2" />
<text  x="330.70" y="799.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::current (55 samples, 0.06%)</title><rect x="523.8" y="565" width="0.7" height="15.0" fill="rgb(229,97,35)" rx="2" ry="2" />
<text  x="526.78" y="575.5" ></text>
</g>
<g >
<title>core::pin::Pin&lt;P&gt;::set (40 samples, 0.04%)</title><rect x="467.2" y="1077" width="0.5" height="15.0" fill="rgb(239,206,12)" rx="2" ry="2" />
<text  x="470.21" y="1087.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (142 samples, 0.15%)</title><rect x="378.3" y="821" width="1.8" height="15.0" fill="rgb(231,81,8)" rx="2" ry="2" />
<text  x="381.29" y="831.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (27 samples, 0.03%)</title><rect x="353.0" y="917" width="0.3" height="15.0" fill="rgb(251,92,33)" rx="2" ry="2" />
<text  x="355.98" y="927.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (26 samples, 0.03%)</title><rect x="344.9" y="965" width="0.3" height="15.0" fill="rgb(244,119,10)" rx="2" ry="2" />
<text  x="347.86" y="975.5" ></text>
</g>
<g >
<title>actix_http::response::Response&lt;B&gt;::head (21 samples, 0.02%)</title><rect x="444.4" y="981" width="0.2" height="15.0" fill="rgb(221,215,12)" rx="2" ry="2" />
<text  x="447.35" y="991.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::condition_expr (1,630 samples, 1.75%)</title><rect x="72.6" y="901" width="20.7" height="15.0" fill="rgb(220,47,1)" rx="2" ry="2" />
<text  x="75.65" y="911.5" ></text>
</g>
<g >
<title>_slab_alloc (10 samples, 0.01%)</title><rect x="573.2" y="709" width="0.1" height="15.0" fill="rgb(218,101,27)" rx="2" ry="2" />
<text  x="576.15" y="719.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (8 samples, 0.01%)</title><rect x="106.3" y="789" width="0.1" height="15.0" fill="rgb(208,139,30)" rx="2" ry="2" />
<text  x="109.28" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::condition_expr (304 samples, 0.33%)</title><rect x="468.9" y="949" width="3.8" height="15.0" fill="rgb(211,57,49)" rx="2" ry="2" />
<text  x="471.90" y="959.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (145 samples, 0.16%)</title><rect x="1089.5" y="917" width="1.9" height="15.0" fill="rgb(207,124,17)" rx="2" ry="2" />
<text  x="1092.54" y="927.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (75 samples, 0.08%)</title><rect x="99.6" y="805" width="0.9" height="15.0" fill="rgb(231,82,19)" rx="2" ry="2" />
<text  x="102.58" y="815.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (43 samples, 0.05%)</title><rect x="1024.4" y="677" width="0.6" height="15.0" fill="rgb(243,92,0)" rx="2" ry="2" />
<text  x="1027.44" y="687.5" ></text>
</g>
<g >
<title>migrate_disable (36 samples, 0.04%)</title><rect x="654.4" y="613" width="0.4" height="15.0" fill="rgb(211,26,38)" rx="2" ry="2" />
<text  x="657.37" y="623.5" ></text>
</g>
<g >
<title>_fget_light (113 samples, 0.12%)</title><rect x="520.0" y="469" width="1.4" height="15.0" fill="rgb(205,201,7)" rx="2" ry="2" />
<text  x="523.01" y="479.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (9 samples, 0.01%)</title><rect x="318.6" y="357" width="0.1" height="15.0" fill="rgb(212,19,36)" rx="2" ry="2" />
<text  x="321.55" y="367.5" ></text>
</g>
<g >
<title>tcp_add_backlog (69 samples, 0.07%)</title><rect x="612.0" y="341" width="0.8" height="15.0" fill="rgb(240,48,20)" rx="2" ry="2" />
<text  x="614.97" y="351.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (14 samples, 0.02%)</title><rect x="1122.2" y="805" width="0.2" height="15.0" fill="rgb(234,224,10)" rx="2" ry="2" />
<text  x="1125.24" y="815.5" ></text>
</g>
<g >
<title>ep_start_scan (26 samples, 0.03%)</title><rect x="854.3" y="661" width="0.3" height="15.0" fill="rgb(226,157,49)" rx="2" ry="2" />
<text  x="857.28" y="671.5" ></text>
</g>
<g >
<title>actix_http::h1::encoder::TransferEncoding::encode_eof (10 samples, 0.01%)</title><rect x="457.2" y="1029" width="0.1" height="15.0" fill="rgb(232,4,12)" rx="2" ry="2" />
<text  x="460.21" y="1039.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::now (61 samples, 0.07%)</title><rect x="1187.5" y="981" width="0.8" height="15.0" fill="rgb(211,56,32)" rx="2" ry="2" />
<text  x="1190.52" y="991.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (96 samples, 0.10%)</title><rect x="492.8" y="1045" width="1.3" height="15.0" fill="rgb(225,47,2)" rx="2" ry="2" />
<text  x="495.85" y="1055.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::PathParser::parse (278 samples, 0.30%)</title><rect x="238.9" y="965" width="3.5" height="15.0" fill="rgb(218,103,15)" rx="2" ry="2" />
<text  x="241.85" y="975.5" ></text>
</g>
<g >
<title>mio::sys::unix::tcp::TcpStream::peer_addr (680 samples, 0.73%)</title><rect x="504.4" y="773" width="8.6" height="15.0" fill="rgb(214,224,43)" rx="2" ry="2" />
<text  x="507.38" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::checked_sub_instant (24 samples, 0.03%)</title><rect x="272.3" y="933" width="0.3" height="15.0" fill="rgb(228,139,19)" rx="2" ry="2" />
<text  x="275.32" y="943.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::checked_add_duration (31 samples, 0.03%)</title><rect x="343.3" y="997" width="0.4" height="15.0" fill="rgb(249,197,34)" rx="2" ry="2" />
<text  x="346.29" y="1007.5" ></text>
</g>
<g >
<title>tokio::util::slab::page::Shared&lt;T&gt;::remove_local::{{closure}} (142 samples, 0.15%)</title><rect x="791.0" y="725" width="1.8" height="15.0" fill="rgb(216,174,43)" rx="2" ry="2" />
<text  x="793.99" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::selector::terms::ExprTerm&gt; (34 samples, 0.04%)</title><rect x="165.2" y="917" width="0.4" height="15.0" fill="rgb(247,143,14)" rx="2" ry="2" />
<text  x="168.16" y="927.5" ></text>
</g>
<g >
<title>ip_rcv_cor.sr. (40 samples, 0.04%)</title><rect x="305.6" y="549" width="0.5" height="15.0" fill="rgb(231,7,12)" rx="2" ry="2" />
<text  x="308.60" y="559.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (132 samples, 0.14%)</title><rect x="58.0" y="821" width="1.6" height="15.0" fill="rgb(244,31,47)" rx="2" ry="2" />
<text  x="60.98" y="831.5" ></text>
</g>
<g >
<title>cpuacct_charge (10 samples, 0.01%)</title><rect x="1180.0" y="773" width="0.1" height="15.0" fill="rgb(248,138,18)" rx="2" ry="2" />
<text  x="1183.00" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (30 samples, 0.03%)</title><rect x="122.4" y="837" width="0.4" height="15.0" fill="rgb(250,9,47)" rx="2" ry="2" />
<text  x="125.45" y="847.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (694 samples, 0.74%)</title><rect x="189.2" y="661" width="8.8" height="15.0" fill="rgb(235,68,3)" rx="2" ry="2" />
<text  x="192.23" y="671.5" ></text>
</g>
<g >
<title>dst_release (28 samples, 0.03%)</title><rect x="612.4" y="325" width="0.4" height="15.0" fill="rgb(212,122,35)" rx="2" ry="2" />
<text  x="615.41" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (30 samples, 0.03%)</title><rect x="431.1" y="613" width="0.4" height="15.0" fill="rgb(249,154,34)" rx="2" ry="2" />
<text  x="434.10" y="623.5" ></text>
</g>
<g >
<title>_fdget (37 samples, 0.04%)</title><rect x="334.1" y="917" width="0.5" height="15.0" fill="rgb(220,41,13)" rx="2" ry="2" />
<text  x="337.12" y="927.5" ></text>
</g>
<g >
<title>inet_ehashfn (14 samples, 0.02%)</title><rect x="307.9" y="453" width="0.2" height="15.0" fill="rgb(234,46,23)" rx="2" ry="2" />
<text  x="310.88" y="463.5" ></text>
</g>
<g >
<title>raw_write_lock_irq (23 samples, 0.02%)</title><rect x="850.8" y="645" width="0.3" height="15.0" fill="rgb(246,60,35)" rx="2" ry="2" />
<text  x="853.76" y="655.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::load (13 samples, 0.01%)</title><rect x="1042.1" y="293" width="0.1" height="15.0" fill="rgb(244,226,20)" rx="2" ry="2" />
<text  x="1045.07" y="303.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll1 (2,164 samples, 2.32%)</title><rect x="1160.9" y="1029" width="27.4" height="15.0" fill="rgb(253,138,51)" rx="2" ry="2" />
<text  x="1163.90" y="1039.5" >m..</text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (44 samples, 0.05%)</title><rect x="514.4" y="741" width="0.6" height="15.0" fill="rgb(225,161,53)" rx="2" ry="2" />
<text  x="517.42" y="751.5" ></text>
</g>
<g >
<title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (1,769 samples, 1.90%)</title><rect x="1092.0" y="757" width="22.4" height="15.0" fill="rgb(220,83,37)" rx="2" ry="2" />
<text  x="1095.00" y="767.5" >&lt;..</text>
</g>
<g >
<title>_GI___libc_free (51 samples, 0.05%)</title><rect x="39.0" y="917" width="0.7" height="15.0" fill="rgb(223,100,34)" rx="2" ry="2" />
<text  x="42.03" y="927.5" ></text>
</g>
<g >
<title>actix_rt::arbiter::Arbiter::new::{{closure}} (22,826 samples, 24.49%)</title><rect x="795.0" y="1077" width="288.9" height="15.0" fill="rgb(233,222,9)" rx="2" ry="2" />
<text  x="797.97" y="1087.5" >actix_rt::arbiter::Arbiter::new::{{clo..</text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,573 samples, 1.69%)</title><rect x="244.1" y="885" width="19.9" height="15.0" fill="rgb(250,9,20)" rx="2" ry="2" />
<text  x="247.07" y="895.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (30 samples, 0.03%)</title><rect x="976.6" y="741" width="0.4" height="15.0" fill="rgb(253,3,36)" rx="2" ry="2" />
<text  x="979.63" y="751.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (73 samples, 0.08%)</title><rect x="1028.0" y="597" width="0.9" height="15.0" fill="rgb(217,220,53)" rx="2" ry="2" />
<text  x="1030.98" y="607.5" ></text>
</g>
<g >
<title>tokio::time::driver::registration::Registration::poll_elapsed (146 samples, 0.16%)</title><rect x="340.1" y="1029" width="1.9" height="15.0" fill="rgb(240,197,15)" rx="2" ry="2" />
<text  x="343.11" y="1039.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="972.2" y="613" width="0.1" height="15.0" fill="rgb(207,9,38)" rx="2" ry="2" />
<text  x="975.20" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt;&gt; (407 samples, 0.44%)</title><rect x="389.3" y="581" width="5.2" height="15.0" fill="rgb(209,55,54)" rx="2" ry="2" />
<text  x="392.30" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;actix_http::extensions::Extensions&gt;&gt; (27 samples, 0.03%)</title><rect x="368.4" y="981" width="0.4" height="15.0" fill="rgb(216,62,44)" rx="2" ry="2" />
<text  x="371.44" y="991.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt;&gt; (49 samples, 0.05%)</title><rect x="124.4" y="885" width="0.6" height="15.0" fill="rgb(218,39,30)" rx="2" ry="2" />
<text  x="127.42" y="895.5" ></text>
</g>
<g >
<title>&lt;i32 as mio::sys::unix::IsMinusOne&gt;::is_minus_one (18 samples, 0.02%)</title><rect x="962.6" y="741" width="0.3" height="15.0" fill="rgb(249,60,37)" rx="2" ry="2" />
<text  x="965.63" y="751.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (1,293 samples, 1.39%)</title><rect x="418.9" y="869" width="16.3" height="15.0" fill="rgb(212,190,16)" rx="2" ry="2" />
<text  x="421.87" y="879.5" ></text>
</g>
<g >
<title>record_times (42 samples, 0.05%)</title><rect x="1108.0" y="213" width="0.5" height="15.0" fill="rgb(238,91,42)" rx="2" ry="2" />
<text  x="1110.96" y="223.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (10 samples, 0.01%)</title><rect x="1071.8" y="453" width="0.2" height="15.0" fill="rgb(224,135,42)" rx="2" ry="2" />
<text  x="1074.83" y="463.5" ></text>
</g>
<g >
<title>serde_json::number::Number::from_f64 (30 samples, 0.03%)</title><rect x="418.3" y="821" width="0.4" height="15.0" fill="rgb(233,113,45)" rx="2" ry="2" />
<text  x="421.33" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (27 samples, 0.03%)</title><rect x="105.9" y="789" width="0.4" height="15.0" fill="rgb(245,31,48)" rx="2" ry="2" />
<text  x="108.91" y="799.5" ></text>
</g>
<g >
<title>cpuacct_charge (129 samples, 0.14%)</title><rect x="923.1" y="533" width="1.6" height="15.0" fill="rgb(246,201,44)" rx="2" ry="2" />
<text  x="926.11" y="543.5" ></text>
</g>
<g >
<title>raw_spin_lock_irqsave (24 samples, 0.03%)</title><rect x="781.9" y="597" width="0.3" height="15.0" fill="rgb(250,129,38)" rx="2" ry="2" />
<text  x="784.93" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::extensions::Extensions&gt; (20 samples, 0.02%)</title><rect x="717.5" y="901" width="0.3" height="15.0" fill="rgb(245,145,26)" rx="2" ry="2" />
<text  x="720.53" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::cmp::PartialEq&lt;str&gt;&gt;::eq (75 samples, 0.08%)</title><rect x="356.4" y="949" width="1.0" height="15.0" fill="rgb(252,33,20)" rx="2" ry="2" />
<text  x="359.44" y="959.5" ></text>
</g>
<g >
<title>&lt;mio::poll::Iter as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="1087.0" y="1045" width="0.1" height="15.0" fill="rgb(205,73,20)" rx="2" ry="2" />
<text  x="1090.01" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (50 samples, 0.05%)</title><rect x="133.7" y="917" width="0.6" height="15.0" fill="rgb(210,163,25)" rx="2" ry="2" />
<text  x="136.71" y="927.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (3,321 samples, 3.56%)</title><rect x="185.9" y="821" width="42.0" height="15.0" fill="rgb(249,214,28)" rx="2" ry="2" />
<text  x="188.89" y="831.5" >cor..</text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (94 samples, 0.10%)</title><rect x="163.1" y="661" width="1.2" height="15.0" fill="rgb(249,12,52)" rx="2" ry="2" />
<text  x="166.14" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="357.4" y="1013" width="0.1" height="15.0" fill="rgb(230,39,41)" rx="2" ry="2" />
<text  x="360.39" y="1023.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (296 samples, 0.32%)</title><rect x="127.6" y="837" width="3.8" height="15.0" fill="rgb(206,221,10)" rx="2" ry="2" />
<text  x="130.65" y="847.5" ></text>
</g>
<g >
<title>actix_http::service::State&lt;T,S,B,X,U&gt;::poll (11 samples, 0.01%)</title><rect x="236.9" y="1221" width="0.1" height="15.0" fill="rgb(230,200,42)" rx="2" ry="2" />
<text  x="239.90" y="1231.5" ></text>
</g>
<g >
<title>actix_server::accept::Accept::accept (5,817 samples, 6.24%)</title><rect x="1087.1" y="1045" width="73.7" height="15.0" fill="rgb(250,228,54)" rx="2" ry="2" />
<text  x="1090.15" y="1055.5" >actix_se..</text>
</g>
<g >
<title>_ksize (30 samples, 0.03%)</title><rect x="294.5" y="837" width="0.4" height="15.0" fill="rgb(252,140,53)" rx="2" ry="2" />
<text  x="297.53" y="847.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set_epi8 (24 samples, 0.03%)</title><rect x="180.6" y="565" width="0.3" height="15.0" fill="rgb(252,188,35)" rx="2" ry="2" />
<text  x="183.62" y="575.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (770 samples, 0.83%)</title><rect x="515.4" y="725" width="9.7" height="15.0" fill="rgb(210,132,7)" rx="2" ry="2" />
<text  x="518.39" y="735.5" ></text>
</g>
<g >
<title>mio::poll::SetReadiness::set_readiness (1,741 samples, 1.87%)</title><rect x="1092.1" y="725" width="22.0" height="15.0" fill="rgb(223,9,36)" rx="2" ry="2" />
<text  x="1095.10" y="735.5" >m..</text>
</g>
<g >
<title>raw_spin_lock_irqsave (21 samples, 0.02%)</title><rect x="1099.6" y="261" width="0.3" height="15.0" fill="rgb(228,166,2)" rx="2" ry="2" />
<text  x="1102.59" y="271.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (518 samples, 0.56%)</title><rect x="1054.4" y="309" width="6.6" height="15.0" fill="rgb(218,118,23)" rx="2" ry="2" />
<text  x="1057.44" y="319.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::UnixReady::is_hup (28 samples, 0.03%)</title><rect x="709.8" y="901" width="0.4" height="15.0" fill="rgb(219,31,13)" rx="2" ry="2" />
<text  x="712.80" y="911.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Events::get (22 samples, 0.02%)</title><rect x="803.2" y="805" width="0.2" height="15.0" fill="rgb(212,83,25)" rx="2" ry="2" />
<text  x="806.17" y="815.5" ></text>
</g>
<g >
<title>do_epoll_wait (49 samples, 0.05%)</title><rect x="975.4" y="677" width="0.6" height="15.0" fill="rgb(219,11,36)" rx="2" ry="2" />
<text  x="978.36" y="687.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (7,350 samples, 7.88%)</title><rect x="855.6" y="645" width="93.1" height="15.0" fill="rgb(245,80,0)" rx="2" ry="2" />
<text  x="858.64" y="655.5" >schedule_hr..</text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next (10 samples, 0.01%)</title><rect x="96.4" y="805" width="0.1" height="15.0" fill="rgb(252,33,22)" rx="2" ry="2" />
<text  x="99.37" y="815.5" ></text>
</g>
<g >
<title>mio::net::tcp::TcpStream::peer_addr (680 samples, 0.73%)</title><rect x="504.4" y="789" width="8.6" height="15.0" fill="rgb(216,107,16)" rx="2" ry="2" />
<text  x="507.38" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (26 samples, 0.03%)</title><rect x="426.0" y="629" width="0.3" height="15.0" fill="rgb(232,153,9)" rx="2" ry="2" />
<text  x="429.01" y="639.5" ></text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (14 samples, 0.02%)</title><rect x="178.4" y="517" width="0.2" height="15.0" fill="rgb(224,166,23)" rx="2" ry="2" />
<text  x="181.41" y="527.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (19 samples, 0.02%)</title><rect x="178.8" y="613" width="0.3" height="15.0" fill="rgb(219,173,30)" rx="2" ry="2" />
<text  x="181.81" y="623.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::poll (770 samples, 0.83%)</title><rect x="515.4" y="885" width="9.7" height="15.0" fill="rgb(234,6,43)" rx="2" ry="2" />
<text  x="518.39" y="895.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (61 samples, 0.07%)</title><rect x="791.6" y="629" width="0.7" height="15.0" fill="rgb(211,200,45)" rx="2" ry="2" />
<text  x="794.56" y="639.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (40 samples, 0.04%)</title><rect x="92.4" y="821" width="0.5" height="15.0" fill="rgb(232,115,26)" rx="2" ry="2" />
<text  x="95.41" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;S&gt; as actix_service::Service&gt;::call (346 samples, 0.37%)</title><rect x="348.0" y="949" width="4.4" height="15.0" fill="rgb(207,225,11)" rx="2" ry="2" />
<text  x="350.99" y="959.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (258 samples, 0.28%)</title><rect x="161.1" y="725" width="3.2" height="15.0" fill="rgb(249,84,14)" rx="2" ry="2" />
<text  x="164.07" y="735.5" ></text>
</g>
<g >
<title>tcache_init (10 samples, 0.01%)</title><rect x="1083.9" y="1125" width="0.1" height="15.0" fill="rgb(233,84,37)" rx="2" ry="2" />
<text  x="1086.91" y="1135.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path (234 samples, 0.25%)</title><rect x="469.2" y="853" width="2.9" height="15.0" fill="rgb(205,170,30)" rx="2" ry="2" />
<text  x="472.17" y="863.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (200 samples, 0.21%)</title><rect x="207.4" y="613" width="2.6" height="15.0" fill="rgb(206,211,12)" rx="2" ry="2" />
<text  x="210.42" y="623.5" ></text>
</g>
<g >
<title>tokio::io::async_read::AsyncRead::poll_read_buf (288 samples, 0.31%)</title><rect x="233.3" y="1173" width="3.6" height="15.0" fill="rgb(245,194,37)" rx="2" ry="2" />
<text  x="236.26" y="1183.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::from_raw (25 samples, 0.03%)</title><rect x="1022.3" y="501" width="0.4" height="15.0" fill="rgb(219,130,32)" rx="2" ry="2" />
<text  x="1025.34" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::selector::selector_impl::JsonSelector&gt; (1,135 samples, 1.22%)</title><rect x="381.5" y="901" width="14.4" height="15.0" fill="rgb(210,217,35)" rx="2" ry="2" />
<text  x="384.49" y="911.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (113 samples, 0.12%)</title><rect x="385.2" y="613" width="1.4" height="15.0" fill="rgb(221,178,35)" rx="2" ry="2" />
<text  x="388.16" y="623.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::inner (62 samples, 0.07%)</title><rect x="787.8" y="805" width="0.8" height="15.0" fill="rgb(210,12,33)" rx="2" ry="2" />
<text  x="790.79" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths (314 samples, 0.34%)</title><rect x="53.0" y="853" width="4.0" height="15.0" fill="rgb(238,217,14)" rx="2" ry="2" />
<text  x="56.01" y="863.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (26 samples, 0.03%)</title><rect x="426.0" y="661" width="0.3" height="15.0" fill="rgb(209,123,29)" rx="2" ry="2" />
<text  x="429.01" y="671.5" ></text>
</g>
<g >
<title>get_next_ino (8 samples, 0.01%)</title><rect x="1129.8" y="789" width="0.1" height="15.0" fill="rgb(237,68,0)" rx="2" ry="2" />
<text  x="1132.77" y="799.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (770 samples, 0.83%)</title><rect x="515.4" y="1157" width="9.7" height="15.0" fill="rgb(252,157,34)" rx="2" ry="2" />
<text  x="518.39" y="1167.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (122 samples, 0.13%)</title><rect x="215.6" y="549" width="1.5" height="15.0" fill="rgb(243,212,41)" rx="2" ry="2" />
<text  x="218.59" y="559.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::tick::{{closure}} (770 samples, 0.83%)</title><rect x="515.4" y="917" width="9.7" height="15.0" fill="rgb(220,207,35)" rx="2" ry="2" />
<text  x="518.39" y="927.5" ></text>
</g>
<g >
<title>_fget_files (20 samples, 0.02%)</title><rect x="511.6" y="565" width="0.3" height="15.0" fill="rgb(249,121,6)" rx="2" ry="2" />
<text  x="514.62" y="575.5" ></text>
</g>
<g >
<title>_GI___libc_free (12 samples, 0.01%)</title><rect x="382.8" y="693" width="0.2" height="15.0" fill="rgb(215,84,23)" rx="2" ry="2" />
<text  x="385.83" y="703.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (11 samples, 0.01%)</title><rect x="91.5" y="693" width="0.1" height="15.0" fill="rgb(226,172,50)" rx="2" ry="2" />
<text  x="94.48" y="703.5" ></text>
</g>
<g >
<title>internal_add_timer (15 samples, 0.02%)</title><rect x="310.7" y="373" width="0.2" height="15.0" fill="rgb(210,61,28)" rx="2" ry="2" />
<text  x="313.73" y="383.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1,875 samples, 2.01%)</title><rect x="1163.2" y="885" width="23.8" height="15.0" fill="rgb(239,105,0)" rx="2" ry="2" />
<text  x="1166.23" y="895.5" >s..</text>
</g>
<g >
<title>core::sync::atomic::AtomicU64::load (31 samples, 0.03%)</title><rect x="1006.7" y="821" width="0.4" height="15.0" fill="rgb(236,43,30)" rx="2" ry="2" />
<text  x="1009.67" y="831.5" ></text>
</g>
<g >
<title>alloc::rc::Rc&lt;T&gt;::new (150 samples, 0.16%)</title><rect x="358.2" y="965" width="1.9" height="15.0" fill="rgb(247,85,13)" rx="2" ry="2" />
<text  x="361.18" y="975.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_f64 (387 samples, 0.42%)</title><rect x="430.1" y="677" width="4.9" height="15.0" fill="rgb(248,62,38)" rx="2" ry="2" />
<text  x="433.08" y="687.5" ></text>
</g>
<g >
<title>_update_load_avg_cfs_rq (17 samples, 0.02%)</title><rect x="1104.4" y="197" width="0.2" height="15.0" fill="rgb(223,27,34)" rx="2" ry="2" />
<text  x="1107.39" y="207.5" ></text>
</g>
<g >
<title>x86_pmu_disable (3,649 samples, 3.91%)</title><rect x="867.0" y="565" width="46.2" height="15.0" fill="rgb(241,1,10)" rx="2" ry="2" />
<text  x="870.03" y="575.5" >x86_..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (20 samples, 0.02%)</title><rect x="421.5" y="629" width="0.2" height="15.0" fill="rgb(239,32,9)" rx="2" ry="2" />
<text  x="424.46" y="639.5" ></text>
</g>
<g >
<title>_netif_receive_skb_one_core (3,849 samples, 4.13%)</title><rect x="595.6" y="453" width="48.8" height="15.0" fill="rgb(217,103,40)" rx="2" ry="2" />
<text  x="598.65" y="463.5" >_net..</text>
</g>
<g >
<title>_slab_alloc (11 samples, 0.01%)</title><rect x="258.5" y="549" width="0.2" height="15.0" fill="rgb(234,84,32)" rx="2" ry="2" />
<text  x="261.55" y="559.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (29 samples, 0.03%)</title><rect x="37.6" y="1045" width="0.4" height="15.0" fill="rgb(206,97,8)" rx="2" ry="2" />
<text  x="40.63" y="1055.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="181.7" y="757" width="0.3" height="15.0" fill="rgb(215,73,24)" rx="2" ry="2" />
<text  x="184.71" y="767.5" ></text>
</g>
<g >
<title>dentry_free (291 samples, 0.31%)</title><rect x="743.6" y="581" width="3.7" height="15.0" fill="rgb(228,79,10)" rx="2" ry="2" />
<text  x="746.59" y="591.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1,141 samples, 1.22%)</title><rect x="1164.3" y="789" width="14.5" height="15.0" fill="rgb(226,50,41)" rx="2" ry="2" />
<text  x="1167.34" y="799.5" ></text>
</g>
<g >
<title>actix_http::h1::decoder::HeaderIndex::record (27 samples, 0.03%)</title><rect x="27.0" y="1173" width="0.3" height="15.0" fill="rgb(206,78,20)" rx="2" ry="2" />
<text  x="29.99" y="1183.5" ></text>
</g>
<g >
<title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (86 samples, 0.09%)</title><rect x="1026.6" y="629" width="1.1" height="15.0" fill="rgb(210,97,31)" rx="2" ry="2" />
<text  x="1029.60" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt;&gt; (659 samples, 0.71%)</title><rect x="386.6" y="629" width="8.3" height="15.0" fill="rgb(250,108,48)" rx="2" ry="2" />
<text  x="389.59" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (43 samples, 0.05%)</title><rect x="153.2" y="613" width="0.6" height="15.0" fill="rgb(254,202,11)" rx="2" ry="2" />
<text  x="156.22" y="623.5" ></text>
</g>
<g >
<title>_release_sock (1,235 samples, 1.32%)</title><rect x="543.1" y="757" width="15.6" height="15.0" fill="rgb(243,40,52)" rx="2" ry="2" />
<text  x="546.07" y="767.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (81 samples, 0.09%)</title><rect x="1135.3" y="725" width="1.0" height="15.0" fill="rgb(221,164,52)" rx="2" ry="2" />
<text  x="1138.29" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;alloc::vec::Vec&lt;alloc::rc::Rc&lt;actix_web::request::HttpRequestInner&gt;&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="365.1" y="997" width="0.2" height="15.0" fill="rgb(252,157,31)" rx="2" ry="2" />
<text  x="368.07" y="1007.5" ></text>
</g>
<g >
<title>core::tuple::&lt;impl core::cmp::Ord for  (14 samples, 0.02%)</title><rect x="985.4" y="709" width="0.2" height="15.0" fill="rgb(233,155,31)" rx="2" ry="2" />
<text  x="988.44" y="719.5" ></text>
</g>
<g >
<title>int_free (10 samples, 0.01%)</title><rect x="137.3" y="821" width="0.1" height="15.0" fill="rgb(219,178,2)" rx="2" ry="2" />
<text  x="140.26" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;actix_rt::arbiter::CleanupPending,alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="1044.0" y="101" width="0.2" height="15.0" fill="rgb(223,92,6)" rx="2" ry="2" />
<text  x="1047.02" y="111.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (157 samples, 0.17%)</title><rect x="200.0" y="565" width="2.0" height="15.0" fill="rgb(221,106,21)" rx="2" ry="2" />
<text  x="202.98" y="575.5" ></text>
</g>
<g >
<title>tcache_get (23 samples, 0.02%)</title><rect x="12.9" y="917" width="0.3" height="15.0" fill="rgb(240,123,14)" rx="2" ry="2" />
<text  x="15.95" y="927.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_or (14 samples, 0.02%)</title><rect x="1115.7" y="869" width="0.2" height="15.0" fill="rgb(250,41,34)" rx="2" ry="2" />
<text  x="1118.72" y="879.5" ></text>
</g>
<g >
<title>tokio::util::slab::page::Shared&lt;T&gt;::get::{{closure}} (12 samples, 0.01%)</title><rect x="975.1" y="741" width="0.2" height="15.0" fill="rgb(226,35,41)" rx="2" ry="2" />
<text  x="978.15" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,395 samples, 1.50%)</title><rect x="245.7" y="645" width="17.7" height="15.0" fill="rgb(254,18,53)" rx="2" ry="2" />
<text  x="248.74" y="655.5" ></text>
</g>
<g >
<title>mio::net::tcp::TcpListener::accept_std (3,436 samples, 3.69%)</title><rect x="1116.7" y="1013" width="43.5" height="15.0" fill="rgb(247,193,16)" rx="2" ry="2" />
<text  x="1119.72" y="1023.5" >mio:..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (21 samples, 0.02%)</title><rect x="90.1" y="805" width="0.3" height="15.0" fill="rgb(248,97,34)" rx="2" ry="2" />
<text  x="93.10" y="815.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::decoder::MessageDecoder&lt;T&gt; as tokio_util::codec::decoder::Decoder&gt;::decode (66 samples, 0.07%)</title><rect x="66.1" y="1173" width="0.9" height="15.0" fill="rgb(214,205,45)" rx="2" ry="2" />
<text  x="69.12" y="1183.5" ></text>
</g>
<g >
<title>common_file_perm (10 samples, 0.01%)</title><rect x="1113.6" y="421" width="0.1" height="15.0" fill="rgb(244,155,4)" rx="2" ry="2" />
<text  x="1116.57" y="431.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="514.3" y="725" width="0.1" height="15.0" fill="rgb(229,148,37)" rx="2" ry="2" />
<text  x="517.28" y="735.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::handle_request (356 samples, 0.38%)</title><rect x="238.9" y="1157" width="4.5" height="15.0" fill="rgb(223,1,3)" rx="2" ry="2" />
<text  x="241.85" y="1167.5" ></text>
</g>
<g >
<title>std::panicking::try (20,985 samples, 22.51%)</title><rect x="529.3" y="1221" width="265.7" height="15.0" fill="rgb(209,177,33)" rx="2" ry="2" />
<text  x="532.33" y="1231.5" >std::panicking::try</text>
</g>
<g >
<title>int_malloc (152 samples, 0.16%)</title><rect x="275.7" y="917" width="1.9" height="15.0" fill="rgb(252,124,54)" rx="2" ry="2" />
<text  x="278.68" y="927.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (78 samples, 0.08%)</title><rect x="398.5" y="821" width="0.9" height="15.0" fill="rgb(224,179,53)" rx="2" ry="2" />
<text  x="401.45" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path (106 samples, 0.11%)</title><rect x="91.1" y="805" width="1.3" height="15.0" fill="rgb(227,38,12)" rx="2" ry="2" />
<text  x="94.07" y="815.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="530.2" y="1013" width="0.4" height="15.0" fill="rgb(215,187,45)" rx="2" ry="2" />
<text  x="533.18" y="1023.5" ></text>
</g>
<g >
<title>core::num::dec2flt::dec2flt (69 samples, 0.07%)</title><rect x="88.7" y="757" width="0.8" height="15.0" fill="rgb(215,9,2)" rx="2" ry="2" />
<text  x="91.67" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_token (20 samples, 0.02%)</title><rect x="116.8" y="917" width="0.3" height="15.0" fill="rgb(238,198,38)" rx="2" ry="2" />
<text  x="119.80" y="927.5" ></text>
</g>
<g >
<title>pick_next_task_idle (21 samples, 0.02%)</title><rect x="1185.7" y="821" width="0.3" height="15.0" fill="rgb(213,120,4)" rx="2" ry="2" />
<text  x="1188.73" y="831.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (13 samples, 0.01%)</title><rect x="335.3" y="949" width="0.1" height="15.0" fill="rgb(242,166,9)" rx="2" ry="2" />
<text  x="338.27" y="959.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (54 samples, 0.06%)</title><rect x="1021.5" y="565" width="0.7" height="15.0" fill="rgb(230,178,49)" rx="2" ry="2" />
<text  x="1024.53" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (31 samples, 0.03%)</title><rect x="467.7" y="1237" width="0.4" height="15.0" fill="rgb(229,88,39)" rx="2" ry="2" />
<text  x="470.73" y="1247.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (83 samples, 0.09%)</title><rect x="176.1" y="565" width="1.1" height="15.0" fill="rgb(215,141,41)" rx="2" ry="2" />
<text  x="179.12" y="575.5" ></text>
</g>
<g >
<title>fput_many (38 samples, 0.04%)</title><rect x="735.5" y="629" width="0.5" height="15.0" fill="rgb(247,124,21)" rx="2" ry="2" />
<text  x="738.55" y="639.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (8 samples, 0.01%)</title><rect x="940.3" y="549" width="0.1" height="15.0" fill="rgb(211,29,16)" rx="2" ry="2" />
<text  x="943.26" y="559.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (8 samples, 0.01%)</title><rect x="450.1" y="917" width="0.1" height="15.0" fill="rgb(215,23,23)" rx="2" ry="2" />
<text  x="453.06" y="927.5" ></text>
</g>
<g >
<title>aa_file_perm (22 samples, 0.02%)</title><rect x="1113.3" y="389" width="0.3" height="15.0" fill="rgb(233,219,29)" rx="2" ry="2" />
<text  x="1116.28" y="399.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::filter_next_with_str::{{closure}} (3,537 samples, 3.79%)</title><rect x="184.5" y="885" width="44.7" height="15.0" fill="rgb(216,99,19)" rx="2" ry="2" />
<text  x="187.47" y="895.5" >json..</text>
</g>
<g >
<title>tokio::time::driver::registration::Registration::poll_elapsed (70 samples, 0.08%)</title><rect x="237.0" y="1125" width="0.9" height="15.0" fill="rgb(219,7,10)" rx="2" ry="2" />
<text  x="240.04" y="1135.5" ></text>
</g>
<g >
<title>do_softirq (1,634 samples, 1.75%)</title><rect x="302.8" y="693" width="20.7" height="15.0" fill="rgb(254,228,49)" rx="2" ry="2" />
<text  x="305.78" y="703.5" ></text>
</g>
<g >
<title>core::task::wake::RawWaker::new (9 samples, 0.01%)</title><rect x="1026.8" y="581" width="0.1" height="15.0" fill="rgb(249,99,23)" rx="2" ry="2" />
<text  x="1029.78" y="591.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (18 samples, 0.02%)</title><rect x="974.9" y="693" width="0.2" height="15.0" fill="rgb(244,5,46)" rx="2" ry="2" />
<text  x="977.86" y="703.5" ></text>
</g>
<g >
<title>tokio::time::driver::Inner::elapsed (10 samples, 0.01%)</title><rect x="271.8" y="997" width="0.1" height="15.0" fill="rgb(224,60,27)" rx="2" ry="2" />
<text  x="274.82" y="1007.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (59 samples, 0.06%)</title><rect x="423.7" y="565" width="0.7" height="15.0" fill="rgb(217,181,22)" rx="2" ry="2" />
<text  x="426.67" y="575.5" ></text>
</g>
<g >
<title>rcu_core (10 samples, 0.01%)</title><rect x="940.4" y="469" width="0.1" height="15.0" fill="rgb(235,100,44)" rx="2" ry="2" />
<text  x="943.37" y="479.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (116 samples, 0.12%)</title><rect x="376.2" y="837" width="1.4" height="15.0" fill="rgb(211,178,44)" rx="2" ry="2" />
<text  x="379.17" y="847.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (8 samples, 0.01%)</title><rect x="1128.6" y="789" width="0.1" height="15.0" fill="rgb(212,154,0)" rx="2" ry="2" />
<text  x="1131.63" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_filter (31 samples, 0.03%)</title><rect x="240.6" y="917" width="0.4" height="15.0" fill="rgb(250,5,5)" rx="2" ry="2" />
<text  x="243.57" y="927.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::set_nonblocking (383 samples, 0.41%)</title><rect x="518.4" y="565" width="4.8" height="15.0" fill="rgb(213,147,52)" rx="2" ry="2" />
<text  x="521.38" y="575.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (356 samples, 0.38%)</title><rect x="238.9" y="1029" width="4.5" height="15.0" fill="rgb(224,171,12)" rx="2" ry="2" />
<text  x="241.85" y="1039.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (169 samples, 0.18%)</title><rect x="62.6" y="821" width="2.1" height="15.0" fill="rgb(210,82,21)" rx="2" ry="2" />
<text  x="65.60" y="831.5" ></text>
</g>
<g >
<title>int_malloc (219 samples, 0.23%)</title><rect x="84.2" y="741" width="2.8" height="15.0" fill="rgb(225,22,5)" rx="2" ry="2" />
<text  x="87.18" y="751.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (43 samples, 0.05%)</title><rect x="172.6" y="853" width="0.5" height="15.0" fill="rgb(249,189,46)" rx="2" ry="2" />
<text  x="175.60" y="863.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::enter::{{closure}} (770 samples, 0.83%)</title><rect x="515.4" y="1237" width="9.7" height="15.0" fill="rgb(238,21,24)" rx="2" ry="2" />
<text  x="518.39" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::selector::selector_impl::JsonSelector&gt; (14 samples, 0.02%)</title><rect x="240.1" y="901" width="0.2" height="15.0" fill="rgb(227,119,13)" rx="2" ry="2" />
<text  x="243.09" y="911.5" ></text>
</g>
<g >
<title>_pthread_mutex_unlock_usercnt (27 samples, 0.03%)</title><rect x="788.9" y="741" width="0.3" height="15.0" fill="rgb(242,156,26)" rx="2" ry="2" />
<text  x="791.90" y="751.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (15 samples, 0.02%)</title><rect x="945.1" y="581" width="0.2" height="15.0" fill="rgb(231,39,11)" rx="2" ry="2" />
<text  x="948.08" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Weak&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="274.5" y="901" width="0.2" height="15.0" fill="rgb(231,170,48)" rx="2" ry="2" />
<text  x="277.51" y="911.5" ></text>
</g>
<g >
<title>loopback_xmit (71 samples, 0.08%)</title><rect x="324.9" y="661" width="0.9" height="15.0" fill="rgb(223,174,38)" rx="2" ry="2" />
<text  x="327.92" y="671.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget (770 samples, 0.83%)</title><rect x="515.4" y="981" width="9.7" height="15.0" fill="rgb(239,182,31)" rx="2" ry="2" />
<text  x="518.39" y="991.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (44 samples, 0.05%)</title><rect x="1141.7" y="709" width="0.5" height="15.0" fill="rgb(229,1,23)" rx="2" ry="2" />
<text  x="1144.68" y="719.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (277 samples, 0.30%)</title><rect x="93.9" y="869" width="3.5" height="15.0" fill="rgb(223,113,41)" rx="2" ry="2" />
<text  x="96.90" y="879.5" ></text>
</g>
<g >
<title>actix_http::message::BoxedResponsePool::get_message (73 samples, 0.08%)</title><rect x="376.2" y="805" width="0.9" height="15.0" fill="rgb(231,169,25)" rx="2" ry="2" />
<text  x="379.21" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (53 samples, 0.06%)</title><rect x="120.7" y="933" width="0.7" height="15.0" fill="rgb(210,158,29)" rx="2" ry="2" />
<text  x="123.71" y="943.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.03%)</title><rect x="210.7" y="549" width="0.3" height="15.0" fill="rgb(222,159,21)" rx="2" ry="2" />
<text  x="213.71" y="559.5" ></text>
</g>
<g >
<title>switch_fpu_return (21 samples, 0.02%)</title><rect x="961.1" y="693" width="0.3" height="15.0" fill="rgb(226,213,48)" rx="2" ry="2" />
<text  x="964.10" y="703.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (30 samples, 0.03%)</title><rect x="530.9" y="949" width="0.4" height="15.0" fill="rgb(228,72,48)" rx="2" ry="2" />
<text  x="533.90" y="959.5" ></text>
</g>
<g >
<title>tokio::time::driver::Driver&lt;T&gt;::expiration_instant (48 samples, 0.05%)</title><rect x="983.0" y="853" width="0.6" height="15.0" fill="rgb(224,218,54)" rx="2" ry="2" />
<text  x="985.98" y="863.5" ></text>
</g>
<g >
<title>x86_pmu_disable_all (732 samples, 0.79%)</title><rect x="903.8" y="533" width="9.2" height="15.0" fill="rgb(223,127,18)" rx="2" ry="2" />
<text  x="906.75" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_json::map::Values as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="173.9" y="805" width="0.1" height="15.0" fill="rgb(241,8,25)" rx="2" ry="2" />
<text  x="176.93" y="815.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::Snapshot::has_join_waker (27 samples, 0.03%)</title><rect x="484.3" y="661" width="0.4" height="15.0" fill="rgb(250,192,7)" rx="2" ry="2" />
<text  x="487.34" y="671.5" ></text>
</g>
<g >
<title>mutex_lock (54 samples, 0.06%)</title><rect x="827.4" y="565" width="0.7" height="15.0" fill="rgb(242,92,9)" rx="2" ry="2" />
<text  x="830.44" y="575.5" ></text>
</g>
<g >
<title>_fput (2,225 samples, 2.39%)</title><rect x="739.9" y="629" width="28.2" height="15.0" fill="rgb(210,43,22)" rx="2" ry="2" />
<text  x="742.94" y="639.5" >_..</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="969.7" y="501" width="0.2" height="15.0" fill="rgb(250,145,19)" rx="2" ry="2" />
<text  x="972.70" y="511.5" ></text>
</g>
<g >
<title>read_tsc (35 samples, 0.04%)</title><rect x="321.0" y="421" width="0.4" height="15.0" fill="rgb(245,214,49)" rx="2" ry="2" />
<text  x="323.98" y="431.5" ></text>
</g>
<g >
<title>tokio::util::slab::addr::Address::page (15 samples, 0.02%)</title><rect x="790.8" y="757" width="0.2" height="15.0" fill="rgb(250,182,43)" rx="2" ry="2" />
<text  x="793.80" y="767.5" ></text>
</g>
<g >
<title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (59 samples, 0.06%)</title><rect x="970.4" y="597" width="0.7" height="15.0" fill="rgb(234,161,37)" rx="2" ry="2" />
<text  x="973.39" y="607.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (77 samples, 0.08%)</title><rect x="153.2" y="645" width="1.0" height="15.0" fill="rgb(213,64,24)" rx="2" ry="2" />
<text  x="156.22" y="655.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (16 samples, 0.02%)</title><rect x="973.2" y="597" width="0.2" height="15.0" fill="rgb(226,67,24)" rx="2" ry="2" />
<text  x="976.16" y="607.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (77 samples, 0.08%)</title><rect x="80.5" y="789" width="1.0" height="15.0" fill="rgb(251,119,9)" rx="2" ry="2" />
<text  x="83.52" y="799.5" ></text>
</g>
<g >
<title>_cgroup_bpf_run_filter_sock_addr (80 samples, 0.09%)</title><rect x="507.1" y="597" width="1.0" height="15.0" fill="rgb(205,41,39)" rx="2" ry="2" />
<text  x="510.09" y="607.5" ></text>
</g>
<g >
<title>down_write (15 samples, 0.02%)</title><rect x="767.6" y="597" width="0.2" height="15.0" fill="rgb(227,149,33)" rx="2" ry="2" />
<text  x="770.65" y="607.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="211.3" y="597" width="0.3" height="15.0" fill="rgb(239,198,45)" rx="2" ry="2" />
<text  x="214.27" y="607.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (11 samples, 0.01%)</title><rect x="96.1" y="821" width="0.2" height="15.0" fill="rgb(214,76,51)" rx="2" ry="2" />
<text  x="99.12" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (8 samples, 0.01%)</title><rect x="196.1" y="549" width="0.1" height="15.0" fill="rgb(233,207,4)" rx="2" ry="2" />
<text  x="199.12" y="559.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (52 samples, 0.06%)</title><rect x="202.0" y="613" width="0.6" height="15.0" fill="rgb(235,79,24)" rx="2" ry="2" />
<text  x="204.97" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths_dot (257 samples, 0.28%)</title><rect x="53.3" y="837" width="3.2" height="15.0" fill="rgb(240,58,17)" rx="2" ry="2" />
<text  x="56.27" y="847.5" ></text>
</g>
<g >
<title>&lt;tokio::time::driver::Driver&lt;T&gt; as tokio::park::Park&gt;::park (16,903 samples, 18.13%)</title><rect x="795.3" y="869" width="214.0" height="15.0" fill="rgb(208,7,37)" rx="2" ry="2" />
<text  x="798.32" y="879.5" >&lt;tokio::time::driver::Driver..</text>
</g>
<g >
<title>_rdl_alloc (9 samples, 0.01%)</title><rect x="277.6" y="933" width="0.1" height="15.0" fill="rgb(220,121,38)" rx="2" ry="2" />
<text  x="280.60" y="943.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (22 samples, 0.02%)</title><rect x="968.1" y="757" width="0.3" height="15.0" fill="rgb(228,45,38)" rx="2" ry="2" />
<text  x="971.13" y="767.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="143.0" y="581" width="0.2" height="15.0" fill="rgb(208,52,0)" rx="2" ry="2" />
<text  x="146.00" y="591.5" ></text>
</g>
<g >
<title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (247 samples, 0.26%)</title><rect x="102.4" y="805" width="3.1" height="15.0" fill="rgb(249,121,14)" rx="2" ry="2" />
<text  x="105.39" y="815.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (8 samples, 0.01%)</title><rect x="491.4" y="1045" width="0.1" height="15.0" fill="rgb(248,35,49)" rx="2" ry="2" />
<text  x="494.35" y="1055.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (75 samples, 0.08%)</title><rect x="68.5" y="901" width="0.9" height="15.0" fill="rgb(209,3,18)" rx="2" ry="2" />
<text  x="71.47" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt; (991 samples, 1.06%)</title><rect x="382.7" y="757" width="12.5" height="15.0" fill="rgb(218,0,25)" rx="2" ry="2" />
<text  x="385.68" y="767.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_mut (18 samples, 0.02%)</title><rect x="1160.3" y="1013" width="0.2" height="15.0" fill="rgb(221,160,26)" rx="2" ry="2" />
<text  x="1163.30" y="1023.5" ></text>
</g>
<g >
<title>tokio::time::driver::registration::Registration::new (640 samples, 0.69%)</title><rect x="266.6" y="1029" width="8.1" height="15.0" fill="rgb(225,226,34)" rx="2" ry="2" />
<text  x="269.61" y="1039.5" ></text>
</g>
<g >
<title>_rdl_alloc (36 samples, 0.04%)</title><rect x="77.5" y="805" width="0.4" height="15.0" fill="rgb(206,11,18)" rx="2" ry="2" />
<text  x="80.48" y="815.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::UnixReady::hup (10 samples, 0.01%)</title><rect x="464.1" y="965" width="0.1" height="15.0" fill="rgb(235,124,5)" rx="2" ry="2" />
<text  x="467.06" y="975.5" ></text>
</g>
<g >
<title>core::intrinsics::write_bytes (12 samples, 0.01%)</title><rect x="38.6" y="949" width="0.1" height="15.0" fill="rgb(221,228,31)" rx="2" ry="2" />
<text  x="41.60" y="959.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (29 samples, 0.03%)</title><rect x="832.7" y="629" width="0.4" height="15.0" fill="rgb(240,20,43)" rx="2" ry="2" />
<text  x="835.71" y="639.5" ></text>
</g>
<g >
<title>_x64_sys_sendto (20 samples, 0.02%)</title><rect x="538.5" y="869" width="0.3" height="15.0" fill="rgb(245,85,32)" rx="2" ry="2" />
<text  x="541.52" y="879.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (68 samples, 0.07%)</title><rect x="812.3" y="741" width="0.9" height="15.0" fill="rgb(243,214,1)" rx="2" ry="2" />
<text  x="815.31" y="751.5" ></text>
</g>
<g >
<title>lock_timer_base (17 samples, 0.02%)</title><rect x="331.1" y="773" width="0.2" height="15.0" fill="rgb(248,181,43)" rx="2" ry="2" />
<text  x="334.10" y="783.5" ></text>
</g>
<g >
<title>bpf_skops_write_hdr_op.sr. (8 samples, 0.01%)</title><rect x="620.8" y="245" width="0.1" height="15.0" fill="rgb(232,75,12)" rx="2" ry="2" />
<text  x="623.85" y="255.5" ></text>
</g>
<g >
<title>_rdl_alloc (46 samples, 0.05%)</title><rect x="359.4" y="885" width="0.6" height="15.0" fill="rgb(248,143,11)" rx="2" ry="2" />
<text  x="362.43" y="895.5" ></text>
</g>
<g >
<title>_tcp_close (203 samples, 0.22%)</title><rect x="763.2" y="549" width="2.6" height="15.0" fill="rgb(214,84,24)" rx="2" ry="2" />
<text  x="766.21" y="559.5" ></text>
</g>
<g >
<title>exc_page_fault (8 samples, 0.01%)</title><rect x="1083.9" y="1045" width="0.1" height="15.0" fill="rgb(221,76,47)" rx="2" ry="2" />
<text  x="1086.93" y="1055.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (43 samples, 0.05%)</title><rect x="997.2" y="805" width="0.6" height="15.0" fill="rgb(207,120,43)" rx="2" ry="2" />
<text  x="1000.21" y="815.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="229.8" y="901" width="0.2" height="15.0" fill="rgb(244,87,49)" rx="2" ry="2" />
<text  x="232.80" y="911.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (53 samples, 0.06%)</title><rect x="320.8" y="437" width="0.6" height="15.0" fill="rgb(240,33,41)" rx="2" ry="2" />
<text  x="323.75" y="447.5" ></text>
</g>
<g >
<title>&lt;actix_server::worker::Worker as core::future::future::Future&gt;::poll (1,573 samples, 1.69%)</title><rect x="244.1" y="821" width="19.9" height="15.0" fill="rgb(238,108,46)" rx="2" ry="2" />
<text  x="247.07" y="831.5" ></text>
</g>
<g >
<title>bytes::bytes::static_drop (27 samples, 0.03%)</title><rect x="361.3" y="917" width="0.4" height="15.0" fill="rgb(249,198,5)" rx="2" ry="2" />
<text  x="364.35" y="927.5" ></text>
</g>
<g >
<title>cond_resched (8 samples, 0.01%)</title><rect x="768.2" y="629" width="0.1" height="15.0" fill="rgb(207,29,47)" rx="2" ry="2" />
<text  x="771.21" y="639.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (278 samples, 0.30%)</title><rect x="198.4" y="613" width="3.6" height="15.0" fill="rgb(232,146,2)" rx="2" ry="2" />
<text  x="201.45" y="623.5" ></text>
</g>
<g >
<title>_d_alloc (275 samples, 0.30%)</title><rect x="1145.1" y="757" width="3.4" height="15.0" fill="rgb(253,71,47)" rx="2" ry="2" />
<text  x="1148.06" y="767.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (58 samples, 0.06%)</title><rect x="110.4" y="837" width="0.7" height="15.0" fill="rgb(222,165,20)" rx="2" ry="2" />
<text  x="113.38" y="847.5" ></text>
</g>
<g >
<title>raw_spin_lock (14 samples, 0.02%)</title><rect x="602.6" y="357" width="0.2" height="15.0" fill="rgb(245,47,16)" rx="2" ry="2" />
<text  x="605.59" y="367.5" ></text>
</g>
<g >
<title>lockref_put_return (10 samples, 0.01%)</title><rect x="1157.5" y="773" width="0.1" height="15.0" fill="rgb(208,33,16)" rx="2" ry="2" />
<text  x="1160.51" y="783.5" ></text>
</g>
<g >
<title>&lt;actix_web::app_service::AppInitService&lt;T,B&gt; as actix_service::Service&gt;::call (1,809 samples, 1.94%)</title><rect x="345.9" y="1029" width="22.9" height="15.0" fill="rgb(241,113,2)" rx="2" ry="2" />
<text  x="348.88" y="1039.5" >&lt;..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (168 samples, 0.18%)</title><rect x="62.6" y="805" width="2.1" height="15.0" fill="rgb(210,75,41)" rx="2" ry="2" />
<text  x="65.60" y="815.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (159 samples, 0.17%)</title><rect x="378.1" y="853" width="2.0" height="15.0" fill="rgb(221,174,24)" rx="2" ry="2" />
<text  x="381.07" y="863.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.03%)</title><rect x="176.4" y="501" width="0.4" height="15.0" fill="rgb(219,196,7)" rx="2" ry="2" />
<text  x="179.38" y="511.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (23 samples, 0.02%)</title><rect x="766.8" y="549" width="0.3" height="15.0" fill="rgb(229,24,16)" rx="2" ry="2" />
<text  x="769.81" y="559.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_none (9 samples, 0.01%)</title><rect x="266.1" y="1013" width="0.2" height="15.0" fill="rgb(209,197,48)" rx="2" ry="2" />
<text  x="269.14" y="1023.5" ></text>
</g>
<g >
<title>bpf_skops_write_hdr_op.sr. (14 samples, 0.02%)</title><rect x="659.5" y="709" width="0.1" height="15.0" fill="rgb(214,86,49)" rx="2" ry="2" />
<text  x="662.46" y="719.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (110 samples, 0.12%)</title><rect x="252.2" y="501" width="1.4" height="15.0" fill="rgb(225,135,44)" rx="2" ry="2" />
<text  x="255.23" y="511.5" ></text>
</g>
<g >
<title>set_next_task_idle (16 samples, 0.02%)</title><rect x="1185.8" y="805" width="0.2" height="15.0" fill="rgb(222,90,9)" rx="2" ry="2" />
<text  x="1188.80" y="815.5" ></text>
</g>
<g >
<title>raw_spin_lock_bh (13 samples, 0.01%)</title><rect x="288.2" y="901" width="0.2" height="15.0" fill="rgb(232,11,12)" rx="2" ry="2" />
<text  x="291.21" y="911.5" ></text>
</g>
<g >
<title>security_inode_free (31 samples, 0.03%)</title><rect x="752.0" y="501" width="0.4" height="15.0" fill="rgb(217,183,50)" rx="2" ry="2" />
<text  x="755.03" y="511.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::is_empty (10 samples, 0.01%)</title><rect x="193.4" y="645" width="0.1" height="15.0" fill="rgb(205,213,6)" rx="2" ry="2" />
<text  x="196.41" y="655.5" ></text>
</g>
<g >
<title>tokio::runtime::task::Task&lt;S&gt;::from_raw (17 samples, 0.02%)</title><rect x="973.6" y="725" width="0.2" height="15.0" fill="rgb(223,20,45)" rx="2" ry="2" />
<text  x="976.58" y="735.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (9 samples, 0.01%)</title><rect x="1070.3" y="421" width="0.2" height="15.0" fill="rgb(224,124,43)" rx="2" ry="2" />
<text  x="1073.34" y="431.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::whitespace (9 samples, 0.01%)</title><rect x="89.9" y="725" width="0.1" height="15.0" fill="rgb(205,175,9)" rx="2" ry="2" />
<text  x="92.89" y="735.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (606 samples, 0.65%)</title><rect x="472.9" y="629" width="7.7" height="15.0" fill="rgb(214,137,35)" rx="2" ry="2" />
<text  x="475.88" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.03%)</title><rect x="424.4" y="645" width="0.4" height="15.0" fill="rgb(208,191,26)" rx="2" ry="2" />
<text  x="427.43" y="655.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::filter (1,006 samples, 1.08%)</title><rect x="53.0" y="965" width="12.7" height="15.0" fill="rgb(220,7,47)" rx="2" ry="2" />
<text  x="56.01" y="975.5" ></text>
</g>
<g >
<title>raw_spin_lock_bh (35 samples, 0.04%)</title><rect x="1125.7" y="773" width="0.4" height="15.0" fill="rgb(238,159,17)" rx="2" ry="2" />
<text  x="1128.68" y="783.5" ></text>
</g>
<g >
<title>_tcp_transmit_skb (6,329 samples, 6.79%)</title><rect x="578.9" y="709" width="80.2" height="15.0" fill="rgb(215,37,40)" rx="2" ry="2" />
<text  x="581.95" y="719.5" >_tcp_tran..</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (19 samples, 0.02%)</title><rect x="82.6" y="773" width="0.2" height="15.0" fill="rgb(218,73,16)" rx="2" ry="2" />
<text  x="85.60" y="783.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (15 samples, 0.02%)</title><rect x="610.7" y="325" width="0.2" height="15.0" fill="rgb(207,29,50)" rx="2" ry="2" />
<text  x="613.75" y="335.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (14 samples, 0.02%)</title><rect x="484.2" y="581" width="0.1" height="15.0" fill="rgb(214,34,16)" rx="2" ry="2" />
<text  x="487.16" y="591.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::is_empty (26 samples, 0.03%)</title><rect x="675.0" y="949" width="0.3" height="15.0" fill="rgb(240,204,2)" rx="2" ry="2" />
<text  x="677.96" y="959.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpListener::accept (3,403 samples, 3.65%)</title><rect x="1117.1" y="965" width="43.1" height="15.0" fill="rgb(231,0,1)" rx="2" ry="2" />
<text  x="1120.14" y="975.5" >std:..</text>
</g>
<g >
<title>httparse::parse_uri (113 samples, 0.12%)</title><rect x="50.7" y="1157" width="1.4" height="15.0" fill="rgb(205,25,50)" rx="2" ry="2" />
<text  x="53.68" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,652 samples, 11.43%)</title><rect x="538.9" y="869" width="134.8" height="15.0" fill="rgb(205,145,6)" rx="2" ry="2" />
<text  x="541.88" y="879.5" >do_syscall_64</text>
</g>
<g >
<title>mio::sys::unix::ready::UnixReady::error (10 samples, 0.01%)</title><rect x="675.7" y="933" width="0.1" height="15.0" fill="rgb(248,181,17)" rx="2" ry="2" />
<text  x="678.67" y="943.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_filter (36 samples, 0.04%)</title><rect x="417.4" y="821" width="0.4" height="15.0" fill="rgb(223,42,42)" rx="2" ry="2" />
<text  x="420.39" y="831.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="119.2" y="725" width="0.2" height="15.0" fill="rgb(221,150,23)" rx="2" ry="2" />
<text  x="122.20" y="735.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (17 samples, 0.02%)</title><rect x="358.0" y="933" width="0.2" height="15.0" fill="rgb(238,68,50)" rx="2" ry="2" />
<text  x="360.97" y="943.5" ></text>
</g>
<g >
<title>lock_sock_nested (15 samples, 0.02%)</title><rect x="1125.5" y="773" width="0.2" height="15.0" fill="rgb(234,127,50)" rx="2" ry="2" />
<text  x="1128.49" y="783.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,325 samples, 5.71%)</title><rect x="1016.4" y="789" width="67.4" height="15.0" fill="rgb(228,89,32)" rx="2" ry="2" />
<text  x="1019.41" y="799.5" >&lt;core::..</text>
</g>
<g >
<title>apparmor_sock_graft (33 samples, 0.04%)</title><rect x="1127.1" y="773" width="0.4" height="15.0" fill="rgb(247,216,12)" rx="2" ry="2" />
<text  x="1130.11" y="783.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="503.6" y="1077" width="0.1" height="15.0" fill="rgb(210,130,30)" rx="2" ry="2" />
<text  x="506.59" y="1087.5" ></text>
</g>
<g >
<title>release_sock (10 samples, 0.01%)</title><rect x="1126.9" y="789" width="0.2" height="15.0" fill="rgb(234,87,42)" rx="2" ry="2" />
<text  x="1129.94" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (53 samples, 0.06%)</title><rect x="126.4" y="789" width="0.6" height="15.0" fill="rgb(241,95,14)" rx="2" ry="2" />
<text  x="129.37" y="799.5" ></text>
</g>
<g >
<title>tokio::io::driver::platform::sys::hup (10 samples, 0.01%)</title><rect x="338.8" y="981" width="0.1" height="15.0" fill="rgb(228,165,51)" rx="2" ry="2" />
<text  x="341.77" y="991.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="147.2" y="709" width="0.2" height="15.0" fill="rgb(217,179,21)" rx="2" ry="2" />
<text  x="150.15" y="719.5" ></text>
</g>
<g >
<title>actix_http::h1::encoder::MessageEncoder&lt;T&gt;::encode (635 samples, 0.68%)</title><rect x="441.2" y="1013" width="8.0" height="15.0" fill="rgb(244,98,5)" rx="2" ry="2" />
<text  x="444.19" y="1023.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (54 samples, 0.06%)</title><rect x="639.3" y="309" width="0.7" height="15.0" fill="rgb(237,125,23)" rx="2" ry="2" />
<text  x="642.28" y="319.5" ></text>
</g>
<g >
<title>alloc::rc::is_dangling (15 samples, 0.02%)</title><rect x="771.1" y="773" width="0.1" height="15.0" fill="rgb(246,150,54)" rx="2" ry="2" />
<text  x="774.05" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="148.4" y="853" width="0.1" height="15.0" fill="rgb(241,170,27)" rx="2" ry="2" />
<text  x="151.38" y="863.5" ></text>
</g>
<g >
<title>http::method::Method::from_bytes (64 samples, 0.07%)</title><rect x="45.4" y="1173" width="0.8" height="15.0" fill="rgb(238,85,3)" rx="2" ry="2" />
<text  x="48.39" y="1183.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.02%)</title><rect x="129.0" y="693" width="0.2" height="15.0" fill="rgb(219,162,32)" rx="2" ry="2" />
<text  x="131.98" y="703.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (38 samples, 0.04%)</title><rect x="211.6" y="581" width="0.5" height="15.0" fill="rgb(208,89,3)" rx="2" ry="2" />
<text  x="214.64" y="591.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (23 samples, 0.02%)</title><rect x="707.3" y="821" width="0.2" height="15.0" fill="rgb(216,122,15)" rx="2" ry="2" />
<text  x="710.26" y="831.5" ></text>
</g>
<g >
<title>std::os::imp::unix::net::raw_fd::&lt;impl std::os::imp::unix::io::AsRawFd for std::net::tcp::TcpStream&gt;::as_raw_fd (89 samples, 0.10%)</title><rect x="513.1" y="693" width="1.1" height="15.0" fill="rgb(244,158,24)" rx="2" ry="2" />
<text  x="516.06" y="703.5" ></text>
</g>
<g >
<title>tokio::time::driver::entry::Entry::when_internal (16 samples, 0.02%)</title><rect x="1007.1" y="837" width="0.2" height="15.0" fill="rgb(237,164,17)" rx="2" ry="2" />
<text  x="1010.06" y="847.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (161 samples, 0.17%)</title><rect x="79.5" y="821" width="2.1" height="15.0" fill="rgb(236,82,33)" rx="2" ry="2" />
<text  x="82.55" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (73 samples, 0.08%)</title><rect x="1071.3" y="533" width="0.9" height="15.0" fill="rgb(234,131,12)" rx="2" ry="2" />
<text  x="1074.26" y="543.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="143.0" y="597" width="0.2" height="15.0" fill="rgb(251,64,37)" rx="2" ry="2" />
<text  x="146.00" y="607.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (280 samples, 0.30%)</title><rect x="473.4" y="549" width="3.5" height="15.0" fill="rgb(210,216,9)" rx="2" ry="2" />
<text  x="476.36" y="559.5" ></text>
</g>
<g >
<title>_vdso_clock_gettime (214 samples, 0.23%)</title><rect x="963.7" y="709" width="2.7" height="15.0" fill="rgb(253,146,43)" rx="2" ry="2" />
<text  x="966.73" y="719.5" ></text>
</g>
<g >
<title>update_cfs_group (52 samples, 0.06%)</title><rect x="928.3" y="565" width="0.7" height="15.0" fill="rgb(212,133,2)" rx="2" ry="2" />
<text  x="931.32" y="575.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (13 samples, 0.01%)</title><rect x="1189.4" y="1237" width="0.2" height="15.0" fill="rgb(225,122,27)" rx="2" ry="2" />
<text  x="1192.39" y="1247.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (43 samples, 0.05%)</title><rect x="1024.4" y="661" width="0.6" height="15.0" fill="rgb(210,111,23)" rx="2" ry="2" />
<text  x="1027.44" y="671.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::other (16 samples, 0.02%)</title><rect x="88.0" y="741" width="0.2" height="15.0" fill="rgb(240,104,54)" rx="2" ry="2" />
<text  x="91.04" y="751.5" ></text>
</g>
<g >
<title>_copy_skb_header (25 samples, 0.03%)</title><rect x="657.8" y="661" width="0.3" height="15.0" fill="rgb(240,46,43)" rx="2" ry="2" />
<text  x="660.79" y="671.5" ></text>
</g>
<g >
<title>_shutdown (4,105 samples, 4.40%)</title><rect x="284.3" y="1013" width="52.0" height="15.0" fill="rgb(215,23,31)" rx="2" ry="2" />
<text  x="287.32" y="1023.5" >_shut..</text>
</g>
<g >
<title>ep_poll (1,945 samples, 2.09%)</title><rect x="1162.4" y="901" width="24.6" height="15.0" fill="rgb(221,12,3)" rx="2" ry="2" />
<text  x="1165.38" y="911.5" >e..</text>
</g>
<g >
<title>http::header::value::HeaderValue::from_maybe_shared_unchecked (123 samples, 0.13%)</title><rect x="36.0" y="1157" width="1.6" height="15.0" fill="rgb(240,208,5)" rx="2" ry="2" />
<text  x="39.00" y="1167.5" ></text>
</g>
<g >
<title>actix_router::url::Url::update::{{closure}} (127 samples, 0.14%)</title><rect x="363.2" y="965" width="1.6" height="15.0" fill="rgb(220,174,33)" rx="2" ry="2" />
<text  x="366.18" y="975.5" ></text>
</g>
<g >
<title>tokio::io::driver::platform::sys::error (20 samples, 0.02%)</title><rect x="675.5" y="949" width="0.3" height="15.0" fill="rgb(220,190,1)" rx="2" ry="2" />
<text  x="678.55" y="959.5" ></text>
</g>
<g >
<title>_put_user_nocheck_4 (15 samples, 0.02%)</title><rect x="1122.0" y="805" width="0.2" height="15.0" fill="rgb(234,179,45)" rx="2" ry="2" />
<text  x="1125.05" y="815.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (60 samples, 0.06%)</title><rect x="216.4" y="501" width="0.7" height="15.0" fill="rgb(224,145,28)" rx="2" ry="2" />
<text  x="219.37" y="511.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (13 samples, 0.01%)</title><rect x="328.2" y="821" width="0.1" height="15.0" fill="rgb(254,82,17)" rx="2" ry="2" />
<text  x="331.18" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (34 samples, 0.04%)</title><rect x="236.4" y="1013" width="0.4" height="15.0" fill="rgb(212,9,32)" rx="2" ry="2" />
<text  x="239.41" y="1023.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::freeze (15 samples, 0.02%)</title><rect x="42.8" y="1173" width="0.2" height="15.0" fill="rgb(205,48,38)" rx="2" ry="2" />
<text  x="45.81" y="1183.5" ></text>
</g>
<g >
<title>kfree (170 samples, 0.18%)</title><rect x="694.9" y="629" width="2.1" height="15.0" fill="rgb(214,170,26)" rx="2" ry="2" />
<text  x="697.88" y="639.5" ></text>
</g>
<g >
<title>std::panicking::try (770 samples, 0.83%)</title><rect x="515.4" y="837" width="9.7" height="15.0" fill="rgb(223,28,48)" rx="2" ry="2" />
<text  x="518.39" y="847.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (86 samples, 0.09%)</title><rect x="109.2" y="805" width="1.1" height="15.0" fill="rgb(227,209,37)" rx="2" ry="2" />
<text  x="112.23" y="815.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::poll (1,573 samples, 1.69%)</title><rect x="244.1" y="1029" width="19.9" height="15.0" fill="rgb(209,182,2)" rx="2" ry="2" />
<text  x="247.07" y="1039.5" ></text>
</g>
<g >
<title>tokio::time::driver::entry::Entry::load_state (53 samples, 0.06%)</title><rect x="1006.4" y="837" width="0.7" height="15.0" fill="rgb(231,15,27)" rx="2" ry="2" />
<text  x="1009.39" y="847.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="177.5" y="485" width="0.3" height="15.0" fill="rgb(212,3,9)" rx="2" ry="2" />
<text  x="180.55" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (25 samples, 0.03%)</title><rect x="1022.3" y="485" width="0.4" height="15.0" fill="rgb(231,172,40)" rx="2" ry="2" />
<text  x="1025.34" y="495.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::json_path (1,006 samples, 1.08%)</title><rect x="53.0" y="1029" width="12.7" height="15.0" fill="rgb(237,215,49)" rx="2" ry="2" />
<text  x="56.01" y="1039.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (26 samples, 0.03%)</title><rect x="166.5" y="869" width="0.3" height="15.0" fill="rgb(207,44,40)" rx="2" ry="2" />
<text  x="169.51" y="879.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (615 samples, 0.66%)</title><rect x="472.8" y="645" width="7.8" height="15.0" fill="rgb(212,116,31)" rx="2" ry="2" />
<text  x="475.77" y="655.5" ></text>
</g>
<g >
<title>core::mem::take (19 samples, 0.02%)</title><rect x="116.8" y="869" width="0.3" height="15.0" fill="rgb(215,223,48)" rx="2" ry="2" />
<text  x="119.81" y="879.5" ></text>
</g>
<g >
<title>_local_bh_enable_ip (4,373 samples, 4.69%)</title><rect x="590.9" y="581" width="55.3" height="15.0" fill="rgb(212,106,3)" rx="2" ry="2" />
<text  x="593.89" y="591.5" >_loca..</text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_read_ready (136 samples, 0.15%)</title><rect x="464.2" y="981" width="1.7" height="15.0" fill="rgb(215,201,31)" rx="2" ry="2" />
<text  x="467.19" y="991.5" ></text>
</g>
<g >
<title>actix_http::config::ServiceConfig::set_date (125 samples, 0.13%)</title><rect x="445.8" y="981" width="1.6" height="15.0" fill="rgb(247,47,37)" rx="2" ry="2" />
<text  x="448.79" y="991.5" ></text>
</g>
<g >
<title>_srcu_read_lock (23 samples, 0.02%)</title><rect x="751.0" y="453" width="0.3" height="15.0" fill="rgb(248,23,29)" rx="2" ry="2" />
<text  x="754.00" y="463.5" ></text>
</g>
<g >
<title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (8 samples, 0.01%)</title><rect x="236.3" y="1013" width="0.1" height="15.0" fill="rgb(238,96,19)" rx="2" ry="2" />
<text  x="239.31" y="1023.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (8 samples, 0.01%)</title><rect x="706.5" y="789" width="0.1" height="15.0" fill="rgb(222,145,28)" rx="2" ry="2" />
<text  x="709.50" y="799.5" ></text>
</g>
<g >
<title>move_addr_to_user (94 samples, 0.10%)</title><rect x="509.4" y="613" width="1.2" height="15.0" fill="rgb(208,11,11)" rx="2" ry="2" />
<text  x="512.39" y="623.5" ></text>
</g>
<g >
<title>_wake_up (148 samples, 0.16%)</title><rect x="317.2" y="389" width="1.8" height="15.0" fill="rgb(250,219,16)" rx="2" ry="2" />
<text  x="320.16" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="358.0" y="901" width="0.2" height="15.0" fill="rgb(234,86,13)" rx="2" ry="2" />
<text  x="360.97" y="911.5" ></text>
</g>
<g >
<title>_perf_event_task_sched_out (1,191 samples, 1.28%)</title><rect x="1163.9" y="821" width="15.0" height="15.0" fill="rgb(229,9,5)" rx="2" ry="2" />
<text  x="1166.86" y="831.5" ></text>
</g>
<g >
<title>_tcp_select_window (17 samples, 0.02%)</title><rect x="298.5" y="821" width="0.3" height="15.0" fill="rgb(236,104,11)" rx="2" ry="2" />
<text  x="301.54" y="831.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (78 samples, 0.08%)</title><rect x="242.4" y="981" width="1.0" height="15.0" fill="rgb(214,176,31)" rx="2" ry="2" />
<text  x="245.37" y="991.5" ></text>
</g>
<g >
<title>ryu::buffer::Buffer::format_finite (364 samples, 0.39%)</title><rect x="430.1" y="661" width="4.6" height="15.0" fill="rgb(238,31,1)" rx="2" ry="2" />
<text  x="433.08" y="671.5" ></text>
</g>
<g >
<title>ksoftirqd_running (53 samples, 0.06%)</title><rect x="645.6" y="565" width="0.6" height="15.0" fill="rgb(241,28,11)" rx="2" ry="2" />
<text  x="648.57" y="575.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::poll_read_priv (2,417 samples, 2.59%)</title><rect x="682.7" y="949" width="30.6" height="15.0" fill="rgb(242,151,13)" rx="2" ry="2" />
<text  x="685.71" y="959.5" >to..</text>
</g>
<g >
<title>std::os::imp::unix::net::raw_fd::&lt;impl std::os::imp::unix::io::AsRawFd for std::net::tcp::TcpStream&gt;::as_raw_fd (110 samples, 0.12%)</title><rect x="786.0" y="741" width="1.4" height="15.0" fill="rgb(214,72,43)" rx="2" ry="2" />
<text  x="789.00" y="751.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="173.9" y="773" width="0.1" height="15.0" fill="rgb(248,226,44)" rx="2" ry="2" />
<text  x="176.93" y="783.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (16 samples, 0.02%)</title><rect x="38.4" y="1093" width="0.2" height="15.0" fill="rgb(246,128,45)" rx="2" ry="2" />
<text  x="41.37" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_empty_or_deleted (21 samples, 0.02%)</title><rect x="224.7" y="613" width="0.3" height="15.0" fill="rgb(209,166,42)" rx="2" ry="2" />
<text  x="227.71" y="623.5" ></text>
</g>
<g >
<title>do_softirq (19 samples, 0.02%)</title><rect x="653.9" y="581" width="0.2" height="15.0" fill="rgb(219,204,32)" rx="2" ry="2" />
<text  x="656.87" y="591.5" ></text>
</g>
<g >
<title>actix_http::config::DateService::check_date (42 samples, 0.05%)</title><rect x="265.7" y="1029" width="0.6" height="15.0" fill="rgb(208,104,31)" rx="2" ry="2" />
<text  x="268.73" y="1039.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths (160 samples, 0.17%)</title><rect x="397.4" y="853" width="2.0" height="15.0" fill="rgb(212,35,2)" rx="2" ry="2" />
<text  x="400.41" y="863.5" ></text>
</g>
<g >
<title>_ip_finish_output (20 samples, 0.02%)</title><rect x="585.9" y="629" width="0.3" height="15.0" fill="rgb(239,60,29)" rx="2" ry="2" />
<text  x="588.90" y="639.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (15 samples, 0.02%)</title><rect x="503.2" y="1157" width="0.2" height="15.0" fill="rgb(245,159,28)" rx="2" ry="2" />
<text  x="506.18" y="1167.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (584 samples, 0.63%)</title><rect x="173.9" y="837" width="7.4" height="15.0" fill="rgb(213,14,50)" rx="2" ry="2" />
<text  x="176.93" y="847.5" ></text>
</g>
<g >
<title>_update_load_avg_cfs_rq (12 samples, 0.01%)</title><rect x="1181.6" y="757" width="0.1" height="15.0" fill="rgb(221,44,23)" rx="2" ry="2" />
<text  x="1184.56" y="767.5" ></text>
</g>
<g >
<title>&lt;actix_http::service::HttpServiceHandlerResponse&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (13,522 samples, 14.51%)</title><rect x="65.9" y="1237" width="171.1" height="15.0" fill="rgb(219,72,19)" rx="2" ry="2" />
<text  x="68.87" y="1247.5" >&lt;actix_http::service::..</text>
</g>
<g >
<title>enqueue_timer (9 samples, 0.01%)</title><rect x="310.8" y="357" width="0.1" height="15.0" fill="rgb(227,143,7)" rx="2" ry="2" />
<text  x="313.80" y="367.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (266 samples, 0.29%)</title><rect x="662.6" y="693" width="3.4" height="15.0" fill="rgb(245,167,39)" rx="2" ry="2" />
<text  x="665.58" y="703.5" ></text>
</g>
<g >
<title>&lt;actix_web::request::HttpRequest as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="435.5" y="949" width="0.1" height="15.0" fill="rgb(230,147,14)" rx="2" ry="2" />
<text  x="438.48" y="959.5" ></text>
</g>
<g >
<title>update_load_avg (47 samples, 0.05%)</title><rect x="1181.3" y="773" width="0.6" height="15.0" fill="rgb(217,36,19)" rx="2" ry="2" />
<text  x="1184.29" y="783.5" ></text>
</g>
<g >
<title>tokio::util::wake::clone_arc_raw (74 samples, 0.08%)</title><rect x="1026.8" y="597" width="0.9" height="15.0" fill="rgb(244,33,12)" rx="2" ry="2" />
<text  x="1029.76" y="607.5" ></text>
</g>
<g >
<title>mid_memalign (277 samples, 0.30%)</title><rect x="268.2" y="853" width="3.5" height="15.0" fill="rgb(215,105,15)" rx="2" ry="2" />
<text  x="271.21" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (44 samples, 0.05%)</title><rect x="231.3" y="901" width="0.6" height="15.0" fill="rgb(253,99,41)" rx="2" ry="2" />
<text  x="234.32" y="911.5" ></text>
</g>
<g >
<title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (33 samples, 0.04%)</title><rect x="1115.9" y="789" width="0.5" height="15.0" fill="rgb(214,222,54)" rx="2" ry="2" />
<text  x="1118.95" y="799.5" ></text>
</g>
<g >
<title>bictcp_acked (22 samples, 0.02%)</title><rect x="550.8" y="677" width="0.3" height="15.0" fill="rgb(224,86,34)" rx="2" ry="2" />
<text  x="553.81" y="687.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set1_epi8 (31 samples, 0.03%)</title><rect x="211.7" y="549" width="0.4" height="15.0" fill="rgb(236,191,54)" rx="2" ry="2" />
<text  x="214.73" y="559.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (23 samples, 0.02%)</title><rect x="524.1" y="453" width="0.3" height="15.0" fill="rgb(243,128,32)" rx="2" ry="2" />
<text  x="527.10" y="463.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll1 (12,676 samples, 13.60%)</title><rect x="806.0" y="805" width="160.5" height="15.0" fill="rgb(232,54,21)" rx="2" ry="2" />
<text  x="808.99" y="815.5" >mio::poll::Poll::poll1</text>
</g>
<g >
<title>sock_def_readable (11 samples, 0.01%)</title><rect x="633.8" y="293" width="0.2" height="15.0" fill="rgb(224,99,48)" rx="2" ry="2" />
<text  x="636.81" y="303.5" ></text>
</g>
<g >
<title>&lt;actix_http::body::ResponseBody&lt;B&gt; as actix_http::body::MessageBody&gt;::poll_next (39 samples, 0.04%)</title><rect x="455.5" y="1061" width="0.5" height="15.0" fill="rgb(247,10,6)" rx="2" ry="2" />
<text  x="458.47" y="1071.5" ></text>
</g>
<g >
<title>&lt;mio::poll::RegistrationInner as core::ops::deref::Deref&gt;::deref (16 samples, 0.02%)</title><rect x="793.5" y="741" width="0.2" height="15.0" fill="rgb(218,163,22)" rx="2" ry="2" />
<text  x="796.46" y="751.5" ></text>
</g>
<g >
<title>copy_page_to_iter (88 samples, 0.09%)</title><rect x="826.3" y="565" width="1.1" height="15.0" fill="rgb(234,102,13)" rx="2" ry="2" />
<text  x="829.26" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (79 samples, 0.08%)</title><rect x="188.0" y="629" width="1.0" height="15.0" fill="rgb(229,95,44)" rx="2" ry="2" />
<text  x="190.99" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1,036 samples, 1.11%)</title><rect x="212.1" y="645" width="13.1" height="15.0" fill="rgb(226,211,10)" rx="2" ry="2" />
<text  x="215.12" y="655.5" ></text>
</g>
<g >
<title>actix_utils::counter::Counter::available (44 samples, 0.05%)</title><rect x="1067.7" y="325" width="0.6" height="15.0" fill="rgb(241,63,30)" rx="2" ry="2" />
<text  x="1070.72" y="335.5" ></text>
</g>
<g >
<title>_wake_up_common (91 samples, 0.10%)</title><rect x="317.4" y="357" width="1.2" height="15.0" fill="rgb(248,150,31)" rx="2" ry="2" />
<text  x="320.40" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (73 samples, 0.08%)</title><rect x="1028.0" y="613" width="0.9" height="15.0" fill="rgb(228,179,47)" rx="2" ry="2" />
<text  x="1030.98" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="810.3" y="757" width="0.2" height="15.0" fill="rgb(215,214,39)" rx="2" ry="2" />
<text  x="813.28" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_service::and_then::AndThenServiceResponse&lt;actix_service::fn_service::FnService&lt;actix_http::service::HttpService&lt;tokio::net::tcp::stream::TcpStream,actix_service::map_config::MapConfig&lt;actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::server::HttpServer&lt;rust_actix_jsonpath_bench::main::{{closure}}::{{closure}},actix_web::app::App&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_http::body::Body&gt;::listen::{{closure}}::{{closure}}, (21 samples, 0.02%)</title><rect x="476.6" y="517" width="0.2" height="15.0" fill="rgb(224,167,37)" rx="2" ry="2" />
<text  x="479.58" y="527.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="120.5" y="837" width="0.1" height="15.0" fill="rgb(236,29,42)" rx="2" ry="2" />
<text  x="123.47" y="847.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (16 samples, 0.02%)</title><rect x="336.5" y="1029" width="0.2" height="15.0" fill="rgb(206,167,8)" rx="2" ry="2" />
<text  x="339.54" y="1039.5" ></text>
</g>
<g >
<title>sk_reset_timer (250 samples, 0.27%)</title><rect x="662.8" y="677" width="3.2" height="15.0" fill="rgb(229,116,6)" rx="2" ry="2" />
<text  x="665.79" y="687.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (8 samples, 0.01%)</title><rect x="832.5" y="645" width="0.1" height="15.0" fill="rgb(216,182,37)" rx="2" ry="2" />
<text  x="835.49" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::new (30 samples, 0.03%)</title><rect x="530.9" y="965" width="0.4" height="15.0" fill="rgb(206,97,34)" rx="2" ry="2" />
<text  x="533.90" y="975.5" ></text>
</g>
<g >
<title>tokio::runtime::Runtime::block_on::{{closure}} (1,071 samples, 1.15%)</title><rect x="472.8" y="1141" width="13.5" height="15.0" fill="rgb(233,85,38)" rx="2" ry="2" />
<text  x="475.77" y="1151.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (19 samples, 0.02%)</title><rect x="228.3" y="693" width="0.3" height="15.0" fill="rgb(214,160,5)" rx="2" ry="2" />
<text  x="231.32" y="703.5" ></text>
</g>
<g >
<title>bictcp_cong_avoid (10 samples, 0.01%)</title><rect x="544.9" y="709" width="0.1" height="15.0" fill="rgb(208,214,48)" rx="2" ry="2" />
<text  x="547.88" y="719.5" ></text>
</g>
<g >
<title>skb_clone (74 samples, 0.08%)</title><rect x="657.2" y="693" width="0.9" height="15.0" fill="rgb(220,116,25)" rx="2" ry="2" />
<text  x="660.17" y="703.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (24 samples, 0.03%)</title><rect x="645.3" y="565" width="0.3" height="15.0" fill="rgb(250,213,26)" rx="2" ry="2" />
<text  x="648.27" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (42 samples, 0.05%)</title><rect x="1043.7" y="197" width="0.6" height="15.0" fill="rgb(212,188,40)" rx="2" ry="2" />
<text  x="1046.72" y="207.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::{{closure}} (331 samples, 0.36%)</title><rect x="525.1" y="901" width="4.2" height="15.0" fill="rgb(208,136,26)" rx="2" ry="2" />
<text  x="528.14" y="911.5" ></text>
</g>
<g >
<title>x86_pmu_disable_all (15 samples, 0.02%)</title><rect x="913.0" y="549" width="0.2" height="15.0" fill="rgb(221,165,11)" rx="2" ry="2" />
<text  x="916.03" y="559.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1,006 samples, 1.08%)</title><rect x="53.0" y="1189" width="12.7" height="15.0" fill="rgb(206,9,5)" rx="2" ry="2" />
<text  x="56.01" y="1199.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.04%)</title><rect x="424.8" y="677" width="0.4" height="15.0" fill="rgb(209,132,35)" rx="2" ry="2" />
<text  x="427.78" y="687.5" ></text>
</g>
<g >
<title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13,045 samples, 13.99%)</title><rect x="67.1" y="1141" width="165.1" height="15.0" fill="rgb(223,142,47)" rx="2" ry="2" />
<text  x="70.06" y="1151.5" >&lt;core::pin::Pin&lt;P&gt; as..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_web::data::Data&lt;serde_json::value::Value&gt;&gt; (45 samples, 0.05%)</title><rect x="380.9" y="901" width="0.6" height="15.0" fill="rgb(231,76,22)" rx="2" ry="2" />
<text  x="383.92" y="911.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (31 samples, 0.03%)</title><rect x="750.9" y="469" width="0.4" height="15.0" fill="rgb(245,117,19)" rx="2" ry="2" />
<text  x="753.93" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="1081.4" y="645" width="0.1" height="15.0" fill="rgb(250,118,21)" rx="2" ry="2" />
<text  x="1084.39" y="655.5" ></text>
</g>
<g >
<title>raw_write_lock_irq (11 samples, 0.01%)</title><rect x="854.5" y="645" width="0.1" height="15.0" fill="rgb(213,113,33)" rx="2" ry="2" />
<text  x="857.47" y="655.5" ></text>
</g>
<g >
<title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (1,071 samples, 1.15%)</title><rect x="472.8" y="917" width="13.5" height="15.0" fill="rgb(214,222,19)" rx="2" ry="2" />
<text  x="475.77" y="927.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="351.2" y="757" width="0.2" height="15.0" fill="rgb(224,177,54)" rx="2" ry="2" />
<text  x="354.20" y="767.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (18 samples, 0.02%)</title><rect x="791.0" y="709" width="0.2" height="15.0" fill="rgb(227,27,36)" rx="2" ry="2" />
<text  x="793.99" y="719.5" ></text>
</g>
<g >
<title>rcu_qs (13 samples, 0.01%)</title><rect x="946.2" y="597" width="0.2" height="15.0" fill="rgb(222,18,42)" rx="2" ry="2" />
<text  x="949.25" y="607.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (59 samples, 0.06%)</title><rect x="423.7" y="613" width="0.7" height="15.0" fill="rgb(210,208,36)" rx="2" ry="2" />
<text  x="426.67" y="623.5" ></text>
</g>
<g >
<title>ip_queue_xmit (5,865 samples, 6.29%)</title><rect x="582.9" y="693" width="74.3" height="15.0" fill="rgb(219,202,30)" rx="2" ry="2" />
<text  x="585.92" y="703.5" >ip_queue..</text>
</g>
<g >
<title>_put_user_nocheck_8 (8 samples, 0.01%)</title><rect x="975.5" y="661" width="0.1" height="15.0" fill="rgb(253,171,46)" rx="2" ry="2" />
<text  x="978.46" y="671.5" ></text>
</g>
<g >
<title>flush_tlb_func_commo.onstpro. (8 samples, 0.01%)</title><rect x="975.9" y="517" width="0.1" height="15.0" fill="rgb(225,50,43)" rx="2" ry="2" />
<text  x="978.88" y="527.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (770 samples, 0.83%)</title><rect x="515.4" y="741" width="9.7" height="15.0" fill="rgb(220,114,28)" rx="2" ry="2" />
<text  x="518.39" y="751.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (77 samples, 0.08%)</title><rect x="211.1" y="645" width="1.0" height="15.0" fill="rgb(253,179,13)" rx="2" ry="2" />
<text  x="214.14" y="655.5" ></text>
</g>
<g >
<title>actix_web::service::ServiceRequest::into_parts (45 samples, 0.05%)</title><rect x="351.5" y="901" width="0.6" height="15.0" fill="rgb(244,220,19)" rx="2" ry="2" />
<text  x="354.50" y="911.5" ></text>
</g>
<g >
<title>kmem_cache_free (64 samples, 0.07%)</title><rect x="759.9" y="597" width="0.8" height="15.0" fill="rgb(231,72,12)" rx="2" ry="2" />
<text  x="762.85" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (130 samples, 0.14%)</title><rect x="144.2" y="661" width="1.6" height="15.0" fill="rgb(207,27,16)" rx="2" ry="2" />
<text  x="147.19" y="671.5" ></text>
</g>
<g >
<title>unlink_chunk (100 samples, 0.11%)</title><rect x="731.3" y="853" width="1.2" height="15.0" fill="rgb(216,37,54)" rx="2" ry="2" />
<text  x="734.28" y="863.5" ></text>
</g>
<g >
<title>tokio::time::driver::Driver&lt;T&gt;::clear_entry (266 samples, 0.29%)</title><rect x="1002.2" y="837" width="3.3" height="15.0" fill="rgb(253,144,6)" rx="2" ry="2" />
<text  x="1005.16" y="847.5" ></text>
</g>
<g >
<title>tokio::io::driver::Handle::inner (31 samples, 0.03%)</title><rect x="770.9" y="821" width="0.4" height="15.0" fill="rgb(207,139,4)" rx="2" ry="2" />
<text  x="773.86" y="831.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (104 samples, 0.11%)</title><rect x="1011.6" y="821" width="1.3" height="15.0" fill="rgb(243,77,15)" rx="2" ry="2" />
<text  x="1014.59" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.03%)</title><rect x="132.6" y="853" width="0.4" height="15.0" fill="rgb(251,97,41)" rx="2" ry="2" />
<text  x="135.61" y="863.5" ></text>
</g>
<g >
<title>kmalloc_slab (31 samples, 0.03%)</title><rect x="570.6" y="693" width="0.4" height="15.0" fill="rgb(236,205,9)" rx="2" ry="2" />
<text  x="573.64" y="703.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::cmp::CmpEq as jsonpath_lib::selector::cmp::Cmp&gt;::cmp_json::{{closure}} (102 samples, 0.11%)</title><rect x="138.6" y="821" width="1.3" height="15.0" fill="rgb(213,86,20)" rx="2" ry="2" />
<text  x="141.64" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="1004.7" y="741" width="0.1" height="15.0" fill="rgb(254,76,9)" rx="2" ry="2" />
<text  x="1007.72" y="751.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget (262 samples, 0.28%)</title><rect x="1020.8" y="677" width="3.3" height="15.0" fill="rgb(225,39,14)" rx="2" ry="2" />
<text  x="1023.77" y="687.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (52 samples, 0.06%)</title><rect x="209.1" y="565" width="0.7" height="15.0" fill="rgb(206,202,36)" rx="2" ry="2" />
<text  x="212.12" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.02%)</title><rect x="338.3" y="917" width="0.3" height="15.0" fill="rgb(251,133,4)" rx="2" ry="2" />
<text  x="341.32" y="927.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set_epi8 (19 samples, 0.02%)</title><rect x="183.1" y="645" width="0.3" height="15.0" fill="rgb(244,209,31)" rx="2" ry="2" />
<text  x="186.14" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (35 samples, 0.04%)</title><rect x="231.4" y="837" width="0.4" height="15.0" fill="rgb(247,126,29)" rx="2" ry="2" />
<text  x="234.36" y="847.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::exprs (304 samples, 0.33%)</title><rect x="468.9" y="933" width="3.8" height="15.0" fill="rgb(214,110,5)" rx="2" ry="2" />
<text  x="471.90" y="943.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (90 samples, 0.10%)</title><rect x="12.5" y="1061" width="1.1" height="15.0" fill="rgb(232,82,45)" rx="2" ry="2" />
<text  x="15.46" y="1071.5" ></text>
</g>
<g >
<title>core::f64::&lt;impl f64&gt;::classify (36 samples, 0.04%)</title><rect x="429.6" y="677" width="0.5" height="15.0" fill="rgb(230,130,24)" rx="2" ry="2" />
<text  x="432.63" y="687.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (78 samples, 0.08%)</title><rect x="210.2" y="629" width="0.9" height="15.0" fill="rgb(251,175,5)" rx="2" ry="2" />
<text  x="213.16" y="639.5" ></text>
</g>
<g >
<title>int_malloc (117 samples, 0.13%)</title><rect x="58.1" y="805" width="1.5" height="15.0" fill="rgb(245,127,50)" rx="2" ry="2" />
<text  x="61.14" y="815.5" ></text>
</g>
<g >
<title>http::uri::Uri::has_path (43 samples, 0.05%)</title><rect x="364.2" y="933" width="0.6" height="15.0" fill="rgb(217,173,31)" rx="2" ry="2" />
<text  x="367.24" y="943.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::utils::to_path_str (20 samples, 0.02%)</title><rect x="126.1" y="709" width="0.3" height="15.0" fill="rgb(214,105,7)" rx="2" ry="2" />
<text  x="129.12" y="719.5" ></text>
</g>
<g >
<title>native_sched_clock (43 samples, 0.05%)</title><rect x="947.0" y="565" width="0.5" height="15.0" fill="rgb(214,112,46)" rx="2" ry="2" />
<text  x="949.96" y="575.5" ></text>
</g>
<g >
<title>ip_rcv_finish_cor.sr. (84 samples, 0.09%)</title><rect x="642.7" y="405" width="1.1" height="15.0" fill="rgb(225,197,1)" rx="2" ry="2" />
<text  x="645.75" y="415.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (13 samples, 0.01%)</title><rect x="1104.8" y="197" width="0.2" height="15.0" fill="rgb(231,43,11)" rx="2" ry="2" />
<text  x="1107.81" y="207.5" ></text>
</g>
<g >
<title>core::ptr::write (46 samples, 0.05%)</title><rect x="230.3" y="917" width="0.6" height="15.0" fill="rgb(221,74,27)" rx="2" ry="2" />
<text  x="233.27" y="927.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (66 samples, 0.07%)</title><rect x="398.6" y="805" width="0.8" height="15.0" fill="rgb(219,46,30)" rx="2" ry="2" />
<text  x="401.60" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (46 samples, 0.05%)</title><rect x="164.3" y="789" width="0.6" height="15.0" fill="rgb(236,89,37)" rx="2" ry="2" />
<text  x="167.35" y="799.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (174 samples, 0.19%)</title><rect x="275.4" y="933" width="2.2" height="15.0" fill="rgb(216,116,31)" rx="2" ry="2" />
<text  x="278.40" y="943.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (86 samples, 0.09%)</title><rect x="109.2" y="821" width="1.1" height="15.0" fill="rgb(253,185,22)" rx="2" ry="2" />
<text  x="112.23" y="831.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (52 samples, 0.06%)</title><rect x="972.4" y="597" width="0.6" height="15.0" fill="rgb(230,107,14)" rx="2" ry="2" />
<text  x="975.38" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (30 samples, 0.03%)</title><rect x="530.9" y="981" width="0.4" height="15.0" fill="rgb(214,109,7)" rx="2" ry="2" />
<text  x="533.90" y="991.5" ></text>
</g>
<g >
<title>&lt;actix_server::worker::Worker as core::future::future::Future&gt;::poll (870 samples, 0.93%)</title><rect x="504.4" y="885" width="11.0" height="15.0" fill="rgb(218,212,31)" rx="2" ry="2" />
<text  x="507.38" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (63 samples, 0.07%)</title><rect x="382.7" y="725" width="0.8" height="15.0" fill="rgb(245,75,0)" rx="2" ry="2" />
<text  x="385.68" y="735.5" ></text>
</g>
<g >
<title>bytes::bytes::Bytes::with_vtable (10 samples, 0.01%)</title><rect x="42.9" y="1157" width="0.1" height="15.0" fill="rgb(239,67,37)" rx="2" ry="2" />
<text  x="45.87" y="1167.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u8 (30 samples, 0.03%)</title><rect x="182.3" y="741" width="0.3" height="15.0" fill="rgb(209,73,38)" rx="2" ry="2" />
<text  x="185.27" y="751.5" ></text>
</g>
<g >
<title>ip_queue_xmit (22 samples, 0.02%)</title><rect x="659.6" y="709" width="0.3" height="15.0" fill="rgb(227,171,40)" rx="2" ry="2" />
<text  x="662.63" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::is_empty (16 samples, 0.02%)</title><rect x="150.9" y="885" width="0.2" height="15.0" fill="rgb(251,117,18)" rx="2" ry="2" />
<text  x="153.93" y="895.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (23 samples, 0.02%)</title><rect x="434.7" y="645" width="0.3" height="15.0" fill="rgb(227,2,41)" rx="2" ry="2" />
<text  x="437.69" y="655.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (15 samples, 0.02%)</title><rect x="395.6" y="805" width="0.1" height="15.0" fill="rgb(226,204,26)" rx="2" ry="2" />
<text  x="398.55" y="815.5" ></text>
</g>
<g >
<title>raw_spin_lock_irqsave (46 samples, 0.05%)</title><rect x="861.3" y="597" width="0.6" height="15.0" fill="rgb(252,61,47)" rx="2" ry="2" />
<text  x="864.33" y="607.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (26 samples, 0.03%)</title><rect x="344.9" y="1013" width="0.3" height="15.0" fill="rgb(224,177,20)" rx="2" ry="2" />
<text  x="347.86" y="1023.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::peer_addr (680 samples, 0.73%)</title><rect x="504.4" y="805" width="8.6" height="15.0" fill="rgb(225,153,28)" rx="2" ry="2" />
<text  x="507.38" y="815.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (45 samples, 0.05%)</title><rect x="236.3" y="1029" width="0.5" height="15.0" fill="rgb(209,80,36)" rx="2" ry="2" />
<text  x="239.27" y="1039.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (14 samples, 0.02%)</title><rect x="974.5" y="789" width="0.2" height="15.0" fill="rgb(252,65,14)" rx="2" ry="2" />
<text  x="977.49" y="799.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="450.6" y="997" width="0.2" height="15.0" fill="rgb(216,151,48)" rx="2" ry="2" />
<text  x="453.57" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::write (40 samples, 0.04%)</title><rect x="1032.0" y="517" width="0.5" height="15.0" fill="rgb(247,162,37)" rx="2" ry="2" />
<text  x="1035.03" y="527.5" ></text>
</g>
<g >
<title>_lock_text_start (8 samples, 0.01%)</title><rect x="317.3" y="357" width="0.1" height="15.0" fill="rgb(232,124,9)" rx="2" ry="2" />
<text  x="320.30" y="367.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (458 samples, 0.49%)</title><rect x="16.2" y="1173" width="5.8" height="15.0" fill="rgb(235,45,8)" rx="2" ry="2" />
<text  x="19.20" y="1183.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (16 samples, 0.02%)</title><rect x="1129.2" y="789" width="0.2" height="15.0" fill="rgb(218,198,17)" rx="2" ry="2" />
<text  x="1132.20" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="717.5" y="869" width="0.3" height="15.0" fill="rgb(209,191,21)" rx="2" ry="2" />
<text  x="720.53" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="368.4" y="965" width="0.4" height="15.0" fill="rgb(215,198,9)" rx="2" ry="2" />
<text  x="371.44" y="975.5" ></text>
</g>
<g >
<title>&lt;futures_channel::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (202 samples, 0.22%)</title><rect x="1021.0" y="597" width="2.6" height="15.0" fill="rgb(224,194,50)" rx="2" ry="2" />
<text  x="1024.00" y="607.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::condition_expr (10 samples, 0.01%)</title><rect x="78.5" y="869" width="0.2" height="15.0" fill="rgb(209,115,6)" rx="2" ry="2" />
<text  x="81.53" y="879.5" ></text>
</g>
<g >
<title>std::sys::unix::stack_overflow::imp::get_stackp (9 samples, 0.01%)</title><rect x="1189.8" y="1173" width="0.2" height="15.0" fill="rgb(234,133,8)" rx="2" ry="2" />
<text  x="1192.85" y="1183.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (8,015 samples, 8.60%)</title><rect x="1086.8" y="1125" width="101.5" height="15.0" fill="rgb(239,7,12)" rx="2" ry="2" />
<text  x="1089.83" y="1135.5" >&lt;std::panic:..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (78 samples, 0.08%)</title><rect x="242.4" y="645" width="1.0" height="15.0" fill="rgb(251,33,21)" rx="2" ry="2" />
<text  x="245.37" y="655.5" ></text>
</g>
<g >
<title>actix_http::h1::encoder::MessageType::encode_headers (349 samples, 0.37%)</title><rect x="444.8" y="997" width="4.4" height="15.0" fill="rgb(220,90,2)" rx="2" ry="2" />
<text  x="447.81" y="1007.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::Level&lt;T&gt;::add_entry (104 samples, 0.11%)</title><rect x="1000.8" y="805" width="1.4" height="15.0" fill="rgb(241,96,54)" rx="2" ry="2" />
<text  x="1003.84" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::header::value::HeaderValue&gt; (121 samples, 0.13%)</title><rect x="39.0" y="965" width="1.6" height="15.0" fill="rgb(226,11,10)" rx="2" ry="2" />
<text  x="42.03" y="975.5" ></text>
</g>
<g >
<title>mio::sys::unix::tcp::TcpStream::shutdown (12 samples, 0.01%)</title><rect x="283.8" y="1029" width="0.1" height="15.0" fill="rgb(246,209,16)" rx="2" ry="2" />
<text  x="286.78" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (52 samples, 0.06%)</title><rect x="188.1" y="597" width="0.7" height="15.0" fill="rgb(233,154,25)" rx="2" ry="2" />
<text  x="191.12" y="607.5" ></text>
</g>
<g >
<title>tcp_rcv_established (19 samples, 0.02%)</title><rect x="612.9" y="341" width="0.2" height="15.0" fill="rgb(226,82,8)" rx="2" ry="2" />
<text  x="615.87" y="351.5" ></text>
</g>
<g >
<title>log::max_level (8 samples, 0.01%)</title><rect x="165.0" y="917" width="0.1" height="15.0" fill="rgb(243,8,13)" rx="2" ry="2" />
<text  x="167.98" y="927.5" ></text>
</g>
<g >
<title>skb_release_all (34 samples, 0.04%)</title><rect x="550.2" y="661" width="0.4" height="15.0" fill="rgb(254,53,3)" rx="2" ry="2" />
<text  x="553.21" y="671.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (61 samples, 0.07%)</title><rect x="120.6" y="949" width="0.8" height="15.0" fill="rgb(208,157,49)" rx="2" ry="2" />
<text  x="123.61" y="959.5" ></text>
</g>
<g >
<title>fput_many (58 samples, 0.06%)</title><rect x="951.6" y="677" width="0.7" height="15.0" fill="rgb(249,125,21)" rx="2" ry="2" />
<text  x="954.60" y="687.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (57 samples, 0.06%)</title><rect x="214.8" y="533" width="0.7" height="15.0" fill="rgb(248,2,24)" rx="2" ry="2" />
<text  x="217.81" y="543.5" ></text>
</g>
<g >
<title>down_write (11 samples, 0.01%)</title><rect x="1158.6" y="741" width="0.1" height="15.0" fill="rgb(207,170,47)" rx="2" ry="2" />
<text  x="1161.56" y="751.5" ></text>
</g>
<g >
<title>_GI___libc_free (23 samples, 0.02%)</title><rect x="722.7" y="885" width="0.3" height="15.0" fill="rgb(228,44,49)" rx="2" ry="2" />
<text  x="725.70" y="895.5" ></text>
</g>
<g >
<title>inet_sendmsg (10,248 samples, 10.99%)</title><rect x="541.0" y="805" width="129.8" height="15.0" fill="rgb(209,15,52)" rx="2" ry="2" />
<text  x="544.04" y="815.5" >inet_sendmsg</text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_join::{{closure}} (16 samples, 0.02%)</title><rect x="484.1" y="629" width="0.2" height="15.0" fill="rgb(229,98,49)" rx="2" ry="2" />
<text  x="487.14" y="639.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (71 samples, 0.08%)</title><rect x="210.2" y="597" width="0.9" height="15.0" fill="rgb(219,56,24)" rx="2" ry="2" />
<text  x="213.24" y="607.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (88 samples, 0.09%)</title><rect x="54.6" y="789" width="1.1" height="15.0" fill="rgb(224,106,26)" rx="2" ry="2" />
<text  x="57.56" y="799.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (10,981 samples, 11.78%)</title><rect x="535.4" y="917" width="139.0" height="15.0" fill="rgb(208,52,8)" rx="2" ry="2" />
<text  x="538.42" y="927.5" >std::sys_common::..</text>
</g>
<g >
<title>tokio::io::driver::platform::sys::hup (24 samples, 0.03%)</title><rect x="463.9" y="981" width="0.3" height="15.0" fill="rgb(210,118,13)" rx="2" ry="2" />
<text  x="466.88" y="991.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::checked_add_duration (25 samples, 0.03%)</title><rect x="983.1" y="789" width="0.3" height="15.0" fill="rgb(239,114,38)" rx="2" ry="2" />
<text  x="986.08" y="799.5" ></text>
</g>
<g >
<title>tokio::task::local::Shared::schedule (33 samples, 0.04%)</title><rect x="1115.9" y="869" width="0.5" height="15.0" fill="rgb(251,101,45)" rx="2" ry="2" />
<text  x="1118.95" y="879.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (27 samples, 0.03%)</title><rect x="353.0" y="933" width="0.3" height="15.0" fill="rgb(216,108,6)" rx="2" ry="2" />
<text  x="355.98" y="943.5" ></text>
</g>
<g >
<title>core::task::wake::Waker::wake (526 samples, 0.56%)</title><rect x="967.7" y="805" width="6.7" height="15.0" fill="rgb(220,213,4)" rx="2" ry="2" />
<text  x="970.72" y="815.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (30 samples, 0.03%)</title><rect x="1024.5" y="597" width="0.4" height="15.0" fill="rgb(249,163,35)" rx="2" ry="2" />
<text  x="1027.48" y="607.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (45 samples, 0.05%)</title><rect x="442.5" y="933" width="0.5" height="15.0" fill="rgb(254,113,5)" rx="2" ry="2" />
<text  x="445.45" y="943.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (705 samples, 0.76%)</title><rect x="189.1" y="677" width="8.9" height="15.0" fill="rgb(249,64,43)" rx="2" ry="2" />
<text  x="192.09" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (43 samples, 0.05%)</title><rect x="113.7" y="901" width="0.6" height="15.0" fill="rgb(226,76,14)" rx="2" ry="2" />
<text  x="116.74" y="911.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (35 samples, 0.04%)</title><rect x="108.7" y="805" width="0.4" height="15.0" fill="rgb(227,60,3)" rx="2" ry="2" />
<text  x="111.70" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (1,363 samples, 1.46%)</title><rect x="816.7" y="725" width="17.2" height="15.0" fill="rgb(215,20,22)" rx="2" ry="2" />
<text  x="819.66" y="735.5" ></text>
</g>
<g >
<title>actix_http::message::ResponseHead::reason (60 samples, 0.06%)</title><rect x="443.6" y="981" width="0.8" height="15.0" fill="rgb(239,72,16)" rx="2" ry="2" />
<text  x="446.59" y="991.5" ></text>
</g>
<g >
<title>vfs_write (1,495 samples, 1.60%)</title><rect x="1094.8" y="469" width="18.9" height="15.0" fill="rgb(238,199,33)" rx="2" ry="2" />
<text  x="1097.80" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (43 samples, 0.05%)</title><rect x="1033.2" y="437" width="0.6" height="15.0" fill="rgb(206,80,14)" rx="2" ry="2" />
<text  x="1036.21" y="447.5" ></text>
</g>
<g >
<title>mio::event_imp::Event::token (34 samples, 0.04%)</title><rect x="803.6" y="821" width="0.4" height="15.0" fill="rgb(240,81,53)" rx="2" ry="2" />
<text  x="806.61" y="831.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (172 samples, 0.18%)</title><rect x="152.7" y="725" width="2.2" height="15.0" fill="rgb(221,134,54)" rx="2" ry="2" />
<text  x="155.72" y="735.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk (575 samples, 0.62%)</title><rect x="174.0" y="773" width="7.3" height="15.0" fill="rgb(211,80,34)" rx="2" ry="2" />
<text  x="177.04" y="783.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (265 samples, 0.28%)</title><rect x="426.0" y="693" width="3.4" height="15.0" fill="rgb(238,43,20)" rx="2" ry="2" />
<text  x="429.01" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[alloc::rc::Rc&lt;actix_http::extensions::Extensions&gt;: 4]&gt; (79 samples, 0.08%)</title><rect x="367.3" y="981" width="1.0" height="15.0" fill="rgb(250,122,4)" rx="2" ry="2" />
<text  x="370.29" y="991.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (22,837 samples, 24.50%)</title><rect x="795.0" y="1237" width="289.0" height="15.0" fill="rgb(219,121,39)" rx="2" ry="2" />
<text  x="797.97" y="1247.5" >std::sys::unix::thread::Thread::new::t..</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (34 samples, 0.04%)</title><rect x="967.0" y="757" width="0.4" height="15.0" fill="rgb(216,69,5)" rx="2" ry="2" />
<text  x="970.01" y="767.5" ></text>
</g>
<g >
<title>core::cmp::PartialOrd::ge (15 samples, 0.02%)</title><rect x="985.4" y="757" width="0.2" height="15.0" fill="rgb(232,135,31)" rx="2" ry="2" />
<text  x="988.43" y="767.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (23 samples, 0.02%)</title><rect x="524.1" y="469" width="0.3" height="15.0" fill="rgb(252,83,25)" rx="2" ry="2" />
<text  x="527.10" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (566 samples, 0.61%)</title><rect x="152.3" y="805" width="7.2" height="15.0" fill="rgb(237,28,53)" rx="2" ry="2" />
<text  x="155.33" y="815.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::&lt;impl core::convert::From&lt;mio::sys::unix::ready::UnixReady&gt; for mio::event_imp::Ready&gt;::from (8 samples, 0.01%)</title><rect x="235.6" y="1045" width="0.1" height="15.0" fill="rgb(240,128,2)" rx="2" ry="2" />
<text  x="238.59" y="1055.5" ></text>
</g>
<g >
<title>core::mem::drop (63 samples, 0.07%)</title><rect x="475.8" y="517" width="0.8" height="15.0" fill="rgb(247,74,19)" rx="2" ry="2" />
<text  x="478.78" y="527.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::register (26 samples, 0.03%)</title><rect x="234.6" y="1061" width="0.3" height="15.0" fill="rgb(245,116,2)" rx="2" ry="2" />
<text  x="237.57" y="1071.5" ></text>
</g>
<g >
<title>tokio::io::driver::platform::sys::is_hup (50 samples, 0.05%)</title><rect x="709.5" y="917" width="0.7" height="15.0" fill="rgb(211,50,27)" rx="2" ry="2" />
<text  x="712.52" y="927.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_flush (11,326 samples, 12.15%)</title><rect x="533.3" y="1013" width="143.4" height="15.0" fill="rgb(250,228,12)" rx="2" ry="2" />
<text  x="536.29" y="1023.5" >actix_http::h1::di..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::new_in (47 samples, 0.05%)</title><rect x="228.7" y="789" width="0.5" height="15.0" fill="rgb(220,86,52)" rx="2" ry="2" />
<text  x="231.65" y="799.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (25 samples, 0.03%)</title><rect x="673.3" y="837" width="0.3" height="15.0" fill="rgb(235,178,42)" rx="2" ry="2" />
<text  x="676.32" y="847.5" ></text>
</g>
<g >
<title>int_malloc (55 samples, 0.06%)</title><rect x="169.6" y="645" width="0.7" height="15.0" fill="rgb(229,201,41)" rx="2" ry="2" />
<text  x="172.61" y="655.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (1,071 samples, 1.15%)</title><rect x="472.8" y="1013" width="13.5" height="15.0" fill="rgb(219,57,22)" rx="2" ry="2" />
<text  x="475.77" y="1023.5" ></text>
</g>
<g >
<title>_libc_read (43 samples, 0.05%)</title><rect x="1033.2" y="373" width="0.6" height="15.0" fill="rgb(220,4,37)" rx="2" ry="2" />
<text  x="1036.21" y="383.5" ></text>
</g>
<g >
<title>_kmalloc_node_track_caller (44 samples, 0.05%)</title><rect x="292.8" y="837" width="0.5" height="15.0" fill="rgb(234,137,54)" rx="2" ry="2" />
<text  x="295.77" y="847.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (615 samples, 0.66%)</title><rect x="472.8" y="661" width="7.8" height="15.0" fill="rgb(245,165,48)" rx="2" ry="2" />
<text  x="475.77" y="671.5" ></text>
</g>
<g >
<title>_fget_light (11 samples, 0.01%)</title><rect x="521.4" y="485" width="0.2" height="15.0" fill="rgb(248,73,6)" rx="2" ry="2" />
<text  x="524.44" y="495.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (47 samples, 0.05%)</title><rect x="65.1" y="805" width="0.6" height="15.0" fill="rgb(226,136,17)" rx="2" ry="2" />
<text  x="68.14" y="815.5" ></text>
</g>
<g >
<title>tcp_data_ready (248 samples, 0.27%)</title><rect x="634.0" y="293" width="3.1" height="15.0" fill="rgb(242,106,5)" rx="2" ry="2" />
<text  x="636.95" y="303.5" ></text>
</g>
<g >
<title>actix_server::worker::WorkerClient::available (30 samples, 0.03%)</title><rect x="1087.9" y="1013" width="0.4" height="15.0" fill="rgb(220,84,13)" rx="2" ry="2" />
<text  x="1090.87" y="1023.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8,015 samples, 8.60%)</title><rect x="1086.8" y="1221" width="101.5" height="15.0" fill="rgb(207,129,24)" rx="2" ry="2" />
<text  x="1089.83" y="1231.5" >&lt;alloc::boxe..</text>
</g>
<g >
<title>_pthread_mutex_unlock_usercnt (9 samples, 0.01%)</title><rect x="1115.0" y="709" width="0.1" height="15.0" fill="rgb(214,151,42)" rx="2" ry="2" />
<text  x="1118.01" y="719.5" ></text>
</g>
<g >
<title>checked_request2size (10 samples, 0.01%)</title><rect x="501.6" y="949" width="0.1" height="15.0" fill="rgb(219,216,14)" rx="2" ry="2" />
<text  x="504.61" y="959.5" ></text>
</g>
<g >
<title>_update_idle_core (15 samples, 0.02%)</title><rect x="1185.8" y="789" width="0.2" height="15.0" fill="rgb(213,147,15)" rx="2" ry="2" />
<text  x="1188.80" y="799.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (870 samples, 0.93%)</title><rect x="504.4" y="1013" width="11.0" height="15.0" fill="rgb(213,98,41)" rx="2" ry="2" />
<text  x="507.38" y="1023.5" ></text>
</g>
<g >
<title>_local_bh_enable_ip (17 samples, 0.02%)</title><rect x="588.2" y="597" width="0.2" height="15.0" fill="rgb(222,162,39)" rx="2" ry="2" />
<text  x="591.15" y="607.5" ></text>
</g>
<g >
<title>kmem_cache_free (86 samples, 0.09%)</title><rect x="554.3" y="661" width="1.1" height="15.0" fill="rgb(240,147,51)" rx="2" ry="2" />
<text  x="557.33" y="671.5" ></text>
</g>
<g >
<title>&lt;actix_web::handler::HandlerServiceResponse&lt;T,R&gt; as core::future::future::Future&gt;::poll (356 samples, 0.38%)</title><rect x="238.9" y="1045" width="4.5" height="15.0" fill="rgb(216,125,23)" rx="2" ry="2" />
<text  x="241.85" y="1055.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::filter_next_with_str (3,680 samples, 3.95%)</title><rect x="183.4" y="933" width="46.6" height="15.0" fill="rgb(229,168,27)" rx="2" ry="2" />
<text  x="186.38" y="943.5" >json..</text>
</g>
<g >
<title>_softirqentry_text_start (1,595 samples, 1.71%)</title><rect x="303.1" y="645" width="20.2" height="15.0" fill="rgb(243,120,3)" rx="2" ry="2" />
<text  x="306.12" y="655.5" ></text>
</g>
<g >
<title>_memset_avx2_unaligned_erms (63 samples, 0.07%)</title><rect x="220.6" y="517" width="0.8" height="15.0" fill="rgb(211,200,19)" rx="2" ry="2" />
<text  x="223.61" y="527.5" ></text>
</g>
<g >
<title>&lt;actix_http::service::HttpServiceHandlerResponse&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (555 samples, 0.60%)</title><rect x="237.0" y="1205" width="7.1" height="15.0" fill="rgb(228,166,36)" rx="2" ry="2" />
<text  x="240.04" y="1215.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::ref_inc (8 samples, 0.01%)</title><rect x="337.2" y="949" width="0.1" height="15.0" fill="rgb(220,88,51)" rx="2" ry="2" />
<text  x="340.21" y="959.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="180.1" y="661" width="0.3" height="15.0" fill="rgb(227,220,30)" rx="2" ry="2" />
<text  x="183.09" y="671.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12 samples, 0.01%)</title><rect x="940.4" y="549" width="0.1" height="15.0" fill="rgb(246,222,33)" rx="2" ry="2" />
<text  x="943.36" y="559.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek (10 samples, 0.01%)</title><rect x="92.2" y="677" width="0.2" height="15.0" fill="rgb(223,131,11)" rx="2" ry="2" />
<text  x="95.23" y="687.5" ></text>
</g>
<g >
<title>&lt;actix_web::route::RouteService as actix_service::Service&gt;::call (356 samples, 0.38%)</title><rect x="348.0" y="965" width="4.5" height="15.0" fill="rgb(217,19,20)" rx="2" ry="2" />
<text  x="350.99" y="975.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (563 samples, 0.60%)</title><rect x="152.4" y="789" width="7.1" height="15.0" fill="rgb(244,64,28)" rx="2" ry="2" />
<text  x="155.37" y="799.5" ></text>
</g>
<g >
<title>inet_send_prepare (8 samples, 0.01%)</title><rect x="540.9" y="805" width="0.1" height="15.0" fill="rgb(228,60,10)" rx="2" ry="2" />
<text  x="543.94" y="815.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (8 samples, 0.01%)</title><rect x="627.1" y="165" width="0.1" height="15.0" fill="rgb(211,2,25)" rx="2" ry="2" />
<text  x="630.09" y="175.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (23 samples, 0.02%)</title><rect x="368.4" y="933" width="0.3" height="15.0" fill="rgb(243,71,11)" rx="2" ry="2" />
<text  x="371.44" y="943.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1,252 samples, 1.34%)</title><rect x="419.4" y="837" width="15.8" height="15.0" fill="rgb(234,105,17)" rx="2" ry="2" />
<text  x="422.39" y="847.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.01%)</title><rect x="161.6" y="613" width="0.1" height="15.0" fill="rgb(214,227,43)" rx="2" ry="2" />
<text  x="164.56" y="623.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (167 samples, 0.18%)</title><rect x="39.0" y="1013" width="2.1" height="15.0" fill="rgb(247,20,6)" rx="2" ry="2" />
<text  x="42.01" y="1023.5" ></text>
</g>
<g >
<title>do_epoll_wait (13 samples, 0.01%)</title><rect x="955.8" y="709" width="0.2" height="15.0" fill="rgb(215,227,6)" rx="2" ry="2" />
<text  x="958.84" y="719.5" ></text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (481 samples, 0.52%)</title><rect x="460.6" y="1029" width="6.1" height="15.0" fill="rgb(213,17,37)" rx="2" ry="2" />
<text  x="463.59" y="1039.5" ></text>
</g>
<g >
<title>tokio::time::clock::now (22 samples, 0.02%)</title><rect x="982.7" y="837" width="0.3" height="15.0" fill="rgb(254,57,36)" rx="2" ry="2" />
<text  x="985.70" y="847.5" ></text>
</g>
<g >
<title>core::task::poll::Poll&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="677.2" y="949" width="0.2" height="15.0" fill="rgb(231,205,45)" rx="2" ry="2" />
<text  x="680.24" y="959.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="147.2" y="757" width="0.2" height="15.0" fill="rgb(222,180,41)" rx="2" ry="2" />
<text  x="150.15" y="767.5" ></text>
</g>
<g >
<title>actix_http::h1::encoder::MessageEncoder&lt;T&gt;::encode_chunk (47 samples, 0.05%)</title><rect x="456.6" y="1045" width="0.6" height="15.0" fill="rgb(222,211,28)" rx="2" ry="2" />
<text  x="459.62" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sys_common::net::TcpStream&gt; (2,989 samples, 3.21%)</title><rect x="733.0" y="789" width="37.8" height="15.0" fill="rgb(209,24,3)" rx="2" ry="2" />
<text  x="735.99" y="799.5" >cor..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (26 samples, 0.03%)</title><rect x="424.4" y="677" width="0.4" height="15.0" fill="rgb(222,176,2)" rx="2" ry="2" />
<text  x="427.43" y="687.5" ></text>
</g>
<g >
<title>tokio::task::local::Shared::schedule (1,873 samples, 2.01%)</title><rect x="1092.0" y="837" width="23.7" height="15.0" fill="rgb(233,157,39)" rx="2" ry="2" />
<text  x="1094.96" y="847.5" >t..</text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (58 samples, 0.06%)</title><rect x="163.6" y="629" width="0.7" height="15.0" fill="rgb(239,185,52)" rx="2" ry="2" />
<text  x="166.60" y="639.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (28 samples, 0.03%)</title><rect x="1041.3" y="277" width="0.4" height="15.0" fill="rgb(251,107,39)" rx="2" ry="2" />
<text  x="1044.30" y="287.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessNode::enqueue_with_wakeup (1,710 samples, 1.83%)</title><rect x="1092.5" y="693" width="21.6" height="15.0" fill="rgb(225,144,52)" rx="2" ry="2" />
<text  x="1095.49" y="703.5" >m..</text>
</g>
<g >
<title>&lt;i32 as std::sys::unix::IsMinusOne&gt;::is_minus_one (10 samples, 0.01%)</title><rect x="504.5" y="693" width="0.1" height="15.0" fill="rgb(233,23,43)" rx="2" ry="2" />
<text  x="507.47" y="703.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (49 samples, 0.05%)</title><rect x="182.0" y="757" width="0.6" height="15.0" fill="rgb(224,98,22)" rx="2" ry="2" />
<text  x="185.03" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::select (278 samples, 0.30%)</title><rect x="238.9" y="981" width="3.5" height="15.0" fill="rgb(240,102,24)" rx="2" ry="2" />
<text  x="241.85" y="991.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (16 samples, 0.02%)</title><rect x="629.5" y="309" width="0.2" height="15.0" fill="rgb(235,228,17)" rx="2" ry="2" />
<text  x="632.48" y="319.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (71 samples, 0.08%)</title><rect x="702.4" y="677" width="0.9" height="15.0" fill="rgb(244,199,33)" rx="2" ry="2" />
<text  x="705.43" y="687.5" ></text>
</g>
<g >
<title>_fget_light (15 samples, 0.02%)</title><rect x="511.9" y="597" width="0.2" height="15.0" fill="rgb(235,57,39)" rx="2" ry="2" />
<text  x="514.90" y="607.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (80 samples, 0.09%)</title><rect x="142.2" y="645" width="1.0" height="15.0" fill="rgb(228,47,25)" rx="2" ry="2" />
<text  x="145.19" y="655.5" ></text>
</g>
<g >
<title>read_tsc (36 samples, 0.04%)</title><rect x="557.2" y="693" width="0.5" height="15.0" fill="rgb(211,225,54)" rx="2" ry="2" />
<text  x="560.20" y="703.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::swap (16 samples, 0.02%)</title><rect x="1023.4" y="549" width="0.2" height="15.0" fill="rgb(239,27,46)" rx="2" ry="2" />
<text  x="1026.35" y="559.5" ></text>
</g>
<g >
<title>raw_read_unlock_irqrestore (9 samples, 0.01%)</title><rect x="1111.3" y="357" width="0.1" height="15.0" fill="rgb(242,193,22)" rx="2" ry="2" />
<text  x="1114.25" y="367.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (258 samples, 0.28%)</title><rect x="161.1" y="709" width="3.2" height="15.0" fill="rgb(207,112,22)" rx="2" ry="2" />
<text  x="164.07" y="719.5" ></text>
</g>
<g >
<title>&lt;actix_web::handler::ExtractResponse&lt;T,S&gt; as core::future::future::Future&gt;::poll (5,039 samples, 5.41%)</title><rect x="372.4" y="965" width="63.8" height="15.0" fill="rgb(224,228,28)" rx="2" ry="2" />
<text  x="375.43" y="975.5" >&lt;actix_..</text>
</g>
<g >
<title>get_obj_cgroup_from_current (99 samples, 0.11%)</title><rect x="258.7" y="549" width="1.2" height="15.0" fill="rgb(224,148,0)" rx="2" ry="2" />
<text  x="261.69" y="559.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::poll_ready (288 samples, 0.31%)</title><rect x="233.3" y="1093" width="3.6" height="15.0" fill="rgb(221,220,39)" rx="2" ry="2" />
<text  x="236.26" y="1103.5" ></text>
</g>
<g >
<title>&lt;actix_server::service::StreamService&lt;T&gt; as actix_service::Service&gt;::call (331 samples, 0.36%)</title><rect x="525.1" y="629" width="4.2" height="15.0" fill="rgb(209,219,32)" rx="2" ry="2" />
<text  x="528.14" y="639.5" ></text>
</g>
<g >
<title>lock_sock_nested (12 samples, 0.01%)</title><rect x="542.2" y="773" width="0.1" height="15.0" fill="rgb(242,220,0)" rx="2" ry="2" />
<text  x="545.16" y="783.5" ></text>
</g>
<g >
<title>tokio::io::driver::platform::sys::hup (9 samples, 0.01%)</title><rect x="466.4" y="949" width="0.1" height="15.0" fill="rgb(225,140,15)" rx="2" ry="2" />
<text  x="469.38" y="959.5" ></text>
</g>
<g >
<title>&lt;mio::token::Token as core::cmp::PartialEq&gt;::eq (8 samples, 0.01%)</title><rect x="245.0" y="661" width="0.1" height="15.0" fill="rgb(210,149,50)" rx="2" ry="2" />
<text  x="248.04" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt;&gt; (140 samples, 0.15%)</title><rect x="392.4" y="533" width="1.8" height="15.0" fill="rgb(210,15,46)" rx="2" ry="2" />
<text  x="395.41" y="543.5" ></text>
</g>
<g >
<title>sock_close (34 samples, 0.04%)</title><rect x="1158.5" y="773" width="0.4" height="15.0" fill="rgb(247,229,21)" rx="2" ry="2" />
<text  x="1161.47" y="783.5" ></text>
</g>
<g >
<title>mntput_no_expire (9 samples, 0.01%)</title><rect x="1157.7" y="757" width="0.1" height="15.0" fill="rgb(249,95,2)" rx="2" ry="2" />
<text  x="1160.73" y="767.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (26 samples, 0.03%)</title><rect x="426.0" y="645" width="0.3" height="15.0" fill="rgb(237,157,5)" rx="2" ry="2" />
<text  x="429.01" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_or (8 samples, 0.01%)</title><rect x="1115.5" y="757" width="0.1" height="15.0" fill="rgb(252,62,8)" rx="2" ry="2" />
<text  x="1118.47" y="767.5" ></text>
</g>
<g >
<title>ryu::d2s_intrinsics::mul_shift_all_64 (42 samples, 0.05%)</title><rect x="433.2" y="597" width="0.5" height="15.0" fill="rgb(212,205,53)" rx="2" ry="2" />
<text  x="436.21" y="607.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="181.9" y="709" width="0.1" height="15.0" fill="rgb(230,62,0)" rx="2" ry="2" />
<text  x="184.88" y="719.5" ></text>
</g>
<g >
<title>smallvec::SmallVec&lt;A&gt;::push (19 samples, 0.02%)</title><rect x="489.8" y="1157" width="0.2" height="15.0" fill="rgb(231,7,8)" rx="2" ry="2" />
<text  x="492.76" y="1167.5" ></text>
</g>
<g >
<title>raw_spin_lock_irq (25 samples, 0.03%)</title><rect x="1159.3" y="805" width="0.3" height="15.0" fill="rgb(247,52,20)" rx="2" ry="2" />
<text  x="1162.33" y="815.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (200 samples, 0.21%)</title><rect x="225.4" y="741" width="2.5" height="15.0" fill="rgb(227,147,15)" rx="2" ry="2" />
<text  x="228.37" y="751.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (22,826 samples, 24.49%)</title><rect x="795.0" y="1125" width="288.9" height="15.0" fill="rgb(206,175,49)" rx="2" ry="2" />
<text  x="797.97" y="1135.5" >&lt;std::panic::AssertUnwindSafe&lt;F&gt; as co..</text>
</g>
<g >
<title>http::status::StatusCode::canonical_reason (54 samples, 0.06%)</title><rect x="443.7" y="965" width="0.7" height="15.0" fill="rgb(215,227,17)" rx="2" ry="2" />
<text  x="446.67" y="975.5" ></text>
</g>
<g >
<title>iput (237 samples, 0.25%)</title><rect x="1154.0" y="725" width="3.0" height="15.0" fill="rgb(212,150,20)" rx="2" ry="2" />
<text  x="1157.04" y="735.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (47 samples, 0.05%)</title><rect x="1029.9" y="645" width="0.6" height="15.0" fill="rgb(220,113,45)" rx="2" ry="2" />
<text  x="1032.87" y="655.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (74 samples, 0.08%)</title><rect x="209.0" y="581" width="1.0" height="15.0" fill="rgb(226,128,2)" rx="2" ry="2" />
<text  x="212.02" y="591.5" ></text>
</g>
<g >
<title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (10 samples, 0.01%)</title><rect x="677.6" y="869" width="0.1" height="15.0" fill="rgb(214,184,28)" rx="2" ry="2" />
<text  x="680.60" y="879.5" ></text>
</g>
<g >
<title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::prepare_uninitialized_buffer (21 samples, 0.02%)</title><rect x="460.3" y="1013" width="0.3" height="15.0" fill="rgb(251,142,14)" rx="2" ry="2" />
<text  x="463.33" y="1023.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::expect::ExpectHandler as actix_service::Service&gt;::poll_ready (19 samples, 0.02%)</title><rect x="1066.3" y="261" width="0.3" height="15.0" fill="rgb(227,52,25)" rx="2" ry="2" />
<text  x="1069.31" y="271.5" ></text>
</g>
<g >
<title>httparse::parse_version (26 samples, 0.03%)</title><rect x="52.1" y="1157" width="0.3" height="15.0" fill="rgb(227,112,38)" rx="2" ry="2" />
<text  x="55.11" y="1167.5" ></text>
</g>
<g >
<title>actix_server::worker::WorkerClient::send (33 samples, 0.04%)</title><rect x="1115.9" y="997" width="0.5" height="15.0" fill="rgb(210,57,37)" rx="2" ry="2" />
<text  x="1118.95" y="1007.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek::{{closure}} (10 samples, 0.01%)</title><rect x="56.3" y="661" width="0.1" height="15.0" fill="rgb(219,202,13)" rx="2" ry="2" />
<text  x="59.32" y="671.5" ></text>
</g>
<g >
<title>actix_router::resource::ResourceDef::id (45 samples, 0.05%)</title><rect x="353.6" y="981" width="0.5" height="15.0" fill="rgb(254,23,2)" rx="2" ry="2" />
<text  x="356.58" y="991.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.02%)</title><rect x="162.5" y="629" width="0.2" height="15.0" fill="rgb(211,159,46)" rx="2" ry="2" />
<text  x="165.50" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (120 samples, 0.13%)</title><rect x="221.4" y="549" width="1.5" height="15.0" fill="rgb(248,127,17)" rx="2" ry="2" />
<text  x="224.41" y="559.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::whitespace (8 samples, 0.01%)</title><rect x="88.2" y="741" width="0.1" height="15.0" fill="rgb(247,103,22)" rx="2" ry="2" />
<text  x="91.24" y="751.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,573 samples, 1.69%)</title><rect x="244.1" y="1093" width="19.9" height="15.0" fill="rgb(240,87,50)" rx="2" ry="2" />
<text  x="247.07" y="1103.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.04%)</title><rect x="274.7" y="981" width="0.5" height="15.0" fill="rgb(227,58,6)" rx="2" ry="2" />
<text  x="277.71" y="991.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;actix_server::worker::WorkerCommand&gt;&gt;&gt; (125 samples, 0.13%)</title><rect x="1056.6" y="261" width="1.6" height="15.0" fill="rgb(206,191,53)" rx="2" ry="2" />
<text  x="1059.63" y="271.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (29 samples, 0.03%)</title><rect x="37.6" y="1061" width="0.4" height="15.0" fill="rgb(223,92,27)" rx="2" ry="2" />
<text  x="40.63" y="1071.5" ></text>
</g>
<g >
<title>tokio::io::async_read::AsyncRead::poll_read_buf (55 samples, 0.06%)</title><rect x="243.4" y="1141" width="0.7" height="15.0" fill="rgb(242,210,54)" rx="2" ry="2" />
<text  x="246.37" y="1151.5" ></text>
</g>
<g >
<title>skb_network_protocol (13 samples, 0.01%)</title><rect x="653.2" y="517" width="0.2" height="15.0" fill="rgb(216,42,41)" rx="2" ry="2" />
<text  x="656.23" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (39 samples, 0.04%)</title><rect x="127.8" y="741" width="0.5" height="15.0" fill="rgb(245,191,31)" rx="2" ry="2" />
<text  x="130.77" y="751.5" ></text>
</g>
<g >
<title>&lt;http::method::Method as core::cmp::PartialEq&gt;::eq (41 samples, 0.04%)</title><rect x="355.2" y="933" width="0.5" height="15.0" fill="rgb(212,132,36)" rx="2" ry="2" />
<text  x="358.21" y="943.5" ></text>
</g>
<g >
<title>int_realloc (51 samples, 0.05%)</title><rect x="379.2" y="693" width="0.7" height="15.0" fill="rgb(218,29,4)" rx="2" ry="2" />
<text  x="382.25" y="703.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (258 samples, 0.28%)</title><rect x="1020.8" y="645" width="3.3" height="15.0" fill="rgb(246,77,43)" rx="2" ry="2" />
<text  x="1023.82" y="655.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="142.8" y="597" width="0.2" height="15.0" fill="rgb(230,111,12)" rx="2" ry="2" />
<text  x="145.84" y="607.5" ></text>
</g>
<g >
<title>accept4 (3,372 samples, 3.62%)</title><rect x="1117.5" y="901" width="42.7" height="15.0" fill="rgb(207,173,3)" rx="2" ry="2" />
<text  x="1120.52" y="911.5" >acce..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (26 samples, 0.03%)</title><rect x="481.8" y="517" width="0.3" height="15.0" fill="rgb(236,139,9)" rx="2" ry="2" />
<text  x="484.81" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (18 samples, 0.02%)</title><rect x="349.6" y="821" width="0.2" height="15.0" fill="rgb(209,64,33)" rx="2" ry="2" />
<text  x="352.59" y="831.5" ></text>
</g>
<g >
<title>tcp_set_state (12 samples, 0.01%)</title><rect x="765.6" y="533" width="0.2" height="15.0" fill="rgb(253,144,20)" rx="2" ry="2" />
<text  x="768.62" y="543.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::push_term (54 samples, 0.06%)</title><rect x="170.9" y="933" width="0.7" height="15.0" fill="rgb(248,42,16)" rx="2" ry="2" />
<text  x="173.93" y="943.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (92 samples, 0.10%)</title><rect x="400.6" y="821" width="1.2" height="15.0" fill="rgb(206,137,49)" rx="2" ry="2" />
<text  x="403.63" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.02%)</title><rect x="434.7" y="629" width="0.3" height="15.0" fill="rgb(218,63,27)" rx="2" ry="2" />
<text  x="437.69" y="639.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (274 samples, 0.29%)</title><rect x="83.6" y="789" width="3.4" height="15.0" fill="rgb(208,36,27)" rx="2" ry="2" />
<text  x="86.57" y="799.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (331 samples, 0.36%)</title><rect x="525.1" y="709" width="4.2" height="15.0" fill="rgb(234,88,20)" rx="2" ry="2" />
<text  x="528.14" y="719.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (8 samples, 0.01%)</title><rect x="299.7" y="789" width="0.1" height="15.0" fill="rgb(248,156,21)" rx="2" ry="2" />
<text  x="302.72" y="799.5" ></text>
</g>
<g >
<title>native_read_msr (135 samples, 0.14%)</title><rect x="1171.5" y="741" width="1.7" height="15.0" fill="rgb(210,166,3)" rx="2" ry="2" />
<text  x="1174.46" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;jsonpath_lib::selector::utils::PathKey&gt;&gt; (45 samples, 0.05%)</title><rect x="131.4" y="869" width="0.6" height="15.0" fill="rgb(210,133,42)" rx="2" ry="2" />
<text  x="134.40" y="879.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (17 samples, 0.02%)</title><rect x="119.2" y="741" width="0.2" height="15.0" fill="rgb(247,102,41)" rx="2" ry="2" />
<text  x="122.18" y="751.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (356 samples, 0.38%)</title><rect x="238.9" y="1125" width="4.5" height="15.0" fill="rgb(208,50,40)" rx="2" ry="2" />
<text  x="241.85" y="1135.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (12 samples, 0.01%)</title><rect x="940.4" y="533" width="0.1" height="15.0" fill="rgb(213,43,37)" rx="2" ry="2" />
<text  x="943.36" y="543.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (33 samples, 0.04%)</title><rect x="1147.8" y="725" width="0.4" height="15.0" fill="rgb(242,137,27)" rx="2" ry="2" />
<text  x="1150.80" y="735.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (185 samples, 0.20%)</title><rect x="152.6" y="741" width="2.3" height="15.0" fill="rgb(231,34,34)" rx="2" ry="2" />
<text  x="155.56" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::all_with_str::{{closure}} (246 samples, 0.26%)</title><rect x="175.5" y="629" width="3.1" height="15.0" fill="rgb(230,150,35)" rx="2" ry="2" />
<text  x="178.47" y="639.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="92.3" y="629" width="0.1" height="15.0" fill="rgb(232,42,26)" rx="2" ry="2" />
<text  x="95.25" y="639.5" ></text>
</g>
<g >
<title>put_prev_task_fair (18 samples, 0.02%)</title><rect x="947.9" y="613" width="0.3" height="15.0" fill="rgb(209,103,31)" rx="2" ry="2" />
<text  x="950.94" y="623.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (16 samples, 0.02%)</title><rect x="484.1" y="645" width="0.2" height="15.0" fill="rgb(232,188,43)" rx="2" ry="2" />
<text  x="487.14" y="655.5" ></text>
</g>
<g >
<title>_rdl_realloc (12 samples, 0.01%)</title><rect x="158.9" y="645" width="0.1" height="15.0" fill="rgb(250,136,12)" rx="2" ry="2" />
<text  x="161.88" y="655.5" ></text>
</g>
<g >
<title>int_free (13 samples, 0.01%)</title><rect x="395.4" y="853" width="0.2" height="15.0" fill="rgb(231,159,50)" rx="2" ry="2" />
<text  x="398.39" y="863.5" ></text>
</g>
<g >
<title>ep_poll_callback (1,089 samples, 1.17%)</title><rect x="1097.6" y="373" width="13.8" height="15.0" fill="rgb(210,160,25)" rx="2" ry="2" />
<text  x="1100.58" y="383.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_request (13,139 samples, 14.09%)</title><rect x="65.9" y="1205" width="166.3" height="15.0" fill="rgb(238,141,31)" rx="2" ry="2" />
<text  x="68.87" y="1215.5" >actix_http::h1::dispa..</text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (85 samples, 0.09%)</title><rect x="68.4" y="933" width="1.0" height="15.0" fill="rgb(236,55,32)" rx="2" ry="2" />
<text  x="71.36" y="943.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (10 samples, 0.01%)</title><rect x="121.3" y="901" width="0.1" height="15.0" fill="rgb(217,156,45)" rx="2" ry="2" />
<text  x="124.26" y="911.5" ></text>
</g>
<g >
<title>_ip_finish_output (332 samples, 0.36%)</title><rect x="622.9" y="165" width="4.2" height="15.0" fill="rgb(205,68,29)" rx="2" ry="2" />
<text  x="625.89" y="175.5" ></text>
</g>
<g >
<title>int_free (85 samples, 0.09%)</title><rect x="388.2" y="549" width="1.1" height="15.0" fill="rgb(232,40,3)" rx="2" ry="2" />
<text  x="391.22" y="559.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (51 samples, 0.05%)</title><rect x="447.9" y="965" width="0.6" height="15.0" fill="rgb(240,30,27)" rx="2" ry="2" />
<text  x="450.90" y="975.5" ></text>
</g>
<g >
<title>task_work_run (33 samples, 0.04%)</title><rect x="769.9" y="677" width="0.4" height="15.0" fill="rgb(208,60,8)" rx="2" ry="2" />
<text  x="772.85" y="687.5" ></text>
</g>
<g >
<title>&lt;actix_http::body::Body as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (159 samples, 0.17%)</title><rect x="378.1" y="837" width="2.0" height="15.0" fill="rgb(223,126,31)" rx="2" ry="2" />
<text  x="381.07" y="847.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (59 samples, 0.06%)</title><rect x="969.4" y="549" width="0.8" height="15.0" fill="rgb(244,139,9)" rx="2" ry="2" />
<text  x="972.44" y="559.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (8 samples, 0.01%)</title><rect x="961.4" y="725" width="0.1" height="15.0" fill="rgb(223,149,29)" rx="2" ry="2" />
<text  x="964.36" y="735.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (331 samples, 0.36%)</title><rect x="525.1" y="1125" width="4.2" height="15.0" fill="rgb(237,37,16)" rx="2" ry="2" />
<text  x="528.14" y="1135.5" ></text>
</g>
<g >
<title>std::collections::hash::map::RandomState::new::KEYS::_getit (48 samples, 0.05%)</title><rect x="228.0" y="741" width="0.6" height="15.0" fill="rgb(240,109,6)" rx="2" ry="2" />
<text  x="230.95" y="751.5" ></text>
</g>
<g >
<title>_get_user_4 (37 samples, 0.04%)</title><rect x="505.9" y="613" width="0.5" height="15.0" fill="rgb(247,111,6)" rx="2" ry="2" />
<text  x="508.88" y="623.5" ></text>
</g>
<g >
<title>&lt;f64 as core::num::dec2flt::float::RawFloat&gt;::from_u64 (9 samples, 0.01%)</title><rect x="89.1" y="725" width="0.1" height="15.0" fill="rgb(205,11,15)" rx="2" ry="2" />
<text  x="92.06" y="735.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (33 samples, 0.04%)</title><rect x="369.3" y="981" width="0.4" height="15.0" fill="rgb(220,38,17)" rx="2" ry="2" />
<text  x="372.30" y="991.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_keepalive (237 samples, 0.25%)</title><rect x="339.0" y="1077" width="3.0" height="15.0" fill="rgb(209,113,54)" rx="2" ry="2" />
<text  x="341.97" y="1087.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (78 samples, 0.08%)</title><rect x="242.4" y="549" width="1.0" height="15.0" fill="rgb(210,157,25)" rx="2" ry="2" />
<text  x="245.37" y="559.5" ></text>
</g>
<g >
<title>_lock_text_start (8 samples, 0.01%)</title><rect x="781.8" y="597" width="0.1" height="15.0" fill="rgb(222,116,48)" rx="2" ry="2" />
<text  x="784.83" y="607.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_full (16 samples, 0.02%)</title><rect x="41.2" y="997" width="0.2" height="15.0" fill="rgb(213,71,8)" rx="2" ry="2" />
<text  x="44.17" y="1007.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (20,985 samples, 22.51%)</title><rect x="529.3" y="1173" width="265.7" height="15.0" fill="rgb(220,70,22)" rx="2" ry="2" />
<text  x="532.33" y="1183.5" >core::ops::function::FnOnce::call_o..</text>
</g>
<g >
<title>std::panic::catch_unwind (2,673 samples, 2.87%)</title><rect x="1036.2" y="533" width="33.8" height="15.0" fill="rgb(239,174,7)" rx="2" ry="2" />
<text  x="1039.17" y="543.5" >st..</text>
</g>
<g >
<title>std::time::Instant::checked_add (26 samples, 0.03%)</title><rect x="265.0" y="1029" width="0.4" height="15.0" fill="rgb(239,92,24)" rx="2" ry="2" />
<text  x="268.03" y="1039.5" ></text>
</g>
<g >
<title>_GI___libc_free (15 samples, 0.02%)</title><rect x="451.1" y="933" width="0.2" height="15.0" fill="rgb(254,157,22)" rx="2" ry="2" />
<text  x="454.11" y="943.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::set_join_waker (62 samples, 0.07%)</title><rect x="1041.1" y="293" width="0.8" height="15.0" fill="rgb(248,213,54)" rx="2" ry="2" />
<text  x="1044.15" y="303.5" ></text>
</g>
<g >
<title>sock_close (588 samples, 0.63%)</title><rect x="760.7" y="613" width="7.4" height="15.0" fill="rgb(219,21,19)" rx="2" ry="2" />
<text  x="763.66" y="623.5" ></text>
</g>
<g >
<title>ip_rcv_finish_cor.sr. (31 samples, 0.03%)</title><rect x="322.7" y="533" width="0.4" height="15.0" fill="rgb(245,195,46)" rx="2" ry="2" />
<text  x="325.66" y="543.5" ></text>
</g>
<g >
<title>core::time::Duration::subsec_millis (9 samples, 0.01%)</title><rect x="991.8" y="821" width="0.1" height="15.0" fill="rgb(238,117,15)" rx="2" ry="2" />
<text  x="994.83" y="831.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="211.3" y="613" width="0.3" height="15.0" fill="rgb(253,123,21)" rx="2" ry="2" />
<text  x="214.27" y="623.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (58 samples, 0.06%)</title><rect x="1043.5" y="293" width="0.8" height="15.0" fill="rgb(207,36,12)" rx="2" ry="2" />
<text  x="1046.52" y="303.5" ></text>
</g>
<g >
<title>core::ptr::read (20 samples, 0.02%)</title><rect x="170.7" y="901" width="0.2" height="15.0" fill="rgb(230,101,33)" rx="2" ry="2" />
<text  x="173.67" y="911.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (292 samples, 0.31%)</title><rect x="697.7" y="693" width="3.7" height="15.0" fill="rgb(241,157,23)" rx="2" ry="2" />
<text  x="700.75" y="703.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (56 samples, 0.06%)</title><rect x="68.5" y="853" width="0.7" height="15.0" fill="rgb(211,215,42)" rx="2" ry="2" />
<text  x="71.51" y="863.5" ></text>
</g>
<g >
<title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (304 samples, 0.33%)</title><rect x="468.9" y="1157" width="3.8" height="15.0" fill="rgb(216,69,45)" rx="2" ry="2" />
<text  x="471.90" y="1167.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk_dedup::{{closure}} (3,050 samples, 3.27%)</title><rect x="186.6" y="725" width="38.6" height="15.0" fill="rgb(237,71,16)" rx="2" ry="2" />
<text  x="189.62" y="735.5" >jso..</text>
</g>
<g >
<title>alloc::alloc::alloc (272 samples, 0.29%)</title><rect x="83.6" y="773" width="3.4" height="15.0" fill="rgb(245,160,3)" rx="2" ry="2" />
<text  x="86.60" y="783.5" ></text>
</g>
<g >
<title>dst_release (10 samples, 0.01%)</title><rect x="608.8" y="341" width="0.2" height="15.0" fill="rgb(221,44,4)" rx="2" ry="2" />
<text  x="611.84" y="351.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (29 samples, 0.03%)</title><rect x="373.4" y="917" width="0.4" height="15.0" fill="rgb(218,62,46)" rx="2" ry="2" />
<text  x="376.44" y="927.5" ></text>
</g>
<g >
<title>httparse::parse_token (13 samples, 0.01%)</title><rect x="50.5" y="1157" width="0.2" height="15.0" fill="rgb(225,4,5)" rx="2" ry="2" />
<text  x="53.52" y="1167.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt; (353 samples, 0.38%)</title><rect x="390.0" y="565" width="4.5" height="15.0" fill="rgb(213,54,0)" rx="2" ry="2" />
<text  x="392.98" y="575.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1,613 samples, 1.73%)</title><rect x="303.0" y="677" width="20.5" height="15.0" fill="rgb(248,159,26)" rx="2" ry="2" />
<text  x="306.04" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::uri::path::PathAndQuery&gt; (21 samples, 0.02%)</title><rect x="45.0" y="1157" width="0.3" height="15.0" fill="rgb(231,144,20)" rx="2" ry="2" />
<text  x="47.99" y="1167.5" ></text>
</g>
<g >
<title>int_malloc (60 samples, 0.06%)</title><rect x="54.9" y="693" width="0.7" height="15.0" fill="rgb(220,191,22)" rx="2" ry="2" />
<text  x="57.86" y="703.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_empty (9 samples, 0.01%)</title><rect x="356.1" y="885" width="0.1" height="15.0" fill="rgb(238,127,1)" rx="2" ry="2" />
<text  x="359.08" y="895.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1,435 samples, 1.54%)</title><rect x="207.1" y="677" width="18.1" height="15.0" fill="rgb(223,71,12)" rx="2" ry="2" />
<text  x="210.07" y="687.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (9 samples, 0.01%)</title><rect x="45.3" y="1173" width="0.1" height="15.0" fill="rgb(253,80,13)" rx="2" ry="2" />
<text  x="48.28" y="1183.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (9 samples, 0.01%)</title><rect x="997.6" y="661" width="0.2" height="15.0" fill="rgb(230,98,20)" rx="2" ry="2" />
<text  x="1000.64" y="671.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::tcp::TcpStream as std::io::Write&gt;::write (11,006 samples, 11.81%)</title><rect x="535.1" y="949" width="139.3" height="15.0" fill="rgb(222,4,34)" rx="2" ry="2" />
<text  x="538.10" y="959.5" >&lt;&amp;mio::sys::unix:..</text>
</g>
<g >
<title>select_estimate_accuracy (28 samples, 0.03%)</title><rect x="952.6" y="677" width="0.4" height="15.0" fill="rgb(253,177,26)" rx="2" ry="2" />
<text  x="955.62" y="687.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::wakeup (33 samples, 0.04%)</title><rect x="1115.9" y="677" width="0.5" height="15.0" fill="rgb(252,84,18)" rx="2" ry="2" />
<text  x="1118.95" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.03%)</title><rect x="426.0" y="597" width="0.3" height="15.0" fill="rgb(223,207,26)" rx="2" ry="2" />
<text  x="429.01" y="607.5" ></text>
</g>
<g >
<title>tinyvec::arrayvec::ArrayVec&lt;A&gt;::try_push (27 samples, 0.03%)</title><rect x="368.4" y="997" width="0.4" height="15.0" fill="rgb(230,76,0)" rx="2" ry="2" />
<text  x="371.44" y="1007.5" ></text>
</g>
<g >
<title>ip_output (20 samples, 0.02%)</title><rect x="656.0" y="661" width="0.2" height="15.0" fill="rgb(228,62,16)" rx="2" ry="2" />
<text  x="658.99" y="671.5" ></text>
</g>
<g >
<title>&lt;tokio::time::driver::handle::Handle as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="274.5" y="917" width="0.2" height="15.0" fill="rgb(235,222,26)" rx="2" ry="2" />
<text  x="277.51" y="927.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,330 samples, 1.43%)</title><rect x="487.5" y="1237" width="16.9" height="15.0" fill="rgb(239,163,33)" rx="2" ry="2" />
<text  x="490.54" y="1247.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (60 samples, 0.06%)</title><rect x="360.5" y="949" width="0.8" height="15.0" fill="rgb(248,3,49)" rx="2" ry="2" />
<text  x="363.53" y="959.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next_char (26 samples, 0.03%)</title><rect x="400.3" y="821" width="0.3" height="15.0" fill="rgb(254,3,22)" rx="2" ry="2" />
<text  x="403.30" y="831.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (106 samples, 0.11%)</title><rect x="130.1" y="725" width="1.3" height="15.0" fill="rgb(208,180,22)" rx="2" ry="2" />
<text  x="133.05" y="735.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (56 samples, 0.06%)</title><rect x="217.3" y="549" width="0.7" height="15.0" fill="rgb(209,204,44)" rx="2" ry="2" />
<text  x="220.27" y="559.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (16 samples, 0.02%)</title><rect x="512.6" y="645" width="0.2" height="15.0" fill="rgb(225,57,54)" rx="2" ry="2" />
<text  x="515.57" y="655.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (42 samples, 0.05%)</title><rect x="237.4" y="1093" width="0.5" height="15.0" fill="rgb(232,2,0)" rx="2" ry="2" />
<text  x="240.38" y="1103.5" ></text>
</g>
<g >
<title>epoll_wait (35 samples, 0.04%)</title><rect x="1032.8" y="501" width="0.4" height="15.0" fill="rgb(234,119,19)" rx="2" ry="2" />
<text  x="1035.77" y="511.5" ></text>
</g>
<g >
<title>&lt;actix_service::and_then::AndThenServiceResponse&lt;A,B&gt; as core::future::future::Future&gt;::poll (13,522 samples, 14.51%)</title><rect x="65.9" y="1253" width="171.1" height="15.0" fill="rgb(225,94,28)" rx="2" ry="2" />
<text  x="68.87" y="1263.5" >&lt;actix_service::and_th..</text>
</g>
<g >
<title>simple_copy_to_iter (169 samples, 0.18%)</title><rect x="699.3" y="661" width="2.1" height="15.0" fill="rgb(244,207,48)" rx="2" ry="2" />
<text  x="702.31" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (33 samples, 0.04%)</title><rect x="129.5" y="693" width="0.5" height="15.0" fill="rgb(227,91,14)" rx="2" ry="2" />
<text  x="132.55" y="703.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (142 samples, 0.15%)</title><rect x="62.9" y="773" width="1.8" height="15.0" fill="rgb(214,126,45)" rx="2" ry="2" />
<text  x="65.89" y="783.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (49 samples, 0.05%)</title><rect x="82.2" y="805" width="0.6" height="15.0" fill="rgb(226,189,4)" rx="2" ry="2" />
<text  x="85.22" y="815.5" ></text>
</g>
<g >
<title>core::ptr::write (21 samples, 0.02%)</title><rect x="122.9" y="901" width="0.3" height="15.0" fill="rgb(220,27,38)" rx="2" ry="2" />
<text  x="125.94" y="911.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (31 samples, 0.03%)</title><rect x="188.2" y="581" width="0.4" height="15.0" fill="rgb(227,62,16)" rx="2" ry="2" />
<text  x="191.22" y="591.5" ></text>
</g>
<g >
<title>tokio::util::bit::unpack (14 samples, 0.02%)</title><rect x="790.8" y="709" width="0.2" height="15.0" fill="rgb(250,52,34)" rx="2" ry="2" />
<text  x="793.81" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (12 samples, 0.01%)</title><rect x="461.9" y="837" width="0.1" height="15.0" fill="rgb(223,93,11)" rx="2" ry="2" />
<text  x="464.86" y="847.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (58 samples, 0.06%)</title><rect x="98.3" y="853" width="0.7" height="15.0" fill="rgb(217,67,11)" rx="2" ry="2" />
<text  x="101.27" y="863.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (158 samples, 0.17%)</title><rect x="189.5" y="597" width="2.0" height="15.0" fill="rgb(249,162,48)" rx="2" ry="2" />
<text  x="192.54" y="607.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (680 samples, 0.73%)</title><rect x="494.1" y="981" width="8.6" height="15.0" fill="rgb(242,155,3)" rx="2" ry="2" />
<text  x="497.07" y="991.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (78 samples, 0.08%)</title><rect x="242.4" y="901" width="1.0" height="15.0" fill="rgb(249,170,0)" rx="2" ry="2" />
<text  x="245.37" y="911.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (10 samples, 0.01%)</title><rect x="352.4" y="917" width="0.1" height="15.0" fill="rgb(219,107,17)" rx="2" ry="2" />
<text  x="355.37" y="927.5" ></text>
</g>
<g >
<title>_x64_sys_epoll_wait (9,087 samples, 9.75%)</title><rect x="840.8" y="709" width="115.0" height="15.0" fill="rgb(205,84,23)" rx="2" ry="2" />
<text  x="843.82" y="719.5" >_x64_sys_epoll..</text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (26 samples, 0.03%)</title><rect x="808.6" y="773" width="0.3" height="15.0" fill="rgb(252,183,19)" rx="2" ry="2" />
<text  x="811.59" y="783.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (19 samples, 0.02%)</title><rect x="813.8" y="725" width="0.2" height="15.0" fill="rgb(218,178,19)" rx="2" ry="2" />
<text  x="816.80" y="735.5" ></text>
</g>
<g >
<title>tcache_get (15 samples, 0.02%)</title><rect x="167.3" y="677" width="0.2" height="15.0" fill="rgb(251,173,5)" rx="2" ry="2" />
<text  x="170.31" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term (692 samples, 0.74%)</title><rect x="57.0" y="885" width="8.7" height="15.0" fill="rgb(214,31,10)" rx="2" ry="2" />
<text  x="59.99" y="895.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (9 samples, 0.01%)</title><rect x="866.7" y="581" width="0.1" height="15.0" fill="rgb(212,148,52)" rx="2" ry="2" />
<text  x="869.69" y="591.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (90 samples, 0.10%)</title><rect x="12.5" y="1045" width="1.1" height="15.0" fill="rgb(231,151,9)" rx="2" ry="2" />
<text  x="15.46" y="1055.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (27 samples, 0.03%)</title><rect x="424.4" y="725" width="0.4" height="15.0" fill="rgb(217,34,4)" rx="2" ry="2" />
<text  x="427.41" y="735.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp_json_json (357 samples, 0.38%)</title><rect x="166.0" y="885" width="4.6" height="15.0" fill="rgb(206,98,6)" rx="2" ry="2" />
<text  x="169.04" y="895.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (70 samples, 0.08%)</title><rect x="488.8" y="1173" width="0.9" height="15.0" fill="rgb(253,88,35)" rx="2" ry="2" />
<text  x="491.85" y="1183.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (51 samples, 0.05%)</title><rect x="111.2" y="853" width="0.7" height="15.0" fill="rgb(209,94,6)" rx="2" ry="2" />
<text  x="114.23" y="863.5" ></text>
</g>
<g >
<title>_local_bh_enable_ip (9 samples, 0.01%)</title><rect x="542.2" y="757" width="0.1" height="15.0" fill="rgb(214,52,22)" rx="2" ry="2" />
<text  x="545.19" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (15 samples, 0.02%)</title><rect x="365.1" y="981" width="0.2" height="15.0" fill="rgb(226,17,30)" rx="2" ry="2" />
<text  x="368.07" y="991.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (23 samples, 0.02%)</title><rect x="706.7" y="773" width="0.3" height="15.0" fill="rgb(251,69,44)" rx="2" ry="2" />
<text  x="709.75" y="783.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (1,865 samples, 2.00%)</title><rect x="684.3" y="885" width="23.6" height="15.0" fill="rgb(241,59,15)" rx="2" ry="2" />
<text  x="687.25" y="895.5" >s..</text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (20,985 samples, 22.51%)</title><rect x="529.3" y="1141" width="265.7" height="15.0" fill="rgb(246,198,27)" rx="2" ry="2" />
<text  x="532.33" y="1151.5" >tokio::runtime::task::core::Core&lt;T,..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (44 samples, 0.05%)</title><rect x="231.3" y="869" width="0.6" height="15.0" fill="rgb(223,42,31)" rx="2" ry="2" />
<text  x="234.32" y="879.5" ></text>
</g>
<g >
<title>int_malloc (113 samples, 0.12%)</title><rect x="278.8" y="933" width="1.5" height="15.0" fill="rgb(238,122,8)" rx="2" ry="2" />
<text  x="281.84" y="943.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;dyn tokio::park::Unpark&gt; as tokio::park::Unpark&gt;::unpark (33 samples, 0.04%)</title><rect x="1115.9" y="805" width="0.5" height="15.0" fill="rgb(248,118,37)" rx="2" ry="2" />
<text  x="1118.95" y="815.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (101 samples, 0.11%)</title><rect x="180.0" y="709" width="1.3" height="15.0" fill="rgb(232,69,11)" rx="2" ry="2" />
<text  x="183.04" y="719.5" ></text>
</g>
<g >
<title>actix_http::message::BoxedResponseHead::new::{{closure}} (73 samples, 0.08%)</title><rect x="376.2" y="821" width="0.9" height="15.0" fill="rgb(253,85,3)" rx="2" ry="2" />
<text  x="379.21" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (331 samples, 0.36%)</title><rect x="525.1" y="1253" width="4.2" height="15.0" fill="rgb(220,46,24)" rx="2" ry="2" />
<text  x="528.14" y="1263.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::none (9 samples, 0.01%)</title><rect x="712.2" y="901" width="0.2" height="15.0" fill="rgb(250,101,47)" rx="2" ry="2" />
<text  x="715.24" y="911.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU64::load (10 samples, 0.01%)</title><rect x="271.8" y="981" width="0.1" height="15.0" fill="rgb(211,170,15)" rx="2" ry="2" />
<text  x="274.82" y="991.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (33 samples, 0.04%)</title><rect x="1115.9" y="645" width="0.5" height="15.0" fill="rgb(226,97,16)" rx="2" ry="2" />
<text  x="1118.95" y="655.5" ></text>
</g>
<g >
<title>&lt;actix_http::message::BoxedResponseHead as core::ops::drop::Drop&gt;::drop (50 samples, 0.05%)</title><rect x="449.5" y="981" width="0.7" height="15.0" fill="rgb(220,173,49)" rx="2" ry="2" />
<text  x="452.53" y="991.5" ></text>
</g>
<g >
<title>inet_release (438 samples, 0.47%)</title><rect x="761.7" y="581" width="5.6" height="15.0" fill="rgb(229,55,47)" rx="2" ry="2" />
<text  x="764.74" y="591.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::_rust_begin_short_backtrace (22,826 samples, 24.49%)</title><rect x="795.0" y="1093" width="288.9" height="15.0" fill="rgb(250,49,8)" rx="2" ry="2" />
<text  x="797.97" y="1103.5" >std::sys_common::backtrace::_rust_begi..</text>
</g>
<g >
<title>iput (651 samples, 0.70%)</title><rect x="748.0" y="565" width="8.2" height="15.0" fill="rgb(231,23,22)" rx="2" ry="2" />
<text  x="750.98" y="575.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new (1,573 samples, 1.69%)</title><rect x="244.1" y="757" width="19.9" height="15.0" fill="rgb(213,87,35)" rx="2" ry="2" />
<text  x="247.07" y="767.5" ></text>
</g>
<g >
<title>_rdl_alloc (20 samples, 0.02%)</title><rect x="164.7" y="693" width="0.2" height="15.0" fill="rgb(246,23,35)" rx="2" ry="2" />
<text  x="167.66" y="703.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (157 samples, 0.17%)</title><rect x="390.1" y="533" width="2.0" height="15.0" fill="rgb(213,123,21)" rx="2" ry="2" />
<text  x="393.12" y="543.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (147 samples, 0.16%)</title><rect x="142.1" y="661" width="1.9" height="15.0" fill="rgb(254,24,43)" rx="2" ry="2" />
<text  x="145.13" y="671.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.02%)</title><rect x="463.9" y="965" width="0.2" height="15.0" fill="rgb(235,160,24)" rx="2" ry="2" />
<text  x="466.88" y="975.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::array (3,695 samples, 3.96%)</title><rect x="67.5" y="965" width="46.8" height="15.0" fill="rgb(236,54,50)" rx="2" ry="2" />
<text  x="70.51" y="975.5" >json..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (67 samples, 0.07%)</title><rect x="350.7" y="805" width="0.8" height="15.0" fill="rgb(234,105,27)" rx="2" ry="2" />
<text  x="353.65" y="815.5" ></text>
</g>
<g >
<title>skb_release_all (109 samples, 0.12%)</title><rect x="555.5" y="677" width="1.4" height="15.0" fill="rgb(251,148,25)" rx="2" ry="2" />
<text  x="558.51" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (23 samples, 0.02%)</title><rect x="472.4" y="805" width="0.3" height="15.0" fill="rgb(235,32,13)" rx="2" ry="2" />
<text  x="475.44" y="815.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (40 samples, 0.04%)</title><rect x="955.3" y="693" width="0.5" height="15.0" fill="rgb(250,188,49)" rx="2" ry="2" />
<text  x="958.32" y="703.5" ></text>
</g>
<g >
<title>page_counter_try_charge (41 samples, 0.04%)</title><rect x="1136.7" y="693" width="0.6" height="15.0" fill="rgb(238,124,53)" rx="2" ry="2" />
<text  x="1139.75" y="703.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (11 samples, 0.01%)</title><rect x="91.3" y="789" width="0.1" height="15.0" fill="rgb(248,207,33)" rx="2" ry="2" />
<text  x="94.25" y="799.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll::{{closure}} (770 samples, 0.83%)</title><rect x="515.4" y="773" width="9.7" height="15.0" fill="rgb(221,107,1)" rx="2" ry="2" />
<text  x="518.39" y="783.5" ></text>
</g>
<g >
<title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (24 samples, 0.03%)</title><rect x="29.3" y="1077" width="0.3" height="15.0" fill="rgb(235,28,47)" rx="2" ry="2" />
<text  x="32.27" y="1087.5" ></text>
</g>
<g >
<title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (5,171 samples, 5.55%)</title><rect x="1018.4" y="757" width="65.4" height="15.0" fill="rgb(252,1,41)" rx="2" ry="2" />
<text  x="1021.36" y="767.5" >&lt;tokio:..</text>
</g>
<g >
<title>alloc::alloc::alloc (34 samples, 0.04%)</title><rect x="43.7" y="1061" width="0.4" height="15.0" fill="rgb(247,72,54)" rx="2" ry="2" />
<text  x="46.67" y="1071.5" ></text>
</g>
<g >
<title>tcp_sync_mss (25 samples, 0.03%)</title><rect x="631.6" y="293" width="0.3" height="15.0" fill="rgb(227,5,11)" rx="2" ry="2" />
<text  x="634.62" y="303.5" ></text>
</g>
<g >
<title>_GI_epoll_ctl (1,446 samples, 1.55%)</title><rect x="245.3" y="661" width="18.3" height="15.0" fill="rgb(249,105,9)" rx="2" ry="2" />
<text  x="248.27" y="671.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (34 samples, 0.04%)</title><rect x="236.4" y="981" width="0.4" height="15.0" fill="rgb(253,186,27)" rx="2" ry="2" />
<text  x="239.41" y="991.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_array_eof (9 samples, 0.01%)</title><rect x="240.5" y="917" width="0.1" height="15.0" fill="rgb(215,82,3)" rx="2" ry="2" />
<text  x="243.46" y="927.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.03%)</title><rect x="36.7" y="1013" width="0.4" height="15.0" fill="rgb(226,70,49)" rx="2" ry="2" />
<text  x="39.70" y="1023.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (3,255 samples, 3.49%)</title><rect x="600.9" y="373" width="41.2" height="15.0" fill="rgb(226,178,40)" rx="2" ry="2" />
<text  x="603.89" y="383.5" >ip_..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (30 samples, 0.03%)</title><rect x="142.8" y="629" width="0.4" height="15.0" fill="rgb(247,61,24)" rx="2" ry="2" />
<text  x="145.83" y="639.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::from_std (20 samples, 0.02%)</title><rect x="526.4" y="597" width="0.3" height="15.0" fill="rgb(232,35,17)" rx="2" ry="2" />
<text  x="529.42" y="607.5" ></text>
</g>
<g >
<title>dentry_free (67 samples, 0.07%)</title><rect x="1153.0" y="741" width="0.9" height="15.0" fill="rgb(220,90,52)" rx="2" ry="2" />
<text  x="1156.04" y="751.5" ></text>
</g>
<g >
<title>_rdl_dealloc (10 samples, 0.01%)</title><rect x="723.0" y="885" width="0.1" height="15.0" fill="rgb(246,50,9)" rx="2" ry="2" />
<text  x="725.99" y="895.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (152 samples, 0.16%)</title><rect x="181.5" y="821" width="1.9" height="15.0" fill="rgb(220,154,16)" rx="2" ry="2" />
<text  x="184.46" y="831.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::last_mut (9 samples, 0.01%)</title><rect x="133.2" y="933" width="0.1" height="15.0" fill="rgb(249,110,35)" rx="2" ry="2" />
<text  x="136.15" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tinyvec::arrayvec::ArrayVec&lt;[alloc::rc::Rc&lt;actix_http::extensions::Extensions&gt;: 4]&gt;&gt; (79 samples, 0.08%)</title><rect x="367.3" y="997" width="1.0" height="15.0" fill="rgb(236,193,4)" rx="2" ry="2" />
<text  x="370.29" y="1007.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (81 samples, 0.09%)</title><rect x="54.6" y="757" width="1.1" height="15.0" fill="rgb(254,132,44)" rx="2" ry="2" />
<text  x="57.65" y="767.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (18 samples, 0.02%)</title><rect x="179.2" y="565" width="0.2" height="15.0" fill="rgb(222,212,13)" rx="2" ry="2" />
<text  x="182.19" y="575.5" ></text>
</g>
<g >
<title>unlink_chunk (12 samples, 0.01%)</title><rect x="59.5" y="789" width="0.1" height="15.0" fill="rgb(209,184,44)" rx="2" ry="2" />
<text  x="62.47" y="799.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9 samples, 0.01%)</title><rect x="642.6" y="405" width="0.1" height="15.0" fill="rgb(214,206,28)" rx="2" ry="2" />
<text  x="645.63" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt (10 samples, 0.01%)</title><rect x="504.5" y="709" width="0.1" height="15.0" fill="rgb(246,60,29)" rx="2" ry="2" />
<text  x="507.47" y="719.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (145 samples, 0.16%)</title><rect x="1089.5" y="933" width="1.9" height="15.0" fill="rgb(217,201,33)" rx="2" ry="2" />
<text  x="1092.54" y="943.5" ></text>
</g>
<g >
<title>tokio::task::local::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;::release::{{closure}} (34 samples, 0.04%)</title><rect x="482.1" y="597" width="0.5" height="15.0" fill="rgb(251,133,11)" rx="2" ry="2" />
<text  x="485.14" y="607.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (14 samples, 0.02%)</title><rect x="552.2" y="677" width="0.2" height="15.0" fill="rgb(205,67,52)" rx="2" ry="2" />
<text  x="555.20" y="687.5" ></text>
</g>
<g >
<title>tokio::time::delay::delay_until (664 samples, 0.71%)</title><rect x="266.3" y="1045" width="8.4" height="15.0" fill="rgb(249,208,2)" rx="2" ry="2" />
<text  x="269.31" y="1055.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (90 samples, 0.10%)</title><rect x="12.5" y="1077" width="1.1" height="15.0" fill="rgb(241,176,48)" rx="2" ry="2" />
<text  x="15.46" y="1087.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (70 samples, 0.08%)</title><rect x="113.4" y="917" width="0.9" height="15.0" fill="rgb(231,51,18)" rx="2" ry="2" />
<text  x="116.39" y="927.5" ></text>
</g>
<g >
<title>tokio::time::wheel::Wheel&lt;T&gt;::level_for (47 samples, 0.05%)</title><rect x="1003.0" y="805" width="0.6" height="15.0" fill="rgb(228,187,42)" rx="2" ry="2" />
<text  x="1006.01" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt; (20 samples, 0.02%)</title><rect x="717.5" y="853" width="0.3" height="15.0" fill="rgb(213,131,18)" rx="2" ry="2" />
<text  x="720.53" y="863.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (8 samples, 0.01%)</title><rect x="182.2" y="693" width="0.1" height="15.0" fill="rgb(234,65,29)" rx="2" ry="2" />
<text  x="185.17" y="703.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (331 samples, 0.36%)</title><rect x="525.1" y="837" width="4.2" height="15.0" fill="rgb(227,111,49)" rx="2" ry="2" />
<text  x="528.14" y="847.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (420 samples, 0.45%)</title><rect x="174.1" y="725" width="5.3" height="15.0" fill="rgb(226,93,6)" rx="2" ry="2" />
<text  x="177.10" y="735.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::le (591 samples, 0.63%)</title><rect x="140.0" y="933" width="7.5" height="15.0" fill="rgb(251,153,43)" rx="2" ry="2" />
<text  x="142.98" y="943.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (26 samples, 0.03%)</title><rect x="781.3" y="597" width="0.4" height="15.0" fill="rgb(236,169,22)" rx="2" ry="2" />
<text  x="784.35" y="607.5" ></text>
</g>
<g >
<title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (16 samples, 0.02%)</title><rect x="771.8" y="789" width="0.2" height="15.0" fill="rgb(209,36,10)" rx="2" ry="2" />
<text  x="774.84" y="799.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (81 samples, 0.09%)</title><rect x="340.8" y="965" width="1.1" height="15.0" fill="rgb(229,164,35)" rx="2" ry="2" />
<text  x="343.83" y="975.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek (11 samples, 0.01%)</title><rect x="110.1" y="709" width="0.1" height="15.0" fill="rgb(249,148,43)" rx="2" ry="2" />
<text  x="113.08" y="719.5" ></text>
</g>
<g >
<title>actix_server::worker::Worker::check_readiness (354 samples, 0.38%)</title><rect x="1063.8" y="341" width="4.5" height="15.0" fill="rgb(254,17,5)" rx="2" ry="2" />
<text  x="1066.79" y="351.5" ></text>
</g>
<g >
<title>put_prev_task_fair (11 samples, 0.01%)</title><rect x="1186.2" y="821" width="0.1" height="15.0" fill="rgb(250,14,3)" rx="2" ry="2" />
<text  x="1189.16" y="831.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (39 samples, 0.04%)</title><rect x="163.8" y="549" width="0.5" height="15.0" fill="rgb(212,115,50)" rx="2" ry="2" />
<text  x="166.84" y="559.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (49 samples, 0.05%)</title><rect x="91.8" y="757" width="0.6" height="15.0" fill="rgb(231,193,42)" rx="2" ry="2" />
<text  x="94.79" y="767.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="1022.7" y="469" width="0.1" height="15.0" fill="rgb(213,28,7)" rx="2" ry="2" />
<text  x="1025.65" y="479.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (8 samples, 0.01%)</title><rect x="557.9" y="709" width="0.1" height="15.0" fill="rgb(245,165,49)" rx="2" ry="2" />
<text  x="560.91" y="719.5" ></text>
</g>
<g >
<title>sched_clock_cpu (17 samples, 0.02%)</title><rect x="1110.5" y="245" width="0.2" height="15.0" fill="rgb(208,180,30)" rx="2" ry="2" />
<text  x="1113.45" y="255.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::pop_term (26 samples, 0.03%)</title><rect x="170.6" y="933" width="0.3" height="15.0" fill="rgb(239,87,1)" rx="2" ry="2" />
<text  x="173.60" y="943.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::parse (247 samples, 0.26%)</title><rect x="102.4" y="821" width="3.1" height="15.0" fill="rgb(234,221,1)" rx="2" ry="2" />
<text  x="105.39" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::whitespace (22 samples, 0.02%)</title><rect x="115.5" y="869" width="0.3" height="15.0" fill="rgb(240,188,11)" rx="2" ry="2" />
<text  x="118.53" y="879.5" ></text>
</g>
<g >
<title>raw_spin_lock_bh (24 samples, 0.03%)</title><rect x="508.5" y="597" width="0.3" height="15.0" fill="rgb(227,198,45)" rx="2" ry="2" />
<text  x="511.52" y="607.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (11 samples, 0.01%)</title><rect x="356.2" y="901" width="0.2" height="15.0" fill="rgb(248,183,34)" rx="2" ry="2" />
<text  x="359.22" y="911.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (30 samples, 0.03%)</title><rect x="1024.5" y="613" width="0.4" height="15.0" fill="rgb(212,23,7)" rx="2" ry="2" />
<text  x="1027.48" y="623.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (69 samples, 0.07%)</title><rect x="482.7" y="629" width="0.9" height="15.0" fill="rgb(240,77,30)" rx="2" ry="2" />
<text  x="485.71" y="639.5" ></text>
</g>
<g >
<title>tcp_set_state (20 samples, 0.02%)</title><rect x="319.1" y="405" width="0.2" height="15.0" fill="rgb(213,47,6)" rx="2" ry="2" />
<text  x="322.06" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (49 samples, 0.05%)</title><rect x="192.8" y="581" width="0.6" height="15.0" fill="rgb(252,92,16)" rx="2" ry="2" />
<text  x="195.79" y="591.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll2 (2,146 samples, 2.30%)</title><rect x="1161.1" y="1013" width="27.2" height="15.0" fill="rgb(221,28,31)" rx="2" ry="2" />
<text  x="1164.13" y="1023.5" >m..</text>
</g>
<g >
<title>unlink_chunk (13 samples, 0.01%)</title><rect x="271.5" y="805" width="0.2" height="15.0" fill="rgb(235,217,15)" rx="2" ry="2" />
<text  x="274.55" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,383 samples, 1.48%)</title><rect x="245.9" y="629" width="17.5" height="15.0" fill="rgb(206,172,38)" rx="2" ry="2" />
<text  x="248.88" y="639.5" ></text>
</g>
<g >
<title>tokio::io::driver::Inner::drop_source (333 samples, 0.36%)</title><rect x="788.6" y="805" width="4.2" height="15.0" fill="rgb(219,131,16)" rx="2" ry="2" />
<text  x="791.57" y="815.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (18 samples, 0.02%)</title><rect x="969.7" y="517" width="0.2" height="15.0" fill="rgb(209,79,39)" rx="2" ry="2" />
<text  x="972.70" y="527.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (39 samples, 0.04%)</title><rect x="971.2" y="597" width="0.5" height="15.0" fill="rgb(246,101,25)" rx="2" ry="2" />
<text  x="974.20" y="607.5" ></text>
</g>
<g >
<title>remove_wait_queue (38 samples, 0.04%)</title><rect x="781.8" y="613" width="0.4" height="15.0" fill="rgb(211,83,39)" rx="2" ry="2" />
<text  x="784.75" y="623.5" ></text>
</g>
<g >
<title>_rdl_dealloc (16 samples, 0.02%)</title><rect x="385.7" y="597" width="0.2" height="15.0" fill="rgb(229,51,3)" rx="2" ry="2" />
<text  x="388.67" y="607.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (25 samples, 0.03%)</title><rect x="325.2" y="613" width="0.4" height="15.0" fill="rgb(250,178,0)" rx="2" ry="2" />
<text  x="328.25" y="623.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (22 samples, 0.02%)</title><rect x="688.3" y="741" width="0.3" height="15.0" fill="rgb(220,162,53)" rx="2" ry="2" />
<text  x="691.28" y="751.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (1,000 samples, 1.07%)</title><rect x="690.7" y="709" width="12.6" height="15.0" fill="rgb(210,128,0)" rx="2" ry="2" />
<text  x="693.67" y="719.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (8 samples, 0.01%)</title><rect x="975.9" y="597" width="0.1" height="15.0" fill="rgb(237,25,40)" rx="2" ry="2" />
<text  x="978.88" y="607.5" ></text>
</g>
<g >
<title>_rust_probestack (17 samples, 0.02%)</title><rect x="468.7" y="1253" width="0.2" height="15.0" fill="rgb(248,130,5)" rx="2" ry="2" />
<text  x="471.68" y="1263.5" ></text>
</g>
<g >
<title>close_fd (196 samples, 0.21%)</title><rect x="735.3" y="677" width="2.4" height="15.0" fill="rgb(209,171,45)" rx="2" ry="2" />
<text  x="738.26" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (27 samples, 0.03%)</title><rect x="416.2" y="773" width="0.3" height="15.0" fill="rgb(247,213,9)" rx="2" ry="2" />
<text  x="419.20" y="783.5" ></text>
</g>
<g >
<title>ip_rcv_finish (12 samples, 0.01%)</title><rect x="644.2" y="437" width="0.2" height="15.0" fill="rgb(250,178,10)" rx="2" ry="2" />
<text  x="647.22" y="447.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::selector_impl::JsonSelector as jsonpath_lib::paths::parser_token_handler::ParserTokenHandler&gt;::handle (811 samples, 0.87%)</title><rect x="121.7" y="933" width="10.3" height="15.0" fill="rgb(232,127,42)" rx="2" ry="2" />
<text  x="124.72" y="943.5" ></text>
</g>
<g >
<title>mio::net::tcp::set_nonblocking (436 samples, 0.47%)</title><rect x="517.7" y="597" width="5.5" height="15.0" fill="rgb(237,54,38)" rx="2" ry="2" />
<text  x="520.71" y="607.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (37 samples, 0.04%)</title><rect x="56.5" y="821" width="0.5" height="15.0" fill="rgb(210,38,52)" rx="2" ry="2" />
<text  x="59.52" y="831.5" ></text>
</g>
<g >
<title>actix_http::config::DateService::set_date (77 samples, 0.08%)</title><rect x="445.8" y="965" width="1.0" height="15.0" fill="rgb(254,47,34)" rx="2" ry="2" />
<text  x="448.81" y="975.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (43 samples, 0.05%)</title><rect x="172.6" y="837" width="0.5" height="15.0" fill="rgb(242,105,27)" rx="2" ry="2" />
<text  x="175.60" y="847.5" ></text>
</g>
<g >
<title>&lt;actix_server::service::StreamService&lt;T&gt; as actix_service::Service&gt;::call::{{closure}} (20,985 samples, 22.51%)</title><rect x="529.3" y="1077" width="265.7" height="15.0" fill="rgb(237,226,22)" rx="2" ry="2" />
<text  x="532.33" y="1087.5" >&lt;actix_server::service::StreamServi..</text>
</g>
<g >
<title>loopback_xmit (70 samples, 0.08%)</title><rect x="625.4" y="85" width="0.8" height="15.0" fill="rgb(223,213,13)" rx="2" ry="2" />
<text  x="628.35" y="95.5" ></text>
</g>
<g >
<title>_put_user_nocheck_4 (18 samples, 0.02%)</title><rect x="1162.1" y="901" width="0.3" height="15.0" fill="rgb(214,204,5)" rx="2" ry="2" />
<text  x="1165.14" y="911.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (17 samples, 0.02%)</title><rect x="38.6" y="1013" width="0.2" height="15.0" fill="rgb(219,13,25)" rx="2" ry="2" />
<text  x="41.57" y="1023.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::release::{{closure}} (16 samples, 0.02%)</title><rect x="1071.8" y="485" width="0.2" height="15.0" fill="rgb(229,53,15)" rx="2" ry="2" />
<text  x="1074.76" y="495.5" ></text>
</g>
<g >
<title>tokio::runtime::handle::Handle::enter (22,824 samples, 24.48%)</title><rect x="795.0" y="1013" width="288.9" height="15.0" fill="rgb(252,58,10)" rx="2" ry="2" />
<text  x="797.97" y="1023.5" >tokio::runtime::handle::Handle::enter</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.03%)</title><rect x="42.5" y="1029" width="0.3" height="15.0" fill="rgb(236,206,13)" rx="2" ry="2" />
<text  x="45.49" y="1039.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (27 samples, 0.03%)</title><rect x="451.1" y="949" width="0.4" height="15.0" fill="rgb(228,127,43)" rx="2" ry="2" />
<text  x="454.11" y="959.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (15 samples, 0.02%)</title><rect x="462.6" y="901" width="0.2" height="15.0" fill="rgb(211,226,40)" rx="2" ry="2" />
<text  x="465.57" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,587 samples, 1.70%)</title><rect x="1093.9" y="517" width="20.1" height="15.0" fill="rgb(206,114,28)" rx="2" ry="2" />
<text  x="1096.88" y="527.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::extend_from_slice (44 samples, 0.05%)</title><rect x="446.8" y="965" width="0.5" height="15.0" fill="rgb(208,209,0)" rx="2" ry="2" />
<text  x="449.78" y="975.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (13 samples, 0.01%)</title><rect x="952.5" y="677" width="0.1" height="15.0" fill="rgb(239,21,30)" rx="2" ry="2" />
<text  x="955.45" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (154 samples, 0.17%)</title><rect x="62.8" y="789" width="1.9" height="15.0" fill="rgb(212,154,7)" rx="2" ry="2" />
<text  x="65.77" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_key (667 samples, 0.72%)</title><rect x="123.5" y="917" width="8.5" height="15.0" fill="rgb(232,38,51)" rx="2" ry="2" />
<text  x="126.52" y="927.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::new (910 samples, 0.98%)</title><rect x="491.7" y="1093" width="11.5" height="15.0" fill="rgb(238,191,42)" rx="2" ry="2" />
<text  x="494.66" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (10 samples, 0.01%)</title><rect x="227.8" y="613" width="0.1" height="15.0" fill="rgb(217,217,26)" rx="2" ry="2" />
<text  x="230.78" y="623.5" ></text>
</g>
<g >
<title>_rdl_alloc (24 samples, 0.03%)</title><rect x="100.2" y="789" width="0.3" height="15.0" fill="rgb(211,144,54)" rx="2" ry="2" />
<text  x="103.17" y="799.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::shared_v_drop::{{closure}} (16 samples, 0.02%)</title><rect x="37.4" y="1077" width="0.2" height="15.0" fill="rgb(227,114,46)" rx="2" ry="2" />
<text  x="40.36" y="1087.5" ></text>
</g>
<g >
<title>release_sock (21 samples, 0.02%)</title><rect x="766.5" y="549" width="0.3" height="15.0" fill="rgb(205,180,17)" rx="2" ry="2" />
<text  x="769.54" y="559.5" ></text>
</g>
<g >
<title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (43 samples, 0.05%)</title><rect x="1033.2" y="469" width="0.6" height="15.0" fill="rgb(236,30,53)" rx="2" ry="2" />
<text  x="1036.21" y="479.5" ></text>
</g>
<g >
<title>_ksize (46 samples, 0.05%)</title><rect x="573.3" y="709" width="0.6" height="15.0" fill="rgb(211,207,6)" rx="2" ry="2" />
<text  x="576.30" y="719.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (23 samples, 0.02%)</title><rect x="420.7" y="693" width="0.3" height="15.0" fill="rgb(206,62,30)" rx="2" ry="2" />
<text  x="423.67" y="703.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="143.0" y="565" width="0.2" height="15.0" fill="rgb(218,135,30)" rx="2" ry="2" />
<text  x="146.00" y="575.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="352.5" y="965" width="0.2" height="15.0" fill="rgb(246,205,53)" rx="2" ry="2" />
<text  x="355.50" y="975.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::selector_impl::JsonSelector as jsonpath_lib::paths::parser_token_handler::ParserTokenHandler&gt;::handle (278 samples, 0.30%)</title><rect x="238.9" y="933" width="3.5" height="15.0" fill="rgb(247,26,50)" rx="2" ry="2" />
<text  x="241.85" y="943.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::dequeue_node (277 samples, 0.30%)</title><rect x="810.5" y="757" width="3.5" height="15.0" fill="rgb(242,48,47)" rx="2" ry="2" />
<text  x="813.54" y="767.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (101 samples, 0.11%)</title><rect x="180.0" y="725" width="1.3" height="15.0" fill="rgb(230,145,2)" rx="2" ry="2" />
<text  x="183.04" y="735.5" ></text>
</g>
<g >
<title>actix_http::service::State&lt;T,S,B,X,U&gt;::poll (9 samples, 0.01%)</title><rect x="713.3" y="1029" width="0.2" height="15.0" fill="rgb(214,199,34)" rx="2" ry="2" />
<text  x="716.34" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (12 samples, 0.01%)</title><rect x="38.6" y="965" width="0.1" height="15.0" fill="rgb(225,187,12)" rx="2" ry="2" />
<text  x="41.60" y="975.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (32 samples, 0.03%)</title><rect x="127.9" y="725" width="0.4" height="15.0" fill="rgb(235,192,28)" rx="2" ry="2" />
<text  x="130.85" y="735.5" ></text>
</g>
<g >
<title>_ip_finish_output (1,998 samples, 2.14%)</title><rect x="301.5" y="741" width="25.3" height="15.0" fill="rgb(214,140,54)" rx="2" ry="2" />
<text  x="304.51" y="751.5" >_..</text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="427.2" y="645" width="0.2" height="15.0" fill="rgb(229,180,43)" rx="2" ry="2" />
<text  x="430.22" y="655.5" ></text>
</g>
<g >
<title>tokio::time::wheel::Wheel&lt;T&gt;::poll_at (160 samples, 0.17%)</title><rect x="1007.3" y="853" width="2.0" height="15.0" fill="rgb(245,39,42)" rx="2" ry="2" />
<text  x="1010.26" y="863.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (42 samples, 0.05%)</title><rect x="120.0" y="885" width="0.6" height="15.0" fill="rgb(229,84,14)" rx="2" ry="2" />
<text  x="123.04" y="895.5" ></text>
</g>
<g >
<title>tcp_send_fin (15 samples, 0.02%)</title><rect x="290.4" y="901" width="0.2" height="15.0" fill="rgb(208,81,8)" rx="2" ry="2" />
<text  x="293.42" y="911.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.01%)</title><rect x="204.3" y="517" width="0.2" height="15.0" fill="rgb(223,114,24)" rx="2" ry="2" />
<text  x="207.32" y="527.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (339 samples, 0.36%)</title><rect x="93.3" y="901" width="4.3" height="15.0" fill="rgb(243,143,7)" rx="2" ry="2" />
<text  x="96.28" y="911.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (249 samples, 0.27%)</title><rect x="1153.9" y="741" width="3.1" height="15.0" fill="rgb(221,75,7)" rx="2" ry="2" />
<text  x="1156.89" y="751.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (31 samples, 0.03%)</title><rect x="447.4" y="965" width="0.4" height="15.0" fill="rgb(210,49,16)" rx="2" ry="2" />
<text  x="450.38" y="975.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (29 samples, 0.03%)</title><rect x="471.7" y="773" width="0.4" height="15.0" fill="rgb(240,164,19)" rx="2" ry="2" />
<text  x="474.71" y="783.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (26 samples, 0.03%)</title><rect x="335.5" y="965" width="0.4" height="15.0" fill="rgb(215,86,17)" rx="2" ry="2" />
<text  x="338.54" y="975.5" ></text>
</g>
<g >
<title>_GI___libc_free (17 samples, 0.02%)</title><rect x="172.6" y="821" width="0.2" height="15.0" fill="rgb(237,13,0)" rx="2" ry="2" />
<text  x="175.61" y="831.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::clear_read_ready (141 samples, 0.15%)</title><rect x="461.0" y="997" width="1.8" height="15.0" fill="rgb(253,116,44)" rx="2" ry="2" />
<text  x="464.01" y="1007.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::current_pos (12 samples, 0.01%)</title><rect x="97.4" y="869" width="0.2" height="15.0" fill="rgb(237,134,32)" rx="2" ry="2" />
<text  x="100.42" y="879.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.01%)</title><rect x="461.0" y="901" width="0.1" height="15.0" fill="rgb(205,203,38)" rx="2" ry="2" />
<text  x="464.03" y="911.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="154.1" y="565" width="0.1" height="15.0" fill="rgb(210,135,15)" rx="2" ry="2" />
<text  x="157.08" y="575.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::transition_to_notified (14 samples, 0.02%)</title><rect x="484.2" y="565" width="0.1" height="15.0" fill="rgb(220,20,28)" rx="2" ry="2" />
<text  x="487.16" y="575.5" ></text>
</g>
<g >
<title>validate_xmit_skb (36 samples, 0.04%)</title><rect x="626.5" y="101" width="0.4" height="15.0" fill="rgb(248,120,8)" rx="2" ry="2" />
<text  x="629.48" y="111.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (158 samples, 0.17%)</title><rect x="189.5" y="629" width="2.0" height="15.0" fill="rgb(212,197,40)" rx="2" ry="2" />
<text  x="192.54" y="639.5" ></text>
</g>
<g >
<title>&lt;actix_server::service::StreamService&lt;T&gt; as actix_service::Service&gt;::call (10 samples, 0.01%)</title><rect x="65.7" y="1253" width="0.2" height="15.0" fill="rgb(241,150,48)" rx="2" ry="2" />
<text  x="68.75" y="1263.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.01%)</title><rect x="420.6" y="693" width="0.1" height="15.0" fill="rgb(225,127,8)" rx="2" ry="2" />
<text  x="423.55" y="703.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (1,654 samples, 1.77%)</title><rect x="1093.2" y="613" width="20.9" height="15.0" fill="rgb(252,80,6)" rx="2" ry="2" />
<text  x="1096.20" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (14 samples, 0.02%)</title><rect x="112.6" y="933" width="0.2" height="15.0" fill="rgb(211,199,33)" rx="2" ry="2" />
<text  x="115.58" y="943.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_movemask_epi8 (21 samples, 0.02%)</title><rect x="224.7" y="597" width="0.3" height="15.0" fill="rgb(217,130,38)" rx="2" ry="2" />
<text  x="227.71" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="424.6" y="629" width="0.2" height="15.0" fill="rgb(208,89,34)" rx="2" ry="2" />
<text  x="427.55" y="639.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (8 samples, 0.01%)</title><rect x="196.1" y="565" width="0.1" height="15.0" fill="rgb(223,191,13)" rx="2" ry="2" />
<text  x="199.12" y="575.5" ></text>
</g>
<g >
<title>core::cmp::PartialOrd::gt (59 samples, 0.06%)</title><rect x="976.3" y="853" width="0.7" height="15.0" fill="rgb(238,146,7)" rx="2" ry="2" />
<text  x="979.26" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,989 samples, 4.28%)</title><rect x="285.5" y="997" width="50.5" height="15.0" fill="rgb(207,137,20)" rx="2" ry="2" />
<text  x="288.50" y="1007.5" >entry..</text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (770 samples, 0.83%)</title><rect x="515.4" y="757" width="9.7" height="15.0" fill="rgb(240,76,38)" rx="2" ry="2" />
<text  x="518.39" y="767.5" ></text>
</g>
<g >
<title>actix_server::worker::Worker::start::{{closure}}::{{closure}} (770 samples, 0.83%)</title><rect x="515.4" y="693" width="9.7" height="15.0" fill="rgb(207,15,48)" rx="2" ry="2" />
<text  x="518.39" y="703.5" ></text>
</g>
<g >
<title>tokio::coop::budget (770 samples, 0.83%)</title><rect x="515.4" y="1205" width="9.7" height="15.0" fill="rgb(249,48,52)" rx="2" ry="2" />
<text  x="518.39" y="1215.5" ></text>
</g>
<g >
<title>_fdget (61 samples, 0.07%)</title><rect x="671.7" y="805" width="0.8" height="15.0" fill="rgb(225,74,30)" rx="2" ry="2" />
<text  x="674.69" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (25 samples, 0.03%)</title><rect x="42.5" y="1077" width="0.3" height="15.0" fill="rgb(211,228,14)" rx="2" ry="2" />
<text  x="45.49" y="1087.5" ></text>
</g>
<g >
<title>core::mem::drop (56 samples, 0.06%)</title><rect x="1043.5" y="277" width="0.8" height="15.0" fill="rgb(218,6,18)" rx="2" ry="2" />
<text  x="1046.54" y="287.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (14 samples, 0.02%)</title><rect x="1003.9" y="757" width="0.2" height="15.0" fill="rgb(233,176,52)" rx="2" ry="2" />
<text  x="1006.92" y="767.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (102 samples, 0.11%)</title><rect x="228.0" y="821" width="1.2" height="15.0" fill="rgb(223,199,38)" rx="2" ry="2" />
<text  x="230.95" y="831.5" ></text>
</g>
<g >
<title>rb_insert_color (8 samples, 0.01%)</title><rect x="329.9" y="821" width="0.1" height="15.0" fill="rgb(234,166,30)" rx="2" ry="2" />
<text  x="332.92" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk (79 samples, 0.08%)</title><rect x="174.5" y="565" width="1.0" height="15.0" fill="rgb(225,79,45)" rx="2" ry="2" />
<text  x="177.47" y="575.5" ></text>
</g>
<g >
<title>&lt;mio::net::tcp::TcpStream as mio::event_imp::Evented&gt;::register (99 samples, 0.11%)</title><rect x="513.0" y="741" width="1.2" height="15.0" fill="rgb(246,213,41)" rx="2" ry="2" />
<text  x="515.99" y="751.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (96 samples, 0.10%)</title><rect x="486.3" y="1237" width="1.2" height="15.0" fill="rgb(226,159,54)" rx="2" ry="2" />
<text  x="489.33" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.01%)</title><rect x="163.0" y="661" width="0.1" height="15.0" fill="rgb(231,52,53)" rx="2" ry="2" />
<text  x="166.03" y="671.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="143.3" y="597" width="0.2" height="15.0" fill="rgb(240,211,53)" rx="2" ry="2" />
<text  x="146.32" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (28 samples, 0.03%)</title><rect x="1006.0" y="821" width="0.4" height="15.0" fill="rgb(220,28,24)" rx="2" ry="2" />
<text  x="1009.03" y="831.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (22 samples, 0.02%)</title><rect x="364.8" y="981" width="0.3" height="15.0" fill="rgb(240,55,12)" rx="2" ry="2" />
<text  x="367.79" y="991.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (83 samples, 0.09%)</title><rect x="136.0" y="917" width="1.1" height="15.0" fill="rgb(230,109,21)" rx="2" ry="2" />
<text  x="139.02" y="927.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::with_hasher_in (47 samples, 0.05%)</title><rect x="228.7" y="805" width="0.5" height="15.0" fill="rgb(246,196,1)" rx="2" ry="2" />
<text  x="231.65" y="815.5" ></text>
</g>
<g >
<title>actix_server::worker::WorkerAvailability::available (30 samples, 0.03%)</title><rect x="1087.9" y="997" width="0.4" height="15.0" fill="rgb(220,82,4)" rx="2" ry="2" />
<text  x="1090.87" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::vec_deque::VecDeque&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;&gt;&gt;&gt; (25 samples, 0.03%)</title><rect x="971.9" y="629" width="0.3" height="15.0" fill="rgb(207,113,40)" rx="2" ry="2" />
<text  x="974.88" y="639.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (8 samples, 0.01%)</title><rect x="1123.4" y="789" width="0.1" height="15.0" fill="rgb(241,210,26)" rx="2" ry="2" />
<text  x="1126.38" y="799.5" ></text>
</g>
<g >
<title>bytes::bytes::release_shared (47 samples, 0.05%)</title><rect x="42.2" y="1125" width="0.6" height="15.0" fill="rgb(254,229,8)" rx="2" ry="2" />
<text  x="45.22" y="1135.5" ></text>
</g>
<g >
<title>_kmalloc_reserv.sr. (96 samples, 0.10%)</title><rect x="292.7" y="853" width="1.2" height="15.0" fill="rgb(224,63,20)" rx="2" ry="2" />
<text  x="295.70" y="863.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (46 samples, 0.05%)</title><rect x="36.7" y="1077" width="0.6" height="15.0" fill="rgb(248,152,40)" rx="2" ry="2" />
<text  x="39.70" y="1087.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::key (9 samples, 0.01%)</title><rect x="117.5" y="901" width="0.1" height="15.0" fill="rgb(240,72,8)" rx="2" ry="2" />
<text  x="120.47" y="911.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (50 samples, 0.05%)</title><rect x="133.7" y="901" width="0.6" height="15.0" fill="rgb(250,223,0)" rx="2" ry="2" />
<text  x="136.71" y="911.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek::{{closure}} (13 samples, 0.01%)</title><rect x="471.9" y="693" width="0.2" height="15.0" fill="rgb(253,110,14)" rx="2" ry="2" />
<text  x="474.90" y="703.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (13 samples, 0.01%)</title><rect x="204.6" y="533" width="0.2" height="15.0" fill="rgb(251,36,14)" rx="2" ry="2" />
<text  x="207.62" y="543.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::to_task (17 samples, 0.02%)</title><rect x="973.6" y="741" width="0.2" height="15.0" fill="rgb(245,176,49)" rx="2" ry="2" />
<text  x="976.58" y="751.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1,280 samples, 1.37%)</title><rect x="306.3" y="501" width="16.2" height="15.0" fill="rgb(249,25,38)" rx="2" ry="2" />
<text  x="309.28" y="511.5" ></text>
</g>
<g >
<title>_srcu_read_lock (28 samples, 0.03%)</title><rect x="750.6" y="469" width="0.3" height="15.0" fill="rgb(223,34,2)" rx="2" ry="2" />
<text  x="753.57" y="479.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (22 samples, 0.02%)</title><rect x="673.4" y="821" width="0.2" height="15.0" fill="rgb(226,206,0)" rx="2" ry="2" />
<text  x="676.36" y="831.5" ></text>
</g>
<g >
<title>migrate_enable (23 samples, 0.02%)</title><rect x="587.4" y="597" width="0.3" height="15.0" fill="rgb(235,171,51)" rx="2" ry="2" />
<text  x="590.40" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,593 samples, 1.71%)</title><rect x="686.9" y="805" width="20.2" height="15.0" fill="rgb(238,162,26)" rx="2" ry="2" />
<text  x="689.93" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (154 samples, 0.17%)</title><rect x="144.0" y="725" width="2.0" height="15.0" fill="rgb(232,51,38)" rx="2" ry="2" />
<text  x="147.00" y="735.5" ></text>
</g>
<g >
<title>core::mem::replace (28 samples, 0.03%)</title><rect x="150.2" y="869" width="0.4" height="15.0" fill="rgb(219,178,16)" rx="2" ry="2" />
<text  x="153.22" y="879.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::Level&lt;T&gt;::next_expiration (44 samples, 0.05%)</title><rect x="994.2" y="805" width="0.5" height="15.0" fill="rgb(214,153,19)" rx="2" ry="2" />
<text  x="997.19" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::op (591 samples, 0.63%)</title><rect x="99.0" y="885" width="7.5" height="15.0" fill="rgb(209,81,44)" rx="2" ry="2" />
<text  x="102.01" y="895.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (23 samples, 0.02%)</title><rect x="503.4" y="1189" width="0.3" height="15.0" fill="rgb(224,133,20)" rx="2" ry="2" />
<text  x="506.42" y="1199.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll2 (54 samples, 0.06%)</title><rect x="975.3" y="773" width="0.7" height="15.0" fill="rgb(233,77,44)" rx="2" ry="2" />
<text  x="978.30" y="783.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.01%)</title><rect x="227.3" y="581" width="0.1" height="15.0" fill="rgb(217,78,16)" rx="2" ry="2" />
<text  x="230.27" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (119 samples, 0.13%)</title><rect x="457.3" y="1045" width="1.5" height="15.0" fill="rgb(247,225,43)" rx="2" ry="2" />
<text  x="460.34" y="1055.5" ></text>
</g>
<g >
<title>skb_rbtree_purge (8 samples, 0.01%)</title><rect x="316.8" y="405" width="0.1" height="15.0" fill="rgb(214,202,3)" rx="2" ry="2" />
<text  x="319.83" y="415.5" ></text>
</g>
<g >
<title>_netif_receive_skb_core (223 samples, 0.24%)</title><rect x="596.0" y="437" width="2.8" height="15.0" fill="rgb(216,181,3)" rx="2" ry="2" />
<text  x="598.97" y="447.5" ></text>
</g>
<g >
<title>tokio::runtime::context::enter (22,824 samples, 24.48%)</title><rect x="795.0" y="997" width="288.9" height="15.0" fill="rgb(232,179,44)" rx="2" ry="2" />
<text  x="797.97" y="1007.5" >tokio::runtime::context::enter</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (17 samples, 0.02%)</title><rect x="143.8" y="565" width="0.2" height="15.0" fill="rgb(229,191,3)" rx="2" ry="2" />
<text  x="146.78" y="575.5" ></text>
</g>
<g >
<title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (25 samples, 0.03%)</title><rect x="29.3" y="1093" width="0.3" height="15.0" fill="rgb(235,198,20)" rx="2" ry="2" />
<text  x="32.25" y="1103.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::{{closure}} (770 samples, 0.83%)</title><rect x="515.4" y="1141" width="9.7" height="15.0" fill="rgb(217,226,23)" rx="2" ry="2" />
<text  x="518.39" y="1151.5" ></text>
</g>
<g >
<title>tokio::runtime::enter::disallow_blocking::{{closure}} (10 samples, 0.01%)</title><rect x="1024.9" y="645" width="0.1" height="15.0" fill="rgb(221,152,34)" rx="2" ry="2" />
<text  x="1027.86" y="655.5" ></text>
</g>
<g >
<title>up_write (18 samples, 0.02%)</title><rect x="767.9" y="597" width="0.2" height="15.0" fill="rgb(240,46,28)" rx="2" ry="2" />
<text  x="770.88" y="607.5" ></text>
</g>
<g >
<title>raw_read_lock_irqsave (30 samples, 0.03%)</title><rect x="289.8" y="821" width="0.4" height="15.0" fill="rgb(252,164,6)" rx="2" ry="2" />
<text  x="292.80" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (81 samples, 0.09%)</title><rect x="221.9" y="517" width="1.0" height="15.0" fill="rgb(217,64,26)" rx="2" ry="2" />
<text  x="224.85" y="527.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (636 samples, 0.68%)</title><rect x="1165.1" y="757" width="8.1" height="15.0" fill="rgb(237,70,7)" rx="2" ry="2" />
<text  x="1168.11" y="767.5" ></text>
</g>
<g >
<title>evict (510 samples, 0.55%)</title><rect x="749.0" y="549" width="6.5" height="15.0" fill="rgb(248,4,13)" rx="2" ry="2" />
<text  x="752.04" y="559.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::extend_from_slice (31 samples, 0.03%)</title><rect x="456.8" y="1013" width="0.4" height="15.0" fill="rgb(238,58,49)" rx="2" ry="2" />
<text  x="459.82" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (44 samples, 0.05%)</title><rect x="231.3" y="853" width="0.6" height="15.0" fill="rgb(211,182,10)" rx="2" ry="2" />
<text  x="234.32" y="863.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (23 samples, 0.02%)</title><rect x="41.7" y="1109" width="0.3" height="15.0" fill="rgb(215,133,29)" rx="2" ry="2" />
<text  x="44.73" y="1119.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (32 samples, 0.03%)</title><rect x="528.7" y="517" width="0.5" height="15.0" fill="rgb(208,174,37)" rx="2" ry="2" />
<text  x="531.75" y="527.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::array (1,006 samples, 1.08%)</title><rect x="53.0" y="997" width="12.7" height="15.0" fill="rgb(206,213,17)" rx="2" ry="2" />
<text  x="56.01" y="1007.5" ></text>
</g>
<g >
<title>filp_close (128 samples, 0.14%)</title><rect x="735.3" y="661" width="1.6" height="15.0" fill="rgb(235,85,50)" rx="2" ry="2" />
<text  x="738.32" y="671.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::basic_scheduler::Shared as tokio::util::wake::Wake&gt;::wake_by_ref (33 samples, 0.04%)</title><rect x="1115.9" y="821" width="0.5" height="15.0" fill="rgb(229,7,17)" rx="2" ry="2" />
<text  x="1118.95" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::enter::{{closure}} (22,824 samples, 24.48%)</title><rect x="795.0" y="917" width="288.9" height="15.0" fill="rgb(249,220,16)" rx="2" ry="2" />
<text  x="797.97" y="927.5" >tokio::runtime::basic_scheduler::enter..</text>
</g>
<g >
<title>tokio::runtime::task::waker::clone_waker (10 samples, 0.01%)</title><rect x="677.6" y="837" width="0.1" height="15.0" fill="rgb(245,72,24)" rx="2" ry="2" />
<text  x="680.60" y="847.5" ></text>
</g>
<g >
<title>_tcp_send_ac.ar. (15 samples, 0.02%)</title><rect x="615.2" y="293" width="0.2" height="15.0" fill="rgb(220,72,24)" rx="2" ry="2" />
<text  x="618.22" y="303.5" ></text>
</g>
<g >
<title>refill_obj_stock (59 samples, 0.06%)</title><rect x="746.5" y="533" width="0.7" height="15.0" fill="rgb(234,88,33)" rx="2" ry="2" />
<text  x="749.50" y="543.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::slot_range (15 samples, 0.02%)</title><rect x="994.9" y="805" width="0.2" height="15.0" fill="rgb(253,191,12)" rx="2" ry="2" />
<text  x="997.87" y="815.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set1_epi8 (52 samples, 0.06%)</title><rect x="177.8" y="453" width="0.6" height="15.0" fill="rgb(219,193,34)" rx="2" ry="2" />
<text  x="180.75" y="463.5" ></text>
</g>
<g >
<title>http::uri::Uri::has_path (9 samples, 0.01%)</title><rect x="356.1" y="901" width="0.1" height="15.0" fill="rgb(205,107,21)" rx="2" ry="2" />
<text  x="359.08" y="911.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1,339 samples, 1.44%)</title><rect x="306.1" y="549" width="17.0" height="15.0" fill="rgb(242,5,3)" rx="2" ry="2" />
<text  x="309.11" y="559.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (19 samples, 0.02%)</title><rect x="228.3" y="709" width="0.3" height="15.0" fill="rgb(235,186,6)" rx="2" ry="2" />
<text  x="231.32" y="719.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="37.3" y="1125" width="0.3" height="15.0" fill="rgb(223,93,23)" rx="2" ry="2" />
<text  x="40.28" y="1135.5" ></text>
</g>
<g >
<title>_rust_probestack (36 samples, 0.04%)</title><rect x="66.5" y="1141" width="0.5" height="15.0" fill="rgb(253,215,23)" rx="2" ry="2" />
<text  x="69.49" y="1151.5" ></text>
</g>
<g >
<title>&lt;actix_http::body::Body as core::convert::From&lt;alloc::string::String&gt;&gt;::from (190 samples, 0.20%)</title><rect x="377.7" y="869" width="2.4" height="15.0" fill="rgb(215,176,48)" rx="2" ry="2" />
<text  x="380.68" y="879.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (9 samples, 0.01%)</title><rect x="538.8" y="869" width="0.1" height="15.0" fill="rgb(253,127,17)" rx="2" ry="2" />
<text  x="541.77" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (21 samples, 0.02%)</title><rect x="997.5" y="725" width="0.3" height="15.0" fill="rgb(253,4,18)" rx="2" ry="2" />
<text  x="1000.49" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.02%)</title><rect x="226.1" y="613" width="0.3" height="15.0" fill="rgb(249,6,14)" rx="2" ry="2" />
<text  x="229.12" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (156 samples, 0.17%)</title><rect x="427.4" y="597" width="2.0" height="15.0" fill="rgb(240,90,45)" rx="2" ry="2" />
<text  x="430.39" y="607.5" ></text>
</g>
<g >
<title>kfree_skb_partial (18 samples, 0.02%)</title><rect x="311.8" y="437" width="0.2" height="15.0" fill="rgb(218,146,53)" rx="2" ry="2" />
<text  x="314.78" y="447.5" ></text>
</g>
<g >
<title>pick_next_task_fair (149 samples, 0.16%)</title><rect x="940.9" y="597" width="1.9" height="15.0" fill="rgb(219,67,10)" rx="2" ry="2" />
<text  x="943.89" y="607.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (86 samples, 0.09%)</title><rect x="1026.6" y="613" width="1.1" height="15.0" fill="rgb(234,83,5)" rx="2" ry="2" />
<text  x="1029.60" y="623.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.01%)</title><rect x="528.3" y="581" width="0.2" height="15.0" fill="rgb(241,140,18)" rx="2" ry="2" />
<text  x="531.34" y="591.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="471.9" y="677" width="0.2" height="15.0" fill="rgb(242,50,31)" rx="2" ry="2" />
<text  x="474.90" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (33 samples, 0.04%)</title><rect x="369.3" y="965" width="0.4" height="15.0" fill="rgb(209,53,11)" rx="2" ry="2" />
<text  x="372.30" y="975.5" ></text>
</g>
<g >
<title>raw_spin_lock_bh (40 samples, 0.04%)</title><rect x="542.3" y="773" width="0.5" height="15.0" fill="rgb(221,55,50)" rx="2" ry="2" />
<text  x="545.32" y="783.5" ></text>
</g>
<g >
<title>raw_spin_lock_irqsave (14 samples, 0.02%)</title><rect x="318.8" y="357" width="0.2" height="15.0" fill="rgb(243,77,25)" rx="2" ry="2" />
<text  x="321.84" y="367.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (1,704 samples, 1.83%)</title><rect x="1092.6" y="661" width="21.5" height="15.0" fill="rgb(206,84,50)" rx="2" ry="2" />
<text  x="1095.57" y="671.5" >m..</text>
</g>
<g >
<title>ryu::d2s::d2d (178 samples, 0.19%)</title><rect x="431.5" y="613" width="2.3" height="15.0" fill="rgb(251,211,4)" rx="2" ry="2" />
<text  x="434.53" y="623.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_f64 (427 samples, 0.46%)</title><rect x="429.6" y="693" width="5.4" height="15.0" fill="rgb(220,181,28)" rx="2" ry="2" />
<text  x="432.58" y="703.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (37 samples, 0.04%)</title><rect x="418.9" y="805" width="0.5" height="15.0" fill="rgb(244,94,49)" rx="2" ry="2" />
<text  x="421.91" y="815.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (939 samples, 1.01%)</title><rect x="1137.9" y="789" width="11.9" height="15.0" fill="rgb(245,208,0)" rx="2" ry="2" />
<text  x="1140.94" y="799.5" ></text>
</g>
<g >
<title>tokio::io::driver::Direction::mask (29 samples, 0.03%)</title><rect x="337.6" y="981" width="0.4" height="15.0" fill="rgb(218,208,5)" rx="2" ry="2" />
<text  x="340.64" y="991.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (307 samples, 0.33%)</title><rect x="956.9" y="693" width="3.9" height="15.0" fill="rgb(239,94,43)" rx="2" ry="2" />
<text  x="959.87" y="703.5" ></text>
</g>
<g >
<title>_tcp_ack_snd_check (177 samples, 0.19%)</title><rect x="309.5" y="437" width="2.3" height="15.0" fill="rgb(251,89,29)" rx="2" ry="2" />
<text  x="312.54" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::selector::terms::ExprTerm&gt; (49 samples, 0.05%)</title><rect x="148.0" y="917" width="0.6" height="15.0" fill="rgb(226,94,44)" rx="2" ry="2" />
<text  x="150.98" y="927.5" ></text>
</g>
<g >
<title>tcp_send_fin (3,247 samples, 3.48%)</title><rect x="291.6" y="885" width="41.1" height="15.0" fill="rgb(219,168,31)" rx="2" ry="2" />
<text  x="294.61" y="895.5" >tcp..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.01%)</title><rect x="237.1" y="1029" width="0.1" height="15.0" fill="rgb(241,193,44)" rx="2" ry="2" />
<text  x="240.06" y="1039.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (3,321 samples, 3.56%)</title><rect x="185.9" y="853" width="42.0" height="15.0" fill="rgb(216,47,6)" rx="2" ry="2" />
<text  x="188.89" y="863.5" >cor..</text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::parse (73 samples, 0.08%)</title><rect x="88.6" y="789" width="0.9" height="15.0" fill="rgb(231,87,50)" rx="2" ry="2" />
<text  x="91.62" y="799.5" ></text>
</g>
<g >
<title>_dentry_kill (19 samples, 0.02%)</title><rect x="741.2" y="613" width="0.3" height="15.0" fill="rgb(206,110,37)" rx="2" ry="2" />
<text  x="744.23" y="623.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (93 samples, 0.10%)</title><rect x="146.0" y="773" width="1.1" height="15.0" fill="rgb(226,193,6)" rx="2" ry="2" />
<text  x="148.95" y="783.5" ></text>
</g>
<g >
<title>&lt;http::uri::authority::Authority as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="360.2" y="981" width="0.2" height="15.0" fill="rgb(226,104,29)" rx="2" ry="2" />
<text  x="363.22" y="991.5" ></text>
</g>
<g >
<title>cond_resched (14 samples, 0.02%)</title><rect x="558.8" y="757" width="0.1" height="15.0" fill="rgb(232,79,27)" rx="2" ry="2" />
<text  x="561.77" y="767.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (9 samples, 0.01%)</title><rect x="38.4" y="1013" width="0.1" height="15.0" fill="rgb(211,177,36)" rx="2" ry="2" />
<text  x="41.37" y="1023.5" ></text>
</g>
<g >
<title>tokio::time::driver::Driver&lt;T&gt;::process (906 samples, 0.97%)</title><rect x="983.6" y="853" width="11.5" height="15.0" fill="rgb(207,190,5)" rx="2" ry="2" />
<text  x="986.59" y="863.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk (770 samples, 0.83%)</title><rect x="173.6" y="901" width="9.8" height="15.0" fill="rgb(252,216,49)" rx="2" ry="2" />
<text  x="176.64" y="911.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (55 samples, 0.06%)</title><rect x="703.9" y="725" width="0.7" height="15.0" fill="rgb(220,183,47)" rx="2" ry="2" />
<text  x="706.86" y="735.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths (692 samples, 0.74%)</title><rect x="57.0" y="869" width="8.7" height="15.0" fill="rgb(237,114,5)" rx="2" ry="2" />
<text  x="59.99" y="879.5" ></text>
</g>
<g >
<title>lock_sock_nested (13 samples, 0.01%)</title><rect x="288.0" y="901" width="0.2" height="15.0" fill="rgb(231,14,2)" rx="2" ry="2" />
<text  x="291.04" y="911.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_array_eof (179 samples, 0.19%)</title><rect x="415.1" y="821" width="2.3" height="15.0" fill="rgb(245,4,39)" rx="2" ry="2" />
<text  x="418.12" y="831.5" ></text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (31 samples, 0.03%)</title><rect x="180.9" y="645" width="0.4" height="15.0" fill="rgb(220,88,44)" rx="2" ry="2" />
<text  x="183.93" y="655.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="446.5" y="917" width="0.1" height="15.0" fill="rgb(231,161,19)" rx="2" ry="2" />
<text  x="449.48" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (68 samples, 0.07%)</title><rect x="231.3" y="917" width="0.9" height="15.0" fill="rgb(211,163,42)" rx="2" ry="2" />
<text  x="234.32" y="927.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::or (11 samples, 0.01%)</title><rect x="96.9" y="805" width="0.1" height="15.0" fill="rgb(212,97,14)" rx="2" ry="2" />
<text  x="99.89" y="815.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="236.3" y="997" width="0.1" height="15.0" fill="rgb(240,43,36)" rx="2" ry="2" />
<text  x="239.31" y="1007.5" ></text>
</g>
<g >
<title>&lt;indexmap::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="173.9" y="789" width="0.1" height="15.0" fill="rgb(225,192,18)" rx="2" ry="2" />
<text  x="176.93" y="799.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (1,426 samples, 1.53%)</title><rect x="486.3" y="1253" width="18.1" height="15.0" fill="rgb(226,122,21)" rx="2" ry="2" />
<text  x="489.33" y="1263.5" ></text>
</g>
<g >
<title>&lt;mio::sys::unix::tcp::TcpStream as std::os::imp::unix::io::AsRawFd&gt;::as_raw_fd (110 samples, 0.12%)</title><rect x="786.0" y="757" width="1.4" height="15.0" fill="rgb(248,145,41)" rx="2" ry="2" />
<text  x="789.00" y="767.5" ></text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::upgrade (16 samples, 0.02%)</title><rect x="970.2" y="549" width="0.2" height="15.0" fill="rgb(250,94,32)" rx="2" ry="2" />
<text  x="973.19" y="559.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (24 samples, 0.03%)</title><rect x="202.3" y="581" width="0.3" height="15.0" fill="rgb(220,117,15)" rx="2" ry="2" />
<text  x="205.32" y="591.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::select (49 samples, 0.05%)</title><rect x="975.4" y="757" width="0.6" height="15.0" fill="rgb(229,56,23)" rx="2" ry="2" />
<text  x="978.36" y="767.5" ></text>
</g>
<g >
<title>actix_http::extensions::Extensions::new (30 samples, 0.03%)</title><rect x="530.9" y="1029" width="0.4" height="15.0" fill="rgb(224,67,15)" rx="2" ry="2" />
<text  x="533.90" y="1039.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (166 samples, 0.18%)</title><rect x="996.8" y="821" width="2.1" height="15.0" fill="rgb(232,59,9)" rx="2" ry="2" />
<text  x="999.82" y="831.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (770 samples, 0.83%)</title><rect x="515.4" y="853" width="9.7" height="15.0" fill="rgb(220,93,8)" rx="2" ry="2" />
<text  x="518.39" y="863.5" ></text>
</g>
<g >
<title>_memcmp_avx2_movbe (38 samples, 0.04%)</title><rect x="130.9" y="613" width="0.5" height="15.0" fill="rgb(231,108,2)" rx="2" ry="2" />
<text  x="133.91" y="623.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::from_raw (36 samples, 0.04%)</title><rect x="483.6" y="645" width="0.5" height="15.0" fill="rgb(214,3,20)" rx="2" ry="2" />
<text  x="486.61" y="655.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (139 samples, 0.15%)</title><rect x="153.1" y="677" width="1.8" height="15.0" fill="rgb(206,142,38)" rx="2" ry="2" />
<text  x="156.14" y="687.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_join (16 samples, 0.02%)</title><rect x="484.1" y="661" width="0.2" height="15.0" fill="rgb(225,51,32)" rx="2" ry="2" />
<text  x="487.14" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;dyn tokio::park::Unpark&gt; as tokio::park::Unpark&gt;::unpark (1,786 samples, 1.92%)</title><rect x="1092.0" y="773" width="22.6" height="15.0" fill="rgb(243,220,24)" rx="2" ry="2" />
<text  x="1094.99" y="783.5" >&lt;..</text>
</g>
<g >
<title>&lt;&amp;std::os::imp::unix::net::listener::UnixListener as core::iter::traits::collect::IntoIterator&gt;::into_iter (43 samples, 0.05%)</title><rect x="786.1" y="725" width="0.6" height="15.0" fill="rgb(238,204,47)" rx="2" ry="2" />
<text  x="789.13" y="735.5" ></text>
</g>
<g >
<title>&lt;actix_http::message::RequestHead as actix_http::message::Head&gt;::clear (243 samples, 0.26%)</title><rect x="38.4" y="1125" width="3.0" height="15.0" fill="rgb(247,98,46)" rx="2" ry="2" />
<text  x="41.37" y="1135.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (485 samples, 0.52%)</title><rect x="141.2" y="869" width="6.2" height="15.0" fill="rgb(253,22,14)" rx="2" ry="2" />
<text  x="144.23" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (39 samples, 0.04%)</title><rect x="367.7" y="933" width="0.5" height="15.0" fill="rgb(254,56,3)" rx="2" ry="2" />
<text  x="370.70" y="943.5" ></text>
</g>
<g >
<title>std::panicking::try (2,673 samples, 2.87%)</title><rect x="1036.2" y="517" width="33.8" height="15.0" fill="rgb(228,196,10)" rx="2" ry="2" />
<text  x="1039.17" y="527.5" >st..</text>
</g>
<g >
<title>syscall_return_via_sysret (20 samples, 0.02%)</title><rect x="1159.9" y="885" width="0.3" height="15.0" fill="rgb(224,137,21)" rx="2" ry="2" />
<text  x="1162.95" y="895.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (23 samples, 0.02%)</title><rect x="340.4" y="949" width="0.3" height="15.0" fill="rgb(214,66,3)" rx="2" ry="2" />
<text  x="343.36" y="959.5" ></text>
</g>
<g >
<title>tokio::runtime::context::enter (1,071 samples, 1.15%)</title><rect x="472.8" y="1157" width="13.5" height="15.0" fill="rgb(205,34,15)" rx="2" ry="2" />
<text  x="475.77" y="1167.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (331 samples, 0.36%)</title><rect x="525.1" y="821" width="4.2" height="15.0" fill="rgb(239,41,23)" rx="2" ry="2" />
<text  x="528.14" y="831.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1,573 samples, 1.69%)</title><rect x="244.1" y="949" width="19.9" height="15.0" fill="rgb(239,125,50)" rx="2" ry="2" />
<text  x="247.07" y="959.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (15 samples, 0.02%)</title><rect x="365.1" y="949" width="0.2" height="15.0" fill="rgb(247,44,9)" rx="2" ry="2" />
<text  x="368.07" y="959.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk_dedup_all::{{closure}} (3,319 samples, 3.56%)</title><rect x="185.9" y="773" width="42.0" height="15.0" fill="rgb(229,148,5)" rx="2" ry="2" />
<text  x="188.89" y="783.5" >jso..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (83 samples, 0.09%)</title><rect x="136.0" y="901" width="1.1" height="15.0" fill="rgb(239,187,17)" rx="2" ry="2" />
<text  x="139.02" y="911.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (18 samples, 0.02%)</title><rect x="119.2" y="789" width="0.2" height="15.0" fill="rgb(245,14,38)" rx="2" ry="2" />
<text  x="122.17" y="799.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (53 samples, 0.06%)</title><rect x="528.5" y="533" width="0.7" height="15.0" fill="rgb(232,102,53)" rx="2" ry="2" />
<text  x="531.48" y="543.5" ></text>
</g>
<g >
<title>bytes::bytes::promotable_even_clone (60 samples, 0.06%)</title><rect x="360.5" y="933" width="0.8" height="15.0" fill="rgb(225,181,16)" rx="2" ry="2" />
<text  x="363.53" y="943.5" ></text>
</g>
<g >
<title>alloc_fd (73 samples, 0.08%)</title><rect x="1120.3" y="789" width="0.9" height="15.0" fill="rgb(239,185,51)" rx="2" ry="2" />
<text  x="1123.28" y="799.5" ></text>
</g>
<g >
<title>&lt;mio::sys::unix::ready::UnixReady as core::ops::deref::Deref&gt;::deref (23 samples, 0.02%)</title><rect x="709.8" y="885" width="0.3" height="15.0" fill="rgb(239,22,36)" rx="2" ry="2" />
<text  x="712.83" y="895.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::from_std (1,573 samples, 1.69%)</title><rect x="244.1" y="773" width="19.9" height="15.0" fill="rgb(238,173,11)" rx="2" ry="2" />
<text  x="247.07" y="783.5" ></text>
</g>
<g >
<title>_rdl_alloc (13 samples, 0.01%)</title><rect x="419.2" y="741" width="0.2" height="15.0" fill="rgb(225,136,5)" rx="2" ry="2" />
<text  x="422.20" y="751.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::codec::Codec as tokio_util::codec::decoder::Decoder&gt;::decode (3,324 samples, 3.57%)</title><rect x="10.9" y="1221" width="42.1" height="15.0" fill="rgb(236,66,34)" rx="2" ry="2" />
<text  x="13.94" y="1231.5" >&lt;ac..</text>
</g>
<g >
<title>&lt;actix_server::service::StreamService&lt;T&gt; as actix_service::Service&gt;::call (1,573 samples, 1.69%)</title><rect x="244.1" y="805" width="19.9" height="15.0" fill="rgb(235,38,19)" rx="2" ry="2" />
<text  x="247.07" y="815.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (25 samples, 0.03%)</title><rect x="361.0" y="901" width="0.3" height="15.0" fill="rgb(228,23,3)" rx="2" ry="2" />
<text  x="363.97" y="911.5" ></text>
</g>
<g >
<title>_inet_lookup_established (15 samples, 0.02%)</title><rect x="602.0" y="357" width="0.2" height="15.0" fill="rgb(252,228,0)" rx="2" ry="2" />
<text  x="604.99" y="367.5" ></text>
</g>
<g >
<title>_GI___pthread_mutex_unlock (10 samples, 0.01%)</title><rect x="1115.0" y="725" width="0.1" height="15.0" fill="rgb(238,138,48)" rx="2" ry="2" />
<text  x="1118.00" y="735.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::take_output::{{closure}} (137 samples, 0.15%)</title><rect x="1039.4" y="261" width="1.7" height="15.0" fill="rgb(241,11,43)" rx="2" ry="2" />
<text  x="1042.41" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (64 samples, 0.07%)</title><rect x="1074.0" y="485" width="0.8" height="15.0" fill="rgb(215,116,2)" rx="2" ry="2" />
<text  x="1077.01" y="495.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::deregister (1,319 samples, 1.41%)</title><rect x="770.8" y="837" width="16.7" height="15.0" fill="rgb(237,56,10)" rx="2" ry="2" />
<text  x="773.83" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,607 samples, 1.72%)</title><rect x="1093.7" y="533" width="20.3" height="15.0" fill="rgb(211,211,18)" rx="2" ry="2" />
<text  x="1096.66" y="543.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (49 samples, 0.05%)</title><rect x="213.8" y="581" width="0.6" height="15.0" fill="rgb(241,130,43)" rx="2" ry="2" />
<text  x="216.81" y="591.5" ></text>
</g>
<g >
<title>&lt;mio::sys::unix::tcp::TcpStream as mio::event_imp::Evented&gt;::deregister (30 samples, 0.03%)</title><rect x="770.4" y="677" width="0.4" height="15.0" fill="rgb(240,206,42)" rx="2" ry="2" />
<text  x="773.45" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term (425 samples, 0.46%)</title><rect x="106.5" y="885" width="5.4" height="15.0" fill="rgb(216,30,7)" rx="2" ry="2" />
<text  x="109.50" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="715.7" y="1029" width="0.2" height="15.0" fill="rgb(241,2,25)" rx="2" ry="2" />
<text  x="718.75" y="1039.5" ></text>
</g>
<g >
<title>set_task_cpu (20 samples, 0.02%)</title><rect x="1101.0" y="261" width="0.3" height="15.0" fill="rgb(249,199,28)" rx="2" ry="2" />
<text  x="1104.01" y="271.5" ></text>
</g>
<g >
<title>tcp_urg (16 samples, 0.02%)</title><rect x="641.5" y="325" width="0.2" height="15.0" fill="rgb(251,170,32)" rx="2" ry="2" />
<text  x="644.52" y="335.5" ></text>
</g>
<g >
<title>tcp_write_xmit (12 samples, 0.01%)</title><rect x="668.1" y="741" width="0.1" height="15.0" fill="rgb(222,222,41)" rx="2" ry="2" />
<text  x="671.06" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (12 samples, 0.01%)</title><rect x="461.9" y="853" width="0.1" height="15.0" fill="rgb(226,56,43)" rx="2" ry="2" />
<text  x="464.86" y="863.5" ></text>
</g>
<g >
<title>_tcp_push_pending_frames (12 samples, 0.01%)</title><rect x="565.2" y="757" width="0.1" height="15.0" fill="rgb(207,13,24)" rx="2" ry="2" />
<text  x="568.18" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (19 samples, 0.02%)</title><rect x="391.0" y="485" width="0.2" height="15.0" fill="rgb(246,23,5)" rx="2" ry="2" />
<text  x="393.98" y="495.5" ></text>
</g>
<g >
<title>tcp_rack_advance (15 samples, 0.02%)</title><rect x="552.5" y="693" width="0.2" height="15.0" fill="rgb(228,145,19)" rx="2" ry="2" />
<text  x="555.52" y="703.5" ></text>
</g>
<g >
<title>tokio::io::driver::platform::sys::hup (11 samples, 0.01%)</title><rect x="675.8" y="949" width="0.1" height="15.0" fill="rgb(253,102,50)" rx="2" ry="2" />
<text  x="678.80" y="959.5" ></text>
</g>
<g >
<title>switch_fpu_return (13 samples, 0.01%)</title><rect x="1189.4" y="1205" width="0.2" height="15.0" fill="rgb(244,130,3)" rx="2" ry="2" />
<text  x="1192.39" y="1215.5" ></text>
</g>
<g >
<title>native_write_msr (767 samples, 0.82%)</title><rect x="894.0" y="533" width="9.8" height="15.0" fill="rgb(227,130,12)" rx="2" ry="2" />
<text  x="897.04" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (156 samples, 0.17%)</title><rect x="427.4" y="581" width="2.0" height="15.0" fill="rgb(226,144,29)" rx="2" ry="2" />
<text  x="430.39" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::clone_waker (8 samples, 0.01%)</title><rect x="236.3" y="981" width="0.1" height="15.0" fill="rgb(246,102,6)" rx="2" ry="2" />
<text  x="239.31" y="991.5" ></text>
</g>
<g >
<title>actix_http::header::map::HeaderMap::clear (43 samples, 0.05%)</title><rect x="376.5" y="789" width="0.5" height="15.0" fill="rgb(244,206,16)" rx="2" ry="2" />
<text  x="379.45" y="799.5" ></text>
</g>
<g >
<title>mio::net::tcp::TcpStream::shutdown (30 samples, 0.03%)</title><rect x="283.6" y="1045" width="0.3" height="15.0" fill="rgb(218,208,44)" rx="2" ry="2" />
<text  x="286.55" y="1055.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::&lt;impl core::convert::From&lt;mio::sys::unix::ready::UnixReady&gt; for mio::event_imp::Ready&gt;::from (8 samples, 0.01%)</title><rect x="337.7" y="933" width="0.1" height="15.0" fill="rgb(208,112,7)" rx="2" ry="2" />
<text  x="340.74" y="943.5" ></text>
</g>
<g >
<title>&lt;actix_http::body::Body as actix_http::body::MessageBody&gt;::poll_next (37 samples, 0.04%)</title><rect x="455.5" y="1045" width="0.5" height="15.0" fill="rgb(218,182,49)" rx="2" ry="2" />
<text  x="458.49" y="1055.5" ></text>
</g>
<g >
<title>memset_erms (47 samples, 0.05%)</title><rect x="1142.3" y="725" width="0.6" height="15.0" fill="rgb(218,192,1)" rx="2" ry="2" />
<text  x="1145.26" y="735.5" ></text>
</g>
<g >
<title>memset_erms (20 samples, 0.02%)</title><rect x="1148.3" y="741" width="0.2" height="15.0" fill="rgb(209,75,43)" rx="2" ry="2" />
<text  x="1151.26" y="751.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (770 samples, 0.83%)</title><rect x="515.4" y="949" width="9.7" height="15.0" fill="rgb(239,142,47)" rx="2" ry="2" />
<text  x="518.39" y="959.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_keepalive (135 samples, 0.14%)</title><rect x="676.7" y="1013" width="1.7" height="15.0" fill="rgb(246,143,49)" rx="2" ry="2" />
<text  x="679.66" y="1023.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (13 samples, 0.01%)</title><rect x="529.2" y="613" width="0.1" height="15.0" fill="rgb(216,98,38)" rx="2" ry="2" />
<text  x="532.16" y="623.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="163.3" y="597" width="0.2" height="15.0" fill="rgb(213,34,25)" rx="2" ry="2" />
<text  x="166.26" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (25 samples, 0.03%)</title><rect x="137.2" y="901" width="0.3" height="15.0" fill="rgb(249,200,1)" rx="2" ry="2" />
<text  x="140.15" y="911.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::{{closure}}::{{closure}} (5,326 samples, 5.71%)</title><rect x="1016.4" y="805" width="67.4" height="15.0" fill="rgb(246,21,5)" rx="2" ry="2" />
<text  x="1019.40" y="815.5" >tokio::..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (10 samples, 0.01%)</title><rect x="92.2" y="661" width="0.2" height="15.0" fill="rgb(230,152,6)" rx="2" ry="2" />
<text  x="95.23" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (71 samples, 0.08%)</title><rect x="210.2" y="581" width="0.9" height="15.0" fill="rgb(224,160,31)" rx="2" ry="2" />
<text  x="213.24" y="591.5" ></text>
</g>
<g >
<title>tokio::io::async_read::AsyncRead::poll_read_buf (2,502 samples, 2.68%)</title><rect x="681.6" y="981" width="31.7" height="15.0" fill="rgb(242,65,19)" rx="2" ry="2" />
<text  x="684.63" y="991.5" >to..</text>
</g>
<g >
<title>tokio::runtime::context::io_handle (54 samples, 0.06%)</title><rect x="523.8" y="549" width="0.7" height="15.0" fill="rgb(231,4,47)" rx="2" ry="2" />
<text  x="526.80" y="559.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (25 samples, 0.03%)</title><rect x="92.6" y="773" width="0.3" height="15.0" fill="rgb(223,179,11)" rx="2" ry="2" />
<text  x="95.56" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (584 samples, 0.63%)</title><rect x="173.9" y="821" width="7.4" height="15.0" fill="rgb(242,84,0)" rx="2" ry="2" />
<text  x="176.93" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::ref_dec (20 samples, 0.02%)</title><rect x="968.2" y="741" width="0.2" height="15.0" fill="rgb(242,144,49)" rx="2" ry="2" />
<text  x="971.16" y="751.5" ></text>
</g>
<g >
<title>sock_def_readable (85 samples, 0.09%)</title><rect x="315.4" y="405" width="1.1" height="15.0" fill="rgb(228,161,44)" rx="2" ry="2" />
<text  x="318.41" y="415.5" ></text>
</g>
<g >
<title>sock_def_wakeup (168 samples, 0.18%)</title><rect x="316.9" y="405" width="2.2" height="15.0" fill="rgb(247,227,41)" rx="2" ry="2" />
<text  x="319.93" y="415.5" ></text>
</g>
<g >
<title>down_write (29 samples, 0.03%)</title><rect x="761.4" y="581" width="0.3" height="15.0" fill="rgb(213,3,16)" rx="2" ry="2" />
<text  x="764.37" y="591.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (78 samples, 0.08%)</title><rect x="242.4" y="965" width="1.0" height="15.0" fill="rgb(227,221,40)" rx="2" ry="2" />
<text  x="245.37" y="975.5" ></text>
</g>
<g >
<title>int_free (92 samples, 0.10%)</title><rect x="997.8" y="805" width="1.1" height="15.0" fill="rgb(208,15,2)" rx="2" ry="2" />
<text  x="1000.76" y="815.5" ></text>
</g>
<g >
<title>get_page_from_freelist (19 samples, 0.02%)</title><rect x="1134.8" y="645" width="0.2" height="15.0" fill="rgb(243,12,5)" rx="2" ry="2" />
<text  x="1137.77" y="655.5" ></text>
</g>
<g >
<title>destroy_inode (21 samples, 0.02%)</title><rect x="748.8" y="549" width="0.2" height="15.0" fill="rgb(230,217,40)" rx="2" ry="2" />
<text  x="751.78" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (24 samples, 0.03%)</title><rect x="180.6" y="645" width="0.3" height="15.0" fill="rgb(206,90,35)" rx="2" ry="2" />
<text  x="183.62" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::checked_add_duration (31 samples, 0.03%)</title><rect x="343.3" y="1013" width="0.4" height="15.0" fill="rgb(206,108,11)" rx="2" ry="2" />
<text  x="346.29" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::time::driver::registration::Registration&gt; (160 samples, 0.17%)</title><rect x="792.8" y="869" width="2.1" height="15.0" fill="rgb(216,32,38)" rx="2" ry="2" />
<text  x="795.83" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (86 samples, 0.09%)</title><rect x="348.7" y="853" width="1.1" height="15.0" fill="rgb(244,193,30)" rx="2" ry="2" />
<text  x="351.73" y="863.5" ></text>
</g>
<g >
<title>skb_free_head (11 samples, 0.01%)</title><rect x="694.4" y="661" width="0.1" height="15.0" fill="rgb(252,129,42)" rx="2" ry="2" />
<text  x="697.37" y="671.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (8 samples, 0.01%)</title><rect x="765.2" y="533" width="0.1" height="15.0" fill="rgb(232,79,6)" rx="2" ry="2" />
<text  x="768.21" y="543.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (10 samples, 0.01%)</title><rect x="707.1" y="805" width="0.2" height="15.0" fill="rgb(254,76,34)" rx="2" ry="2" />
<text  x="710.13" y="815.5" ></text>
</g>
<g >
<title>actix_server::worker::Worker::start::{{closure}}::{{closure}} (1,798 samples, 1.93%)</title><rect x="1046.4" y="373" width="22.8" height="15.0" fill="rgb(212,95,9)" rx="2" ry="2" />
<text  x="1049.40" y="383.5" >a..</text>
</g>
<g >
<title>kmem_cache_alloc_node (45 samples, 0.05%)</title><rect x="294.0" y="853" width="0.5" height="15.0" fill="rgb(211,140,16)" rx="2" ry="2" />
<text  x="296.96" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;core::future::from_generator::GenFuture&lt;&lt;actix_server::service::StreamService&lt;actix_service::and_then::AndThenService&lt;actix_service::fn_service::FnService&lt;actix_http::service::HttpService&lt;tokio::net::tcp::stream::TcpStream,actix_service::map_config::MapConfig&lt;actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::server::HttpServer&lt;rust_actix_jsonpath_bench::main::{{closure}}::{{closure}},actix_web::app::App&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::Body&gt;,actix_http::body::Body&gt;::listen::{{closure}}::{{closure}}, (26 samples, 0.03%)</title><rect x="479.9" y="533" width="0.3" height="15.0" fill="rgb(248,155,45)" rx="2" ry="2" />
<text  x="482.91" y="543.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (87 samples, 0.09%)</title><rect x="441.9" y="965" width="1.1" height="15.0" fill="rgb(224,3,11)" rx="2" ry="2" />
<text  x="444.92" y="975.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::checked_add_duration (26 samples, 0.03%)</title><rect x="265.0" y="1013" width="0.4" height="15.0" fill="rgb(213,110,44)" rx="2" ry="2" />
<text  x="268.03" y="1023.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (33 samples, 0.04%)</title><rect x="1115.9" y="741" width="0.5" height="15.0" fill="rgb(228,105,54)" rx="2" ry="2" />
<text  x="1118.95" y="751.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.02%)</title><rect x="416.2" y="741" width="0.3" height="15.0" fill="rgb(213,76,42)" rx="2" ry="2" />
<text  x="419.20" y="751.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.03%)</title><rect x="451.1" y="965" width="0.4" height="15.0" fill="rgb(220,106,28)" rx="2" ry="2" />
<text  x="454.10" y="975.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;actix_web::service::ServiceResponse,actix_http::error::Error&gt;&gt;&gt;&gt; (131 samples, 0.14%)</title><rect x="452.1" y="965" width="1.7" height="15.0" fill="rgb(212,96,44)" rx="2" ry="2" />
<text  x="455.15" y="975.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,006 samples, 1.08%)</title><rect x="53.0" y="1093" width="12.7" height="15.0" fill="rgb(224,92,7)" rx="2" ry="2" />
<text  x="56.01" y="1103.5" ></text>
</g>
<g >
<title>blkcg_maybe_throttle_current (19 samples, 0.02%)</title><rect x="739.2" y="661" width="0.2" height="15.0" fill="rgb(253,228,11)" rx="2" ry="2" />
<text  x="742.19" y="671.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (74 samples, 0.08%)</title><rect x="356.5" y="901" width="0.9" height="15.0" fill="rgb(224,215,48)" rx="2" ry="2" />
<text  x="359.45" y="911.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.01%)</title><rect x="210.8" y="533" width="0.2" height="15.0" fill="rgb(222,61,47)" rx="2" ry="2" />
<text  x="213.84" y="543.5" ></text>
</g>
<g >
<title>int_free (13 samples, 0.01%)</title><rect x="132.8" y="821" width="0.2" height="15.0" fill="rgb(233,159,18)" rx="2" ry="2" />
<text  x="135.84" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set::Reset&gt; (114 samples, 0.12%)</title><rect x="1081.5" y="709" width="1.5" height="15.0" fill="rgb(232,4,41)" rx="2" ry="2" />
<text  x="1084.54" y="719.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (40 samples, 0.04%)</title><rect x="157.3" y="613" width="0.5" height="15.0" fill="rgb(213,112,19)" rx="2" ry="2" />
<text  x="160.26" y="623.5" ></text>
</g>
<g >
<title>actix_rt::spawn (194 samples, 0.21%)</title><rect x="526.7" y="613" width="2.5" height="15.0" fill="rgb(206,174,5)" rx="2" ry="2" />
<text  x="529.71" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (43 samples, 0.05%)</title><rect x="1033.2" y="453" width="0.6" height="15.0" fill="rgb(206,26,12)" rx="2" ry="2" />
<text  x="1036.21" y="463.5" ></text>
</g>
<g >
<title>actix_server::worker::WorkerClient::send (2,184 samples, 2.34%)</title><rect x="1088.3" y="1013" width="27.6" height="15.0" fill="rgb(229,54,5)" rx="2" ry="2" />
<text  x="1091.25" y="1023.5" >a..</text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp_json_number::{{closure}} (76 samples, 0.08%)</title><rect x="146.2" y="741" width="0.9" height="15.0" fill="rgb(252,93,42)" rx="2" ry="2" />
<text  x="149.17" y="751.5" ></text>
</g>
<g >
<title>actix_server::accept::Accept::accept_one (33 samples, 0.04%)</title><rect x="1115.9" y="1013" width="0.5" height="15.0" fill="rgb(225,211,41)" rx="2" ry="2" />
<text  x="1118.95" y="1023.5" ></text>
</g>
<g >
<title>&lt;mio::poll::Iter as core::iter::traits::iterator::Iterator&gt;::next (109 samples, 0.12%)</title><rect x="802.1" y="821" width="1.3" height="15.0" fill="rgb(238,192,39)" rx="2" ry="2" />
<text  x="805.07" y="831.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (48 samples, 0.05%)</title><rect x="105.7" y="821" width="0.6" height="15.0" fill="rgb(243,130,11)" rx="2" ry="2" />
<text  x="108.66" y="831.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::UnboundedSender&lt;T&gt;::unbounded_send (2,130 samples, 2.28%)</title><rect x="1088.9" y="997" width="27.0" height="15.0" fill="rgb(210,18,34)" rx="2" ry="2" />
<text  x="1091.93" y="1007.5" >f..</text>
</g>
<g >
<title>&lt;tokio::io::registration::Registration as core::ops::drop::Drop&gt;::drop (404 samples, 0.43%)</title><rect x="787.7" y="821" width="5.1" height="15.0" fill="rgb(241,61,12)" rx="2" ry="2" />
<text  x="790.67" y="831.5" ></text>
</g>
<g >
<title>_GI___pthread_mutex_unlock (39 samples, 0.04%)</title><rect x="1011.0" y="773" width="0.5" height="15.0" fill="rgb(225,93,10)" rx="2" ry="2" />
<text  x="1014.03" y="783.5" ></text>
</g>
<g >
<title>actix_http::config::ServiceConfig::keep_alive_expire (50 samples, 0.05%)</title><rect x="343.2" y="1061" width="0.6" height="15.0" fill="rgb(218,44,52)" rx="2" ry="2" />
<text  x="346.20" y="1071.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (18 samples, 0.02%)</title><rect x="154.7" y="517" width="0.2" height="15.0" fill="rgb(216,210,23)" rx="2" ry="2" />
<text  x="157.67" y="527.5" ></text>
</g>
<g >
<title>&lt;actix_web::scope::ScopeService as actix_service::Service&gt;::call::{{closure}} (78 samples, 0.08%)</title><rect x="354.8" y="965" width="0.9" height="15.0" fill="rgb(213,216,12)" rx="2" ry="2" />
<text  x="357.75" y="975.5" ></text>
</g>
<g >
<title>tokio::task::local::CURRENT::FOO::_getit (39 samples, 0.04%)</title><rect x="971.2" y="613" width="0.5" height="15.0" fill="rgb(251,92,50)" rx="2" ry="2" />
<text  x="974.20" y="623.5" ></text>
</g>
<g >
<title>int_realloc (78 samples, 0.08%)</title><rect x="242.4" y="517" width="1.0" height="15.0" fill="rgb(251,123,37)" rx="2" ry="2" />
<text  x="245.37" y="527.5" ></text>
</g>
<g >
<title>tcp_data_queue (19 samples, 0.02%)</title><rect x="614.0" y="325" width="0.3" height="15.0" fill="rgb(237,51,19)" rx="2" ry="2" />
<text  x="617.04" y="335.5" ></text>
</g>
<g >
<title>_memcg_kmem_uncharge (31 samples, 0.03%)</title><rect x="746.8" y="501" width="0.4" height="15.0" fill="rgb(234,154,20)" rx="2" ry="2" />
<text  x="749.83" y="511.5" ></text>
</g>
<g >
<title>locks_remove_file (13 samples, 0.01%)</title><rect x="768.9" y="629" width="0.2" height="15.0" fill="rgb(254,37,6)" rx="2" ry="2" />
<text  x="771.93" y="639.5" ></text>
</g>
<g >
<title>actix_http::h1::codec::Codec::keepalive (8 samples, 0.01%)</title><rect x="450.3" y="1029" width="0.1" height="15.0" fill="rgb(223,141,53)" rx="2" ry="2" />
<text  x="453.34" y="1039.5" ></text>
</g>
<g >
<title>tokio::io::registration::Registration::take_read_ready (17 samples, 0.02%)</title><rect x="713.1" y="917" width="0.2" height="15.0" fill="rgb(227,214,49)" rx="2" ry="2" />
<text  x="716.09" y="927.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.01%)</title><rect x="968.3" y="725" width="0.1" height="15.0" fill="rgb(208,77,38)" rx="2" ry="2" />
<text  x="971.27" y="735.5" ></text>
</g>
<g >
<title>tokio::io::driver::Inner::register (41 samples, 0.04%)</title><rect x="338.2" y="981" width="0.6" height="15.0" fill="rgb(238,123,49)" rx="2" ry="2" />
<text  x="341.23" y="991.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3,319 samples, 3.56%)</title><rect x="185.9" y="805" width="42.0" height="15.0" fill="rgb(235,117,47)" rx="2" ry="2" />
<text  x="188.89" y="815.5" >&lt;co..</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (58 samples, 0.06%)</title><rect x="101.3" y="805" width="0.7" height="15.0" fill="rgb(205,189,9)" rx="2" ry="2" />
<text  x="104.31" y="815.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (8 samples, 0.01%)</title><rect x="975.9" y="645" width="0.1" height="15.0" fill="rgb(207,166,11)" rx="2" ry="2" />
<text  x="978.88" y="655.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (28 samples, 0.03%)</title><rect x="52.5" y="1125" width="0.3" height="15.0" fill="rgb(247,217,31)" rx="2" ry="2" />
<text  x="55.47" y="1135.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (22 samples, 0.02%)</title><rect x="758.3" y="613" width="0.3" height="15.0" fill="rgb(212,36,21)" rx="2" ry="2" />
<text  x="761.32" y="623.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::UnboundedSenderInner&lt;T&gt;::queue_push_and_signal (33 samples, 0.04%)</title><rect x="1115.9" y="949" width="0.5" height="15.0" fill="rgb(238,96,16)" rx="2" ry="2" />
<text  x="1118.95" y="959.5" ></text>
</g>
<g >
<title>kmem_cache_free (137 samples, 0.15%)</title><rect x="782.2" y="629" width="1.8" height="15.0" fill="rgb(230,45,36)" rx="2" ry="2" />
<text  x="785.23" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (32 samples, 0.03%)</title><rect x="165.2" y="901" width="0.4" height="15.0" fill="rgb(243,169,30)" rx="2" ry="2" />
<text  x="168.18" y="911.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (28 samples, 0.03%)</title><rect x="88.0" y="757" width="0.3" height="15.0" fill="rgb(238,112,15)" rx="2" ry="2" />
<text  x="90.99" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (33 samples, 0.04%)</title><rect x="1115.9" y="565" width="0.5" height="15.0" fill="rgb(229,164,47)" rx="2" ry="2" />
<text  x="1118.95" y="575.5" ></text>
</g>
<g >
<title>_destroy_inode (44 samples, 0.05%)</title><rect x="1154.7" y="677" width="0.6" height="15.0" fill="rgb(220,210,11)" rx="2" ry="2" />
<text  x="1157.73" y="687.5" ></text>
</g>
<g >
<title>tokio::coop::poll_proceed::{{closure}} (23 samples, 0.02%)</title><rect x="1038.0" y="261" width="0.3" height="15.0" fill="rgb(236,129,3)" rx="2" ry="2" />
<text  x="1040.97" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (189 samples, 0.20%)</title><rect x="275.3" y="997" width="2.4" height="15.0" fill="rgb(237,5,33)" rx="2" ry="2" />
<text  x="278.33" y="1007.5" ></text>
</g>
<g >
<title>tcp_wfree (12 samples, 0.01%)</title><rect x="652.0" y="533" width="0.1" height="15.0" fill="rgb(235,217,46)" rx="2" ry="2" />
<text  x="654.95" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (9 samples, 0.01%)</title><rect x="787.4" y="757" width="0.1" height="15.0" fill="rgb(216,146,29)" rx="2" ry="2" />
<text  x="790.41" y="767.5" ></text>
</g>
<g >
<title>tcp_newly_delivered (11 samples, 0.01%)</title><rect x="552.4" y="693" width="0.1" height="15.0" fill="rgb(227,131,0)" rx="2" ry="2" />
<text  x="555.38" y="703.5" ></text>
</g>
<g >
<title>netif_skb_features (18 samples, 0.02%)</title><rect x="326.2" y="661" width="0.3" height="15.0" fill="rgb(247,190,13)" rx="2" ry="2" />
<text  x="329.23" y="671.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (156 samples, 0.17%)</title><rect x="427.4" y="661" width="2.0" height="15.0" fill="rgb(253,209,32)" rx="2" ry="2" />
<text  x="430.39" y="671.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (59 samples, 0.06%)</title><rect x="190.5" y="565" width="0.8" height="15.0" fill="rgb(229,229,2)" rx="2" ry="2" />
<text  x="193.52" y="575.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::with_capacity (227 samples, 0.24%)</title><rect x="278.2" y="1077" width="2.9" height="15.0" fill="rgb(218,43,33)" rx="2" ry="2" />
<text  x="281.18" y="1087.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.02%)</title><rect x="1115.2" y="773" width="0.2" height="15.0" fill="rgb(234,223,51)" rx="2" ry="2" />
<text  x="1118.15" y="783.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (33 samples, 0.04%)</title><rect x="117.1" y="853" width="0.4" height="15.0" fill="rgb(251,117,3)" rx="2" ry="2" />
<text  x="120.05" y="863.5" ></text>
</g>
<g >
<title>mntput (15 samples, 0.02%)</title><rect x="769.1" y="629" width="0.2" height="15.0" fill="rgb(222,169,31)" rx="2" ry="2" />
<text  x="772.09" y="639.5" ></text>
</g>
<g >
<title>_fdget (118 samples, 0.13%)</title><rect x="843.0" y="677" width="1.5" height="15.0" fill="rgb(222,192,46)" rx="2" ry="2" />
<text  x="845.98" y="687.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (71 samples, 0.08%)</title><rect x="617.2" y="245" width="0.9" height="15.0" fill="rgb(218,91,43)" rx="2" ry="2" />
<text  x="620.18" y="255.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (331 samples, 0.36%)</title><rect x="525.1" y="693" width="4.2" height="15.0" fill="rgb(227,168,3)" rx="2" ry="2" />
<text  x="528.14" y="703.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (25 samples, 0.03%)</title><rect x="148.1" y="837" width="0.3" height="15.0" fill="rgb(234,24,13)" rx="2" ry="2" />
<text  x="151.07" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (40 samples, 0.04%)</title><rect x="122.4" y="853" width="0.5" height="15.0" fill="rgb(253,175,44)" rx="2" ry="2" />
<text  x="125.43" y="863.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (9 samples, 0.01%)</title><rect x="89.9" y="741" width="0.1" height="15.0" fill="rgb(231,102,27)" rx="2" ry="2" />
<text  x="92.89" y="751.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (51 samples, 0.05%)</title><rect x="221.9" y="469" width="0.6" height="15.0" fill="rgb(248,39,22)" rx="2" ry="2" />
<text  x="224.89" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (179 samples, 0.19%)</title><rect x="204.8" y="629" width="2.3" height="15.0" fill="rgb(235,123,30)" rx="2" ry="2" />
<text  x="207.80" y="639.5" ></text>
</g>
<g >
<title>std::panicking::try (331 samples, 0.36%)</title><rect x="525.1" y="805" width="4.2" height="15.0" fill="rgb(210,60,53)" rx="2" ry="2" />
<text  x="528.14" y="815.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (870 samples, 0.93%)</title><rect x="504.4" y="917" width="11.0" height="15.0" fill="rgb(219,13,19)" rx="2" ry="2" />
<text  x="507.38" y="927.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (92 samples, 0.10%)</title><rect x="177.4" y="549" width="1.2" height="15.0" fill="rgb(215,165,3)" rx="2" ry="2" />
<text  x="180.42" y="559.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (178 samples, 0.19%)</title><rect x="362.5" y="981" width="2.3" height="15.0" fill="rgb(252,5,45)" rx="2" ry="2" />
<text  x="365.54" y="991.5" ></text>
</g>
<g >
<title>perf_pmu_disabl.ar. (3,667 samples, 3.93%)</title><rect x="866.8" y="581" width="46.4" height="15.0" fill="rgb(253,170,35)" rx="2" ry="2" />
<text  x="869.80" y="591.5" >perf..</text>
</g>
<g >
<title>core::sync::atomic::atomic_store (19 samples, 0.02%)</title><rect x="813.8" y="709" width="0.2" height="15.0" fill="rgb(215,177,23)" rx="2" ry="2" />
<text  x="816.80" y="719.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::register (15 samples, 0.02%)</title><rect x="461.8" y="917" width="0.2" height="15.0" fill="rgb(226,54,37)" rx="2" ry="2" />
<text  x="464.82" y="927.5" ></text>
</g>
<g >
<title>tokio::task::local::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;::schedule (405 samples, 0.43%)</title><rect x="968.5" y="693" width="5.1" height="15.0" fill="rgb(237,21,33)" rx="2" ry="2" />
<text  x="971.45" y="703.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (399 samples, 0.43%)</title><rect x="1132.5" y="741" width="5.1" height="15.0" fill="rgb(233,179,40)" rx="2" ry="2" />
<text  x="1135.52" y="751.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="132.1" y="901" width="0.1" height="15.0" fill="rgb(251,167,20)" rx="2" ry="2" />
<text  x="135.05" y="911.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.02%)</title><rect x="162.5" y="597" width="0.2" height="15.0" fill="rgb(248,200,38)" rx="2" ry="2" />
<text  x="165.50" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (46 samples, 0.05%)</title><rect x="164.3" y="757" width="0.6" height="15.0" fill="rgb(247,68,15)" rx="2" ry="2" />
<text  x="167.35" y="767.5" ></text>
</g>
<g >
<title>ip_send_check (10 samples, 0.01%)</title><rect x="655.4" y="645" width="0.1" height="15.0" fill="rgb(254,218,3)" rx="2" ry="2" />
<text  x="658.36" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (39 samples, 0.04%)</title><rect x="1011.0" y="789" width="0.5" height="15.0" fill="rgb(239,141,24)" rx="2" ry="2" />
<text  x="1014.03" y="799.5" ></text>
</g>
<g >
<title>_fdget (67 samples, 0.07%)</title><rect x="774.6" y="645" width="0.9" height="15.0" fill="rgb(234,195,50)" rx="2" ry="2" />
<text  x="777.61" y="655.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_cmpeq_epi8 (10 samples, 0.01%)</title><rect x="50.4" y="1093" width="0.1" height="15.0" fill="rgb(239,164,35)" rx="2" ry="2" />
<text  x="53.38" y="1103.5" ></text>
</g>
<g >
<title>aa_sock_perm (11 samples, 0.01%)</title><rect x="511.0" y="597" width="0.2" height="15.0" fill="rgb(252,111,9)" rx="2" ry="2" />
<text  x="514.04" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (33 samples, 0.04%)</title><rect x="117.1" y="885" width="0.4" height="15.0" fill="rgb(238,213,5)" rx="2" ry="2" />
<text  x="120.05" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (59 samples, 0.06%)</title><rect x="423.7" y="581" width="0.7" height="15.0" fill="rgb(244,25,35)" rx="2" ry="2" />
<text  x="426.67" y="591.5" ></text>
</g>
<g >
<title>std::io::error::Error::last_os_error (21 samples, 0.02%)</title><rect x="707.6" y="821" width="0.3" height="15.0" fill="rgb(211,82,21)" rx="2" ry="2" />
<text  x="710.60" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (595 samples, 0.64%)</title><rect x="505.3" y="677" width="7.5" height="15.0" fill="rgb(254,18,40)" rx="2" ry="2" />
<text  x="508.26" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (129 samples, 0.14%)</title><rect x="117.9" y="869" width="1.6" height="15.0" fill="rgb(251,40,0)" rx="2" ry="2" />
<text  x="120.90" y="879.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (143 samples, 0.15%)</title><rect x="117.8" y="885" width="1.8" height="15.0" fill="rgb(251,102,6)" rx="2" ry="2" />
<text  x="120.77" y="895.5" ></text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (82 samples, 0.09%)</title><rect x="130.4" y="709" width="1.0" height="15.0" fill="rgb(232,12,0)" rx="2" ry="2" />
<text  x="133.36" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::pop_term (25 samples, 0.03%)</title><rect x="417.5" y="805" width="0.3" height="15.0" fill="rgb(207,169,42)" rx="2" ry="2" />
<text  x="420.53" y="815.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget (331 samples, 0.36%)</title><rect x="525.1" y="1157" width="4.2" height="15.0" fill="rgb(221,225,7)" rx="2" ry="2" />
<text  x="528.14" y="1167.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (715 samples, 0.77%)</title><rect x="198.0" y="693" width="9.1" height="15.0" fill="rgb(214,105,14)" rx="2" ry="2" />
<text  x="201.02" y="703.5" ></text>
</g>
<g >
<title>epoll_wait (49 samples, 0.05%)</title><rect x="975.4" y="741" width="0.6" height="15.0" fill="rgb(246,169,8)" rx="2" ry="2" />
<text  x="978.36" y="751.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (55 samples, 0.06%)</title><rect x="228.0" y="773" width="0.7" height="15.0" fill="rgb(229,119,45)" rx="2" ry="2" />
<text  x="230.95" y="783.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (1,071 samples, 1.15%)</title><rect x="472.8" y="805" width="13.5" height="15.0" fill="rgb(226,40,10)" rx="2" ry="2" />
<text  x="475.77" y="815.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (62 samples, 0.07%)</title><rect x="82.1" y="821" width="0.7" height="15.0" fill="rgb(210,90,49)" rx="2" ry="2" />
<text  x="85.05" y="831.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 0.06%)</title><rect x="523.8" y="517" width="0.7" height="15.0" fill="rgb(245,151,24)" rx="2" ry="2" />
<text  x="526.80" y="527.5" ></text>
</g>
<g >
<title>fput_many (8 samples, 0.01%)</title><rect x="784.5" y="645" width="0.1" height="15.0" fill="rgb(231,94,6)" rx="2" ry="2" />
<text  x="787.54" y="655.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (278 samples, 0.30%)</title><rect x="198.4" y="581" width="3.6" height="15.0" fill="rgb(244,222,8)" rx="2" ry="2" />
<text  x="201.45" y="591.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::PathParser::parse::{{closure}} (21 samples, 0.02%)</title><rect x="123.2" y="917" width="0.3" height="15.0" fill="rgb(221,108,50)" rx="2" ry="2" />
<text  x="126.22" y="927.5" ></text>
</g>
<g >
<title>ip_local_deliver (1,299 samples, 1.39%)</title><rect x="306.2" y="533" width="16.4" height="15.0" fill="rgb(247,93,26)" rx="2" ry="2" />
<text  x="309.18" y="543.5" ></text>
</g>
<g >
<title>skb_try_coalesce (11 samples, 0.01%)</title><rect x="319.4" y="405" width="0.1" height="15.0" fill="rgb(211,88,38)" rx="2" ry="2" />
<text  x="322.36" y="415.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (13,511 samples, 14.49%)</title><rect x="65.9" y="1221" width="171.0" height="15.0" fill="rgb(224,31,33)" rx="2" ry="2" />
<text  x="68.87" y="1231.5" >&lt;actix_http::h1::dispa..</text>
</g>
<g >
<title>apparmor_socket_getpeername (29 samples, 0.03%)</title><rect x="511.2" y="597" width="0.3" height="15.0" fill="rgb(241,207,11)" rx="2" ry="2" />
<text  x="514.18" y="607.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.01%)</title><rect x="146.5" y="661" width="0.2" height="15.0" fill="rgb(244,157,40)" rx="2" ry="2" />
<text  x="149.51" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (32 samples, 0.03%)</title><rect x="686.1" y="821" width="0.4" height="15.0" fill="rgb(222,18,33)" rx="2" ry="2" />
<text  x="689.09" y="831.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="402.5" y="837" width="0.2" height="15.0" fill="rgb(237,208,36)" rx="2" ry="2" />
<text  x="405.53" y="847.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="336.9" y="981" width="0.4" height="15.0" fill="rgb(219,59,20)" rx="2" ry="2" />
<text  x="339.94" y="991.5" ></text>
</g>
<g >
<title>new_inode_pseudo (626 samples, 0.67%)</title><rect x="1129.9" y="789" width="7.9" height="15.0" fill="rgb(251,34,28)" rx="2" ry="2" />
<text  x="1132.87" y="799.5" ></text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::upgrade (31 samples, 0.03%)</title><rect x="770.9" y="805" width="0.4" height="15.0" fill="rgb(243,63,33)" rx="2" ry="2" />
<text  x="773.86" y="815.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (531 samples, 0.57%)</title><rect x="254.4" y="565" width="6.8" height="15.0" fill="rgb(205,17,2)" rx="2" ry="2" />
<text  x="257.45" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_http::service::State&lt;tokio::net::tcp::stream::TcpStream,actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::Body&gt;,actix_http::body::Body,actix_http::h1::expect::ExpectHandler,actix_http::h1::upgrade::UpgradeHandler&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt; (6,169 samples, 6.62%)</title><rect x="716.9" y="965" width="78.1" height="15.0" fill="rgb(226,222,40)" rx="2" ry="2" />
<text  x="719.88" y="975.5" >core::ptr..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (12 samples, 0.01%)</title><rect x="176.8" y="549" width="0.1" height="15.0" fill="rgb(228,35,50)" rx="2" ry="2" />
<text  x="179.75" y="559.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (101 samples, 0.11%)</title><rect x="180.0" y="741" width="1.3" height="15.0" fill="rgb(217,208,49)" rx="2" ry="2" />
<text  x="183.04" y="751.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::and_then (26 samples, 0.03%)</title><rect x="265.0" y="981" width="0.4" height="15.0" fill="rgb(228,166,28)" rx="2" ry="2" />
<text  x="268.03" y="991.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::now (278 samples, 0.30%)</title><rect x="962.9" y="757" width="3.6" height="15.0" fill="rgb(249,79,2)" rx="2" ry="2" />
<text  x="965.93" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk (343 samples, 0.37%)</title><rect x="174.2" y="645" width="4.4" height="15.0" fill="rgb(244,76,48)" rx="2" ry="2" />
<text  x="177.24" y="655.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::fetch_update (96 samples, 0.10%)</title><rect x="1073.7" y="517" width="1.2" height="15.0" fill="rgb(242,180,14)" rx="2" ry="2" />
<text  x="1076.66" y="527.5" ></text>
</g>
<g >
<title>_GI___libc_free (29 samples, 0.03%)</title><rect x="720.9" y="741" width="0.4" height="15.0" fill="rgb(223,124,54)" rx="2" ry="2" />
<text  x="723.91" y="751.5" ></text>
</g>
<g >
<title>tokio::time::driver::atomic_stack::AtomicStack::take (68 samples, 0.07%)</title><rect x="1005.5" y="837" width="0.9" height="15.0" fill="rgb(248,177,13)" rx="2" ry="2" />
<text  x="1008.53" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (125 samples, 0.13%)</title><rect x="168.8" y="725" width="1.6" height="15.0" fill="rgb(220,227,2)" rx="2" ry="2" />
<text  x="171.83" y="735.5" ></text>
</g>
<g >
<title>skb_free_head (9 samples, 0.01%)</title><rect x="555.5" y="661" width="0.1" height="15.0" fill="rgb(244,42,31)" rx="2" ry="2" />
<text  x="558.52" y="671.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget (1,071 samples, 1.15%)</title><rect x="472.8" y="821" width="13.5" height="15.0" fill="rgb(214,69,43)" rx="2" ry="2" />
<text  x="475.77" y="831.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="403.1" y="885" width="0.1" height="15.0" fill="rgb(243,55,22)" rx="2" ry="2" />
<text  x="406.10" y="895.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::schedule (408 samples, 0.44%)</title><rect x="968.4" y="741" width="5.2" height="15.0" fill="rgb(209,224,51)" rx="2" ry="2" />
<text  x="971.41" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp_json (509 samples, 0.55%)</title><rect x="141.0" y="901" width="6.4" height="15.0" fill="rgb(239,4,49)" rx="2" ry="2" />
<text  x="143.98" y="911.5" ></text>
</g>
<g >
<title>_fdget (22 samples, 0.02%)</title><rect x="1161.8" y="901" width="0.3" height="15.0" fill="rgb(217,158,50)" rx="2" ry="2" />
<text  x="1164.81" y="911.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="64.3" y="629" width="0.2" height="15.0" fill="rgb(215,159,44)" rx="2" ry="2" />
<text  x="67.34" y="639.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="67.0" y="1173" width="0.1" height="15.0" fill="rgb(252,81,44)" rx="2" ry="2" />
<text  x="69.95" y="1183.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::poll_read_priv (458 samples, 0.49%)</title><rect x="460.9" y="1013" width="5.8" height="15.0" fill="rgb(245,0,32)" rx="2" ry="2" />
<text  x="463.88" y="1023.5" ></text>
</g>
<g >
<title>ip_local_deliver (3,314 samples, 3.56%)</title><rect x="600.7" y="405" width="41.9" height="15.0" fill="rgb(217,225,14)" rx="2" ry="2" />
<text  x="603.68" y="415.5" >ip_..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.02%)</title><rect x="199.6" y="549" width="0.3" height="15.0" fill="rgb(222,127,42)" rx="2" ry="2" />
<text  x="202.64" y="559.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::op (314 samples, 0.34%)</title><rect x="53.0" y="885" width="4.0" height="15.0" fill="rgb(231,79,19)" rx="2" ry="2" />
<text  x="56.01" y="895.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt;::new (1,338 samples, 1.44%)</title><rect x="264.1" y="1093" width="17.0" height="15.0" fill="rgb(213,53,54)" rx="2" ry="2" />
<text  x="267.12" y="1103.5" ></text>
</g>
<g >
<title>&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (4,330 samples, 4.65%)</title><rect x="10.9" y="1253" width="54.8" height="15.0" fill="rgb(231,4,28)" rx="2" ry="2" />
<text  x="13.94" y="1263.5" >&lt;acti..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="425.0" y="629" width="0.1" height="15.0" fill="rgb(215,158,10)" rx="2" ry="2" />
<text  x="427.97" y="639.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (54 samples, 0.06%)</title><rect x="146.4" y="709" width="0.7" height="15.0" fill="rgb(229,72,44)" rx="2" ry="2" />
<text  x="149.45" y="719.5" ></text>
</g>
<g >
<title>int_malloc (63 samples, 0.07%)</title><rect x="469.4" y="821" width="0.8" height="15.0" fill="rgb(216,227,16)" rx="2" ry="2" />
<text  x="472.44" y="831.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (331 samples, 0.36%)</title><rect x="525.1" y="1077" width="4.2" height="15.0" fill="rgb(234,203,31)" rx="2" ry="2" />
<text  x="528.14" y="1087.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (140 samples, 0.15%)</title><rect x="358.3" y="933" width="1.8" height="15.0" fill="rgb(236,17,54)" rx="2" ry="2" />
<text  x="361.31" y="943.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (9 samples, 0.01%)</title><rect x="787.4" y="773" width="0.1" height="15.0" fill="rgb(222,84,40)" rx="2" ry="2" />
<text  x="790.41" y="783.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Selector::select (10,182 samples, 10.92%)</title><rect x="834.0" y="773" width="128.9" height="15.0" fill="rgb(229,82,7)" rx="2" ry="2" />
<text  x="836.98" y="783.5" >mio::sys::unix::..</text>
</g>
<g >
<title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="381.9" y="821" width="0.3" height="15.0" fill="rgb(230,79,34)" rx="2" ry="2" />
<text  x="384.94" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (67 samples, 0.07%)</title><rect x="96.5" y="821" width="0.8" height="15.0" fill="rgb(207,58,1)" rx="2" ry="2" />
<text  x="99.50" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (37 samples, 0.04%)</title><rect x="791.9" y="597" width="0.4" height="15.0" fill="rgb(207,210,6)" rx="2" ry="2" />
<text  x="794.86" y="607.5" ></text>
</g>
<g >
<title>tcp_small_queue_chec.sr. (8 samples, 0.01%)</title><rect x="667.7" y="709" width="0.1" height="15.0" fill="rgb(229,33,6)" rx="2" ry="2" />
<text  x="670.71" y="719.5" ></text>
</g>
<g >
<title>kmem_cache_free (103 samples, 0.11%)</title><rect x="693.0" y="661" width="1.3" height="15.0" fill="rgb(254,177,44)" rx="2" ry="2" />
<text  x="695.99" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (49 samples, 0.05%)</title><rect x="29.7" y="1077" width="0.6" height="15.0" fill="rgb(248,2,12)" rx="2" ry="2" />
<text  x="32.66" y="1087.5" ></text>
</g>
<g >
<title>_wake_up_common_lock (146 samples, 0.16%)</title><rect x="317.2" y="373" width="1.8" height="15.0" fill="rgb(214,39,46)" rx="2" ry="2" />
<text  x="320.17" y="383.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (19 samples, 0.02%)</title><rect x="666.6" y="709" width="0.3" height="15.0" fill="rgb(241,122,9)" rx="2" ry="2" />
<text  x="669.65" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any&gt;&gt;&gt; (38 samples, 0.04%)</title><rect x="344.4" y="981" width="0.5" height="15.0" fill="rgb(239,200,3)" rx="2" ry="2" />
<text  x="347.37" y="991.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (690 samples, 0.74%)</title><rect x="198.3" y="645" width="8.8" height="15.0" fill="rgb(209,3,52)" rx="2" ry="2" />
<text  x="201.33" y="655.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek::{{closure}} (11 samples, 0.01%)</title><rect x="110.1" y="677" width="0.1" height="15.0" fill="rgb(244,229,53)" rx="2" ry="2" />
<text  x="113.08" y="687.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10 samples, 0.01%)</title><rect x="785.8" y="709" width="0.1" height="15.0" fill="rgb(218,154,24)" rx="2" ry="2" />
<text  x="788.80" y="719.5" ></text>
</g>
<g >
<title>unlink_chunk (12 samples, 0.01%)</title><rect x="732.5" y="869" width="0.2" height="15.0" fill="rgb(243,36,40)" rx="2" ry="2" />
<text  x="735.55" y="879.5" ></text>
</g>
<g >
<title>&lt;actix_http::message::Message&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.01%)</title><rect x="42.0" y="1157" width="0.2" height="15.0" fill="rgb(249,40,18)" rx="2" ry="2" />
<text  x="45.03" y="1167.5" ></text>
</g>
<g >
<title>alloc::rc::Rc&lt;T&gt;::is_unique (22 samples, 0.02%)</title><rect x="41.4" y="1109" width="0.3" height="15.0" fill="rgb(214,217,28)" rx="2" ry="2" />
<text  x="44.44" y="1119.5" ></text>
</g>
<g >
<title>_GI___libc_free (41 samples, 0.04%)</title><rect x="1056.6" y="197" width="0.6" height="15.0" fill="rgb(248,196,5)" rx="2" ry="2" />
<text  x="1059.64" y="207.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (50 samples, 0.05%)</title><rect x="826.7" y="549" width="0.6" height="15.0" fill="rgb(224,24,35)" rx="2" ry="2" />
<text  x="829.68" y="559.5" ></text>
</g>
<g >
<title>_GI_epoll_ctl (32 samples, 0.03%)</title><rect x="467.7" y="1253" width="0.4" height="15.0" fill="rgb(229,44,3)" rx="2" ry="2" />
<text  x="470.72" y="1263.5" ></text>
</g>
<g >
<title>_fget_files (56 samples, 0.06%)</title><rect x="704.7" y="709" width="0.7" height="15.0" fill="rgb(222,139,10)" rx="2" ry="2" />
<text  x="707.72" y="719.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (22 samples, 0.02%)</title><rect x="971.4" y="565" width="0.3" height="15.0" fill="rgb(206,38,26)" rx="2" ry="2" />
<text  x="974.41" y="575.5" ></text>
</g>
<g >
<title>actix_http::h1::encoder::MessageEncoder&lt;T&gt;::encode_eof (10 samples, 0.01%)</title><rect x="457.2" y="1045" width="0.1" height="15.0" fill="rgb(241,30,49)" rx="2" ry="2" />
<text  x="460.21" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (2,989 samples, 3.21%)</title><rect x="733.0" y="757" width="37.8" height="15.0" fill="rgb(216,166,39)" rx="2" ry="2" />
<text  x="735.99" y="767.5" >cor..</text>
</g>
<g >
<title>_GI___clock_gettime (357 samples, 0.38%)</title><rect x="986.8" y="789" width="4.5" height="15.0" fill="rgb(237,203,44)" rx="2" ry="2" />
<text  x="989.81" y="799.5" ></text>
</g>
<g >
<title>_slab_free (51 samples, 0.05%)</title><rect x="745.8" y="549" width="0.7" height="15.0" fill="rgb(246,55,53)" rx="2" ry="2" />
<text  x="748.84" y="559.5" ></text>
</g>
<g >
<title>ep_remove (676 samples, 0.73%)</title><rect x="775.8" y="645" width="8.6" height="15.0" fill="rgb(209,11,47)" rx="2" ry="2" />
<text  x="778.84" y="655.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.01%)</title><rect x="237.1" y="1045" width="0.1" height="15.0" fill="rgb(244,228,40)" rx="2" ry="2" />
<text  x="240.06" y="1055.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (26 samples, 0.03%)</title><rect x="625.8" y="37" width="0.4" height="15.0" fill="rgb(230,225,4)" rx="2" ry="2" />
<text  x="628.84" y="47.5" ></text>
</g>
<g >
<title>_put_user_nocheck_8 (68 samples, 0.07%)</title><rect x="846.7" y="677" width="0.8" height="15.0" fill="rgb(220,220,41)" rx="2" ry="2" />
<text  x="849.65" y="687.5" ></text>
</g>
<g >
<title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (24 samples, 0.03%)</title><rect x="272.6" y="949" width="0.3" height="15.0" fill="rgb(228,86,5)" rx="2" ry="2" />
<text  x="275.63" y="959.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (209 samples, 0.22%)</title><rect x="59.9" y="789" width="2.6" height="15.0" fill="rgb(228,77,40)" rx="2" ry="2" />
<text  x="62.89" y="799.5" ></text>
</g>
<g >
<title>ryu::pretty::format64 (358 samples, 0.38%)</title><rect x="430.2" y="629" width="4.5" height="15.0" fill="rgb(217,134,3)" rx="2" ry="2" />
<text  x="433.16" y="639.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (310 samples, 0.33%)</title><rect x="1025.0" y="693" width="3.9" height="15.0" fill="rgb(239,218,18)" rx="2" ry="2" />
<text  x="1027.98" y="703.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u8 (16 samples, 0.02%)</title><rect x="143.0" y="613" width="0.2" height="15.0" fill="rgb(239,9,27)" rx="2" ry="2" />
<text  x="146.00" y="623.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (15 samples, 0.02%)</title><rect x="101.7" y="757" width="0.2" height="15.0" fill="rgb(230,48,5)" rx="2" ry="2" />
<text  x="104.70" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="147.2" y="773" width="0.2" height="15.0" fill="rgb(231,77,18)" rx="2" ry="2" />
<text  x="150.15" y="783.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (133 samples, 0.14%)</title><rect x="203.1" y="549" width="1.7" height="15.0" fill="rgb(239,31,14)" rx="2" ry="2" />
<text  x="206.12" y="559.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (32 samples, 0.03%)</title><rect x="528.7" y="501" width="0.5" height="15.0" fill="rgb(251,196,13)" rx="2" ry="2" />
<text  x="531.75" y="511.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (8 samples, 0.01%)</title><rect x="975.2" y="725" width="0.1" height="15.0" fill="rgb(211,162,8)" rx="2" ry="2" />
<text  x="978.20" y="735.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (42 samples, 0.05%)</title><rect x="1051.1" y="325" width="0.5" height="15.0" fill="rgb(219,124,49)" rx="2" ry="2" />
<text  x="1054.07" y="335.5" ></text>
</g>
<g >
<title>_rust_probestack (23 samples, 0.02%)</title><rect x="466.8" y="1077" width="0.3" height="15.0" fill="rgb(238,102,17)" rx="2" ry="2" />
<text  x="469.85" y="1087.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (22 samples, 0.02%)</title><rect x="272.3" y="917" width="0.3" height="15.0" fill="rgb(228,125,2)" rx="2" ry="2" />
<text  x="275.35" y="927.5" ></text>
</g>
<g >
<title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (14 samples, 0.02%)</title><rect x="970.0" y="501" width="0.2" height="15.0" fill="rgb(212,201,10)" rx="2" ry="2" />
<text  x="973.01" y="511.5" ></text>
</g>
<g >
<title>_libc_recv (35 samples, 0.04%)</title><rect x="536.3" y="885" width="0.4" height="15.0" fill="rgb(209,59,26)" rx="2" ry="2" />
<text  x="539.26" y="895.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (77 samples, 0.08%)</title><rect x="211.1" y="629" width="1.0" height="15.0" fill="rgb(232,197,28)" rx="2" ry="2" />
<text  x="214.14" y="639.5" ></text>
</g>
<g >
<title>_memcg_kmem_charge (11 samples, 0.01%)</title><rect x="1148.0" y="709" width="0.2" height="15.0" fill="rgb(251,213,40)" rx="2" ry="2" />
<text  x="1151.05" y="719.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (60 samples, 0.06%)</title><rect x="746.5" y="549" width="0.7" height="15.0" fill="rgb(250,84,53)" rx="2" ry="2" />
<text  x="749.48" y="559.5" ></text>
</g>
<g >
<title>raw_spin_lock_irq (9 samples, 0.01%)</title><rect x="828.1" y="565" width="0.1" height="15.0" fill="rgb(207,166,24)" rx="2" ry="2" />
<text  x="831.12" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_xor (44 samples, 0.05%)</title><rect x="484.8" y="629" width="0.6" height="15.0" fill="rgb(213,41,19)" rx="2" ry="2" />
<text  x="487.85" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (36 samples, 0.04%)</title><rect x="677.7" y="869" width="0.5" height="15.0" fill="rgb(246,84,11)" rx="2" ry="2" />
<text  x="680.72" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.04%)</title><rect x="424.8" y="661" width="0.4" height="15.0" fill="rgb(251,42,29)" rx="2" ry="2" />
<text  x="427.78" y="671.5" ></text>
</g>
<g >
<title>actix_rt::arbiter::Arbiter::spawn (139 samples, 0.15%)</title><rect x="526.7" y="597" width="1.8" height="15.0" fill="rgb(228,149,1)" rx="2" ry="2" />
<text  x="529.72" y="607.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (8 samples, 0.01%)</title><rect x="114.2" y="869" width="0.1" height="15.0" fill="rgb(241,118,28)" rx="2" ry="2" />
<text  x="117.17" y="879.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (31 samples, 0.03%)</title><rect x="447.4" y="933" width="0.4" height="15.0" fill="rgb(220,154,3)" rx="2" ry="2" />
<text  x="450.38" y="943.5" ></text>
</g>
<g >
<title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,573 samples, 1.69%)</title><rect x="244.1" y="853" width="19.9" height="15.0" fill="rgb(236,163,10)" rx="2" ry="2" />
<text  x="247.07" y="863.5" ></text>
</g>
<g >
<title>core::mem::replace (19 samples, 0.02%)</title><rect x="241.5" y="869" width="0.3" height="15.0" fill="rgb(210,24,20)" rx="2" ry="2" />
<text  x="244.52" y="879.5" ></text>
</g>
<g >
<title>psi_group_change (182 samples, 0.20%)</title><rect x="1182.6" y="789" width="2.3" height="15.0" fill="rgb(220,160,27)" rx="2" ry="2" />
<text  x="1185.65" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (10 samples, 0.01%)</title><rect x="677.3" y="917" width="0.1" height="15.0" fill="rgb(248,166,9)" rx="2" ry="2" />
<text  x="680.25" y="927.5" ></text>
</g>
<g >
<title>&lt;actix_web::data::Data&lt;T&gt; as core::clone::Clone&gt;::clone (86 samples, 0.09%)</title><rect x="348.7" y="869" width="1.1" height="15.0" fill="rgb(252,60,40)" rx="2" ry="2" />
<text  x="351.73" y="879.5" ></text>
</g>
<g >
<title>tokio::task::local::LocalSet::run_until::{{closure}} (331 samples, 0.36%)</title><rect x="525.1" y="1061" width="4.2" height="15.0" fill="rgb(210,101,44)" rx="2" ry="2" />
<text  x="528.14" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_server::worker::WorkerState&gt; (48 samples, 0.05%)</title><rect x="1068.6" y="341" width="0.6" height="15.0" fill="rgb(209,218,39)" rx="2" ry="2" />
<text  x="1071.55" y="351.5" ></text>
</g>
<g >
<title>tcp_data_queue (592 samples, 0.64%)</title><rect x="313.0" y="437" width="7.5" height="15.0" fill="rgb(249,182,43)" rx="2" ry="2" />
<text  x="316.04" y="447.5" ></text>
</g>
<g >
<title>&lt;http::uri::Uri as core::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::try_from (320 samples, 0.34%)</title><rect x="12.1" y="1125" width="4.0" height="15.0" fill="rgb(206,63,1)" rx="2" ry="2" />
<text  x="15.09" y="1135.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read_ready (141 samples, 0.15%)</title><rect x="461.0" y="981" width="1.8" height="15.0" fill="rgb(244,227,10)" rx="2" ry="2" />
<text  x="464.01" y="991.5" ></text>
</g>
<g >
<title>alloc::sync::Weak&lt;T&gt;::upgrade (18 samples, 0.02%)</title><rect x="338.0" y="965" width="0.2" height="15.0" fill="rgb(213,149,22)" rx="2" ry="2" />
<text  x="341.01" y="975.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (11 samples, 0.01%)</title><rect x="172.3" y="933" width="0.1" height="15.0" fill="rgb(229,36,6)" rx="2" ry="2" />
<text  x="175.28" y="943.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp_json_number (1,094 samples, 1.17%)</title><rect x="151.1" y="885" width="13.9" height="15.0" fill="rgb(254,166,26)" rx="2" ry="2" />
<text  x="154.13" y="895.5" ></text>
</g>
<g >
<title>std::sys::unix::time::Timespec::sub_timespec (66 samples, 0.07%)</title><rect x="985.0" y="789" width="0.8" height="15.0" fill="rgb(224,217,53)" rx="2" ry="2" />
<text  x="987.98" y="799.5" ></text>
</g>
<g >
<title>tcp_send_ack (15 samples, 0.02%)</title><rect x="640.2" y="309" width="0.2" height="15.0" fill="rgb(223,83,48)" rx="2" ry="2" />
<text  x="643.20" y="319.5" ></text>
</g>
<g >
<title>tokio::coop::Budget::decrement (11 samples, 0.01%)</title><rect x="1038.1" y="245" width="0.2" height="15.0" fill="rgb(215,154,30)" rx="2" ry="2" />
<text  x="1041.12" y="255.5" ></text>
</g>
<g >
<title>sock_def_readable (237 samples, 0.25%)</title><rect x="634.1" y="277" width="3.0" height="15.0" fill="rgb(231,14,50)" rx="2" ry="2" />
<text  x="637.09" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (20 samples, 0.02%)</title><rect x="421.5" y="645" width="0.2" height="15.0" fill="rgb(252,173,52)" rx="2" ry="2" />
<text  x="424.46" y="655.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (15 samples, 0.02%)</title><rect x="115.6" y="853" width="0.2" height="15.0" fill="rgb(226,125,27)" rx="2" ry="2" />
<text  x="118.62" y="863.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::invert (11 samples, 0.01%)</title><rect x="218.1" y="533" width="0.2" height="15.0" fill="rgb(231,79,15)" rx="2" ry="2" />
<text  x="221.14" y="543.5" ></text>
</g>
<g >
<title>tcp_data_queue (539 samples, 0.58%)</title><rect x="631.9" y="309" width="6.9" height="15.0" fill="rgb(243,48,22)" rx="2" ry="2" />
<text  x="634.94" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="381.7" y="853" width="0.2" height="15.0" fill="rgb(250,194,48)" rx="2" ry="2" />
<text  x="384.67" y="863.5" ></text>
</g>
<g >
<title>core::cmp::PartialOrd::ge (8 samples, 0.01%)</title><rect x="798.3" y="773" width="0.1" height="15.0" fill="rgb(220,105,37)" rx="2" ry="2" />
<text  x="801.28" y="783.5" ></text>
</g>
<g >
<title>tokio::util::slab::page::Shared&lt;T&gt;::remove_local (142 samples, 0.15%)</title><rect x="791.0" y="757" width="1.8" height="15.0" fill="rgb(225,203,15)" rx="2" ry="2" />
<text  x="793.99" y="767.5" ></text>
</g>
<g >
<title>tcp_write_xmit (7,206 samples, 7.73%)</title><rect x="576.8" y="725" width="91.3" height="15.0" fill="rgb(233,194,30)" rx="2" ry="2" />
<text  x="579.85" y="735.5" >tcp_write_..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;futures_util::future::ready::Ready&lt;core::result::Result&lt; (14 samples, 0.02%)</title><rect x="715.6" y="1013" width="0.1" height="15.0" fill="rgb(224,23,53)" rx="2" ry="2" />
<text  x="718.57" y="1023.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (152 samples, 0.16%)</title><rect x="181.5" y="789" width="1.9" height="15.0" fill="rgb(218,192,4)" rx="2" ry="2" />
<text  x="184.46" y="799.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (262 samples, 0.28%)</title><rect x="476.9" y="565" width="3.3" height="15.0" fill="rgb(209,114,20)" rx="2" ry="2" />
<text  x="479.92" y="575.5" ></text>
</g>
<g >
<title>skb_entail (12 samples, 0.01%)</title><rect x="559.7" y="773" width="0.2" height="15.0" fill="rgb(248,116,14)" rx="2" ry="2" />
<text  x="562.72" y="783.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::borrow_mut (13 samples, 0.01%)</title><rect x="368.8" y="1029" width="0.1" height="15.0" fill="rgb(248,21,44)" rx="2" ry="2" />
<text  x="371.78" y="1039.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (15 samples, 0.02%)</title><rect x="43.7" y="1045" width="0.2" height="15.0" fill="rgb(253,103,23)" rx="2" ry="2" />
<text  x="46.67" y="1055.5" ></text>
</g>
<g >
<title>__slab_alloc (8 samples, 0.01%)</title><rect x="573.2" y="693" width="0.1" height="15.0" fill="rgb(229,198,37)" rx="2" ry="2" />
<text  x="576.16" y="703.5" ></text>
</g>
<g >
<title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="237.1" y="1061" width="0.1" height="15.0" fill="rgb(213,4,7)" rx="2" ry="2" />
<text  x="240.06" y="1071.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::all_with_str::{{closure}} (62 samples, 0.07%)</title><rect x="178.6" y="677" width="0.8" height="15.0" fill="rgb(237,110,49)" rx="2" ry="2" />
<text  x="181.64" y="687.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u8 (12 samples, 0.01%)</title><rect x="177.0" y="533" width="0.2" height="15.0" fill="rgb(240,100,18)" rx="2" ry="2" />
<text  x="180.02" y="543.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (31 samples, 0.03%)</title><rect x="447.4" y="949" width="0.4" height="15.0" fill="rgb(226,98,41)" rx="2" ry="2" />
<text  x="450.38" y="959.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (84 samples, 0.09%)</title><rect x="174.4" y="597" width="1.1" height="15.0" fill="rgb(254,202,10)" rx="2" ry="2" />
<text  x="177.41" y="607.5" ></text>
</g>
<g >
<title>tokio::util::wake::wake_arc_raw (17 samples, 0.02%)</title><rect x="973.4" y="645" width="0.2" height="15.0" fill="rgb(231,185,3)" rx="2" ry="2" />
<text  x="976.36" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.02%)</title><rect x="352.8" y="933" width="0.2" height="15.0" fill="rgb(230,163,49)" rx="2" ry="2" />
<text  x="355.79" y="943.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (91 samples, 0.10%)</title><rect x="340.7" y="997" width="1.2" height="15.0" fill="rgb(240,91,20)" rx="2" ry="2" />
<text  x="343.70" y="1007.5" ></text>
</g>
<g >
<title>tokio::util::wake::drop_arc_raw (64 samples, 0.07%)</title><rect x="1028.1" y="581" width="0.8" height="15.0" fill="rgb(224,163,4)" rx="2" ry="2" />
<text  x="1031.10" y="591.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (14 samples, 0.02%)</title><rect x="914.0" y="597" width="0.2" height="15.0" fill="rgb(219,86,6)" rx="2" ry="2" />
<text  x="917.01" y="607.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (134 samples, 0.14%)</title><rect x="28.7" y="1141" width="1.7" height="15.0" fill="rgb(239,23,18)" rx="2" ry="2" />
<text  x="31.67" y="1151.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::UnboundedSender&lt;T&gt;::do_send_nb (33 samples, 0.04%)</title><rect x="1115.9" y="965" width="0.5" height="15.0" fill="rgb(239,63,11)" rx="2" ry="2" />
<text  x="1118.95" y="975.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (113 samples, 0.12%)</title><rect x="789.2" y="773" width="1.5" height="15.0" fill="rgb(241,173,6)" rx="2" ry="2" />
<text  x="792.24" y="783.5" ></text>
</g>
<g >
<title>get_partial_nod.sr..par. (8 samples, 0.01%)</title><rect x="1141.2" y="677" width="0.1" height="15.0" fill="rgb(251,46,54)" rx="2" ry="2" />
<text  x="1144.20" y="687.5" ></text>
</g>
<g >
<title>tokio::runtime::task::waker::clone_waker (15 samples, 0.02%)</title><rect x="1039.1" y="245" width="0.2" height="15.0" fill="rgb(250,116,19)" rx="2" ry="2" />
<text  x="1042.10" y="255.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::none (20 samples, 0.02%)</title><rect x="804.0" y="821" width="0.3" height="15.0" fill="rgb(248,32,46)" rx="2" ry="2" />
<text  x="807.04" y="831.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (8,015 samples, 8.60%)</title><rect x="1086.8" y="1173" width="101.5" height="15.0" fill="rgb(211,86,48)" rx="2" ry="2" />
<text  x="1089.83" y="1183.5" >std::panic::..</text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (20 samples, 0.02%)</title><rect x="224.0" y="613" width="0.2" height="15.0" fill="rgb(229,135,30)" rx="2" ry="2" />
<text  x="226.97" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (60 samples, 0.06%)</title><rect x="411.8" y="741" width="0.7" height="15.0" fill="rgb(205,229,54)" rx="2" ry="2" />
<text  x="414.76" y="751.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="148.1" y="869" width="0.4" height="15.0" fill="rgb(253,22,28)" rx="2" ry="2" />
<text  x="151.07" y="879.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::to_task (37 samples, 0.04%)</title><rect x="483.6" y="677" width="0.5" height="15.0" fill="rgb(224,172,24)" rx="2" ry="2" />
<text  x="486.59" y="687.5" ></text>
</g>
<g >
<title>ip_rcv (1,395 samples, 1.50%)</title><rect x="305.4" y="565" width="17.7" height="15.0" fill="rgb(217,39,29)" rx="2" ry="2" />
<text  x="308.41" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;actix_web::service::ServiceResponse,actix_http::error::Error&gt;&gt;&gt; (131 samples, 0.14%)</title><rect x="452.1" y="949" width="1.7" height="15.0" fill="rgb(229,179,20)" rx="2" ry="2" />
<text  x="455.15" y="959.5" ></text>
</g>
<g >
<title>accept4 (42 samples, 0.05%)</title><rect x="1086.3" y="1253" width="0.5" height="15.0" fill="rgb(217,121,45)" rx="2" ry="2" />
<text  x="1089.30" y="1263.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (17 samples, 0.02%)</title><rect x="358.0" y="885" width="0.2" height="15.0" fill="rgb(244,54,43)" rx="2" ry="2" />
<text  x="360.97" y="895.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.07%)</title><rect x="205.1" y="581" width="0.8" height="15.0" fill="rgb(238,65,5)" rx="2" ry="2" />
<text  x="208.14" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::time::driver::registration::Registration::poll_elapsed::{{closure}}&gt; (11 samples, 0.01%)</title><rect x="237.1" y="1093" width="0.1" height="15.0" fill="rgb(213,122,18)" rx="2" ry="2" />
<text  x="240.06" y="1103.5" ></text>
</g>
<g >
<title>arena_get2 (10 samples, 0.01%)</title><rect x="1083.9" y="1109" width="0.1" height="15.0" fill="rgb(216,11,49)" rx="2" ry="2" />
<text  x="1086.91" y="1119.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::parser_node_visitor::ParserNodeVisitor::visit (278 samples, 0.30%)</title><rect x="238.9" y="949" width="3.5" height="15.0" fill="rgb(214,113,49)" rx="2" ry="2" />
<text  x="241.85" y="959.5" ></text>
</g>
<g >
<title>_pthread_enable_asynccancel (18 samples, 0.02%)</title><rect x="685.8" y="821" width="0.3" height="15.0" fill="rgb(224,148,14)" rx="2" ry="2" />
<text  x="688.85" y="831.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.06%)</title><rect x="999.1" y="805" width="0.7" height="15.0" fill="rgb(238,6,40)" rx="2" ry="2" />
<text  x="1002.07" y="815.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (50 samples, 0.05%)</title><rect x="1062.8" y="277" width="0.6" height="15.0" fill="rgb(228,36,18)" rx="2" ry="2" />
<text  x="1065.78" y="287.5" ></text>
</g>
<g >
<title>ep_timeout_to_timespe.ar. (162 samples, 0.17%)</title><rect x="953.1" y="693" width="2.0" height="15.0" fill="rgb(241,68,34)" rx="2" ry="2" />
<text  x="956.08" y="703.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (16 samples, 0.02%)</title><rect x="973.2" y="565" width="0.2" height="15.0" fill="rgb(241,127,41)" rx="2" ry="2" />
<text  x="976.16" y="575.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="177.5" y="501" width="0.3" height="15.0" fill="rgb(230,211,43)" rx="2" ry="2" />
<text  x="180.54" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::tokens::ParseToken&gt; (10 samples, 0.01%)</title><rect x="417.1" y="789" width="0.1" height="15.0" fill="rgb(216,18,12)" rx="2" ry="2" />
<text  x="420.10" y="799.5" ></text>
</g>
<g >
<title>_kfree_skb (71 samples, 0.08%)</title><rect x="549.9" y="677" width="0.9" height="15.0" fill="rgb(253,144,4)" rx="2" ry="2" />
<text  x="552.87" y="687.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::handle_request (13,045 samples, 13.99%)</title><rect x="67.1" y="1189" width="165.1" height="15.0" fill="rgb(214,44,27)" rx="2" ry="2" />
<text  x="70.06" y="1199.5" >actix_http::h1::dispa..</text>
</g>
<g >
<title>_x64_sys_recvfrom (1,535 samples, 1.65%)</title><rect x="687.1" y="789" width="19.4" height="15.0" fill="rgb(214,87,38)" rx="2" ry="2" />
<text  x="690.07" y="799.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths_dot (194 samples, 0.21%)</title><rect x="107.9" y="853" width="2.4" height="15.0" fill="rgb(243,37,35)" rx="2" ry="2" />
<text  x="110.86" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (149 samples, 0.16%)</title><rect x="168.7" y="773" width="1.8" height="15.0" fill="rgb(251,193,14)" rx="2" ry="2" />
<text  x="171.66" y="783.5" ></text>
</g>
<g >
<title>tcp_wfree (25 samples, 0.03%)</title><rect x="651.4" y="517" width="0.3" height="15.0" fill="rgb(214,202,28)" rx="2" ry="2" />
<text  x="654.43" y="527.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::next_token (14 samples, 0.02%)</title><rect x="72.5" y="885" width="0.1" height="15.0" fill="rgb(208,2,21)" rx="2" ry="2" />
<text  x="75.46" y="895.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (18 samples, 0.02%)</title><rect x="1058.6" y="277" width="0.3" height="15.0" fill="rgb(207,145,31)" rx="2" ry="2" />
<text  x="1061.64" y="287.5" ></text>
</g>
<g >
<title>tokio::runtime::enter::ENTERED::_getit (33 samples, 0.04%)</title><rect x="1024.4" y="645" width="0.5" height="15.0" fill="rgb(236,114,25)" rx="2" ry="2" />
<text  x="1027.44" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (23 samples, 0.02%)</title><rect x="183.1" y="693" width="0.3" height="15.0" fill="rgb(243,147,46)" rx="2" ry="2" />
<text  x="186.09" y="703.5" ></text>
</g>
<g >
<title>&lt;actix_web::service::ServiceResponse&lt;B&gt; as core::convert::Into&lt;actix_http::response::Response&lt;B&gt;&gt;&gt;::into (86 samples, 0.09%)</title><rect x="368.9" y="1045" width="1.1" height="15.0" fill="rgb(243,76,47)" rx="2" ry="2" />
<text  x="371.94" y="1055.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (9 samples, 0.01%)</title><rect x="515.3" y="709" width="0.1" height="15.0" fill="rgb(252,185,39)" rx="2" ry="2" />
<text  x="518.26" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (20 samples, 0.02%)</title><rect x="56.7" y="789" width="0.3" height="15.0" fill="rgb(209,130,8)" rx="2" ry="2" />
<text  x="59.72" y="799.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2,581 samples, 2.77%)</title><rect x="1036.6" y="437" width="32.7" height="15.0" fill="rgb(233,52,41)" rx="2" ry="2" />
<text  x="1039.59" y="447.5" >to..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (17 samples, 0.02%)</title><rect x="38.6" y="997" width="0.2" height="15.0" fill="rgb(230,219,22)" rx="2" ry="2" />
<text  x="41.57" y="1007.5" ></text>
</g>
<g >
<title>mio::poll::RegistrationInner::set_readiness (25 samples, 0.03%)</title><rect x="793.4" y="757" width="0.3" height="15.0" fill="rgb(234,140,9)" rx="2" ry="2" />
<text  x="796.37" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::filter (3,604 samples, 3.87%)</title><rect x="184.2" y="917" width="45.6" height="15.0" fill="rgb(210,27,39)" rx="2" ry="2" />
<text  x="187.18" y="927.5" >json..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;jsonpath_lib::paths::path_parser::PathParser&gt;&gt;&gt; (1,055 samples, 1.13%)</title><rect x="382.2" y="885" width="13.4" height="15.0" fill="rgb(228,50,39)" rx="2" ry="2" />
<text  x="385.20" y="895.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (52 samples, 0.06%)</title><rect x="236.2" y="1061" width="0.6" height="15.0" fill="rgb(254,69,36)" rx="2" ry="2" />
<text  x="239.18" y="1071.5" ></text>
</g>
<g >
<title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (356 samples, 0.38%)</title><rect x="238.9" y="1141" width="4.5" height="15.0" fill="rgb(205,89,5)" rx="2" ry="2" />
<text  x="241.85" y="1151.5" ></text>
</g>
<g >
<title>_GI___libc_free (8 samples, 0.01%)</title><rect x="367.1" y="997" width="0.1" height="15.0" fill="rgb(227,132,41)" rx="2" ry="2" />
<text  x="370.07" y="1007.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::static_empty (27 samples, 0.03%)</title><rect x="530.9" y="933" width="0.4" height="15.0" fill="rgb(225,15,16)" rx="2" ry="2" />
<text  x="533.94" y="943.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (9 samples, 0.01%)</title><rect x="96.4" y="773" width="0.1" height="15.0" fill="rgb(208,129,53)" rx="2" ry="2" />
<text  x="99.37" y="783.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll::{{closure}} (331 samples, 0.36%)</title><rect x="525.1" y="741" width="4.2" height="15.0" fill="rgb(228,63,50)" rx="2" ry="2" />
<text  x="528.14" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek (28 samples, 0.03%)</title><rect x="64.2" y="709" width="0.3" height="15.0" fill="rgb(244,26,51)" rx="2" ry="2" />
<text  x="67.18" y="719.5" ></text>
</g>
<g >
<title>pipe_poll (22 samples, 0.02%)</title><rect x="851.6" y="645" width="0.3" height="15.0" fill="rgb(219,5,53)" rx="2" ry="2" />
<text  x="854.63" y="655.5" ></text>
</g>
<g >
<title>_GI___libc_free (12 samples, 0.01%)</title><rect x="42.5" y="997" width="0.1" height="15.0" fill="rgb(241,176,3)" rx="2" ry="2" />
<text  x="45.49" y="1007.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::paths::tokens::ParseToken as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="122.2" y="917" width="0.1" height="15.0" fill="rgb(233,61,29)" rx="2" ry="2" />
<text  x="125.19" y="927.5" ></text>
</g>
<g >
<title>tokio::task::local::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;::bind::{{closure}} (20 samples, 0.02%)</title><rect x="1070.5" y="501" width="0.2" height="15.0" fill="rgb(233,175,26)" rx="2" ry="2" />
<text  x="1073.45" y="511.5" ></text>
</g>
<g >
<title>mio::poll::enqueue_with_wakeup (16 samples, 0.02%)</title><rect x="970.0" y="517" width="0.2" height="15.0" fill="rgb(236,114,23)" rx="2" ry="2" />
<text  x="972.98" y="527.5" ></text>
</g>
<g >
<title>_cgroup_bpf_run_filter_skb (24 samples, 0.03%)</title><rect x="622.6" y="165" width="0.3" height="15.0" fill="rgb(245,177,29)" rx="2" ry="2" />
<text  x="625.58" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (482 samples, 0.52%)</title><rect x="141.3" y="837" width="6.1" height="15.0" fill="rgb(236,175,26)" rx="2" ry="2" />
<text  x="144.27" y="847.5" ></text>
</g>
<g >
<title>tokio::time::driver::entry::Entry::new (587 samples, 0.63%)</title><rect x="266.7" y="1013" width="7.4" height="15.0" fill="rgb(232,29,22)" rx="2" ry="2" />
<text  x="269.68" y="1023.5" ></text>
</g>
<g >
<title>core::cell::BorrowRefMut::new (21 samples, 0.02%)</title><rect x="1076.9" y="629" width="0.3" height="15.0" fill="rgb(208,213,18)" rx="2" ry="2" />
<text  x="1079.91" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="182.4" y="693" width="0.2" height="15.0" fill="rgb(214,224,3)" rx="2" ry="2" />
<text  x="185.38" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (46 samples, 0.05%)</title><rect x="361.7" y="949" width="0.6" height="15.0" fill="rgb(212,213,48)" rx="2" ry="2" />
<text  x="364.69" y="959.5" ></text>
</g>
<g >
<title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read_ready (193 samples, 0.21%)</title><rect x="710.9" y="933" width="2.4" height="15.0" fill="rgb(207,4,41)" rx="2" ry="2" />
<text  x="713.86" y="943.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (19 samples, 0.02%)</title><rect x="89.8" y="757" width="0.2" height="15.0" fill="rgb(223,225,24)" rx="2" ry="2" />
<text  x="92.76" y="767.5" ></text>
</g>
<g >
<title>mio::sys::unix::cvt (26 samples, 0.03%)</title><rect x="962.5" y="757" width="0.4" height="15.0" fill="rgb(229,105,15)" rx="2" ry="2" />
<text  x="965.53" y="767.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (4,215 samples, 4.52%)</title><rect x="591.9" y="549" width="53.4" height="15.0" fill="rgb(239,165,46)" rx="2" ry="2" />
<text  x="594.91" y="559.5" >do_so..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (22 samples, 0.02%)</title><rect x="133.4" y="933" width="0.3" height="15.0" fill="rgb(223,77,11)" rx="2" ry="2" />
<text  x="136.42" y="943.5" ></text>
</g>
<g >
<title>core::tuple::&lt;impl core::cmp::Ord for  (37 samples, 0.04%)</title><rect x="976.5" y="757" width="0.5" height="15.0" fill="rgb(246,212,38)" rx="2" ry="2" />
<text  x="979.54" y="767.5" ></text>
</g>
<g >
<title>tcp_v4_inbound_md5_hash (12 samples, 0.01%)</title><rect x="641.9" y="341" width="0.2" height="15.0" fill="rgb(218,72,37)" rx="2" ry="2" />
<text  x="644.94" y="351.5" ></text>
</g>
<g >
<title>tokio::runtime::Runtime::block_on (22,824 samples, 24.48%)</title><rect x="795.0" y="1029" width="288.9" height="15.0" fill="rgb(206,213,43)" rx="2" ry="2" />
<text  x="797.97" y="1039.5" >tokio::runtime::Runtime::block_on</text>
</g>
<g >
<title>core::task::wake::RawWaker::new (11 samples, 0.01%)</title><rect x="1021.7" y="533" width="0.1" height="15.0" fill="rgb(236,228,38)" rx="2" ry="2" />
<text  x="1024.67" y="543.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="1041.3" y="213" width="0.4" height="15.0" fill="rgb(241,177,10)" rx="2" ry="2" />
<text  x="1044.31" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (48 samples, 0.05%)</title><rect x="154.3" y="613" width="0.6" height="15.0" fill="rgb(230,148,3)" rx="2" ry="2" />
<text  x="157.29" y="623.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (32 samples, 0.03%)</title><rect x="957.5" y="677" width="0.4" height="15.0" fill="rgb(249,113,35)" rx="2" ry="2" />
<text  x="960.45" y="687.5" ></text>
</g>
<g >
<title>do_epoll_wait (1,997 samples, 2.14%)</title><rect x="1161.7" y="917" width="25.3" height="15.0" fill="rgb(229,144,25)" rx="2" ry="2" />
<text  x="1164.75" y="927.5" >d..</text>
</g>
<g >
<title>tcache_get (53 samples, 0.06%)</title><rect x="358.8" y="869" width="0.6" height="15.0" fill="rgb(221,12,35)" rx="2" ry="2" />
<text  x="361.75" y="879.5" ></text>
</g>
<g >
<title>&lt;actix_http::config::ServiceConfig as core::clone::Clone&gt;::clone (44 samples, 0.05%)</title><rect x="530.0" y="1029" width="0.6" height="15.0" fill="rgb(231,215,8)" rx="2" ry="2" />
<text  x="533.02" y="1039.5" ></text>
</g>
<g >
<title>tokio::util::slab::Slab&lt;T&gt;::get (14 samples, 0.02%)</title><rect x="338.6" y="965" width="0.2" height="15.0" fill="rgb(229,199,36)" rx="2" ry="2" />
<text  x="341.58" y="975.5" ></text>
</g>
<g >
<title>mio::poll::AtomicState::load (21 samples, 0.02%)</title><rect x="1092.2" y="693" width="0.3" height="15.0" fill="rgb(211,208,42)" rx="2" ry="2" />
<text  x="1095.23" y="703.5" ></text>
</g>
<g >
<title>tokio::coop::CURRENT::_getit (10 samples, 0.01%)</title><rect x="237.1" y="1013" width="0.1" height="15.0" fill="rgb(254,2,4)" rx="2" ry="2" />
<text  x="240.07" y="1023.5" ></text>
</g>
<g >
<title>core::num::dec2flt::number::Number::try_fast_path (36 samples, 0.04%)</title><rect x="88.8" y="741" width="0.5" height="15.0" fill="rgb(222,133,16)" rx="2" ry="2" />
<text  x="91.82" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (20 samples, 0.02%)</title><rect x="44.7" y="1141" width="0.3" height="15.0" fill="rgb(253,99,5)" rx="2" ry="2" />
<text  x="47.73" y="1151.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="182.4" y="709" width="0.2" height="15.0" fill="rgb(238,172,10)" rx="2" ry="2" />
<text  x="185.38" y="719.5" ></text>
</g>
<g >
<title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="365.1" y="965" width="0.2" height="15.0" fill="rgb(234,127,51)" rx="2" ry="2" />
<text  x="368.07" y="975.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="45.0" y="1109" width="0.3" height="15.0" fill="rgb(221,218,47)" rx="2" ry="2" />
<text  x="47.99" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (65 samples, 0.07%)</title><rect x="220.6" y="549" width="0.8" height="15.0" fill="rgb(234,133,21)" rx="2" ry="2" />
<text  x="223.59" y="559.5" ></text>
</g>
<g >
<title>core::mem::take (18 samples, 0.02%)</title><rect x="1058.6" y="261" width="0.3" height="15.0" fill="rgb(221,61,12)" rx="2" ry="2" />
<text  x="1061.64" y="271.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.01%)</title><rect x="461.0" y="917" width="0.1" height="15.0" fill="rgb(245,222,44)" rx="2" ry="2" />
<text  x="464.03" y="927.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (684 samples, 0.73%)</title><rect x="1151.2" y="853" width="8.6" height="15.0" fill="rgb(248,59,27)" rx="2" ry="2" />
<text  x="1154.15" y="863.5" ></text>
</g>
<g >
<title>_alloc_skb (455 samples, 0.49%)</title><rect x="568.6" y="741" width="5.7" height="15.0" fill="rgb(222,3,18)" rx="2" ry="2" />
<text  x="571.58" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;jsonpath_lib::selector::selector_impl::JsonSelector&gt;&gt; (22 samples, 0.02%)</title><rect x="381.9" y="885" width="0.3" height="15.0" fill="rgb(226,189,44)" rx="2" ry="2" />
<text  x="384.92" y="895.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::poll (331 samples, 0.36%)</title><rect x="525.1" y="853" width="4.2" height="15.0" fill="rgb(242,172,12)" rx="2" ry="2" />
<text  x="528.14" y="863.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (263 samples, 0.28%)</title><rect x="83.6" y="757" width="3.4" height="15.0" fill="rgb(207,62,45)" rx="2" ry="2" />
<text  x="86.62" y="767.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output::{{closure}} (67 samples, 0.07%)</title><rect x="1044.4" y="229" width="0.9" height="15.0" fill="rgb(237,62,32)" rx="2" ry="2" />
<text  x="1047.41" y="239.5" ></text>
</g>
<g >
<title>int_free (76 samples, 0.08%)</title><rect x="1057.3" y="197" width="0.9" height="15.0" fill="rgb(207,225,0)" rx="2" ry="2" />
<text  x="1060.25" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (41 samples, 0.04%)</title><rect x="468.1" y="1237" width="0.6" height="15.0" fill="rgb(227,47,46)" rx="2" ry="2" />
<text  x="471.14" y="1247.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (11 samples, 0.01%)</title><rect x="182.5" y="677" width="0.1" height="15.0" fill="rgb(208,1,42)" rx="2" ry="2" />
<text  x="185.51" y="687.5" ></text>
</g>
<g >
<title>do_epoll_wait (8,778 samples, 9.42%)</title><rect x="841.9" y="693" width="111.1" height="15.0" fill="rgb(230,172,3)" rx="2" ry="2" />
<text  x="844.85" y="703.5" >do_epoll_wait</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (189 samples, 0.20%)</title><rect x="275.3" y="981" width="2.4" height="15.0" fill="rgb(223,69,47)" rx="2" ry="2" />
<text  x="278.33" y="991.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="182.0" y="741" width="0.3" height="15.0" fill="rgb(227,70,12)" rx="2" ry="2" />
<text  x="185.03" y="751.5" ></text>
</g>
<g >
<title>core::mem::replace (9 samples, 0.01%)</title><rect x="373.8" y="901" width="0.1" height="15.0" fill="rgb(230,115,24)" rx="2" ry="2" />
<text  x="376.81" y="911.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (2,626 samples, 2.82%)</title><rect x="1036.2" y="485" width="33.2" height="15.0" fill="rgb(231,149,18)" rx="2" ry="2" />
<text  x="1039.17" y="495.5" >&lt;s..</text>
</g>
<g >
<title>core::num::dec2flt::parse::parse_partial_number (9 samples, 0.01%)</title><rect x="105.2" y="757" width="0.1" height="15.0" fill="rgb(211,136,30)" rx="2" ry="2" />
<text  x="108.15" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (32 samples, 0.03%)</title><rect x="165.2" y="885" width="0.4" height="15.0" fill="rgb(208,195,41)" rx="2" ry="2" />
<text  x="168.18" y="895.5" ></text>
</g>
<g >
<title>_rdl_dealloc (9 samples, 0.01%)</title><rect x="1043.8" y="133" width="0.1" height="15.0" fill="rgb(230,21,35)" rx="2" ry="2" />
<text  x="1046.82" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (91 samples, 0.10%)</title><rect x="205.9" y="581" width="1.2" height="15.0" fill="rgb(221,45,11)" rx="2" ry="2" />
<text  x="208.92" y="591.5" ></text>
</g>
<g >
<title>tokio::io::driver::Inner::deregister_source (1,285 samples, 1.38%)</title><rect x="771.3" y="821" width="16.2" height="15.0" fill="rgb(232,70,11)" rx="2" ry="2" />
<text  x="774.26" y="831.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="997.5" y="693" width="0.3" height="15.0" fill="rgb(229,28,0)" rx="2" ry="2" />
<text  x="1000.49" y="703.5" ></text>
</g>
<g >
<title>remove_wait_queue (12 samples, 0.01%)</title><rect x="784.2" y="629" width="0.2" height="15.0" fill="rgb(233,84,17)" rx="2" ry="2" />
<text  x="787.24" y="639.5" ></text>
</g>
<g >
<title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_flush (171 samples, 0.18%)</title><rect x="336.8" y="1077" width="2.2" height="15.0" fill="rgb(223,127,28)" rx="2" ry="2" />
<text  x="339.80" y="1087.5" ></text>
</g>
<g >
<title>nf_hook_slow (12 samples, 0.01%)</title><rect x="627.3" y="181" width="0.2" height="15.0" fill="rgb(242,4,47)" rx="2" ry="2" />
<text  x="630.34" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (83 samples, 0.09%)</title><rect x="138.9" y="805" width="1.0" height="15.0" fill="rgb(238,15,7)" rx="2" ry="2" />
<text  x="141.88" y="815.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (102 samples, 0.11%)</title><rect x="114.6" y="949" width="1.3" height="15.0" fill="rgb(234,210,52)" rx="2" ry="2" />
<text  x="117.58" y="959.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (56 samples, 0.06%)</title><rect x="29.6" y="1109" width="0.7" height="15.0" fill="rgb(205,192,19)" rx="2" ry="2" />
<text  x="32.57" y="1119.5" ></text>
</g>
<g >
<title>kmalloc_slab (8 samples, 0.01%)</title><rect x="616.5" y="213" width="0.1" height="15.0" fill="rgb(217,16,54)" rx="2" ry="2" />
<text  x="619.46" y="223.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (41 samples, 0.04%)</title><rect x="448.5" y="965" width="0.6" height="15.0" fill="rgb(219,199,33)" rx="2" ry="2" />
<text  x="451.54" y="975.5" ></text>
</g>
<g >
<title>ksoftirqd_running (13 samples, 0.01%)</title><rect x="323.5" y="693" width="0.2" height="15.0" fill="rgb(215,212,39)" rx="2" ry="2" />
<text  x="326.54" y="703.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (30 samples, 0.03%)</title><rect x="504.0" y="1173" width="0.4" height="15.0" fill="rgb(219,110,10)" rx="2" ry="2" />
<text  x="507.00" y="1183.5" ></text>
</g>
<g >
<title>core::pin::Pin&lt;P&gt;::set (14 samples, 0.02%)</title><rect x="681.0" y="997" width="0.1" height="15.0" fill="rgb(244,90,8)" rx="2" ry="2" />
<text  x="683.95" y="1007.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::as_usize (10 samples, 0.01%)</title><rect x="236.0" y="1061" width="0.1" height="15.0" fill="rgb(231,198,10)" rx="2" ry="2" />
<text  x="238.98" y="1071.5" ></text>
</g>
<g >
<title>_fget_files (113 samples, 0.12%)</title><rect x="520.0" y="453" width="1.4" height="15.0" fill="rgb(214,34,0)" rx="2" ry="2" />
<text  x="523.01" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::aligned_malloc (343 samples, 0.37%)</title><rect x="267.5" y="885" width="4.3" height="15.0" fill="rgb(247,26,13)" rx="2" ry="2" />
<text  x="270.46" y="895.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (34 samples, 0.04%)</title><rect x="89.6" y="789" width="0.4" height="15.0" fill="rgb(251,224,17)" rx="2" ry="2" />
<text  x="92.57" y="799.5" ></text>
</g>
<g >
<title>tcache_get (15 samples, 0.02%)</title><rect x="108.8" y="709" width="0.2" height="15.0" fill="rgb(242,129,26)" rx="2" ry="2" />
<text  x="111.79" y="719.5" ></text>
</g>
<g >
<title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker::{{closure}} (18 samples, 0.02%)</title><rect x="974.9" y="773" width="0.2" height="15.0" fill="rgb(226,111,16)" rx="2" ry="2" />
<text  x="977.86" y="783.5" ></text>
</g>
<g >
<title>_wake_up_bit (26 samples, 0.03%)</title><rect x="755.2" y="517" width="0.3" height="15.0" fill="rgb(247,155,44)" rx="2" ry="2" />
<text  x="758.17" y="527.5" ></text>
</g>
<g >
<title>_rust_probestack (8 samples, 0.01%)</title><rect x="236.9" y="1205" width="0.1" height="15.0" fill="rgb(224,4,34)" rx="2" ry="2" />
<text  x="239.94" y="1215.5" ></text>
</g>
<g >
<title>_fget_light (31 samples, 0.03%)</title><rect x="672.5" y="805" width="0.3" height="15.0" fill="rgb(219,11,10)" rx="2" ry="2" />
<text  x="675.46" y="815.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="56.3" y="645" width="0.1" height="15.0" fill="rgb(212,27,53)" rx="2" ry="2" />
<text  x="59.32" y="655.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::level_range (22 samples, 0.02%)</title><rect x="1008.9" y="821" width="0.2" height="15.0" fill="rgb(248,140,9)" rx="2" ry="2" />
<text  x="1011.87" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt; (18 samples, 0.02%)</title><rect x="393.2" y="469" width="0.2" height="15.0" fill="rgb(220,74,1)" rx="2" ry="2" />
<text  x="396.21" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="997.5" y="741" width="0.3" height="15.0" fill="rgb(208,1,38)" rx="2" ry="2" />
<text  x="1000.49" y="751.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (19 samples, 0.02%)</title><rect x="108.4" y="821" width="0.3" height="15.0" fill="rgb(233,29,2)" rx="2" ry="2" />
<text  x="111.42" y="831.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (676 samples, 0.73%)</title><rect x="1037.4" y="373" width="8.5" height="15.0" fill="rgb(205,187,29)" rx="2" ry="2" />
<text  x="1040.36" y="383.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths_dot (110 samples, 0.12%)</title><rect x="91.0" y="821" width="1.4" height="15.0" fill="rgb(223,192,49)" rx="2" ry="2" />
<text  x="94.01" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (80 samples, 0.09%)</title><rect x="411.8" y="757" width="1.0" height="15.0" fill="rgb(254,199,26)" rx="2" ry="2" />
<text  x="414.76" y="767.5" ></text>
</g>
<g >
<title>_rdl_dealloc (22 samples, 0.02%)</title><rect x="719.4" y="821" width="0.3" height="15.0" fill="rgb(241,5,16)" rx="2" ry="2" />
<text  x="722.38" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::task::state::State::fetch_update (41 samples, 0.04%)</title><rect x="1072.8" y="517" width="0.6" height="15.0" fill="rgb(227,222,34)" rx="2" ry="2" />
<text  x="1075.85" y="527.5" ></text>
</g>
<g >
<title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (772 samples, 0.83%)</title><rect x="425.2" y="725" width="9.8" height="15.0" fill="rgb(238,166,8)" rx="2" ry="2" />
<text  x="428.21" y="735.5" ></text>
</g>
<g >
<title>mod_timer (12 samples, 0.01%)</title><rect x="667.6" y="677" width="0.1" height="15.0" fill="rgb(250,195,41)" rx="2" ry="2" />
<text  x="670.56" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::net::tcp::TcpStream&gt; (2,989 samples, 3.21%)</title><rect x="733.0" y="805" width="37.8" height="15.0" fill="rgb(233,229,29)" rx="2" ry="2" />
<text  x="735.99" y="815.5" >cor..</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="227.6" y="645" width="0.2" height="15.0" fill="rgb(209,132,8)" rx="2" ry="2" />
<text  x="230.64" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (11 samples, 0.01%)</title><rect x="968.3" y="709" width="0.1" height="15.0" fill="rgb(231,218,11)" rx="2" ry="2" />
<text  x="971.27" y="719.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::bucket (16 samples, 0.02%)</title><rect x="194.7" y="581" width="0.2" height="15.0" fill="rgb(209,39,29)" rx="2" ry="2" />
<text  x="197.69" y="591.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (57 samples, 0.06%)</title><rect x="91.7" y="773" width="0.7" height="15.0" fill="rgb(239,222,2)" rx="2" ry="2" />
<text  x="94.69" y="783.5" ></text>
</g>
<g >
<title>amd_pmu_addr_offset (124 samples, 0.13%)</title><rect x="868.7" y="533" width="1.6" height="15.0" fill="rgb(235,18,8)" rx="2" ry="2" />
<text  x="871.73" y="543.5" ></text>
</g>
<g >
<title>&lt;actix_http::service::HttpServiceHandlerResponse&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (14,383 samples, 15.43%)</title><rect x="531.4" y="1045" width="182.1" height="15.0" fill="rgb(222,147,39)" rx="2" ry="2" />
<text  x="534.39" y="1055.5" >&lt;actix_http::service::H..</text>
</g>
<g >
<title>bictcp_acked (12 samples, 0.01%)</title><rect x="547.1" y="693" width="0.2" height="15.0" fill="rgb(248,72,46)" rx="2" ry="2" />
<text  x="550.13" y="703.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (15 samples, 0.02%)</title><rect x="651.2" y="517" width="0.2" height="15.0" fill="rgb(247,204,49)" rx="2" ry="2" />
<text  x="654.24" y="527.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (33 samples, 0.04%)</title><rect x="117.1" y="901" width="0.4" height="15.0" fill="rgb(242,11,4)" rx="2" ry="2" />
<text  x="120.05" y="911.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (97 samples, 0.10%)</title><rect x="1059.1" y="277" width="1.2" height="15.0" fill="rgb(240,35,31)" rx="2" ry="2" />
<text  x="1062.11" y="287.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (30 samples, 0.03%)</title><rect x="56.1" y="709" width="0.4" height="15.0" fill="rgb(244,90,49)" rx="2" ry="2" />
<text  x="59.11" y="719.5" ></text>
</g>
<g >
<title>ep_item_pol.sr. (16 samples, 0.02%)</title><rect x="975.7" y="645" width="0.2" height="15.0" fill="rgb(253,123,3)" rx="2" ry="2" />
<text  x="978.67" y="655.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="450.6" y="981" width="0.2" height="15.0" fill="rgb(226,224,3)" rx="2" ry="2" />
<text  x="453.57" y="991.5" ></text>
</g>
<g >
<title>_GI___libc_free (11 samples, 0.01%)</title><rect x="132.6" y="821" width="0.1" height="15.0" fill="rgb(254,42,44)" rx="2" ry="2" />
<text  x="135.61" y="831.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (1,363 samples, 1.46%)</title><rect x="816.7" y="709" width="17.2" height="15.0" fill="rgb(221,56,0)" rx="2" ry="2" />
<text  x="819.66" y="719.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (48 samples, 0.05%)</title><rect x="154.3" y="629" width="0.6" height="15.0" fill="rgb(246,82,19)" rx="2" ry="2" />
<text  x="157.29" y="639.5" ></text>
</g>
<g >
<title>locks_remove_posix (8 samples, 0.01%)</title><rect x="736.9" y="661" width="0.1" height="15.0" fill="rgb(229,93,37)" rx="2" ry="2" />
<text  x="739.94" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::shutdown (4,128 samples, 4.43%)</title><rect x="284.3" y="1029" width="52.2" height="15.0" fill="rgb(253,145,50)" rx="2" ry="2" />
<text  x="287.28" y="1039.5" >std::..</text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,563 samples, 2.75%)</title><rect x="1036.7" y="421" width="32.5" height="15.0" fill="rgb(234,145,2)" rx="2" ry="2" />
<text  x="1039.74" y="431.5" >to..</text>
</g>
<g >
<title>std::time::Instant::duration_since (70 samples, 0.08%)</title><rect x="984.9" y="821" width="0.9" height="15.0" fill="rgb(223,84,53)" rx="2" ry="2" />
<text  x="987.93" y="831.5" ></text>
</g>
<g >
<title>_libc_write (1,644 samples, 1.76%)</title><rect x="1093.3" y="549" width="20.8" height="15.0" fill="rgb(209,169,17)" rx="2" ry="2" />
<text  x="1096.28" y="559.5" ></text>
</g>
<g >
<title>mio::sys::unix::ready::&lt;impl core::convert::From&lt;mio::sys::unix::ready::UnixReady&gt; for mio::event_imp::Ready&gt;::from (11 samples, 0.01%)</title><rect x="465.4" y="917" width="0.1" height="15.0" fill="rgb(225,216,23)" rx="2" ry="2" />
<text  x="468.38" y="927.5" ></text>
</g>
<g >
<title>int_free (27 samples, 0.03%)</title><rect x="215.2" y="485" width="0.3" height="15.0" fill="rgb(250,229,44)" rx="2" ry="2" />
<text  x="218.16" y="495.5" ></text>
</g>
<g >
<title>ttwu_do_activate (674 samples, 0.72%)</title><rect x="1101.3" y="261" width="8.5" height="15.0" fill="rgb(251,99,13)" rx="2" ry="2" />
<text  x="1104.26" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParserNode&gt;&gt; (635 samples, 0.68%)</title><rect x="386.9" y="613" width="8.0" height="15.0" fill="rgb(249,212,37)" rx="2" ry="2" />
<text  x="389.89" y="623.5" ></text>
</g>
<g >
<title>kfree_skbmem (16 samples, 0.02%)</title><rect x="314.1" y="405" width="0.2" height="15.0" fill="rgb(245,11,14)" rx="2" ry="2" />
<text  x="317.11" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::vec_deque::VecDeque&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::task::local::Shared&gt;&gt;&gt;&gt;&gt; (97 samples, 0.10%)</title><rect x="1077.6" y="629" width="1.3" height="15.0" fill="rgb(249,68,53)" rx="2" ry="2" />
<text  x="1080.63" y="639.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::exprs (1,006 samples, 1.08%)</title><rect x="53.0" y="917" width="12.7" height="15.0" fill="rgb(249,106,18)" rx="2" ry="2" />
<text  x="56.01" y="927.5" ></text>
</g>
<g >
<title>bit_waitqueue (16 samples, 0.02%)</title><rect x="754.0" y="517" width="0.2" height="15.0" fill="rgb(251,5,32)" rx="2" ry="2" />
<text  x="756.98" y="527.5" ></text>
</g>
<g >
<title>_vdso_clock_gettime (248 samples, 0.27%)</title><rect x="979.0" y="789" width="3.2" height="15.0" fill="rgb(237,18,2)" rx="2" ry="2" />
<text  x="982.02" y="799.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_or (13 samples, 0.01%)</title><rect x="1091.4" y="917" width="0.2" height="15.0" fill="rgb(240,0,13)" rx="2" ry="2" />
<text  x="1094.44" y="927.5" ></text>
</g>
<g >
<title>raw_spin_lock (33 samples, 0.04%)</title><rect x="1121.3" y="789" width="0.4" height="15.0" fill="rgb(211,9,38)" rx="2" ry="2" />
<text  x="1124.29" y="799.5" ></text>
</g>
<g >
<title>_errno_location (17 samples, 0.02%)</title><rect x="707.6" y="789" width="0.3" height="15.0" fill="rgb(252,96,22)" rx="2" ry="2" />
<text  x="710.65" y="799.5" ></text>
</g>
<g >
<title>copy_to_iter (73 samples, 0.08%)</title><rect x="700.5" y="645" width="0.9" height="15.0" fill="rgb(223,143,19)" rx="2" ry="2" />
<text  x="703.46" y="655.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (8,015 samples, 8.60%)</title><rect x="1086.8" y="1141" width="101.5" height="15.0" fill="rgb(216,74,26)" rx="2" ry="2" />
<text  x="1089.83" y="1151.5" >std::panicki..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (47 samples, 0.05%)</title><rect x="1029.9" y="661" width="0.6" height="15.0" fill="rgb(206,28,31)" rx="2" ry="2" />
<text  x="1032.87" y="671.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u8&gt;::wrapping_add (25 samples, 0.03%)</title><rect x="1077.2" y="661" width="0.3" height="15.0" fill="rgb(223,214,25)" rx="2" ry="2" />
<text  x="1080.17" y="671.5" ></text>
</g>
<g >
<title>std::time::Instant::now (283 samples, 0.30%)</title><rect x="962.9" y="773" width="3.6" height="15.0" fill="rgb(220,134,53)" rx="2" ry="2" />
<text  x="965.87" y="783.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (78 samples, 0.08%)</title><rect x="398.5" y="837" width="0.9" height="15.0" fill="rgb(234,118,25)" rx="2" ry="2" />
<text  x="401.45" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;dyn tokio::park::Unpark&gt; as tokio::park::Unpark&gt;::unpark (151 samples, 0.16%)</title><rect x="969.2" y="613" width="1.9" height="15.0" fill="rgb(251,153,39)" rx="2" ry="2" />
<text  x="972.22" y="623.5" ></text>
</g>
<g >
<title>_GI___pthread_mutex_unlock (19 samples, 0.02%)</title><rect x="972.0" y="565" width="0.2" height="15.0" fill="rgb(207,149,37)" rx="2" ry="2" />
<text  x="974.96" y="575.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (20,985 samples, 22.51%)</title><rect x="529.3" y="1189" width="265.7" height="15.0" fill="rgb(215,178,14)" rx="2" ry="2" />
<text  x="532.33" y="1199.5" >&lt;std::panic::AssertUnwindSafe&lt;F&gt; as..</text>
</g>
<g >
<title>raw_spin_unlock_bh (20 samples, 0.02%)</title><rect x="543.6" y="741" width="0.2" height="15.0" fill="rgb(221,229,24)" rx="2" ry="2" />
<text  x="546.58" y="751.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (16 samples, 0.02%)</title><rect x="434.8" y="581" width="0.2" height="15.0" fill="rgb(210,16,45)" rx="2" ry="2" />
<text  x="437.77" y="591.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token::{{closure}} (24 samples, 0.03%)</title><rect x="56.7" y="805" width="0.3" height="15.0" fill="rgb(253,16,41)" rx="2" ry="2" />
<text  x="59.68" y="815.5" ></text>
</g>
<g >
<title>futures_util::future::future::map::::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project (32 samples, 0.03%)</title><rect x="436.2" y="965" width="0.4" height="15.0" fill="rgb(220,210,28)" rx="2" ry="2" />
<text  x="439.21" y="975.5" ></text>
</g>
<g >
<title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (88 samples, 0.09%)</title><rect x="1061.6" y="309" width="1.1" height="15.0" fill="rgb(244,224,41)" rx="2" ry="2" />
<text  x="1064.63" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="129.3" y="709" width="0.2" height="15.0" fill="rgb(206,28,35)" rx="2" ry="2" />
<text  x="132.29" y="719.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (17 samples, 0.02%)</title><rect x="236.6" y="949" width="0.2" height="15.0" fill="rgb(219,152,33)" rx="2" ry="2" />
<text  x="239.63" y="959.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (200 samples, 0.21%)</title><rect x="225.4" y="709" width="2.5" height="15.0" fill="rgb(249,26,44)" rx="2" ry="2" />
<text  x="228.37" y="719.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path (250 samples, 0.27%)</title><rect x="53.4" y="821" width="3.1" height="15.0" fill="rgb(237,133,43)" rx="2" ry="2" />
<text  x="56.36" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;actix_web::request::HttpRequest&gt; (40 samples, 0.04%)</title><rect x="437.5" y="885" width="0.5" height="15.0" fill="rgb(230,218,10)" rx="2" ry="2" />
<text  x="440.46" y="895.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (12 samples, 0.01%)</title><rect x="1002.6" y="773" width="0.1" height="15.0" fill="rgb(222,96,4)" rx="2" ry="2" />
<text  x="1005.58" y="783.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::bind_scheduler (80 samples, 0.09%)</title><rect x="1070.0" y="533" width="1.0" height="15.0" fill="rgb(223,208,38)" rx="2" ry="2" />
<text  x="1073.01" y="543.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term_num (116 samples, 0.12%)</title><rect x="88.6" y="821" width="1.5" height="15.0" fill="rgb(224,160,31)" rx="2" ry="2" />
<text  x="91.58" y="831.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (18 samples, 0.02%)</title><rect x="179.2" y="533" width="0.2" height="15.0" fill="rgb(224,60,54)" rx="2" ry="2" />
<text  x="182.19" y="543.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (12 samples, 0.01%)</title><rect x="975.1" y="757" width="0.2" height="15.0" fill="rgb(222,163,53)" rx="2" ry="2" />
<text  x="978.15" y="767.5" ></text>
</g>
<g >
<title>mio::event_imp::Ready::is_empty (19 samples, 0.02%)</title><rect x="710.4" y="901" width="0.3" height="15.0" fill="rgb(207,119,15)" rx="2" ry="2" />
<text  x="713.45" y="911.5" ></text>
</g>
<g >
<title>tcp_urg (12 samples, 0.01%)</title><rect x="558.2" y="709" width="0.1" height="15.0" fill="rgb(245,138,4)" rx="2" ry="2" />
<text  x="561.19" y="719.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (10 samples, 0.01%)</title><rect x="176.8" y="533" width="0.1" height="15.0" fill="rgb(229,112,54)" rx="2" ry="2" />
<text  x="179.78" y="543.5" ></text>
</g>
<g >
<title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (18 samples, 0.02%)</title><rect x="974.9" y="789" width="0.2" height="15.0" fill="rgb(239,148,49)" rx="2" ry="2" />
<text  x="977.86" y="799.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (372 samples, 0.40%)</title><rect x="661.2" y="709" width="4.8" height="15.0" fill="rgb(242,15,36)" rx="2" ry="2" />
<text  x="664.24" y="719.5" ></text>
</g>
<g >
<title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,006 samples, 1.08%)</title><rect x="53.0" y="1205" width="12.7" height="15.0" fill="rgb(251,79,33)" rx="2" ry="2" />
<text  x="56.01" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (11 samples, 0.01%)</title><rect x="237.1" y="1077" width="0.1" height="15.0" fill="rgb(234,45,23)" rx="2" ry="2" />
<text  x="240.06" y="1087.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (15 samples, 0.02%)</title><rect x="179.8" y="645" width="0.2" height="15.0" fill="rgb(220,177,47)" rx="2" ry="2" />
<text  x="182.76" y="655.5" ></text>
</g>
<g >
<title>&lt;tokio::time::driver::stack::Stack as tokio::time::wheel::stack::Stack&gt;::push (50 samples, 0.05%)</title><rect x="1001.1" y="789" width="0.7" height="15.0" fill="rgb(248,64,15)" rx="2" ry="2" />
<text  x="1004.12" y="799.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (19 samples, 0.02%)</title><rect x="1071.0" y="485" width="0.3" height="15.0" fill="rgb(230,146,50)" rx="2" ry="2" />
<text  x="1074.02" y="495.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (43 samples, 0.05%)</title><rect x="443.0" y="949" width="0.6" height="15.0" fill="rgb(248,168,10)" rx="2" ry="2" />
<text  x="446.05" y="959.5" ></text>
</g>
<g >
<title>ktime_get (18 samples, 0.02%)</title><rect x="576.0" y="725" width="0.2" height="15.0" fill="rgb(238,102,22)" rx="2" ry="2" />
<text  x="579.00" y="735.5" ></text>
</g>
<g >
<title>bytes::bytes::shared_drop (34 samples, 0.04%)</title><rect x="361.8" y="917" width="0.5" height="15.0" fill="rgb(246,218,5)" rx="2" ry="2" />
<text  x="364.84" y="927.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (251 samples, 0.27%)</title><rect x="161.2" y="693" width="3.1" height="15.0" fill="rgb(215,129,25)" rx="2" ry="2" />
<text  x="164.16" y="703.5" ></text>
</g>
<g >
<title>_x86_indirect_thunk_rax (9 samples, 0.01%)</title><rect x="888.2" y="517" width="0.1" height="15.0" fill="rgb(230,221,1)" rx="2" ry="2" />
<text  x="891.18" y="527.5" ></text>
</g>
<g >
<title>copyin (18 samples, 0.02%)</title><rect x="566.9" y="757" width="0.2" height="15.0" fill="rgb(239,192,54)" rx="2" ry="2" />
<text  x="569.91" y="767.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (456 samples, 0.49%)</title><rect x="480.6" y="693" width="5.7" height="15.0" fill="rgb(225,13,11)" rx="2" ry="2" />
<text  x="483.55" y="703.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.01%)</title><rect x="812.2" y="741" width="0.1" height="15.0" fill="rgb(214,146,29)" rx="2" ry="2" />
<text  x="815.19" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (357 samples, 0.38%)</title><rect x="154.9" y="725" width="4.5" height="15.0" fill="rgb(232,29,3)" rx="2" ry="2" />
<text  x="157.93" y="735.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::from_raw (41 samples, 0.04%)</title><rect x="1028.2" y="565" width="0.5" height="15.0" fill="rgb(223,221,1)" rx="2" ry="2" />
<text  x="1031.21" y="575.5" ></text>
</g>
<g >
<title>bytes::bytes::promotable_even_drop (45 samples, 0.05%)</title><rect x="39.8" y="917" width="0.5" height="15.0" fill="rgb(205,127,11)" rx="2" ry="2" />
<text  x="42.77" y="927.5" ></text>
</g>
<g >
<title>net_rx_action (4,079 samples, 4.38%)</title><rect x="593.4" y="501" width="51.7" height="15.0" fill="rgb(217,130,47)" rx="2" ry="2" />
<text  x="596.42" y="511.5" >net_r..</text>
</g>
<g >
<title>_skb_clone (45 samples, 0.05%)</title><rect x="657.5" y="677" width="0.6" height="15.0" fill="rgb(239,180,24)" rx="2" ry="2" />
<text  x="660.53" y="687.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (44 samples, 0.05%)</title><rect x="362.6" y="933" width="0.6" height="15.0" fill="rgb(213,117,36)" rx="2" ry="2" />
<text  x="365.63" y="943.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="229.8" y="885" width="0.2" height="15.0" fill="rgb(215,139,36)" rx="2" ry="2" />
<text  x="232.80" y="895.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (17 samples, 0.02%)</title><rect x="1147.5" y="725" width="0.3" height="15.0" fill="rgb(216,137,11)" rx="2" ry="2" />
<text  x="1150.54" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (8,015 samples, 8.60%)</title><rect x="1086.8" y="1237" width="101.5" height="15.0" fill="rgb(225,0,7)" rx="2" ry="2" />
<text  x="1089.83" y="1247.5" >std::sys::un..</text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::{{closure}} (770 samples, 0.83%)</title><rect x="515.4" y="1221" width="9.7" height="15.0" fill="rgb(223,21,25)" rx="2" ry="2" />
<text  x="518.39" y="1231.5" ></text>
</g>
</g>
</svg>
